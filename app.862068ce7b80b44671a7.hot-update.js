webpackHotUpdate("app",{

/***/ "./src/lib/daccCentreValDeLoireExpe.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GROUP_ID\", function() { return GROUP_ID; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sendCentreValDeLoireMeasuresToDACC\", function() { return sendCentreValDeLoireMeasuresToDACC; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getMainModeFromSections\", function() { return getMainModeFromSections; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"computeRawMeasures\", function() { return computeRawMeasures; });\n/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/@babel/runtime/helpers/toConsumableArray.js\");\n/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/@babel/runtime/helpers/asyncToGenerator.js\");\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var date_fns_endOfMonth__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./node_modules/date-fns/esm/endOfMonth/index.js\");\n/* harmony import */ var date_fns_startOfMonth__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./node_modules/date-fns/esm/startOfMonth/index.js\");\n/* harmony import */ var src_constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./src/constants.js\");\n/* harmony import */ var src_doctypes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./src/doctypes/index.js\");\n/* harmony import */ var src_queries_queries__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"./src/queries/queries.js\");\n/* harmony import */ var cozy_logger__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(\"./node_modules/cozy-logger/dist/index.js\");\n/* harmony import */ var cozy_logger__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(cozy_logger__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _dacc__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(\"./src/lib/dacc.js\");\n\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\n\n\n\n\n\n\n\n\n\n/**\n * @typedef {import(\"cozy-client/dist/index\").CozyClient} CozyClient\n * @typedef {import(\"cozy-client/types/types\").IoCozyAccount} IoCozyAccount\n * @typedef {import('./types').ContactGroup} ContactGroup\n * @typedef {import('./types').TimeseriesGeoJSON} TimeseriesGeoJSON\n * @typedef {import('./types').Section} Section\n * @typedef {import('./types').DACCMeasure} DACCMeasure\n */\n\n/**\n * @typedef {Object} MeasuresDict\n * @property {{ count: number }}\n * @property {{ CO2: number }}\n * @property {{ distance: number }}\n * @property {{ duration: number }}\n *\n */\n\nvar GROUP_ID = '0c91da19b72444d01cbd93b49b2ba18c';\nvar logService = cozy_logger__WEBPACK_IMPORTED_MODULE_8___default.a.namespace('services/centreValDeLoireExpe');\n\n/**\n * Send bike goal measures\n *\n * @param {CozyClient} client - The cozy-client instance\n * @param {IoCozyAccount} account - The trips account to measure\n */\nvar sendCentreValDeLoireMeasuresToDACC = /*#__PURE__*/function () {\n  var _ref = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.mark(function _callee(client, account) {\n    var startAggDate, userType, consentMeasure, timeseries, measures, daccMeasures, daccTripMeasures, daccSectionMeasures, _i, _daccMeasures, measure;\n    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            startAggDate = Object(date_fns_startOfMonth__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(new Date());\n            logService('info', \"Compute DACC measures for account \".concat(account._id));\n            _context.next = 4;\n            return findUserType(client);\n          case 4:\n            userType = _context.sent;\n            consentMeasure = buildConsentMeasure(userType);\n            _context.next = 8;\n            return Object(_dacc__WEBPACK_IMPORTED_MODULE_9__[\"sendMeasureToDACCWithRemoteDoctype\"])(client, consentMeasure);\n          case 8:\n            _context.next = 10;\n            return findMonthTimeseries(client, account, startAggDate);\n          case 10:\n            timeseries = _context.sent;\n            if (!(timeseries.length < 1)) {\n              _context.next = 14;\n              break;\n            }\n            logService('info', \"No trips to compute\");\n            // No trips, abort\n            return _context.abrupt(\"return\", null);\n          case 14:\n            logService('info', \"Compute measures for \".concat(timeseries.length, \" timeseries\"));\n            measures = computeRawMeasures(timeseries);\n            if (!(!measures || !measures.sectionMeasures && !measures.tripMeasures)) {\n              _context.next = 19;\n              break;\n            }\n            logService('info', 'No measure to send');\n            return _context.abrupt(\"return\");\n          case 19:\n            daccMeasures = [];\n            if (!(measures.tripMeasures && Object.keys(measures.tripMeasures).length > 0)) {\n              _context.next = 26;\n              break;\n            }\n            logService('info', \"Build \".concat(Object.keys(measures.tripMeasures).length, \" measures with user type:  \").concat(userType));\n            _context.next = 24;\n            return buildDACCMeasures({\n              measures: measures.tripMeasures,\n              userType: userType,\n              isSectionLevel: false\n            });\n          case 24:\n            daccTripMeasures = _context.sent;\n            daccMeasures.push.apply(daccMeasures, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(daccTripMeasures));\n          case 26:\n            if (!(measures.sectionMeasures && Object.keys(measures.sectionMeasures).length > 0)) {\n              _context.next = 32;\n              break;\n            }\n            logService('info', \"Build \".concat(Object.keys(measures.sectionMeasures).length, \" measures with user type:  \").concat(userType));\n            _context.next = 30;\n            return buildDACCMeasures({\n              measures: measures.sectionMeasures,\n              userType: userType,\n              isSectionLevel: true\n            });\n          case 30:\n            daccSectionMeasures = _context.sent;\n            daccMeasures.push.apply(daccMeasures, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(daccSectionMeasures));\n          case 32:\n            _i = 0, _daccMeasures = daccMeasures;\n          case 33:\n            if (!(_i < _daccMeasures.length)) {\n              _context.next = 41;\n              break;\n            }\n            measure = _daccMeasures[_i];\n            logService('info', \"Send measure \".concat(JSON.stringify(measure), \" to DACC...\"));\n            _context.next = 38;\n            return Object(_dacc__WEBPACK_IMPORTED_MODULE_9__[\"sendMeasureToDACCWithRemoteDoctype\"])(client, measure);\n          case 38:\n            _i++;\n            _context.next = 33;\n            break;\n          case 41:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return function sendCentreValDeLoireMeasuresToDACC(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\n/**\n * Find user type, as defined in settings\n *\n * @param {CozyClient} client - The cozy-client instance\n * @returns {string} the user type: 'highSchoolStudent' | 'nationalEducationStaff' | 'centreValDeLoireStaff' | 'other'\n */\nvar findUserType = /*#__PURE__*/function () {\n  var _ref2 = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.mark(function _callee2(client) {\n    var _resp$data, _settings$centreValDe;\n    var settingsQueryDef, resp, settings, userType;\n    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            settingsQueryDef = Object(src_queries_queries__WEBPACK_IMPORTED_MODULE_7__[\"buildSettingsQuery\"])();\n            _context2.next = 3;\n            return client.query(settingsQueryDef.definition, settingsQueryDef.options);\n          case 3:\n            resp = _context2.sent;\n            if (resp) {\n              _context2.next = 6;\n              break;\n            }\n            return _context2.abrupt(\"return\", 'unknown');\n          case 6:\n            settings = (_resp$data = resp.data) === null || _resp$data === void 0 ? void 0 : _resp$data[0];\n            userType = settings === null || settings === void 0 ? void 0 : (_settings$centreValDe = settings.centreValDeLoireExpe) === null || _settings$centreValDe === void 0 ? void 0 : _settings$centreValDe.userType;\n            return _context2.abrupt(\"return\", userType || 'unknown');\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return function findUserType(_x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\n/**\n * Find the timeseries for the current month\n *\n * @param {CozyClient} client - The cozy-client instance\n * @param {IoCozyAccount} account - The trips account\n * @param {Date} startDate - The month starting date\n * @returns {Array<TimeSeries>} the month timeseries\n */\nvar findMonthTimeseries = /*#__PURE__*/function () {\n  var _ref3 = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.mark(function _callee3(client, account, startDate) {\n    var endDate, queryDef, timeseries, _iterator, _step, _ts$relationships, _ts$relationships$sta, _ts$relationships$sta2, _ts$relationships2, _ts$relationships2$en, _ts$relationships2$en2, ts, startPlaceId, endPlaceId, startPlaceContact, endPlaceContact;\n    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            endDate = Object(date_fns_endOfMonth__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(startDate);\n            logService('info', \"Query timeseries from \".concat(startDate.toISOString(), \" to \").concat(endDate.toISOString()));\n            queryDef = Object(src_queries_queries__WEBPACK_IMPORTED_MODULE_7__[\"buildTimeseriesByDateRange\"])({\n              firstDate: startDate.toISOString(),\n              lastDate: endDate.toISOString(),\n              accountId: account._id,\n              withRelationships: true,\n              limit: 1000\n            });\n            _context3.next = 5;\n            return client.queryAll(queryDef.definition, queryDef.options);\n          case 5:\n            timeseries = _context3.sent;\n            // FIXME: hydration seems not working? Both startPlaceContact and endPlaceContact\n            // appear in document after hydratation as HasOne, but with no content, even though the documents\n            // are in the store, and appear in the .include response of client.query\n            _iterator = _createForOfIteratorHelper(timeseries);\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                ts = _step.value;\n                startPlaceId = (_ts$relationships = ts.relationships) === null || _ts$relationships === void 0 ? void 0 : (_ts$relationships$sta = _ts$relationships.startPlaceContact) === null || _ts$relationships$sta === void 0 ? void 0 : (_ts$relationships$sta2 = _ts$relationships$sta.data) === null || _ts$relationships$sta2 === void 0 ? void 0 : _ts$relationships$sta2._id;\n                endPlaceId = (_ts$relationships2 = ts.relationships) === null || _ts$relationships2 === void 0 ? void 0 : (_ts$relationships2$en = _ts$relationships2.endPlaceContact) === null || _ts$relationships2$en === void 0 ? void 0 : (_ts$relationships2$en2 = _ts$relationships2$en.data) === null || _ts$relationships2$en2 === void 0 ? void 0 : _ts$relationships2$en2._id;\n                if (startPlaceId) {\n                  startPlaceContact = client.getDocumentFromState(src_doctypes__WEBPACK_IMPORTED_MODULE_6__[\"CONTACTS_DOCTYPE\"], startPlaceId);\n                  ts.startPlaceContact = startPlaceContact;\n                }\n                if (endPlaceId) {\n                  endPlaceContact = client.getDocumentFromState(src_doctypes__WEBPACK_IMPORTED_MODULE_6__[\"CONTACTS_DOCTYPE\"], endPlaceId);\n                  ts.endPlaceContact = endPlaceContact;\n                }\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n            return _context3.abrupt(\"return\", timeseries);\n          case 9:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return function findMonthTimeseries(_x4, _x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\n/**\n * Get the main transporation mode from the sections, i.e.\n * the mode with the longest distance.\n *\n * @param {Array<Section>} sections - The sections to extract the main mode\n * @returns {string} the main mode\n */\nvar getMainModeFromSections = function getMainModeFromSections(sections) {\n  if (!sections) {\n    return 'unknown';\n  }\n  var modeDistances = sections.reduce(function (acc, section) {\n    if (acc[section.mode]) {\n      acc[section.mode] += section.distance;\n    } else {\n      acc[section.mode] = section.distance;\n    }\n    return acc;\n  }, {});\n  var mainMode = null;\n  var maxDistance = 0;\n  for (var mode in modeDistances) {\n    if (modeDistances[mode] > maxDistance) {\n      mainMode = mode;\n      maxDistance = modeDistances[mode];\n    }\n  }\n  return mainMode;\n};\n\n/**\n * Compute raw measures from timeseries documents.\n * It returns measures with this dict format:\n * ```\n * sections: '<mode>/<school>/<schoolTripDirection>/<isMainMode>': {count, CO2, duration, distance}\n * trips: '<modes>/<school>/<schoolTripDirection>/<mainMode>': {count, CO2, duration, distance}\n * ```\n * @param {Array<TimeseriesGeoJSON>} - The timeseries to compute\n * @returns {{MeasuresDict, MeasuresDict}} two set of measures grouped by key\n */\nvar computeRawMeasures = function computeRawMeasures(timeseries) {\n  if (!timeseries || timeseries.length < 1) {\n    return null;\n  }\n  var sectionMeasures = {};\n  var tripMeasures = {};\n  var _iterator2 = _createForOfIteratorHelper(timeseries),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var _startPlace$relations, _startPlace$relations2, _endPlace$relationshi, _endPlace$relationshi2;\n      var ts = _step2.value;\n      if (!ts.aggregation) {\n        continue;\n      }\n\n      // If the trip starts or ends with a registered highschool, use its name as group\n      var startPlace = ts.startPlaceContact;\n      var endPlace = ts.endPlaceContact;\n      var hasExpeStartPlace = startPlace && ((_startPlace$relations = startPlace.relationships) === null || _startPlace$relations === void 0 ? void 0 : (_startPlace$relations2 = _startPlace$relations.groups) === null || _startPlace$relations2 === void 0 ? void 0 : _startPlace$relations2.data.some(function (data) {\n        return data._id === GROUP_ID;\n      }));\n      var hasExpeEndPlace = endPlace && ((_endPlace$relationshi = endPlace.relationships) === null || _endPlace$relationshi === void 0 ? void 0 : (_endPlace$relationshi2 = _endPlace$relationshi.groups) === null || _endPlace$relationshi2 === void 0 ? void 0 : _endPlace$relationshi2.data.some(function (data) {\n        return data._id === GROUP_ID;\n      }));\n      var school = '';\n      var schoolTripDirection = 'none';\n      if (hasExpeStartPlace && hasExpeEndPlace) {\n        school = startPlace.displayName;\n        schoolTripDirection = 'round';\n      } else if (hasExpeStartPlace) {\n        school = startPlace.displayName;\n        schoolTripDirection = 'return';\n      } else if (hasExpeEndPlace) {\n        school = endPlace.displayName;\n        schoolTripDirection = 'outward';\n      }\n      var mainMode = getMainModeFromSections(ts.aggregation.sections);\n      // Compute section measures\n      if (ts.aggregation.sections) {\n        var _iterator3 = _createForOfIteratorHelper(ts.aggregation.sections),\n          _step3;\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var section = _step3.value;\n            var isMainMode = section.mode === mainMode ? 1 : 0;\n            var keyMeasure = \"\".concat(section.mode, \"/\").concat(school, \"/\").concat(schoolTripDirection, \"/\").concat(isMainMode);\n            var _measure = sectionMeasures[keyMeasure];\n            if (!_measure) {\n              sectionMeasures[keyMeasure] = {\n                count: 1,\n                sumCO2: section.CO2,\n                sumDuration: section.duration,\n                sumDistance: section.distance\n              };\n            } else {\n              var newCount = _measure.count + 1;\n              var newCO2 = _measure.sumCO2 + section.CO2;\n              var newDuration = _measure.sumDuration + section.duration;\n              var newDistance = _measure.sumDistance + section.distance;\n              sectionMeasures[keyMeasure] = {\n                count: newCount,\n                sumCO2: newCO2,\n                sumDuration: newDuration,\n                sumDistance: newDistance\n              };\n            }\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      }\n\n      // Compute trip measure\n      var uniqueSortedModes = Array.from(new Set(ts.aggregation.modes)).sort();\n      var joinModes = uniqueSortedModes.join(':');\n      var keyTripMeasure = \"\".concat(joinModes, \"/\").concat(school, \"/\").concat(schoolTripDirection, \"/\").concat(mainMode);\n      var measure = tripMeasures[keyTripMeasure];\n      if (!measure) {\n        tripMeasures[keyTripMeasure] = {\n          count: 1,\n          sumCO2: ts.aggregation.totalCO2,\n          sumDuration: ts.aggregation.totalDuration,\n          sumDistance: ts.aggregation.totalDistance\n        };\n      } else {\n        var _newCount = measure.count + 1;\n        var _newCO = measure.sumCO2 + ts.aggregation.totalCO2;\n        var _newDuration = measure.sumDuration + ts.aggregation.totalDuration;\n        var _newDistance = measure.sumDistance + ts.aggregation.totalDistance;\n        tripMeasures[keyTripMeasure] = {\n          count: _newCount,\n          sumCO2: _newCO,\n          sumDuration: _newDuration,\n          sumDistance: _newDistance\n        };\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  return {\n    sectionMeasures: sectionMeasures,\n    tripMeasures: tripMeasures\n  };\n};\nvar buildConsentMeasure = function buildConsentMeasure(userType) {\n  var startDate = new Date();\n  var groups = [{\n    userType: userType\n  }];\n  var consentMeasure = Object(_dacc__WEBPACK_IMPORTED_MODULE_9__[\"createMeasureForDACC\"])({\n    measureName: src_constants__WEBPACK_IMPORTED_MODULE_5__[\"DACC_EXPE_CONSENT_MEASURE\"],\n    startDate: startDate,\n    value: 1,\n    groups: groups\n  });\n  return consentMeasure;\n};\nvar buildMeasureGroups = function buildMeasureGroups(_ref4) {\n  var keyTokens = _ref4.keyTokens,\n    userType = _ref4.userType,\n    isSectionLevel = _ref4.isSectionLevel;\n  if (isSectionLevel) {\n    var mode = keyTokens[0];\n    var school = keyTokens.length > 1 ? keyTokens[1] : '';\n    var schoolTripDirection = keyTokens.length > 2 ? keyTokens[2] : 'none';\n    var isMainMode = keyTokens.length > 3 ? keyTokens[3] : '0';\n    return [{\n      mode: mode\n    }, {\n      school: school\n    }, {\n      userType: userType\n    }, {\n      schoolTripDirection: schoolTripDirection\n    }, {\n      isMainMode: isMainMode\n    }];\n  } else {\n    var modes = keyTokens[0];\n    var _school = keyTokens.length > 1 ? keyTokens[1] : '';\n    var _schoolTripDirection = keyTokens.length > 2 ? keyTokens[2] : 'none';\n    var mainMode = keyTokens.length > 3 ? keyTokens[3] : '';\n    return [{\n      modes: modes\n    }, {\n      school: _school\n    }, {\n      userType: userType\n    }, {\n      schoolTripDirection: _schoolTripDirection\n    }, {\n      mainMode: mainMode\n    }];\n  }\n};\n\n/**\n * Build actual DACC measures from raw measures dict\n *\n * @typedef BuildMeasuresParams\n * @property {MeasuresDict} measures - The measures to build from\n * @property {string} userType - The user type\n * @property {boolean} isSectionLevel - Whether or not the measure is aggregated on the sections\n *\n * @param {BuildMeasuresParams} - The params\n * @returns {Array<DACCMeasure>} the DACC measures\n */\nvar buildDACCMeasures = function buildDACCMeasures(_ref5) {\n  var measures = _ref5.measures,\n    userType = _ref5.userType,\n    isSectionLevel = _ref5.isSectionLevel;\n  var daccMeasures = [];\n  for (var _i2 = 0, _Object$keys = Object.keys(measures); _i2 < _Object$keys.length; _i2++) {\n    var key = _Object$keys[_i2];\n    var keyTokens = key.split('/');\n    if (keyTokens.length < 1) {\n      logService('error', \"Wrong measure key: \".concat(key));\n      continue;\n    }\n    var groups = buildMeasureGroups({\n      keyTokens: keyTokens,\n      userType: userType,\n      isSectionLevel: isSectionLevel\n    });\n\n    // Note: normally we would use the aggregation starting date, i.e. the start\n    // of the month. But as we are using an incremental process (full month aggregation everyday),\n    // it's easier to use the daily date to differenciate measures on the DACC side.\n    var startDate = new Date();\n    var countMeasure = Object(_dacc__WEBPACK_IMPORTED_MODULE_9__[\"createMeasureForDACC\"])({\n      measureName: isSectionLevel ? src_constants__WEBPACK_IMPORTED_MODULE_5__[\"DACC_MEASURE_NAME_SECTIONS_COUNT\"] : src_constants__WEBPACK_IMPORTED_MODULE_5__[\"DACC_MEASURE_NAME_TRIPS_COUNT\"],\n      startDate: startDate,\n      value: measures[key].count,\n      groups: groups\n    });\n    var CO2Measure = Object(_dacc__WEBPACK_IMPORTED_MODULE_9__[\"createMeasureForDACC\"])({\n      measureName: isSectionLevel ? src_constants__WEBPACK_IMPORTED_MODULE_5__[\"DACC_MEASURE_NAME_SECTIONS_CO2\"] : src_constants__WEBPACK_IMPORTED_MODULE_5__[\"DACC_MEASURE_NAME_TRIPS_CO2\"],\n      startDate: startDate,\n      value: measures[key].sumCO2,\n      groups: groups\n    });\n\n    // Compute final avg duration\n    var avgDuration = Number((measures[key].sumDuration / measures[key].count).toFixed(2));\n    var durationMeasure = Object(_dacc__WEBPACK_IMPORTED_MODULE_9__[\"createMeasureForDACC\"])({\n      measureName: isSectionLevel ? src_constants__WEBPACK_IMPORTED_MODULE_5__[\"DACC_MEASURE_NAME_SECTIONS_DURATION\"] : src_constants__WEBPACK_IMPORTED_MODULE_5__[\"DACC_MEASURE_NAME_TRIPS_DURATION\"],\n      startDate: startDate,\n      value: avgDuration,\n      groups: groups\n    });\n\n    // Compute final avg distance\n    var avgDistance = Number((measures[key].sumDistance / measures[key].count).toFixed(2));\n    var distanceMeasure = Object(_dacc__WEBPACK_IMPORTED_MODULE_9__[\"createMeasureForDACC\"])({\n      measureName: isSectionLevel ? src_constants__WEBPACK_IMPORTED_MODULE_5__[\"DACC_MEASURE_NAME_SECTIONS_DISTANCE\"] : src_constants__WEBPACK_IMPORTED_MODULE_5__[\"DACC_MEASURE_NAME_TRIPS_DISTANCE\"],\n      startDate: startDate,\n      value: avgDistance,\n      groups: groups\n    });\n    daccMeasures.push(countMeasure, CO2Measure, durationMeasure, distanceMeasure);\n  }\n  return daccMeasures;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/lib/daccCentreValDeLoireExpe.js\n");

/***/ })

})