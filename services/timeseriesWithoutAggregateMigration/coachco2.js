/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 1630);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return APP_SLUG; });
/* unused harmony export CONTEXT */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return AIR_MODE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "k", function() { return BICYCLING_ELECTRIC_MODE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "l", function() { return BICYCLING_MODE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "n", function() { return BUS_ELECTRIC_MODE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "o", function() { return BUS_MODE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "w", function() { return CAR_ELECTRIC_MODE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "x", function() { return CAR_MODE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "r", function() { return CARPOOL_ELECTRIC_MODE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "s", function() { return CARPOOL_MODE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gb", function() { return MOPED_MODE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ib", function() { return MOTO_INF_250_MODE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "kb", function() { return MOTO_SUP_250_MODE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wb", function() { return SCOOTER_ELECTRIC_MODE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Fb", function() { return SUBWAY_MODE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Hb", function() { return TRAIN_MODE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Jb", function() { return TRAMWAY_MODE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Pb", function() { return UNKNOWN_MODE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Rb", function() { return WALKING_MODE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "T", function() { return IN_VEHICLE_MODE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lb", function() { return ON_FOOT_MODE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ub", function() { return RUNNING_MODE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return BICYCLING_CATEGORY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "u", function() { return CAR_CATEGORY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tb", function() { return PUBLIC_TRANSPORT_CATEGORY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tb", function() { return WORK_PURPOSE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "y", function() { return COMMUTE_PURPOSE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "xb", function() { return SHOPPING_PURPOSE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Kb", function() { return TRAVEL_PURPOSE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ob", function() { return PERSONALMED_PURPOSE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "P", function() { return EXERCISE_PURPOSE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Db", function() { return SPORT_PURPOSE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "O", function() { return ENTERTAINMENT_PURPOSE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pb", function() { return PICKDROP_PURPOSE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "nb", function() { return OTHER_PURPOSE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "S", function() { return HOME_ADDRESS_CATEGORY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Sb", function() { return WORK_ADDRESS_CATEGORY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ADDRESS_CATEGORY_TO_LABEL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sb", function() { return PLANE_CO2_KG_PER_KM_SHORT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rb", function() { return PLANE_CO2_KG_PER_KM_MEDIUM; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "qb", function() { return PLANE_CO2_KG_PER_KM_LONG; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return ALL_PLANE_CO2_KG_PER_KM; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "yb", function() { return SHORT_PLANE_TRIP_MAX_DISTANCE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "V", function() { return MEDIUM_PLANE_TRIP_MAX_DISTANCE; });
/* unused harmony export TRAIN_TGV_CO2_KG_PER_KM */
/* unused harmony export TRAIN_HIGHLINE_CO2_KG_PER_KM */
/* unused harmony export TER_TRAIN_CO2_KG_PER_KM */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return ALL_TRAIN_CO2_KG_PER_KM; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Ib", function() { return TRAMWAY_CO2_KG_PER_KM; });
/* unused harmony export SUBWAY_ILE_DE_FRANCE_CO2_KG_PER_KM */
/* unused harmony export TRAM_ILE_DE_FRANCE_CO2_KG_PER_KM */
/* unused harmony export SUBURBAN_TRANSILIEN_ILE_DE_FRANCE_CO2_KG_PER_KM */
/* unused harmony export SUBWAY_TRAM_TROLLEYBUS_MEDIUM_AGGLOMERATION_CO2_KG_PER_KM */
/* unused harmony export SUBWAY_TRAM_TROLLEYBUS_LARGE_AGGLOMERATION_CO2_KG_PER_KM */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return ALL_SUBWAY_TRAM_CO2_KG_PER_KM; });
/* unused harmony export BUS_SMALL_AGGLOMERATION_CO2_KG_PER_KM */
/* unused harmony export BUS_MEDIUM_AGGLOMERATION_CO2_KG_PER_KM */
/* unused harmony export BUS_LARGE_AGGLOMERATION_CO2_KG_PER_KM */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return ALL_BUS_CO2_KG_PER_KM; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "m", function() { return BUS_ELECTRIC_CO2_KG_PER_KM; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hb", function() { return MOTO_INF_250_CO2_KG_PER_KM; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "jb", function() { return MOTO_SUP_250_CO2_KG_PER_KM; });
/* unused harmony export MOTO_ELECTRIC_INF_250_CO2_KG_PER_KM */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "t", function() { return CAR_AVERAGE_CO2_KG_PER_KM; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "v", function() { return CAR_ELECTRIC_CO2_KG_PER_KM; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "q", function() { return CARPOOL_ELECTRIC_CO2_KG_PER_KM; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "p", function() { return CARPOOL_CO2_KG_PER_KM; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return BICYCLING_AVERAGE_CO2_KG_PER_KM; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "j", function() { return BICYCLING_ELECTRIC_AVERAGE_CO2_KG_PER_KM; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vb", function() { return SCOOTER_ELECTRIC_AVERAGE_CO2_KG_PER_KM; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fb", function() { return MOPED_AVERAGE_CO2_KG_PER_KM; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Qb", function() { return WALKING_AVERAGE_CO2_KG_PER_KM; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Ob", function() { return UNKNOWN_AVERAGE_CO2_KG_PER_KM; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "N", function() { return DEFAULT_WEIGHT_KG; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "db", function() { return MET_WALKING_SLOW; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cb", function() { return MET_WALKING_MEDIUM; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bb", function() { return MET_WALKING_FAST; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "eb", function() { return MET_WALKING_VERY_FAST; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Cb", function() { return SLOW_WALKING_MAX_SPEED; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "W", function() { return MEDIUM_WALKING_MAX_SPEED; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Q", function() { return FAST_WALKING_MAX_SPEED; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Z", function() { return MET_BICYCLING_SLOW; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Y", function() { return MET_BICYCLING_MEDIUM; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "X", function() { return MET_BICYCLING_FAST; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ab", function() { return MET_BICYCLING_VERY_FAST; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Bb", function() { return SLOW_BICYCLING_MAX_SPEED; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Ab", function() { return SLOW_BICYCLING_MAX_MEDIUM; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "zb", function() { return SLOW_BICYCLING_MAX_FAST; });
/* unused harmony export COLUMNS_NAMES_CSV */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "D", function() { return DACC_MEASURE_NAME_CO2_MONTHLY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "B", function() { return DACC_MEASURE_GROUP1_CO2_MONTHLY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "C", function() { return DACC_MEASURE_NAME_BIKE_GOAL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "J", function() { return DACC_MEASURE_NAME_TRIPS_COUNT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "I", function() { return DACC_MEASURE_NAME_TRIPS_CO2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "L", function() { return DACC_MEASURE_NAME_TRIPS_DURATION; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "K", function() { return DACC_MEASURE_NAME_TRIPS_DISTANCE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "F", function() { return DACC_MEASURE_NAME_SECTIONS_COUNT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "E", function() { return DACC_MEASURE_NAME_SECTIONS_CO2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "H", function() { return DACC_MEASURE_NAME_SECTIONS_DURATION; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "G", function() { return DACC_MEASURE_NAME_SECTIONS_DISTANCE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "A", function() { return DACC_EXPE_CONSENT_MEASURE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Gb", function() { return TIMESERIE_MIGRATION_SERVICE_NAME; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "M", function() { return DACC_MONTHLY_CO2_SERVICE_NAME; });
/* unused harmony export DACC_BIKE_GOAL_SERVICE_NAME */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "U", function() { return MAX_DACC_MEASURES_SENT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "R", function() { return FETCH_TRIPS_SERVICE_NAME; });
/* unused harmony export RECURRING_PURPOSES_SERVICE_NAME */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Mb", function() { return TRIPS_DISTANCE_SIMILARITY_RATIO; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Eb", function() { return START_END_DISTANCE_THRESHOLD_M; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "z", function() { return COORDINATES_DISTANCE_THRESHOLD_M; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Nb", function() { return TRIP_COLLECTION; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Lb", function() { return TRIPS_CHUNK_SIZE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mb", function() { return OPENPATH_URL; });
/* unused harmony export OPENPATH_ACCOUNT_TYPE */
const APP_SLUG = 'coachco2';
const CONTEXT = {
  CVL: 'Centre-Val de Loire'
};
const AIR_MODE = 'AIR_OR_HSR';
const BICYCLING_ELECTRIC_MODE = 'BICYCLING_ELECTRIC';
const BICYCLING_MODE = 'BICYCLING';
const BUS_ELECTRIC_MODE = 'BUS_ELECTRIC';
const BUS_MODE = 'BUS';
const CAR_ELECTRIC_MODE = 'CAR_ELECTRIC';
const CAR_MODE = 'CAR';
const CARPOOL_ELECTRIC_MODE = 'CARPOOL_ELECTRIC';
const CARPOOL_MODE = 'CARPOOL';
const MOPED_MODE = 'MOPED';
const MOTO_INF_250_MODE = 'MOTO_INF_250';
const MOTO_SUP_250_MODE = 'MOTO_SUP_250';
const SCOOTER_ELECTRIC_MODE = 'SCOOTER_ELECTRIC';
const SUBWAY_MODE = 'SUBWAY';
const TRAIN_MODE = 'TRAIN';
const TRAMWAY_MODE = 'TRAMWAY';
const UNKNOWN_MODE = 'UNKNOWN';
const WALKING_MODE = 'WALKING';

// Additional modes, see https://github.com/e-mission/e-mission-server/blob/gis-based-mode-detection/emission/core/wrapper/motionactivity.py
const IN_VEHICLE_MODE = 'IN_VEHICLE';
const ON_FOOT_MODE = 'ON_FOOT';
const RUNNING_MODE = 'RUNNING';
const BICYCLING_CATEGORY = {
  name: 'BICYCLING_CATEGORY',
  modes: [BICYCLING_MODE, BICYCLING_ELECTRIC_MODE, SCOOTER_ELECTRIC_MODE]
};
const CAR_CATEGORY = {
  name: 'CAR_CATEGORY',
  modes: [CAR_MODE, CAR_ELECTRIC_MODE, CARPOOL_MODE, CARPOOL_ELECTRIC_MODE, MOTO_INF_250_MODE, MOTO_SUP_250_MODE, MOPED_MODE]
};
const PUBLIC_TRANSPORT_CATEGORY = {
  name: 'PUBLIC_TRANSPORT_CATEGORY',
  modes: [BUS_MODE, BUS_ELECTRIC_MODE, TRAIN_MODE, TRAMWAY_MODE, SUBWAY_MODE]
};

// list of available purposes
const WORK_PURPOSE = 'WORK';
const COMMUTE_PURPOSE = 'COMMUTE';
const SHOPPING_PURPOSE = 'SHOPPING';
const TRAVEL_PURPOSE = 'TRAVEL';
const PERSONALMED_PURPOSE = 'PERSONAL_MED';
const EXERCISE_PURPOSE = 'EXERCISE';
const SPORT_PURPOSE = 'SPORT';
const ENTERTAINMENT_PURPOSE = 'ENTERTAINMENT';
const PICKDROP_PURPOSE = 'PICK_DROP';
const OTHER_PURPOSE = 'OTHER_PURPOSE';

// list of address categories
const HOME_ADDRESS_CATEGORY = 'home';
const WORK_ADDRESS_CATEGORY = 'work';
const ADDRESS_CATEGORY_TO_LABEL = {
  home: 'perso',
  work: 'pro'
};

/**
 * Transporation CO2 constants, given in kg per km.
 * All values come from ADEME: https://www.bilans-ges.ademe.fr/
 * Be careful: most of those values are only relevant in France and are always an approximation.
 * It is most of the time an average value, as many factors can impact the carbon emission.
 * Note the values do not include vehicle construction nor infrastructure impact.
 */

/**
 * Plane CO2 values.
 * Includes contrail cirrus clouds impact: https://www.nature.com/articles/s41467-018-04068-0
 */
// https://www.bilans-ges.ademe.fr/en/basecarbone/donnees-consulter/liste-element/categorie/547/siGras/1
const PLANE_CO2_KG_PER_KM_SHORT = 0.258;
const PLANE_CO2_KG_PER_KM_MEDIUM = 0.187;
const PLANE_CO2_KG_PER_KM_LONG = 0.152;
const ALL_PLANE_CO2_KG_PER_KM = [PLANE_CO2_KG_PER_KM_SHORT, PLANE_CO2_KG_PER_KM_MEDIUM, PLANE_CO2_KG_PER_KM_LONG];
const SHORT_PLANE_TRIP_MAX_DISTANCE = 1000;
const MEDIUM_PLANE_TRIP_MAX_DISTANCE = 3500;

/**
 * Train CO2 values.
 * For other countries, see: https://www.bilans-ges.ademe.fr/en/basecarbone/donnees-consulter/liste-element/categorie/185
 */

// https://www.bilans-ges.ademe.fr/en/basecarbone/donnees-consulter/liste-element/categorie/180
const TRAIN_TGV_CO2_KG_PER_KM = 0.00173;
// https://www.bilans-ges.ademe.fr/en/basecarbone/donnees-consulter/liste-element/categorie/180
const TRAIN_HIGHLINE_CO2_KG_PER_KM = 0.00529;
// https://www.bilans-ges.ademe.fr/en/basecarbone/donnees-consulter/liste-element/categorie/179
const TER_TRAIN_CO2_KG_PER_KM = 0.0248;
const ALL_TRAIN_CO2_KG_PER_KM = [TRAIN_TGV_CO2_KG_PER_KM, TRAIN_HIGHLINE_CO2_KG_PER_KM, TER_TRAIN_CO2_KG_PER_KM];

/**
 * Tramway CO2 value.
 */
const TRAMWAY_CO2_KG_PER_KM = 0.003;

/**
 * Subway, tram and trolley bus CO2 values.
 */

// https://www.bilans-ges.ademe.fr/en/basecarbone/donnees-consulter/liste-element/categorie/182
const SUBWAY_ILE_DE_FRANCE_CO2_KG_PER_KM = 0.0025;
const TRAM_ILE_DE_FRANCE_CO2_KG_PER_KM = 0.0022;
const SUBURBAN_TRANSILIEN_ILE_DE_FRANCE_CO2_KG_PER_KM = 0.0041;
// https://www.bilans-ges.ademe.fr/en/basecarbone/donnees-consulter/liste-element/categorie/183
const SUBWAY_TRAM_TROLLEYBUS_MEDIUM_AGGLOMERATION_CO2_KG_PER_KM = 0.00472;
const SUBWAY_TRAM_TROLLEYBUS_LARGE_AGGLOMERATION_CO2_KG_PER_KM = 0.00298;
const ALL_SUBWAY_TRAM_CO2_KG_PER_KM = [SUBWAY_ILE_DE_FRANCE_CO2_KG_PER_KM, TRAM_ILE_DE_FRANCE_CO2_KG_PER_KM, SUBURBAN_TRANSILIEN_ILE_DE_FRANCE_CO2_KG_PER_KM, SUBWAY_TRAM_TROLLEYBUS_MEDIUM_AGGLOMERATION_CO2_KG_PER_KM, SUBWAY_TRAM_TROLLEYBUS_LARGE_AGGLOMERATION_CO2_KG_PER_KM];

/**
 * Bus CO2 values.
 * The values consider a filling rate of 10 people
 */

// This groups different combustion types.
// https://www.bilans-ges.ademe.fr/en/basecarbone/donnees-consulter/liste-element/categorie/530
const BUS_SMALL_AGGLOMERATION_CO2_KG_PER_KM = 0.146;
const BUS_MEDIUM_AGGLOMERATION_CO2_KG_PER_KM = 0.137;
const BUS_LARGE_AGGLOMERATION_CO2_KG_PER_KM = 0.129;
const ALL_BUS_CO2_KG_PER_KM = [BUS_SMALL_AGGLOMERATION_CO2_KG_PER_KM, BUS_MEDIUM_AGGLOMERATION_CO2_KG_PER_KM, BUS_LARGE_AGGLOMERATION_CO2_KG_PER_KM];
// https://www.bilans-ges.ademe.fr/en/basecarbone/donnees-consulter/liste-element/categorie/531
const BUS_ELECTRIC_CO2_KG_PER_KM = 0.0217;

/**
 * Moto and scooter CO2 values.
 * We rely on average usage values, at it can differ between urban or rural usage.
 */
// https://www.bilans-ges.ademe.fr/en/basecarbone/donnees-consulter/liste-element/categorie/164
const MOTO_INF_250_CO2_KG_PER_KM = 0.0604;
const MOTO_SUP_250_CO2_KG_PER_KM = 0.165;
const MOTO_ELECTRIC_INF_250_CO2_KG_PER_KM = 0.0249;

/**
 * Car CO2 values.
 * Note the values should be divided by the number of passengers to have
 * the CO2 per person.
 */

// https://www.bilans-ges.ademe.fr/en/basecarbone/donnees-consulter/liste-element/categorie/151
const CAR_AVERAGE_CO2_KG_PER_KM = 0.192;
// https://www.bilans-ges.ademe.fr/en/basecarbone/donnees-consulter/liste-element/categorie/493
// Note the manufacture is not included to remain consistent with other values
const CAR_ELECTRIC_CO2_KG_PER_KM = 0.0198;
const CARPOOL_ELECTRIC_CO2_KG_PER_KM = 0.0099; // CAR_ELECTRIC_CO2_KG_PER_KM / 2
const CARPOOL_CO2_KG_PER_KM = 0.096; // CAR_AVERAGE_CO2_KG_PER_KM / 2

/**
 * Bicycling, electric bicycling & scooter CO2 values.
 */
const BICYCLING_AVERAGE_CO2_KG_PER_KM = 0;
const BICYCLING_ELECTRIC_AVERAGE_CO2_KG_PER_KM = 0;
const SCOOTER_ELECTRIC_AVERAGE_CO2_KG_PER_KM = 0;

/**
 * Moped and motorcycle CO2 values.
 */
const MOPED_AVERAGE_CO2_KG_PER_KM = 0.064;

/**
 * Walking, unknown CO2 values.
 */
const WALKING_AVERAGE_CO2_KG_PER_KM = 0;
const UNKNOWN_AVERAGE_CO2_KG_PER_KM = 0;

/**
 * Calories-related constants
 *
 * The calorie expenses is computed through the Metabolic Equivalent of Task (MET).
 * MET is an estimation of the energy cost of a physical activity.
 * Finding the correct MET can be challenging as it can depends on different factors,
 * such as speed, elevation, weight carrying, etc.
 * That is why many MET exist, listed here: https://sites.google.com/site/compendiumofphysicalactivities/home?authuser=0
 * WARNING: as we do not have elevation data, we only rely on speed-based MET, even though this can
 * be misleading, as a biker goes slower in climbing but also produces more energy.
 *
 * NOTE: MET also depends on the person physiology. See this formula to adapt the MET:
 *   https://github.com/e-mission/e-mission-phone/blob/5d964cbef72732fe4f2e9987d39c32c61d536433/www/js/metrics-factory.js#L102
 *
 */

/**
 * Default weight to compute calories.
 * In France, in 2020, the average weights are the following:
 *   - Women: 67.3kg
 *   - Men: 81.2kg
 *   => Average: 74.25kg
 * Source Obepi Roche 2020: https://www.sciencespo.fr/chaire-sante/sites/sciencespo.fr.chaire-sante/files/Enquete_OBEPI_2021.pdf
 */
const DEFAULT_WEIGHT_KG = 74.25;

// https://sites.google.com/site/compendiumofphysicalactivities/Activity-Categories/walking?authuser=0
const MET_WALKING_SLOW = 2;
const MET_WALKING_MEDIUM = 3.5;
const MET_WALKING_FAST = 5;
const MET_WALKING_VERY_FAST = 7;
const SLOW_WALKING_MAX_SPEED = 3;
const MEDIUM_WALKING_MAX_SPEED = 5;
const FAST_WALKING_MAX_SPEED = 6.5;

// https://sites.google.com/site/compendiumofphysicalactivities/Activity-Categories/bicycling?authuser=0
const MET_BICYCLING_SLOW = 5.8;
const MET_BICYCLING_MEDIUM = 8.0;
const MET_BICYCLING_FAST = 10;
const MET_BICYCLING_VERY_FAST = 15.8;
const SLOW_BICYCLING_MAX_SPEED = 15;
const SLOW_BICYCLING_MAX_MEDIUM = 22.4;
const SLOW_BICYCLING_MAX_FAST = 25.6;
const COLUMNS_NAMES_CSV = {
  tripId: 'Trip_Id',
  tripStartDisplayName: 'Trip_Start_Display_Name',
  tripArrivalDisplayName: 'Trip_Arrival_Display_Name',
  tripPurpose: 'Trip_Purpose',
  tripStartDate: 'Trip_Start_Date',
  tripEndDate: 'Trip_End_Date',
  sectionStartDate: 'Section_Start_Date',
  sectionEndDate: 'Section_End_Date',
  sectionDuration: 'Section_Duration',
  sectionDistance: 'Section_Distance',
  sectionMode: 'Section_Mode',
  sectionCoordinates: 'Section_Coordinates',
  sectionDistances: 'Section_Distances',
  sectionTimestamps: 'Section_Timestamps',
  sectionSpeeds: 'Section_Speeds'
};
const DACC_MEASURE_NAME_CO2_MONTHLY = 'co2-emissions-monthly';
const DACC_MEASURE_GROUP1_CO2_MONTHLY = Object.freeze({
  is_tracemob_expe: true
});
const DACC_MEASURE_NAME_BIKE_GOAL = 'bike-goal-yearly';
const DACC_MEASURE_NAME_TRIPS_COUNT = 'trips-count-monthly';
const DACC_MEASURE_NAME_TRIPS_CO2 = 'trips-CO2-monthly';
const DACC_MEASURE_NAME_TRIPS_DURATION = 'trips-duration-monthly';
const DACC_MEASURE_NAME_TRIPS_DISTANCE = 'trips-distance-monthly';
const DACC_MEASURE_NAME_SECTIONS_COUNT = 'sections-count-monthly';
const DACC_MEASURE_NAME_SECTIONS_CO2 = 'sections-CO2-monthly';
const DACC_MEASURE_NAME_SECTIONS_DURATION = 'sections-duration-monthly';
const DACC_MEASURE_NAME_SECTIONS_DISTANCE = 'sections-distance-monthly';
const DACC_EXPE_CONSENT_MEASURE = 'experimentation-consent';
const TIMESERIE_MIGRATION_SERVICE_NAME = 'timeseriesWithoutAggregateMigration';
const DACC_MONTHLY_CO2_SERVICE_NAME = 'daccMonthlyCO2';
const DACC_BIKE_GOAL_SERVICE_NAME = 'daccBikeGoal';
const MAX_DACC_MEASURES_SENT = 12;
const FETCH_TRIPS_SERVICE_NAME = 'fetchOpenPathTrips';
const RECURRING_PURPOSES_SERVICE_NAME = 'recurringPurposes';
// Maximum distance ratio gap between trips to be considered as similar
const TRIPS_DISTANCE_SIMILARITY_RATIO = 0.1;
const START_END_DISTANCE_THRESHOLD_M = 50; // meters
const COORDINATES_DISTANCE_THRESHOLD_M = 200; // meters

// openpath consts
const TRIP_COLLECTION = 'analysis/cleaned_trip';
const TRIPS_CHUNK_SIZE = 100;
const OPENPATH_URL = 'https://openpath.cozycloud.cc';
const OPENPATH_ACCOUNT_TYPE = 'openpath'; // Used in account_type for io.cozy.accounts

/***/ }),
/* 1 */
/***/ (function(module, exports) {

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
module.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


if (true) {
  module.exports = __webpack_require__(759);
} else {}


/***/ }),
/* 3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export APPS_DOCTYPE */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return FILES_DOCTYPE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return GEOJSON_DOCTYPE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ACCOUNTS_DOCTYPE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return CCO2_SETTINGS_DOCTYPE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return JOBS_DOCTYPE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return CONTACTS_DOCTYPE; });
/* unused harmony export CONTACTS_GROUPS_DOCTYPE */
/* unused harmony export KONNECTORS_DOCTYPE */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return SETTINGS_DOCTYPE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return DACC_REMOTE_DOCTYPE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return DACC_REMOTE_DOCTYPE_DEV; });
const APPS_DOCTYPE = 'io.cozy.apps';
const FILES_DOCTYPE = 'io.cozy.files';
const GEOJSON_DOCTYPE = 'io.cozy.timeseries.geojson';
const ACCOUNTS_DOCTYPE = 'io.cozy.accounts';
const CCO2_SETTINGS_DOCTYPE = 'io.cozy.coachco2.settings';
const JOBS_DOCTYPE = 'io.cozy.jobs';
const CONTACTS_DOCTYPE = 'io.cozy.contacts';
const CONTACTS_GROUPS_DOCTYPE = 'io.cozy.contacts.groups';
const KONNECTORS_DOCTYPE = 'io.cozy.konnectors';
const SETTINGS_DOCTYPE = 'io.cozy.settings';
const DACC_REMOTE_DOCTYPE = 'cc.cozycloud.dacc_v2';
const DACC_REMOTE_DOCTYPE_DEV = 'cc.cozycloud.dacc.dev_v2';

// the documents schema, necessary for CozyClient
/* harmony default export */ __webpack_exports__["j"] = ({
  timeseries: {
    doctype: GEOJSON_DOCTYPE,
    attributes: {},
    relationships: {
      startPlaceContact: {
        type: 'has-one',
        doctype: CONTACTS_DOCTYPE
      },
      endPlaceContact: {
        type: 'has-one',
        doctype: CONTACTS_DOCTYPE
      }
    }
  },
  files: {
    doctype: FILES_DOCTYPE,
    attributes: {},
    relationships: {}
  },
  settings: {
    doctype: CCO2_SETTINGS_DOCTYPE,
    attributes: {},
    relationships: {}
  }
});

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireWildcard = __webpack_require__(22);

var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  CozyLink: true,
  StackLink: true,
  compose: true,
  QueryDefinition: true,
  Mutations: true,
  MutationTypes: true,
  getDoctypeFromOperation: true,
  Q: true,
  Association: true,
  HasMany: true,
  HasOne: true,
  HasOneInPlace: true,
  HasManyInPlace: true,
  HasManyTriggers: true,
  getReferencedBy: true,
  deconstructCozyWebLinkWithSlug: true,
  deconstructRedirectLink: true,
  dehydrate: true,
  generateWebLink: true,
  ensureFirstSlash: true,
  rootCozyUrl: true,
  InvalidCozyUrlError: true,
  InvalidProtocolError: true,
  BlockedCozyError: true,
  cancelable: true,
  getQueryFromState: true,
  Registry: true,
  manifest: true,
  BulkEditError: true,
  models: true,
  fetchPolicies: true
};
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function get() {
    return _CozyClient.default;
  }
});
Object.defineProperty(exports, "CozyLink", {
  enumerable: true,
  get: function get() {
    return _CozyLink.default;
  }
});
Object.defineProperty(exports, "StackLink", {
  enumerable: true,
  get: function get() {
    return _StackLink.default;
  }
});
Object.defineProperty(exports, "compose", {
  enumerable: true,
  get: function get() {
    return _flow.default;
  }
});
Object.defineProperty(exports, "QueryDefinition", {
  enumerable: true,
  get: function get() {
    return _dsl.QueryDefinition;
  }
});
Object.defineProperty(exports, "Mutations", {
  enumerable: true,
  get: function get() {
    return _dsl.Mutations;
  }
});
Object.defineProperty(exports, "MutationTypes", {
  enumerable: true,
  get: function get() {
    return _dsl.MutationTypes;
  }
});
Object.defineProperty(exports, "getDoctypeFromOperation", {
  enumerable: true,
  get: function get() {
    return _dsl.getDoctypeFromOperation;
  }
});
Object.defineProperty(exports, "Q", {
  enumerable: true,
  get: function get() {
    return _dsl.Q;
  }
});
Object.defineProperty(exports, "Association", {
  enumerable: true,
  get: function get() {
    return _associations.Association;
  }
});
Object.defineProperty(exports, "HasMany", {
  enumerable: true,
  get: function get() {
    return _associations.HasMany;
  }
});
Object.defineProperty(exports, "HasOne", {
  enumerable: true,
  get: function get() {
    return _associations.HasOne;
  }
});
Object.defineProperty(exports, "HasOneInPlace", {
  enumerable: true,
  get: function get() {
    return _associations.HasOneInPlace;
  }
});
Object.defineProperty(exports, "HasManyInPlace", {
  enumerable: true,
  get: function get() {
    return _associations.HasManyInPlace;
  }
});
Object.defineProperty(exports, "HasManyTriggers", {
  enumerable: true,
  get: function get() {
    return _associations.HasManyTriggers;
  }
});
Object.defineProperty(exports, "getReferencedBy", {
  enumerable: true,
  get: function get() {
    return _helpers.getReferencedBy;
  }
});
Object.defineProperty(exports, "deconstructCozyWebLinkWithSlug", {
  enumerable: true,
  get: function get() {
    return _helpers2.deconstructCozyWebLinkWithSlug;
  }
});
Object.defineProperty(exports, "deconstructRedirectLink", {
  enumerable: true,
  get: function get() {
    return _helpers2.deconstructRedirectLink;
  }
});
Object.defineProperty(exports, "dehydrate", {
  enumerable: true,
  get: function get() {
    return _helpers2.dehydrate;
  }
});
Object.defineProperty(exports, "generateWebLink", {
  enumerable: true,
  get: function get() {
    return _helpers2.generateWebLink;
  }
});
Object.defineProperty(exports, "ensureFirstSlash", {
  enumerable: true,
  get: function get() {
    return _helpers2.ensureFirstSlash;
  }
});
Object.defineProperty(exports, "rootCozyUrl", {
  enumerable: true,
  get: function get() {
    return _helpers2.rootCozyUrl;
  }
});
Object.defineProperty(exports, "InvalidCozyUrlError", {
  enumerable: true,
  get: function get() {
    return _helpers2.InvalidCozyUrlError;
  }
});
Object.defineProperty(exports, "InvalidProtocolError", {
  enumerable: true,
  get: function get() {
    return _helpers2.InvalidProtocolError;
  }
});
Object.defineProperty(exports, "BlockedCozyError", {
  enumerable: true,
  get: function get() {
    return _helpers2.BlockedCozyError;
  }
});
Object.defineProperty(exports, "cancelable", {
  enumerable: true,
  get: function get() {
    return _utils.cancelable;
  }
});
Object.defineProperty(exports, "getQueryFromState", {
  enumerable: true,
  get: function get() {
    return _store.getQueryFromState;
  }
});
Object.defineProperty(exports, "Registry", {
  enumerable: true,
  get: function get() {
    return _registry.default;
  }
});
Object.defineProperty(exports, "BulkEditError", {
  enumerable: true,
  get: function get() {
    return _errors.BulkEditError;
  }
});
Object.defineProperty(exports, "fetchPolicies", {
  enumerable: true,
  get: function get() {
    return _policies.default;
  }
});
exports.models = exports.manifest = void 0;

var _CozyClient = _interopRequireDefault(__webpack_require__(40));

var _CozyLink = _interopRequireDefault(__webpack_require__(182));

var _StackLink = _interopRequireDefault(__webpack_require__(286));

var _flow = _interopRequireDefault(__webpack_require__(223));

var _dsl = __webpack_require__(20);

var _associations = __webpack_require__(129);

var _helpers = __webpack_require__(185);

var _helpers2 = __webpack_require__(130);

var _utils = __webpack_require__(670);

var _store = __webpack_require__(77);

var _registry = _interopRequireDefault(__webpack_require__(261));

var manifest = _interopRequireWildcard(__webpack_require__(307));

exports.manifest = manifest;

var _mock = __webpack_require__(671);

Object.keys(_mock).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _mock[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _mock[key];
    }
  });
});

var _errors = __webpack_require__(288);

var _cli = __webpack_require__(672);

Object.keys(_cli).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _cli[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _cli[key];
    }
  });
});

var models = _interopRequireWildcard(__webpack_require__(679));

exports.models = models;

var _policies = _interopRequireDefault(__webpack_require__(186));

/***/ }),
/* 5 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return requiredArgs; });
function requiredArgs(required, args) {
  if (args.length < required) {
    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');
  }
}

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

// TODO(Babel 8): Remove this file.

var runtime = __webpack_require__(508)();
module.exports = runtime;

// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=
try {
  regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
  if (typeof globalThis === "object") {
    globalThis.regeneratorRuntime = runtime;
  } else {
    Function("r", "regeneratorRuntime = r")(runtime);
  }
}


/***/ }),
/* 7 */
/***/ (function(module, exports) {

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }
  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}
function _asyncToGenerator(fn) {
  return function () {
    var self = this,
      args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);
      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }
      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }
      _next(undefined);
    });
  };
}
module.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 8 */
/***/ (function(module, exports) {

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
module.exports = _classCallCheck, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

var toPropertyKey = __webpack_require__(234);
function _defineProperty(obj, key, value) {
  key = toPropertyKey(key);
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
module.exports = _defineProperty, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

var baseGet = __webpack_require__(92);

/**
 * Gets the value at `path` of `object`. If the resolved value is
 * `undefined`, the `defaultValue` is returned in its place.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
 * @returns {*} Returns the resolved value.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
 *
 * _.get(object, 'a[0].b.c');
 * // => 3
 *
 * _.get(object, ['a', '0', 'b', 'c']);
 * // => 3
 *
 * _.get(object, 'a.b.c', 'default');
 * // => 'default'
 */
function get(object, path, defaultValue) {
  var result = object == null ? undefined : baseGet(object, path);
  return result === undefined ? defaultValue : result;
}

module.exports = get;


/***/ }),
/* 11 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return toDate; });
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5);
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }


/**
 * @name toDate
 * @category Common Helpers
 * @summary Convert the given argument to an instance of Date.
 *
 * @description
 * Convert the given argument to an instance of Date.
 *
 * If the argument is an instance of Date, the function returns its clone.
 *
 * If the argument is a number, it is treated as a timestamp.
 *
 * If the argument is none of the above, the function returns Invalid Date.
 *
 * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.
 *
 * @param {Date|Number} argument - the value to convert
 * @returns {Date} the parsed date in the local time zone
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Clone the date:
 * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))
 * //=> Tue Feb 11 2014 11:30:30
 *
 * @example
 * // Convert the timestamp to date:
 * const result = toDate(1392098430000)
 * //=> Tue Feb 11 2014 11:30:30
 */

function toDate(argument) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(1, arguments);
  var argStr = Object.prototype.toString.call(argument); // Clone the date

  if (argument instanceof Date || _typeof(argument) === 'object' && argStr === '[object Date]') {
    // Prevent the date to lose the milliseconds when passed to new Date() in IE10
    return new Date(argument.getTime());
  } else if (typeof argument === 'number' || argStr === '[object Number]') {
    return new Date(argument);
  } else {
    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {
      // eslint-disable-next-line no-console
      console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments"); // eslint-disable-next-line no-console

      console.warn(new Error().stack);
    }

    return new Date(NaN);
  }
}

/***/ }),
/* 12 */
/***/ (function(module, exports) {

function _extends() {
  module.exports = _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  return _extends.apply(this, arguments);
}
module.exports = _extends, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

var toPropertyKey = __webpack_require__(234);
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}
module.exports = _createClass, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 14 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return toInteger; });
function toInteger(dirtyNumber) {
  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {
    return NaN;
  }

  var number = Number(dirtyNumber);

  if (isNaN(number)) {
    return number;
  }

  return number < 0 ? Math.ceil(number) : Math.floor(number);
}

/***/ }),
/* 15 */
/***/ (function(module, exports) {

var commonFormatterKeys = [
  'M', 'MM', 'Q', 'D', 'DD', 'DDD', 'DDDD', 'd',
  'E', 'W', 'WW', 'YY', 'YYYY', 'GG', 'GGGG',
  'H', 'HH', 'h', 'hh', 'm', 'mm',
  's', 'ss', 'S', 'SS', 'SSS',
  'Z', 'ZZ', 'X', 'x'
]

function buildFormattingTokensRegExp (formatters) {
  var formatterKeys = []
  for (var key in formatters) {
    if (formatters.hasOwnProperty(key)) {
      formatterKeys.push(key)
    }
  }

  var formattingTokens = commonFormatterKeys
    .concat(formatterKeys)
    .sort()
    .reverse()
  var formattingTokensRegExp = new RegExp(
    '(\\[[^\\[]*\\])|(\\\\)?' + '(' + formattingTokens.join('|') + '|.)', 'g'
  )

  return formattingTokensRegExp
}

module.exports = buildFormattingTokensRegExp


/***/ }),
/* 16 */
/***/ (function(module, exports) {

function _getPrototypeOf(o) {
  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  return _getPrototypeOf(o);
}
module.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 17 */
/***/ (function(module, exports) {

module.exports = require("stream");

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

var setPrototypeOf = __webpack_require__(177);
function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  Object.defineProperty(subClass, "prototype", {
    writable: false
  });
  if (superClass) setPrototypeOf(subClass, superClass);
}
module.exports = _inherits, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__(90)["default"];
var assertThisInitialized = __webpack_require__(127);
function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return assertThisInitialized(self);
}
module.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.QueryDefinition = exports.MutationTypes = exports.Mutations = exports.getDoctypeFromOperation = exports.uploadFile = exports.removeReferencedBy = exports.addReferencedBy = exports.removeReferencesTo = exports.addReferencesTo = exports.deleteDocument = exports.updateDocuments = exports.updateDocument = exports.createDocument = exports.isAGetByIdQuery = exports.Q = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(9));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));

var _createClass2 = _interopRequireDefault(__webpack_require__(13));

var _findKey = _interopRequireDefault(__webpack_require__(263));

var _logger = _interopRequireDefault(__webpack_require__(27));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 * @typedef PartialQueryDefinition
 *
 * @property {Array} [indexedFields]
 * @property {Array} [sort]
 * @property {object} [selector]
 * @property {object} [partialFilter]
 * @property {Array} [fields]
 */

/**
 * @typedef {object} MangoSelector
 */

/**
 * @typedef {object} MangoPartialFilter
 */

/**
 * Chainable API to create query definitions to retrieve documents
 * from a Cozy. `QueryDefinition`s are sent to links.
 *
 * @augments {object}
 */
var QueryDefinition = /*#__PURE__*/function () {
  /**
   * @class
   *
   * @param {object} options Initial options for the query definition
   * @param  {import('../types').Doctype} [options.doctype] - The doctype of the doc.
   * @param {import('../types').DocId|null} [options.id] - The id of the doc.
   * @param {Array<import('../types').DocId>} [options.ids] - The ids of the docs.
   * @param {MangoSelector} [options.selector] - The selector to query the docs.
   * @param {Array<string>} [options.fields] - The fields to return.
   * @param {Array<string>} [options.indexedFields] - The fields to index.
   * @param {MangoPartialFilter} [options.partialFilter] - The partial index definition to filter docs.
   * @param {Array<object>} [options.sort] - The sorting params.
   * @param {Array<string>} [options.includes] - The docs to include.
   * @param {string|null} [options.referenced] - The referenced document.
   * @param {number|null} [options.limit] - The document's limit to return.
   * @param {number|null} [options.skip] - The number of docs to skip.
   * @param {import('../types').CouchDBViewCursor} [options.cursor] - The cursor to paginate views.
   * @param {string} [options.bookmark] - The bookmark to paginate mango queries.
   */
  function QueryDefinition() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    (0, _classCallCheck2.default)(this, QueryDefinition);
    this.doctype = options.doctype;
    this.id = options.id;
    this.ids = options.ids;
    this.selector = options.selector;
    this.fields = options.fields;
    this.indexedFields = options.indexedFields;
    this.partialFilter = options.partialFilter;
    this.sort = options.sort;
    this.includes = options.includes;
    this.referenced = options.referenced;
    this.limit = options.limit;
    this.skip = options.skip;
    this.cursor = options.cursor;
    this.bookmark = options.bookmark;
  }
  /**
   * Checks if the sort order matches the index' fields order.
   *
   * When sorting with CouchDB, it is required to:
   * - use indexed fields
   * - keep the same order than the indexed fields.
   *
   * See https://docs.cozy.io/en/tutorials/data/queries/#sort-data-with-mango
   *
   * @param {PartialQueryDefinition} obj - A partial QueryDefinition to check
   */


  (0, _createClass2.default)(QueryDefinition, [{
    key: "checkSortOrder",
    value: function checkSortOrder(_ref) {
      var sort = _ref.sort,
          selector = _ref.selector,
          indexedFields = _ref.indexedFields;

      var _sort = this.sort || sort;

      var _selector = this.selector || selector || {};

      var _indexedFields = this.indexedFields || indexedFields;

      if (!_sort) {
        return;
      }

      var fieldsToIndex = _indexedFields || Object.keys(_selector);

      if (!fieldsToIndex || fieldsToIndex.length < 1) {
        return;
      }

      if (_sort.length > fieldsToIndex.length) {
        _logger.default.warn("You should not sort on non-indexed fields.\n\n        Sort: ".concat(JSON.stringify(_sort), "\n\n        Indexed fields: ").concat(fieldsToIndex));

        return;
      }

      for (var i = 0; i < _sort.length; i++) {
        if (Object.keys(_sort[i])[0] !== fieldsToIndex[i]) {
          _logger.default.warn("The sort order should be the same than the indexed fields.\n\n          Sort: ".concat(JSON.stringify(_sort), "\n\n          Indexed fields: ").concat(fieldsToIndex, "\n"));

          return;
        }
      }
    }
    /**
     * Checks the selector predicates.
     *
     * It is useful to warn the developer when a partial index might be used.
     *
     * @param {MangoSelector} selector - The selector definition
     * @returns {void}
     */

  }, {
    key: "checkSelector",
    value: function checkSelector(selector) {
      var hasExistsFalse = (0, _findKey.default)(selector, ['$exists', false]);

      if (hasExistsFalse) {
        _logger.default.warn("The \"$exists: false\" predicate should be defined as a partial index for better performance.\n\n        Selector: ".concat(JSON.stringify(selector)));
      }

      var hasNe = (0, _findKey.default)(selector, '$ne');

      if (hasNe) {
        _logger.default.info("The use of the $ne operator is more efficient with a partial index.\n\n        Selector: ".concat(JSON.stringify(selector)));
      }

      var nestedArrayKey = (0, _findKey.default)(selector, function (value) {
        return Array.isArray(value);
      });
      var hasNestedArrayWithoutOperator = nestedArrayKey && !nestedArrayKey.startsWith('$');

      if (hasNestedArrayWithoutOperator) {
        throw new Error("You pass ".concat(JSON.stringify(selector), ", this is a valid mango operation, \n\n        but sift doesn't support it so CozyClient can not evaluate \n\n        the request in memory. You must use a MongoDB operator \n\n        like $in or $or operator instead, preferably in a partial index, \n\n        to avoid costly full-scan"));
      }
    }
    /**
     * Check if the selected fields are all included in the selectors
     *
     * @param {PartialQueryDefinition} obj - A partial QueryDefinition to check
     */

  }, {
    key: "checkSelectFields",
    value: function checkSelectFields(_ref2) {
      var fields = _ref2.fields,
          selector = _ref2.selector,
          partialFilter = _ref2.partialFilter;

      var _fields = this.fields || fields;

      var _selector = this.selector || selector;

      var _partialFilter = this.partialFilter || partialFilter;

      if (!_fields || !_selector && !_partialFilter) {
        return;
      }

      var mergedSelector = _objectSpread(_objectSpread({}, _selector), _partialFilter);

      var selectorAttributes = Object.keys(mergedSelector);
      var hasEveryFieldsInSelector = selectorAttributes.every(function (attribute) {
        return _fields.includes(attribute);
      });

      if (!hasEveryFieldsInSelector) {
        throw new Error("The .select should includes all the fields used in where or partialIndex.\n        Please fix this query: fields: ".concat(JSON.stringify(this.toDefinition())));
      }

      return;
    }
    /**
     * Query a single document on its id.
     *
     * @param {string} id   The document id.
     * @returns {QueryDefinition}  The QueryDefinition object.
     */

  }, {
    key: "getById",
    value: function getById(id) {
      if (!id) {
        throw new Error('getById called with undefined id');
      }

      return new QueryDefinition(_objectSpread(_objectSpread({}, this.toDefinition()), {}, {
        id: id
      }));
    }
    /**
     * Query several documents on their ids.
     *
     * @param {Array} ids   The documents ids.
     * @returns {QueryDefinition}  The QueryDefinition object.
     */

  }, {
    key: "getByIds",
    value: function getByIds(ids) {
      return new QueryDefinition(_objectSpread(_objectSpread({}, this.toDefinition()), {}, {
        ids: ids
      }));
    }
    /**
     * Query documents with a [mango selector](http://docs.couchdb.org/en/latest/api/database/find.html#find-selectors).
     * Each field passed in the selector will be indexed, except if the indexField option is used.
     *
     * @param {MangoSelector} selector   The Mango selector.
     * @returns {QueryDefinition}  The QueryDefinition object.
     */

  }, {
    key: "where",
    value: function where(selector) {
      this.checkSortOrder({
        selector: selector
      });
      this.checkSelector(selector);
      this.checkSelectFields({
        selector: selector
      });
      return new QueryDefinition(_objectSpread(_objectSpread({}, this.toDefinition()), {}, {
        selector: selector
      }));
    }
    /**
     * Specify which fields of each object should be returned. If it is omitted, the entire object is returned.
     *
     * @param {Array} fields The fields to return.
     * @returns {QueryDefinition}  The QueryDefinition object.
     */

  }, {
    key: "select",
    value: function select(fields) {
      this.checkSelectFields({
        fields: fields
      });
      return new QueryDefinition(_objectSpread(_objectSpread({}, this.toDefinition()), {}, {
        fields: fields
      }));
    }
    /**
     * Specify which fields should be indexed. This prevent the automatic indexing of the mango fields.
     *
     * @param {Array} indexedFields The fields to index.
     * @returns {QueryDefinition}  The QueryDefinition object.
     */

  }, {
    key: "indexFields",
    value: function indexFields(indexedFields) {
      this.checkSortOrder({
        indexedFields: indexedFields
      });
      return new QueryDefinition(_objectSpread(_objectSpread({}, this.toDefinition()), {}, {
        indexedFields: indexedFields
      }));
    }
    /**
     * Specify a [partial index](https://docs.couchdb.org/en/stable/api/database/find.html#find-partial-indexes).
     * The filter must follow the same syntax than the selector.
     *
     * A partial index includes a filter, used to select documents before the indexing.
     * You can find more information about partial indexes [here](https://docs.cozy.io/en/tutorials/data/advanced/#partial-indexes)
     *
     * @param {object} partialFilter - The filter definition.
     */

  }, {
    key: "partialIndex",
    value: function partialIndex(partialFilter) {
      this.checkSelectFields({
        partialFilter: partialFilter
      });
      return new QueryDefinition(_objectSpread(_objectSpread({}, this.toDefinition()), {}, {
        partialFilter: partialFilter
      }));
    }
    /**
     * Specify how to sort documents, following the [sort syntax](http://docs.couchdb.org/en/latest/api/database/find.html#find-sort)
     *
     * @param {Array} sort The list of field name and direction pairs.
     * @returns {QueryDefinition}  The QueryDefinition object.
     */

  }, {
    key: "sortBy",
    value: function sortBy(sort) {
      if (!Array.isArray(sort)) {
        throw new Error("Invalid sort, should be an array ([{ label: \"desc\"}, { name: \"asc\"}]), you passed ".concat(JSON.stringify(sort), "."));
      }

      this.checkSortOrder({
        sort: sort
      });
      return new QueryDefinition(_objectSpread(_objectSpread({}, this.toDefinition()), {}, {
        sort: sort
      }));
    }
    /**
     * Includes documents having a relationships with the ones queried.
     * For example, query albums including the photos.
     *
     * @param {Array} includes The documents to include.
     * @returns {QueryDefinition}  The QueryDefinition object.
     */

  }, {
    key: "include",
    value: function include(includes) {
      if (!Array.isArray(includes)) {
        throw new Error('include() takes an array of relationship names');
      }

      return new QueryDefinition(_objectSpread(_objectSpread({}, this.toDefinition()), {}, {
        includes: includes
      }));
    }
    /**
     * Maximum number of documents returned, useful for pagination. Default is 100.
     *
     * @param {number} limit The document's limit.
     * @returns {QueryDefinition}  The QueryDefinition object.
     */

  }, {
    key: "limitBy",
    value: function limitBy(limit) {
      return new QueryDefinition(_objectSpread(_objectSpread({}, this.toDefinition()), {}, {
        limit: limit
      }));
    }
  }, {
    key: "UNSAFE_noLimit",
    value: function UNSAFE_noLimit() {
      return new QueryDefinition(_objectSpread(_objectSpread({}, this.toDefinition()), {}, {
        limit: null
      }));
    }
    /**
     * Skip the first ‘n’ documents, where ‘n’ is the value specified.
     *
     * Beware, this [performs badly](http://docs.couchdb.org/en/stable/ddocs/views/pagination.html#paging-alternate-method) on view's index.
     *  Prefer cursor-based pagination in such situation.
     *
     * @param {number} skip The number of documents to skip.
     * @returns {QueryDefinition}  The QueryDefinition object.
     */

  }, {
    key: "offset",
    value: function offset(skip) {
      return new QueryDefinition(_objectSpread(_objectSpread({}, this.toDefinition()), {}, {
        bookmark: undefined,
        cursor: undefined,
        skip: skip
      }));
    }
    /**
     * Use [cursor-based](https://docs.cozy.io/en/cozy-stack/jsonapi/#pagination) pagination.
     * *Warning*: this is only useful for views.
     * The cursor is a [startkey, startkey_docid] array, where startkey is the view's key,
     * e.g. ["io.cozy.photos.albums", "album-id"] and startkey_docid is the id of
     * the starting document of the query, e.g. "file-id".
     * Use the last docid of each query as startkey_docid to paginate or leave blank for the first query.
     *
     * @param {import('../types').CouchDBViewCursor} cursor The cursor for pagination.
     * @returns {QueryDefinition}  The QueryDefinition object.
     */

  }, {
    key: "offsetCursor",
    value: function offsetCursor(cursor) {
      return new QueryDefinition(_objectSpread(_objectSpread({}, this.toDefinition()), {}, {
        bookmark: undefined,
        skip: undefined,
        cursor: cursor
      }));
    }
    /**
     * Use [bookmark](https://docs.couchdb.org/en/2.2.0/api/database/find.html#pagination) pagination.
     * Note this only applies for mango-queries (not views) and is way more efficient than skip pagination.
     * The bookmark is a string returned by the _find response and can be seen as a pointer in
     * the index for the next query.
     *
     * @param {string} bookmark The bookmark to continue a previous paginated query.
     * @returns {QueryDefinition}  The QueryDefinition object.
     */

  }, {
    key: "offsetBookmark",
    value: function offsetBookmark(bookmark) {
      return new QueryDefinition(_objectSpread(_objectSpread({}, this.toDefinition()), {}, {
        skip: undefined,
        cursor: undefined,
        bookmark: bookmark
      }));
    }
    /**
     * Use the [file reference system](https://docs.cozy.io/en/cozy-stack/references-docs-in-vfs/)
     *
     * @param {object} document The reference document
     * @returns {QueryDefinition}  The QueryDefinition object.
     */

  }, {
    key: "referencedBy",
    value: function referencedBy(document) {
      return new QueryDefinition(_objectSpread(_objectSpread({}, this.toDefinition()), {}, {
        referenced: document
      }));
    }
  }, {
    key: "toDefinition",
    value: function toDefinition() {
      return {
        doctype: this.doctype,
        id: this.id,
        ids: this.ids,
        selector: this.selector,
        fields: this.fields,
        indexedFields: this.indexedFields,
        partialFilter: this.partialFilter,
        sort: this.sort,
        includes: this.includes,
        referenced: this.referenced,
        limit: this.limit,
        skip: this.skip,
        cursor: this.cursor,
        bookmark: this.bookmark
      };
    }
  }]);
  return QueryDefinition;
}();
/**
 * Helper to create a QueryDefinition. Recommended way to create
 * query definitions.
 *
 * @param {import('../types').Doctype} doctype - Doctype of the query definition
 *
 * @example
 * ```
 * import { Q } from 'cozy-client'
 *
 * const qDef = Q('io.cozy.todos').where({ _id: '1234' })
 * ```
 */


exports.QueryDefinition = QueryDefinition;

var Q = function Q(doctype) {
  return new QueryDefinition({
    doctype: doctype
  });
};
/**
 * Check if the query is a getById() query
 *
 * @param {QueryDefinition} queryDefinition The query definition
 *
 * @returns {boolean}
 */


exports.Q = Q;

var isAGetByIdQuery = function isAGetByIdQuery(queryDefinition) {
  if (!queryDefinition) return false;
  var attributes = Object.values(queryDefinition);
  if (attributes.length === 0) return false; // 2 attrs because we check if id and doctype are not undefined

  return attributes.filter(function (attr) {
    return attr !== undefined;
  }).length === 2 && queryDefinition.id !== undefined;
}; // Mutations


exports.isAGetByIdQuery = isAGetByIdQuery;
var CREATE_DOCUMENT = 'CREATE_DOCUMENT';
var UPDATE_DOCUMENT = 'UPDATE_DOCUMENT';
var UPDATE_DOCUMENTS = 'UPDATE_DOCUMENTS';
var DELETE_DOCUMENT = 'DELETE_DOCUMENT';
var ADD_REFERENCES_TO = 'ADD_REFERENCES_TO';
var REMOVE_REFERENCES_TO = 'REMOVE_REFERENCES_TO';
var ADD_REFERENCED_BY = 'ADD_REFERENCED_BY';
var REMOVE_REFERENCED_BY = 'REMOVE_REFERENCED_BY';
var UPLOAD_FILE = 'UPLOAD_FILE';

var createDocument = function createDocument(document) {
  return {
    mutationType: MutationTypes.CREATE_DOCUMENT,
    document: document
  };
};

exports.createDocument = createDocument;

var updateDocument = function updateDocument(document) {
  return {
    mutationType: MutationTypes.UPDATE_DOCUMENT,
    document: document
  };
};

exports.updateDocument = updateDocument;

var updateDocuments = function updateDocuments(documents) {
  return {
    mutationType: MutationTypes.UPDATE_DOCUMENTS,
    documents: documents
  };
};

exports.updateDocuments = updateDocuments;

var deleteDocument = function deleteDocument(document) {
  return {
    mutationType: MutationTypes.DELETE_DOCUMENT,
    document: document
  };
};

exports.deleteDocument = deleteDocument;

var addReferencesTo = function addReferencesTo(document, referencedDocuments) {
  return {
    mutationType: MutationTypes.ADD_REFERENCES_TO,
    referencedDocuments: referencedDocuments,
    document: document
  };
};

exports.addReferencesTo = addReferencesTo;

var removeReferencesTo = function removeReferencesTo(document, referencedDocuments) {
  return {
    mutationType: MutationTypes.REMOVE_REFERENCES_TO,
    referencedDocuments: referencedDocuments,
    document: document
  };
};

exports.removeReferencesTo = removeReferencesTo;

var addReferencedBy = function addReferencedBy(document, referencedDocuments) {
  return {
    mutationType: MutationTypes.ADD_REFERENCED_BY,
    referencedDocuments: referencedDocuments,
    document: document
  };
};

exports.addReferencedBy = addReferencedBy;

var removeReferencedBy = function removeReferencedBy(document, referencedDocuments) {
  return {
    mutationType: MutationTypes.REMOVE_REFERENCED_BY,
    referencedDocuments: referencedDocuments,
    document: document
  };
};

exports.removeReferencedBy = removeReferencedBy;

var uploadFile = function uploadFile(file, dirPath) {
  return {
    mutationType: MutationTypes.UPLOAD_FILE,
    file: file,
    dirPath: dirPath
  };
};

exports.uploadFile = uploadFile;

var getDoctypeFromOperation = function getDoctypeFromOperation(operation) {
  if (operation.mutationType) {
    var type = operation.mutationType;

    switch (type) {
      case CREATE_DOCUMENT:
        return operation.document._type;

      case UPDATE_DOCUMENT:
        return operation.document._type;

      case UPDATE_DOCUMENTS:
        return operation.documents[0]._type;

      case DELETE_DOCUMENT:
        return operation.document._type;

      case ADD_REFERENCES_TO:
        throw new Error('Not implemented');

      case UPLOAD_FILE:
        throw new Error('Not implemented');

      default:
        throw new Error("Unknown mutationType ".concat(type));
    }
  } else {
    return operation.doctype;
  }
};

exports.getDoctypeFromOperation = getDoctypeFromOperation;
var Mutations = {
  createDocument: createDocument,
  updateDocument: updateDocument,
  updateDocuments: updateDocuments,
  deleteDocument: deleteDocument,
  addReferencesTo: addReferencesTo,
  removeReferencesTo: removeReferencesTo,
  addReferencedBy: addReferencedBy,
  removeReferencedBy: removeReferencedBy,
  uploadFile: uploadFile
};
exports.Mutations = Mutations;
var MutationTypes = {
  CREATE_DOCUMENT: CREATE_DOCUMENT,
  UPDATE_DOCUMENT: UPDATE_DOCUMENT,
  UPDATE_DOCUMENTS: UPDATE_DOCUMENTS,
  DELETE_DOCUMENT: DELETE_DOCUMENT,
  ADD_REFERENCES_TO: ADD_REFERENCES_TO,
  REMOVE_REFERENCES_TO: REMOVE_REFERENCES_TO,
  ADD_REFERENCED_BY: ADD_REFERENCED_BY,
  REMOVE_REFERENCED_BY: REMOVE_REFERENCED_BY,
  UPLOAD_FILE: UPLOAD_FILE
};
exports.MutationTypes = MutationTypes;

/***/ }),
/* 21 */
/***/ (function(module, exports) {

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

module.exports = isArray;


/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__(90)["default"];
function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
    return {
      "default": obj
    };
  }
  var cache = _getRequireWildcardCache(nodeInterop);
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj["default"] = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
}
module.exports = _interopRequireWildcard, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var undefined;

var $SyntaxError = SyntaxError;
var $Function = Function;
var $TypeError = TypeError;

// eslint-disable-next-line consistent-return
var getEvalledConstructor = function (expressionSyntax) {
	try {
		return $Function('"use strict"; return (' + expressionSyntax + ').constructor;')();
	} catch (e) {}
};

var $gOPD = Object.getOwnPropertyDescriptor;
if ($gOPD) {
	try {
		$gOPD({}, '');
	} catch (e) {
		$gOPD = null; // this is IE 8, which has a broken gOPD
	}
}

var throwTypeError = function () {
	throw new $TypeError();
};
var ThrowTypeError = $gOPD
	? (function () {
		try {
			// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties
			arguments.callee; // IE 8 does not throw here
			return throwTypeError;
		} catch (calleeThrows) {
			try {
				// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')
				return $gOPD(arguments, 'callee').get;
			} catch (gOPDthrows) {
				return throwTypeError;
			}
		}
	}())
	: throwTypeError;

var hasSymbols = __webpack_require__(136)();

var getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto

var needsEval = {};

var TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);

var INTRINSICS = {
	'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,
	'%Array%': Array,
	'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,
	'%ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,
	'%AsyncFromSyncIteratorPrototype%': undefined,
	'%AsyncFunction%': needsEval,
	'%AsyncGenerator%': needsEval,
	'%AsyncGeneratorFunction%': needsEval,
	'%AsyncIteratorPrototype%': needsEval,
	'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,
	'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,
	'%Boolean%': Boolean,
	'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,
	'%Date%': Date,
	'%decodeURI%': decodeURI,
	'%decodeURIComponent%': decodeURIComponent,
	'%encodeURI%': encodeURI,
	'%encodeURIComponent%': encodeURIComponent,
	'%Error%': Error,
	'%eval%': eval, // eslint-disable-line no-eval
	'%EvalError%': EvalError,
	'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,
	'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,
	'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,
	'%Function%': $Function,
	'%GeneratorFunction%': needsEval,
	'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,
	'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,
	'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,
	'%isFinite%': isFinite,
	'%isNaN%': isNaN,
	'%IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,
	'%JSON%': typeof JSON === 'object' ? JSON : undefined,
	'%Map%': typeof Map === 'undefined' ? undefined : Map,
	'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),
	'%Math%': Math,
	'%Number%': Number,
	'%Object%': Object,
	'%parseFloat%': parseFloat,
	'%parseInt%': parseInt,
	'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,
	'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,
	'%RangeError%': RangeError,
	'%ReferenceError%': ReferenceError,
	'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,
	'%RegExp%': RegExp,
	'%Set%': typeof Set === 'undefined' ? undefined : Set,
	'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),
	'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,
	'%String%': String,
	'%StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,
	'%Symbol%': hasSymbols ? Symbol : undefined,
	'%SyntaxError%': $SyntaxError,
	'%ThrowTypeError%': ThrowTypeError,
	'%TypedArray%': TypedArray,
	'%TypeError%': $TypeError,
	'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,
	'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,
	'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,
	'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,
	'%URIError%': URIError,
	'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,
	'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,
	'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet
};

var doEval = function doEval(name) {
	var value;
	if (name === '%AsyncFunction%') {
		value = getEvalledConstructor('async function () {}');
	} else if (name === '%GeneratorFunction%') {
		value = getEvalledConstructor('function* () {}');
	} else if (name === '%AsyncGeneratorFunction%') {
		value = getEvalledConstructor('async function* () {}');
	} else if (name === '%AsyncGenerator%') {
		var fn = doEval('%AsyncGeneratorFunction%');
		if (fn) {
			value = fn.prototype;
		}
	} else if (name === '%AsyncIteratorPrototype%') {
		var gen = doEval('%AsyncGenerator%');
		if (gen) {
			value = getProto(gen.prototype);
		}
	}

	INTRINSICS[name] = value;

	return value;
};

var LEGACY_ALIASES = {
	'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],
	'%ArrayPrototype%': ['Array', 'prototype'],
	'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],
	'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],
	'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],
	'%ArrayProto_values%': ['Array', 'prototype', 'values'],
	'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],
	'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],
	'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],
	'%BooleanPrototype%': ['Boolean', 'prototype'],
	'%DataViewPrototype%': ['DataView', 'prototype'],
	'%DatePrototype%': ['Date', 'prototype'],
	'%ErrorPrototype%': ['Error', 'prototype'],
	'%EvalErrorPrototype%': ['EvalError', 'prototype'],
	'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],
	'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],
	'%FunctionPrototype%': ['Function', 'prototype'],
	'%Generator%': ['GeneratorFunction', 'prototype'],
	'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],
	'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],
	'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],
	'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],
	'%JSONParse%': ['JSON', 'parse'],
	'%JSONStringify%': ['JSON', 'stringify'],
	'%MapPrototype%': ['Map', 'prototype'],
	'%NumberPrototype%': ['Number', 'prototype'],
	'%ObjectPrototype%': ['Object', 'prototype'],
	'%ObjProto_toString%': ['Object', 'prototype', 'toString'],
	'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],
	'%PromisePrototype%': ['Promise', 'prototype'],
	'%PromiseProto_then%': ['Promise', 'prototype', 'then'],
	'%Promise_all%': ['Promise', 'all'],
	'%Promise_reject%': ['Promise', 'reject'],
	'%Promise_resolve%': ['Promise', 'resolve'],
	'%RangeErrorPrototype%': ['RangeError', 'prototype'],
	'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],
	'%RegExpPrototype%': ['RegExp', 'prototype'],
	'%SetPrototype%': ['Set', 'prototype'],
	'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],
	'%StringPrototype%': ['String', 'prototype'],
	'%SymbolPrototype%': ['Symbol', 'prototype'],
	'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],
	'%TypedArrayPrototype%': ['TypedArray', 'prototype'],
	'%TypeErrorPrototype%': ['TypeError', 'prototype'],
	'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],
	'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],
	'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],
	'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],
	'%URIErrorPrototype%': ['URIError', 'prototype'],
	'%WeakMapPrototype%': ['WeakMap', 'prototype'],
	'%WeakSetPrototype%': ['WeakSet', 'prototype']
};

var bind = __webpack_require__(102);
var hasOwn = __webpack_require__(105);
var $concat = bind.call(Function.call, Array.prototype.concat);
var $spliceApply = bind.call(Function.apply, Array.prototype.splice);
var $replace = bind.call(Function.call, String.prototype.replace);
var $strSlice = bind.call(Function.call, String.prototype.slice);
var $exec = bind.call(Function.call, RegExp.prototype.exec);

/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */
var rePropName = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
var reEscapeChar = /\\(\\)?/g; /** Used to match backslashes in property paths. */
var stringToPath = function stringToPath(string) {
	var first = $strSlice(string, 0, 1);
	var last = $strSlice(string, -1);
	if (first === '%' && last !== '%') {
		throw new $SyntaxError('invalid intrinsic syntax, expected closing `%`');
	} else if (last === '%' && first !== '%') {
		throw new $SyntaxError('invalid intrinsic syntax, expected opening `%`');
	}
	var result = [];
	$replace(string, rePropName, function (match, number, quote, subString) {
		result[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;
	});
	return result;
};
/* end adaptation */

var getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {
	var intrinsicName = name;
	var alias;
	if (hasOwn(LEGACY_ALIASES, intrinsicName)) {
		alias = LEGACY_ALIASES[intrinsicName];
		intrinsicName = '%' + alias[0] + '%';
	}

	if (hasOwn(INTRINSICS, intrinsicName)) {
		var value = INTRINSICS[intrinsicName];
		if (value === needsEval) {
			value = doEval(intrinsicName);
		}
		if (typeof value === 'undefined' && !allowMissing) {
			throw new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');
		}

		return {
			alias: alias,
			name: intrinsicName,
			value: value
		};
	}

	throw new $SyntaxError('intrinsic ' + name + ' does not exist!');
};

module.exports = function GetIntrinsic(name, allowMissing) {
	if (typeof name !== 'string' || name.length === 0) {
		throw new $TypeError('intrinsic name must be a non-empty string');
	}
	if (arguments.length > 1 && typeof allowMissing !== 'boolean') {
		throw new $TypeError('"allowMissing" argument must be a boolean');
	}

	if ($exec(/^%?[^%]*%?$/, name) === null) {
		throw new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');
	}
	var parts = stringToPath(name);
	var intrinsicBaseName = parts.length > 0 ? parts[0] : '';

	var intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);
	var intrinsicRealName = intrinsic.name;
	var value = intrinsic.value;
	var skipFurtherCaching = false;

	var alias = intrinsic.alias;
	if (alias) {
		intrinsicBaseName = alias[0];
		$spliceApply(parts, $concat([0, 1], alias));
	}

	for (var i = 1, isOwn = true; i < parts.length; i += 1) {
		var part = parts[i];
		var first = $strSlice(part, 0, 1);
		var last = $strSlice(part, -1);
		if (
			(
				(first === '"' || first === "'" || first === '`')
				|| (last === '"' || last === "'" || last === '`')
			)
			&& first !== last
		) {
			throw new $SyntaxError('property names with quotes must have matching quotes');
		}
		if (part === 'constructor' || !isOwn) {
			skipFurtherCaching = true;
		}

		intrinsicBaseName += '.' + part;
		intrinsicRealName = '%' + intrinsicBaseName + '%';

		if (hasOwn(INTRINSICS, intrinsicRealName)) {
			value = INTRINSICS[intrinsicRealName];
		} else if (value != null) {
			if (!(part in value)) {
				if (!allowMissing) {
					throw new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');
				}
				return void undefined;
			}
			if ($gOPD && (i + 1) >= parts.length) {
				var desc = $gOPD(value, part);
				isOwn = !!desc;

				// By convention, when a data property is converted to an accessor
				// property to emulate a data property that does not suffer from
				// the override mistake, that accessor's getter is marked with
				// an `originalValue` property. Here, when we detect this, we
				// uphold the illusion by pretending to see that original data
				// property, i.e., returning the value rather than the getter
				// itself.
				if (isOwn && 'get' in desc && !('originalValue' in desc.get)) {
					value = desc.get;
				} else {
					value = value[part];
				}
			} else {
				isOwn = hasOwn(value, part);
				value = value[part];
			}

			if (isOwn && !skipFurtherCaching) {
				INTRINSICS[intrinsicRealName] = value;
			}
		}
	}
	return value;
};


/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var GetIntrinsic = __webpack_require__(23);

var callBind = __webpack_require__(60);

var $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));

module.exports = function callBoundIntrinsic(name, allowMissing) {
	var intrinsic = GetIntrinsic(name, !!allowMissing);
	if (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {
		return callBind(intrinsic);
	}
	return intrinsic;
};


/***/ }),
/* 25 */
/***/ (function(module, exports) {

module.exports = require("zlib");

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireWildcard = __webpack_require__(22);

var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.normalizeDoc = normalizeDoc;
exports.normalizeDoctype = exports.default = void 0;

var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(50));

var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(41));

var _regenerator = _interopRequireDefault(__webpack_require__(6));

var _taggedTemplateLiteral2 = _interopRequireDefault(__webpack_require__(45));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(7));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));

var _createClass2 = _interopRequireDefault(__webpack_require__(13));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(9));

var _cozyFlags = _interopRequireDefault(__webpack_require__(48));

var _utils = __webpack_require__(46);

var _uniq = _interopRequireDefault(__webpack_require__(84));

var _omit = _interopRequireDefault(__webpack_require__(113));

var _head = _interopRequireDefault(__webpack_require__(269));

var _merge = _interopRequireDefault(__webpack_require__(52));

var _startsWith = _interopRequireDefault(__webpack_require__(577));

var _qs = _interopRequireDefault(__webpack_require__(581));

var _mangoIndex = __webpack_require__(276);

var _Collection = _interopRequireWildcard(__webpack_require__(75));

var querystring = _interopRequireWildcard(__webpack_require__(180));

var _errors = __webpack_require__(56);

var _logger = _interopRequireDefault(__webpack_require__(51));

function _templateObject10() {
  var data = (0, _taggedTemplateLiteral2.default)(["/data/", "/_design/", "/copy?rev=", ""]);

  _templateObject10 = function _templateObject10() {
    return data;
  };

  return data;
}

function _templateObject9() {
  var data = (0, _taggedTemplateLiteral2.default)(["/data/", "/_design/", "?rev=", ""]);

  _templateObject9 = function _templateObject9() {
    return data;
  };

  return data;
}

function _templateObject8() {
  var data = (0, _taggedTemplateLiteral2.default)(["/data/", "/_design_docs?include_docs=true"]);

  _templateObject8 = function _templateObject8() {
    return data;
  };

  return data;
}

function _templateObject7() {
  var data = (0, _taggedTemplateLiteral2.default)(["/data/", "/_index"]);

  _templateObject7 = function _templateObject7() {
    return data;
  };

  return data;
}

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _templateObject6() {
  var data = (0, _taggedTemplateLiteral2.default)(["/data/", "/", "?rev=", ""]);

  _templateObject6 = function _templateObject6() {
    return data;
  };

  return data;
}

function _templateObject5() {
  var data = (0, _taggedTemplateLiteral2.default)(["/data/", "/", ""]);

  _templateObject5 = function _templateObject5() {
    return data;
  };

  return data;
}

function _templateObject4() {
  var data = (0, _taggedTemplateLiteral2.default)(["/data/", "/", ""]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = (0, _taggedTemplateLiteral2.default)(["/data/", "/_all_docs?include_docs=true"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = (0, _taggedTemplateLiteral2.default)(["/data/", "/_find"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = (0, _taggedTemplateLiteral2.default)(["/data/", "/", ""]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var DATABASE_DOES_NOT_EXIST = 'Database does not exist.';
/**
 * Normalize a document, adding its doctype if needed
 *
 * @param {object} doc - Document to normalize
 * @param {string} doctype - Document doctype
 * @returns {object} normalized document
 * @private
 */

function normalizeDoc() {
  var doc = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var doctype = arguments.length > 1 ? arguments[1] : undefined;
  var id = doc._id || doc.id;
  return _objectSpread({
    id: id,
    _id: id,
    _type: doctype
  }, doc);
}

var prepareForDeletion = function prepareForDeletion(x) {
  return Object.assign({}, (0, _omit.default)(x, '_type'), {
    _deleted: true
  });
};
/**
 * Abstracts a collection of documents of the same doctype, providing CRUD methods and other helpers.
 */


var DocumentCollection = /*#__PURE__*/function () {
  function DocumentCollection(doctype, stackClient) {
    (0, _classCallCheck2.default)(this, DocumentCollection);
    this.doctype = doctype;
    this.stackClient = stackClient;
    this.indexes = {};
    this.endpoint = "/data/".concat(this.doctype, "/");
  }
  /**
   * Provides a callback for `Collection.get`
   *
   * @param {string} doctype - Document doctype
   * @returns {Function} (data, response) => normalizedDocument
   *                                        using `normalizeDoc`
   */


  (0, _createClass2.default)(DocumentCollection, [{
    key: "all",

    /**
     * Lists all documents of the collection, without filters.
     *
     * The returned documents are paginated by the stack.
     *
     * @param {object} options The fetch options: pagination & fetch of specific docs.
     * @param {number} [options.limit=100] - Pagination limit
     * @param {number} [options.skip=0] - Pagination Skip
     * @param {string} [options.bookmark] - Pagination bookmark
     * @param {Array<string>} [options.keys] - Keys to query
     * @returns {Promise<{data, meta, skip, bookmark, next}>} The JSON API conformant response.
     * @throws {FetchError}
     */
    value: function () {
      var _all = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {
        var _this = this;

        var _ref,
            _ref$limit,
            limit,
            _ref$skip,
            skip,
            bookmark,
            keys,
            isUsingAllDocsRoute,
            route,
            url,
            params,
            path,
            resp,
            data,
            next,
            _args = arguments;

        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _ref = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, _ref$limit = _ref.limit, limit = _ref$limit === void 0 ? 100 : _ref$limit, _ref$skip = _ref.skip, skip = _ref$skip === void 0 ? 0 : _ref$skip, bookmark = _ref.bookmark, keys = _ref.keys;
                // If the limit is intentionnally null, we need to use _all_docs, since
                // _normal_docs uses _find and has a hard limit of 1000
                isUsingAllDocsRoute = !!keys || limit === null;
                route = isUsingAllDocsRoute ? '_all_docs' : '_normal_docs';
                url = (0, _utils.uri)(_templateObject(), this.doctype, route);
                params = {
                  include_docs: true,
                  limit: limit,
                  skip: skip,
                  keys: keys,
                  bookmark: bookmark
                };
                path = querystring.buildURL(url, params); // If no document of this doctype exist, this route will return a 404,
                // so we need to try/catch and return an empty response object in case of a 404

                _context.prev = 6;
                _context.next = 9;
                return this.stackClient.fetchJSON('GET', path);

              case 9:
                resp = _context.sent;
                _context.next = 15;
                break;

              case 12:
                _context.prev = 12;
                _context.t0 = _context["catch"](6);
                return _context.abrupt("return", (0, _Collection.dontThrowNotFoundError)(_context.t0));

              case 15:
                /* If using `all_docs` we need to filter our design documents and check if
                the document is not null. If we use `normal_doc` we can't have any design doc
                 */
                if (isUsingAllDocsRoute) {
                  data = resp.rows.filter(function (doc) {
                    return doc && doc.doc !== null && !doc.error && !(0, _startsWith.default)(doc.id, '_design');
                  }).map(function (row) {
                    return normalizeDoc(row.doc, _this.doctype);
                  });
                } else {
                  data = resp.rows.map(function (row) {
                    return normalizeDoc(row, _this.doctype);
                  });
                } // The presence of a bookmark doesn’t guarantee that there are more results.
                // See https://docs.couchdb.org/en/2.2.0/api/database/find.html#pagination


                next = bookmark ? resp.rows.length >= limit : skip + resp.rows.length < resp.total_rows;
                return _context.abrupt("return", {
                  data: data,
                  meta: {
                    count: isUsingAllDocsRoute ? data.length : resp.total_rows
                  },
                  skip: skip,
                  bookmark: resp.bookmark,
                  next: next
                });

              case 18:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this, [[6, 12]]);
      }));

      function all() {
        return _all.apply(this, arguments);
      }

      return all;
    }()
    /**
     * Fetch Documents with Mango
     *
     * @param {string} path - path to fetch
     * @param {MangoSelector} selector - selector
     * @param {MangoQueryOptions} options - request options
     */

  }, {
    key: "fetchDocumentsWithMango",
    value: function () {
      var _fetchDocumentsWithMango = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(path, selector) {
        var options,
            _args2 = arguments;
        return _regenerator.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                options = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : {};
                return _context2.abrupt("return", this.stackClient.fetchJSON('POST', path, this.toMangoOptions(selector, options)));

              case 2:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function fetchDocumentsWithMango(_x, _x2) {
        return _fetchDocumentsWithMango.apply(this, arguments);
      }

      return fetchDocumentsWithMango;
    }()
    /**
     * Migrate an existing unamed index to a named one.
     *
     * Index migration became necessary for optimistic index, because
     * we started to use named index while we used to have unamed index,
     * i.e. indexes with CouchDB-generated ID.
     *
     * @param {object} sourceIndex - The index to migrate
     * @param {string} targetIndexName - The new index name
     * @private
     */

  }, {
    key: "migrateUnamedIndex",
    value: function () {
      var _migrateUnamedIndex = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3(sourceIndex, targetIndexName) {
        return _regenerator.default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.prev = 0;
                _context3.next = 3;
                return this.copyIndex(sourceIndex, targetIndexName);

              case 3:
                _context3.next = 5;
                return this.destroyIndex(sourceIndex);

              case 5:
                _context3.next = 16;
                break;

              case 7:
                _context3.prev = 7;
                _context3.t0 = _context3["catch"](0);

                if ((0, _Collection.isDocumentUpdateConflict)(_context3.t0)) {
                  _context3.next = 11;
                  break;
                }

                throw _context3.t0;

              case 11:
                (0, _utils.sleep)(1000);
                _context3.next = 14;
                return this.copyIndex(sourceIndex, targetIndexName);

              case 14:
                _context3.next = 16;
                return this.destroyIndex(sourceIndex);

              case 16:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this, [[0, 7]]);
      }));

      function migrateUnamedIndex(_x3, _x4) {
        return _migrateUnamedIndex.apply(this, arguments);
      }

      return migrateUnamedIndex;
    }()
    /**
     * Handle index creation if it is missing.
     *
     * When an index is missing, we first check if there is one with a different
     * name but the same definition. If yes, it means we found an old unamed
     * index, so we migrate it. If there is none, we create the new index.
     *
     * @param {object} selector The mango selector
     * @param {MangoQueryOptions} options The find options
     * @private
     */

  }, {
    key: "handleMissingIndex",
    value: function () {
      var _handleMissingIndex = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee4(selector, options) {
        var indexedFields, partialFilter, partialFilterFields, existingIndex, indexName;
        return _regenerator.default.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                indexedFields = options.indexedFields, partialFilter = options.partialFilter;

                if (!indexedFields) {
                  indexedFields = (0, _mangoIndex.getIndexFields)({
                    sort: options.sort,
                    selector: selector
                  });
                }

                partialFilterFields = partialFilter ? (0, _mangoIndex.getIndexFields)({
                  partialFilter: partialFilter
                }) : null;
                _context4.next = 5;
                return this.findExistingIndex(selector, options);

              case 5:
                existingIndex = _context4.sent;
                indexName = (0, _mangoIndex.getIndexNameFromFields)(indexedFields, {
                  partialFilterFields: partialFilterFields
                });

                if (existingIndex) {
                  _context4.next = 12;
                  break;
                }

                _context4.next = 10;
                return this.createIndex(indexedFields, {
                  partialFilter: partialFilter,
                  indexName: indexName
                });

              case 10:
                _context4.next = 18;
                break;

              case 12:
                if (!(existingIndex._id !== "_design/".concat(indexName))) {
                  _context4.next = 17;
                  break;
                }

                _context4.next = 15;
                return this.migrateUnamedIndex(existingIndex, indexName);

              case 15:
                _context4.next = 18;
                break;

              case 17:
                throw new Error("Index unusable for query, index used: ".concat(indexName));

              case 18:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function handleMissingIndex(_x5, _x6) {
        return _handleMissingIndex.apply(this, arguments);
      }

      return handleMissingIndex;
    }()
    /**
     * Find documents with the mango selector and create index
     * if missing.
     *
     * We adopt an optimistic approach for index creation:
     * we run the query first, and only if an index missing
     * error is returned, the index is created and
     * the query run again.
     *
     * @param {string} path The route path
     * @param {MangoSelector} selector The mango selector
     * @param {MangoQueryOptions} options The find options
     *
     * @returns {Promise<object>} - The find response
     * @protected
     */

  }, {
    key: "findWithMango",
    value: function () {
      var _findWithMango = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee5(path, selector) {
        var options,
            resp,
            _resp$meta,
            warning,
            _args5 = arguments;

        return _regenerator.default.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                options = _args5.length > 2 && _args5[2] !== undefined ? _args5[2] : {};
                _context5.prev = 1;
                _context5.next = 4;
                return this.fetchDocumentsWithMango(path, selector, options);

              case 4:
                resp = _context5.sent;
                warning = resp.warning || ((_resp$meta = resp.meta) === null || _resp$meta === void 0 ? void 0 : _resp$meta.warning);

                if (!(warning && options.partialFilter && (0, _Collection.isIndexNotUsedWarning)(warning))) {
                  _context5.next = 8;
                  break;
                }

                throw new Error('no_index');

              case 8:
                _context5.next = 21;
                break;

              case 10:
                _context5.prev = 10;
                _context5.t0 = _context5["catch"](1);

                if (!(!(0, _Collection.isIndexNotFoundError)(_context5.t0) && !(0, _Collection.isNoUsableIndexError)(_context5.t0))) {
                  _context5.next = 16;
                  break;
                }

                throw _context5.t0;

              case 16:
                _context5.next = 18;
                return this.handleMissingIndex(selector, options);

              case 18:
                _context5.next = 20;
                return this.fetchDocumentsWithMango(path, selector, options);

              case 20:
                resp = _context5.sent;

              case 21:
                return _context5.abrupt("return", resp);

              case 22:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this, [[1, 10]]);
      }));

      function findWithMango(_x7, _x8) {
        return _findWithMango.apply(this, arguments);
      }

      return findWithMango;
    }()
    /**
     * Returns a filtered list of documents using a Mango selector.
     
    The returned documents are paginated by the stack.
     *
     * @param {MangoSelector} selector The Mango selector.
     * @param {MangoQueryOptions} options MangoQueryOptions
     * @returns {Promise<{data, skip, bookmark, next, execution_stats}>} The JSON API conformant response.
     * @throws {FetchError}
     */

  }, {
    key: "find",
    value: function () {
      var _find = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee6(selector) {
        var _this2 = this;

        var options,
            _options$skip,
            skip,
            resp,
            path,
            _args6 = arguments;

        return _regenerator.default.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                options = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : {};
                _options$skip = options.skip, skip = _options$skip === void 0 ? 0 : _options$skip;
                _context6.prev = 2;
                path = (0, _utils.uri)(_templateObject2(), this.doctype);
                _context6.next = 6;
                return this.findWithMango(path, selector, options);

              case 6:
                resp = _context6.sent;
                _context6.next = 12;
                break;

              case 9:
                _context6.prev = 9;
                _context6.t0 = _context6["catch"](2);
                return _context6.abrupt("return", (0, _Collection.dontThrowNotFoundError)(_context6.t0));

              case 12:
                return _context6.abrupt("return", {
                  data: resp.docs.map(function (doc) {
                    return normalizeDoc(doc, _this2.doctype);
                  }),
                  next: resp.next,
                  skip: skip,
                  bookmark: resp.bookmark,
                  execution_stats: resp.execution_stats
                });

              case 13:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6, this, [[2, 9]]);
      }));

      function find(_x9) {
        return _find.apply(this, arguments);
      }

      return find;
    }()
    /**
     * Returns a filtered list with all documents using a Mango selector,
     * automatically fetching more documents if the total of documents is
     * superior to the pagination limit.
     * Can result in a lot of network requests.
     *
     The returned documents are paginated by the stack.
     *
     * @param {MangoSelector} selector The Mango selector.
     * @param {MangoQueryOptions} options MangoQueryOptions
     * @returns {Promise<Array<{data}>>} Documents fetched
     * @throws {FetchError}
     */

  }, {
    key: "findAll",
    value: function () {
      var _findAll = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee7(selector) {
        var options,
            next,
            documents,
            bookmark,
            resp,
            _args7 = arguments;
        return _regenerator.default.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                options = _args7.length > 1 && _args7[1] !== undefined ? _args7[1] : {};
                next = true;
                documents = [];
                bookmark = options.bookmark || undefined;

              case 4:
                if (!next) {
                  _context7.next = 13;
                  break;
                }

                _context7.next = 7;
                return this.find(selector, _objectSpread(_objectSpread({}, options), {}, {
                  bookmark: bookmark
                }));

              case 7:
                resp = _context7.sent;
                documents.push.apply(documents, (0, _toConsumableArray2.default)(resp.data));
                bookmark = resp.bookmark;
                next = resp.next;
                _context7.next = 4;
                break;

              case 13:
                return _context7.abrupt("return", documents);

              case 14:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7, this);
      }));

      function findAll(_x10) {
        return _findAll.apply(this, arguments);
      }

      return findAll;
    }()
    /**
     * Get a document by id
     *
     * @param  {string} id The document id.
     * @returns {Promise<object>}  JsonAPI response containing normalized document as data attribute
     */

  }, {
    key: "get",
    value: function () {
      var _get = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee8(id) {
        return _regenerator.default.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                return _context8.abrupt("return", _Collection.default.get(this.stackClient, "".concat(this.endpoint).concat(encodeURIComponent(id)), {
                  normalize: this.constructor.normalizeDoctype(this.doctype)
                }));

              case 1:
              case "end":
                return _context8.stop();
            }
          }
        }, _callee8, this);
      }));

      function get(_x11) {
        return _get.apply(this, arguments);
      }

      return get;
    }()
    /**
     * Get many documents by id
     */

  }, {
    key: "getAll",
    value: function () {
      var _getAll = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee9(ids) {
        var _this3 = this;

        var resp, rows;
        return _regenerator.default.wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                _context9.prev = 0;
                _context9.next = 3;
                return this.stackClient.fetchJSON('POST', (0, _utils.uri)(_templateObject3(), this.doctype), {
                  keys: ids
                });

              case 3:
                resp = _context9.sent;
                _context9.next = 9;
                break;

              case 6:
                _context9.prev = 6;
                _context9.t0 = _context9["catch"](0);
                return _context9.abrupt("return", (0, _Collection.dontThrowNotFoundError)(_context9.t0));

              case 9:
                rows = resp.rows.filter(function (row) {
                  return row.doc;
                });
                return _context9.abrupt("return", {
                  data: rows.map(function (row) {
                    return normalizeDoc(row.doc, _this3.doctype);
                  }),
                  meta: {
                    count: rows.length
                  }
                });

              case 11:
              case "end":
                return _context9.stop();
            }
          }
        }, _callee9, this, [[0, 6]]);
      }));

      function getAll(_x12) {
        return _getAll.apply(this, arguments);
      }

      return getAll;
    }()
    /**
     * Creates a document
     *
     * @param {object} doc - Document to create. Optional: you can force the id with the _id attribute
     */

  }, {
    key: "create",
    value: function () {
      var _create = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee10(_ref2) {
        var _id, _type, document, hasFixedId, method, endpoint, resp;

        return _regenerator.default.wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                _id = _ref2._id, _type = _ref2._type, document = (0, _objectWithoutProperties2.default)(_ref2, ["_id", "_type"]);
                // In case of a fixed id, let's use the dedicated creation endpoint
                // https://github.com/cozy/cozy-stack/blob/master/docs/data-system.md#create-a-document-with-a-fixed-id
                hasFixedId = !!_id;
                method = hasFixedId ? 'PUT' : 'POST';
                endpoint = (0, _utils.uri)(_templateObject4(), this.doctype, hasFixedId ? _id : '');
                _context10.next = 6;
                return this.stackClient.fetchJSON(method, endpoint, document);

              case 6:
                resp = _context10.sent;
                return _context10.abrupt("return", {
                  data: normalizeDoc(resp.data, this.doctype)
                });

              case 8:
              case "end":
                return _context10.stop();
            }
          }
        }, _callee10, this);
      }));

      function create(_x13) {
        return _create.apply(this, arguments);
      }

      return create;
    }()
    /**
     * Updates a document
     *
     * @param {object} document - Document to update. Do not forget the _id attribute
     */

  }, {
    key: "update",
    value: function () {
      var _update = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee11(document) {
        var resp;
        return _regenerator.default.wrap(function _callee11$(_context11) {
          while (1) {
            switch (_context11.prev = _context11.next) {
              case 0:
                _context11.next = 2;
                return this.stackClient.fetchJSON('PUT', (0, _utils.uri)(_templateObject5(), this.doctype, document._id), document);

              case 2:
                resp = _context11.sent;
                return _context11.abrupt("return", {
                  data: normalizeDoc(resp.data, this.doctype)
                });

              case 4:
              case "end":
                return _context11.stop();
            }
          }
        }, _callee11, this);
      }));

      function update(_x14) {
        return _update.apply(this, arguments);
      }

      return update;
    }()
    /**
     * Destroys a document
     *
     * @param {object} doc - Document to destroy. Do not forget _id and _rev attributes
     */

  }, {
    key: "destroy",
    value: function () {
      var _destroy = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee12(_ref3) {
        var _id, _rev, document, resp;

        return _regenerator.default.wrap(function _callee12$(_context12) {
          while (1) {
            switch (_context12.prev = _context12.next) {
              case 0:
                _id = _ref3._id, _rev = _ref3._rev, document = (0, _objectWithoutProperties2.default)(_ref3, ["_id", "_rev"]);
                _context12.next = 3;
                return this.stackClient.fetchJSON('DELETE', (0, _utils.uri)(_templateObject6(), this.doctype, _id, _rev));

              case 3:
                resp = _context12.sent;
                return _context12.abrupt("return", {
                  data: normalizeDoc(_objectSpread(_objectSpread({}, document), {}, {
                    _id: _id,
                    _rev: resp.rev,
                    _deleted: true
                  }), this.doctype)
                });

              case 5:
              case "end":
                return _context12.stop();
            }
          }
        }, _callee12, this);
      }));

      function destroy(_x15) {
        return _destroy.apply(this, arguments);
      }

      return destroy;
    }()
    /**
     * Updates several documents in one batch
     *
     * @param  {Document[]} rawDocs Documents to be updated
     */

  }, {
    key: "updateAll",
    value: function () {
      var _updateAll = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee13(rawDocs) {
        var stackClient, docs, update, firstDoc, resp;
        return _regenerator.default.wrap(function _callee13$(_context13) {
          while (1) {
            switch (_context13.prev = _context13.next) {
              case 0:
                stackClient = this.stackClient;
                docs = rawDocs ? rawDocs.map(function (d) {
                  return (0, _omit.default)(d, '_type');
                }) : rawDocs;

                if (!(!docs || !docs.length)) {
                  _context13.next = 4;
                  break;
                }

                return _context13.abrupt("return", Promise.resolve([]));

              case 4:
                _context13.prev = 4;
                _context13.next = 7;
                return stackClient.fetchJSON('POST', "/data/".concat(this.doctype, "/_bulk_docs"), {
                  docs: docs
                });

              case 7:
                update = _context13.sent;
                return _context13.abrupt("return", update);

              case 11:
                _context13.prev = 11;
                _context13.t0 = _context13["catch"](4);

                if (!(_context13.t0.reason && _context13.t0.reason.reason && _context13.t0.reason.reason === DATABASE_DOES_NOT_EXIST)) {
                  _context13.next = 24;
                  break;
                }

                _context13.next = 16;
                return this.create(docs[0]);

              case 16:
                firstDoc = _context13.sent;
                _context13.next = 19;
                return this.updateAll(docs.slice(1));

              case 19:
                resp = _context13.sent;
                resp.unshift({
                  ok: true,
                  id: firstDoc._id,
                  rev: firstDoc._rev
                });
                return _context13.abrupt("return", resp);

              case 24:
                throw _context13.t0;

              case 25:
              case "end":
                return _context13.stop();
            }
          }
        }, _callee13, this, [[4, 11]]);
      }));

      function updateAll(_x16) {
        return _updateAll.apply(this, arguments);
      }

      return updateAll;
    }()
    /**
     * Deletes several documents in one batch
     *
     * @param  {Document[]} docs - Documents to delete
     */

  }, {
    key: "destroyAll",
    value: function destroyAll(docs) {
      return this.updateAll(docs.map(prepareForDeletion));
    }
    /**
     * Returns Mango Options from Selector and Options
     *
     * @param {MangoSelector} selector - Mango selector
     * @param {MangoQueryOptions} options - Mango Options
     * @returns {MangoQueryOptions} Mango options
     */

  }, {
    key: "toMangoOptions",
    value: function toMangoOptions(selector) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var sort = options.sort,
          indexedFields = options.indexedFields,
          partialFilter = options.partialFilter;
      var fields = options.fields,
          _options$skip2 = options.skip,
          skip = _options$skip2 === void 0 ? 0 : _options$skip2,
          limit = options.limit,
          bookmark = options.bookmark;
      sort = (0, _mangoIndex.transformSort)(sort);

      if (!indexedFields && selector) {
        _logger.default.warn('Selector fields should be manually indexed to prevent unexpected behaviour');
      }

      indexedFields = indexedFields ? indexedFields : (0, _mangoIndex.getIndexFields)({
        sort: sort,
        selector: selector
      });
      var partialFilterFields = partialFilter ? (0, _mangoIndex.getIndexFields)({
        partialFilter: partialFilter
      }) : null;
      var indexName = options.indexId || "_design/".concat((0, _mangoIndex.getIndexNameFromFields)(indexedFields, {
        partialFilterFields: partialFilterFields
      }));

      if (sort) {
        var sortOrders = (0, _uniq.default)(sort.map(function (sortOption) {
          return (0, _head.default)(Object.values(sortOption));
        }));
        if (sortOrders.length > 1) throw new Error('Mango sort can only use a single order (asc or desc).');
        var sortOrder = sortOrders.length > 0 ? (0, _head.default)(sortOrders) : 'asc';

        var _iterator = _createForOfIteratorHelper(indexedFields),
            _step;

        try {
          var _loop = function _loop() {
            var field = _step.value;
            if (!sort.find(function (sortOption) {
              return (0, _head.default)(Object.keys(sortOption)) === field;
            })) sort.push((0, _defineProperty2.default)({}, field, sortOrder));
          };

          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            _loop();
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      } // We need to pass the partialFilter in the selector, otherwise CouchDB might
      // fallback on another index if it does not exist yet


      var mergedSelector = partialFilter ? (0, _merge.default)(_objectSpread({}, selector), partialFilter) : selector;
      return {
        selector: mergedSelector,
        use_index: indexName,
        // TODO: type and class should not be necessary, it's just a temp fix for a stack bug
        fields: fields ? [].concat((0, _toConsumableArray2.default)(fields), ['_id', '_type', 'class']) : undefined,
        limit: limit,
        skip: skip,
        bookmark: options.bookmark || bookmark,
        sort: sort,
        execution_stats: (0, _cozyFlags.default)('debug') ? true : undefined
      };
    }
  }, {
    key: "checkUniquenessOf",
    value: function () {
      var _checkUniquenessOf = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee14(property, value) {
        var indexId, existingDocs;
        return _regenerator.default.wrap(function _callee14$(_context14) {
          while (1) {
            switch (_context14.prev = _context14.next) {
              case 0:
                _context14.next = 2;
                return this.getUniqueIndexId(property);

              case 2:
                indexId = _context14.sent;
                _context14.next = 5;
                return this.find((0, _defineProperty2.default)({}, property, value), {
                  indexId: indexId,
                  fields: ['_id']
                });

              case 5:
                existingDocs = _context14.sent;
                return _context14.abrupt("return", existingDocs.data.length === 0);

              case 7:
              case "end":
                return _context14.stop();
            }
          }
        }, _callee14, this);
      }));

      function checkUniquenessOf(_x17, _x18) {
        return _checkUniquenessOf.apply(this, arguments);
      }

      return checkUniquenessOf;
    }()
  }, {
    key: "getUniqueIndexId",
    value: function getUniqueIndexId(property) {
      return this.getIndexId([property], {
        indexName: "".concat(this.doctype, "/").concat(property)
      });
    }
  }, {
    key: "getIndexId",
    value: function () {
      var _getIndexId = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee15(fields, _ref4) {
        var _ref4$partialFilter, partialFilter, _ref4$indexName, indexName, index;

        return _regenerator.default.wrap(function _callee15$(_context15) {
          while (1) {
            switch (_context15.prev = _context15.next) {
              case 0:
                _ref4$partialFilter = _ref4.partialFilter, partialFilter = _ref4$partialFilter === void 0 ? '' : _ref4$partialFilter, _ref4$indexName = _ref4.indexName, indexName = _ref4$indexName === void 0 ? (0, _mangoIndex.getIndexNameFromFields)(fields) : _ref4$indexName;

                if (this.indexes[indexName]) {
                  _context15.next = 20;
                  break;
                }

                _context15.prev = 2;
                _context15.next = 5;
                return this.createIndex(fields, {
                  partialFilter: partialFilter
                });

              case 5:
                index = _context15.sent;
                _context15.next = 19;
                break;

              case 8:
                _context15.prev = 8;
                _context15.t0 = _context15["catch"](2);

                if ((0, _Collection.isIndexConflictError)(_context15.t0)) {
                  _context15.next = 14;
                  break;
                }

                throw _context15.t0;

              case 14:
                _context15.next = 16;
                return (0, _utils.sleep)(1000);

              case 16:
                _context15.next = 18;
                return this.createIndex(fields, {
                  partialFilter: partialFilter
                });

              case 18:
                index = _context15.sent;

              case 19:
                this.indexes[indexName] = index;

              case 20:
                return _context15.abrupt("return", this.indexes[indexName].id);

              case 21:
              case "end":
                return _context15.stop();
            }
          }
        }, _callee15, this, [[2, 8]]);
      }));

      function getIndexId(_x19, _x20) {
        return _getIndexId.apply(this, arguments);
      }

      return getIndexId;
    }()
    /**
     *
     * @param {Array} fields - Fields to index
     * @param {object} indexOption - Options for the index
     * @param {MangoPartialFilter} [indexOption.partialFilter] - partialFilter
     * @param {string} [indexOption.indexName] - indexName
     * @returns {Promise<{id, fields}>}
     */

  }, {
    key: "createIndex",
    value: function () {
      var _createIndex = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee16(fields) {
        var _ref5,
            partialFilter,
            indexName,
            indexDef,
            resp,
            indexResp,
            selector,
            options,
            _args16 = arguments;

        return _regenerator.default.wrap(function _callee16$(_context16) {
          while (1) {
            switch (_context16.prev = _context16.next) {
              case 0:
                _ref5 = _args16.length > 1 && _args16[1] !== undefined ? _args16[1] : {}, partialFilter = _ref5.partialFilter, indexName = _ref5.indexName;
                indexDef = {
                  index: {
                    fields: fields
                  }
                };

                if (indexName) {
                  indexDef.ddoc = indexName;
                }

                if (partialFilter) {
                  indexDef.index.partial_filter_selector = partialFilter;
                }

                _context16.prev = 4;
                _context16.next = 7;
                return this.stackClient.fetchJSON('POST', (0, _utils.uri)(_templateObject7(), this.doctype), indexDef);

              case 7:
                resp = _context16.sent;
                _context16.next = 17;
                break;

              case 10:
                _context16.prev = 10;
                _context16.t0 = _context16["catch"](4);

                if ((0, _Collection.isIndexConflictError)(_context16.t0)) {
                  _context16.next = 16;
                  break;
                }

                throw _context16.t0;

              case 16:
                return _context16.abrupt("return");

              case 17:
                indexResp = {
                  id: resp.id,
                  fields: fields
                };

                if (!(resp.result === 'exists')) {
                  _context16.next = 20;
                  break;
                }

                return _context16.abrupt("return", indexResp);

              case 20:
                // indexes might not be usable right after being created; so we delay the resolving until they are
                selector = {};
                fields.forEach(function (f) {
                  return selector[f] = {
                    $gt: null
                  };
                });
                options = {
                  indexId: indexResp.id,
                  limit: 1,
                  partialFilterFields: partialFilter ? (0, _mangoIndex.getIndexFields)({
                    partialFilter: partialFilter
                  }) : null
                };
                _context16.next = 25;
                return (0, _utils.attempt)(this.find(selector, options));

              case 25:
                if (!_context16.sent) {
                  _context16.next = 27;
                  break;
                }

                return _context16.abrupt("return", indexResp);

              case 27:
                _context16.next = 29;
                return (0, _utils.sleep)(1000);

              case 29:
                _context16.next = 31;
                return (0, _utils.attempt)(this.find(selector, options));

              case 31:
                if (!_context16.sent) {
                  _context16.next = 33;
                  break;
                }

                return _context16.abrupt("return", indexResp);

              case 33:
                _context16.next = 35;
                return (0, _utils.sleep)(500);

              case 35:
                return _context16.abrupt("return", indexResp);

              case 36:
              case "end":
                return _context16.stop();
            }
          }
        }, _callee16, this, [[4, 10]]);
      }));

      function createIndex(_x21) {
        return _createIndex.apply(this, arguments);
      }

      return createIndex;
    }()
    /**
     * Retrieve all design docs of mango indexes
     *
     * @returns {Promise<DesignDoc[]>} The design docs
     */

  }, {
    key: "fetchAllMangoIndexes",
    value: function () {
      var _fetchAllMangoIndexes = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee17() {
        var path, indexes;
        return _regenerator.default.wrap(function _callee17$(_context17) {
          while (1) {
            switch (_context17.prev = _context17.next) {
              case 0:
                path = (0, _utils.uri)(_templateObject8(), this.doctype);
                _context17.next = 3;
                return this.stackClient.fetchJSON('GET', path);

              case 3:
                indexes = _context17.sent;
                return _context17.abrupt("return", indexes.rows.filter(function (index) {
                  return index.doc.language === 'query';
                }).map(function (doc) {
                  return (0, _mangoIndex.normalizeDesignDoc)(doc);
                }));

              case 5:
              case "end":
                return _context17.stop();
            }
          }
        }, _callee17, this);
      }));

      function fetchAllMangoIndexes() {
        return _fetchAllMangoIndexes.apply(this, arguments);
      }

      return fetchAllMangoIndexes;
    }()
    /**
     * Delete the specified design doc
     *
     * @param {DesignDoc} index - The design doc to remove
     * @returns {Promise<object>} The delete response
     */

  }, {
    key: "destroyIndex",
    value: function () {
      var _destroyIndex = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee18(index) {
        var ddoc, rev, path;
        return _regenerator.default.wrap(function _callee18$(_context18) {
          while (1) {
            switch (_context18.prev = _context18.next) {
              case 0:
                ddoc = index._id.split('/')[1];
                rev = index._rev;
                path = (0, _utils.uri)(_templateObject9(), this.doctype, ddoc, rev);
                return _context18.abrupt("return", this.stackClient.fetchJSON('DELETE', path));

              case 4:
              case "end":
                return _context18.stop();
            }
          }
        }, _callee18, this);
      }));

      function destroyIndex(_x22) {
        return _destroyIndex.apply(this, arguments);
      }

      return destroyIndex;
    }()
    /**
     * Copy an existing design doc.
     *
     * This is useful to create a new design doc without
     * having to recompute the existing index.
     *
     * @param {DesignDoc} existingIndex - The design doc to copy
     * @param {string} newIndexName - The name of the copy
     * @returns {Promise<DesignDoc>} The copy response
     */

  }, {
    key: "copyIndex",
    value: function () {
      var _copyIndex = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee19(existingIndex, newIndexName) {
        var ddoc, rev, path, options;
        return _regenerator.default.wrap(function _callee19$(_context19) {
          while (1) {
            switch (_context19.prev = _context19.next) {
              case 0:
                ddoc = existingIndex._id.split('/')[1];
                rev = existingIndex._rev;
                path = (0, _utils.uri)(_templateObject10(), this.doctype, ddoc, rev);
                options = {
                  headers: {
                    Destination: "_design/".concat(newIndexName)
                  }
                };
                return _context19.abrupt("return", this.stackClient.fetchJSON('POST', path, null, options));

              case 5:
              case "end":
                return _context19.stop();
            }
          }
        }, _callee19, this);
      }));

      function copyIndex(_x23, _x24) {
        return _copyIndex.apply(this, arguments);
      }

      return copyIndex;
    }()
    /**
     * Find an existing mango index based on the query definition
     *
     * This is useful to avoid creating new indexes having the
     * same definition of an existing one.
     *
     * @param {MangoSelector}     selector  The query selector
     * @param {MangoQueryOptions} options   The find options
     *
     * @returns {Promise<DesignDoc>} A matching index if it exists
     * @private
     */

  }, {
    key: "findExistingIndex",
    value: function () {
      var _findExistingIndex = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee20(selector, options) {
        var sort, indexedFields, partialFilter, indexes, fieldsToIndex, existingIndex;
        return _regenerator.default.wrap(function _callee20$(_context20) {
          while (1) {
            switch (_context20.prev = _context20.next) {
              case 0:
                sort = options.sort, indexedFields = options.indexedFields, partialFilter = options.partialFilter;
                _context20.next = 3;
                return this.fetchAllMangoIndexes();

              case 3:
                indexes = _context20.sent;

                if (!(indexes.length < 1)) {
                  _context20.next = 6;
                  break;
                }

                return _context20.abrupt("return", null);

              case 6:
                sort = (0, _mangoIndex.transformSort)(sort);
                fieldsToIndex = indexedFields ? indexedFields : (0, _mangoIndex.getIndexFields)({
                  sort: sort,
                  selector: selector
                });
                existingIndex = indexes.find(function (index) {
                  return (0, _mangoIndex.isMatchingIndex)(index, fieldsToIndex, partialFilter);
                });
                return _context20.abrupt("return", existingIndex);

              case 10:
              case "end":
                return _context20.stop();
            }
          }
        }, _callee20, this);
      }));

      function findExistingIndex(_x25, _x26) {
        return _findExistingIndex.apply(this, arguments);
      }

      return findExistingIndex;
    }()
    /**
     * Calls _changes route from CouchDB
     * No further treatment is done contrary to fetchchanges
     *
     * @param {object} couchOptions - Couch options for changes https://kutt.it/5r7MNQ
     * @param {string} [couchOptions.since] - Bookmark telling CouchDB from which point in time should changes be returned
     * @param {Array<string>} [couchOptions.doc_ids] - Only return changes for a subset of documents
     * @param {boolean} [couchOptions.includeDocs] - Includes full documents as part of results
     * @param {string} [couchOptions.filter] - Filter
     * @see https://docs.couchdb.org/en/stable/api/database/changes.html
     */

  }, {
    key: "fetchChangesRaw",
    value: function () {
      var _fetchChangesRaw = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee21(couchOptions) {
        var hasDocIds, urlParams, method, endpoint, params, result;
        return _regenerator.default.wrap(function _callee21$(_context21) {
          while (1) {
            switch (_context21.prev = _context21.next) {
              case 0:
                hasDocIds = couchOptions.doc_ids && couchOptions.doc_ids.length > 0;
                urlParams = "?".concat([_qs.default.stringify(_objectSpread(_objectSpread({}, (0, _omit.default)(couchOptions, ['doc_ids', 'includeDocs'])), {}, {
                  include_docs: couchOptions.includeDocs
                })), hasDocIds && couchOptions.filter === undefined ? 'filter=_doc_ids' : undefined].filter(Boolean).join('&'));
                method = hasDocIds ? 'POST' : 'GET';
                endpoint = "/data/".concat(this.doctype, "/_changes").concat(urlParams);
                params = hasDocIds ? {
                  doc_ids: couchOptions.doc_ids
                } : undefined;
                _context21.next = 7;
                return this.stackClient.fetchJSON(method, endpoint, params);

              case 7:
                result = _context21.sent;
                return _context21.abrupt("return", result);

              case 9:
              case "end":
                return _context21.stop();
            }
          }
        }, _callee21, this);
      }));

      function fetchChangesRaw(_x27) {
        return _fetchChangesRaw.apply(this, arguments);
      }

      return fetchChangesRaw;
    }()
    /**
     * Use Couch _changes API
     * Deleted and design docs are filtered by default, thus documents are retrieved in the response
     * (include_docs is set to true in the parameters of _changes).
     *
     * You should use fetchChangesRaw to have low level control on _changes parameters.
     *
     * @param {object} couchOptions - Couch options for changes
     * @param {string} [couchOptions.since] - Bookmark telling CouchDB from which point in time should changes be returned
     * @param {Array<string>} [couchOptions.doc_ids] - Only return changes for a subset of documents
     *
     * @param {object} options - Further options on the returned documents. By default, it is set to { includeDesign: false, includeDeleted: false }
     * @param {boolean} [options.includeDesign] - Whether to include changes from design docs (needs include_docs to be true)
     * @param {boolean} [options.includeDeleted] - Whether to include changes for deleted documents (needs include_docs to be true)
     *
     * @typedef {object} FetchChangesReturnValue
     * @property {string} newLastSeq
     * @property {Array<object>} documents
     * @returns {Promise<FetchChangesReturnValue>}
     */

  }, {
    key: "fetchChanges",
    value: function () {
      var _fetchChanges = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee22() {
        var _this4 = this;

        var couchOptions,
            options,
            opts,
            result,
            newLastSeq,
            docs,
            _args22 = arguments;
        return _regenerator.default.wrap(function _callee22$(_context22) {
          while (1) {
            switch (_context22.prev = _context22.next) {
              case 0:
                couchOptions = _args22.length > 0 && _args22[0] !== undefined ? _args22[0] : {};
                options = _args22.length > 1 && _args22[1] !== undefined ? _args22[1] : {};
                opts = {
                  // Necessary since we deal with deleted and design docs later
                  includeDocs: true
                };

                if (typeof couchOptions !== 'object') {
                  opts.since = couchOptions;

                  _logger.default.warn("fetchChanges use couchOptions as Object not a string, since is deprecated, please use fetchChanges({since: \"".concat(couchOptions, "\"})."));
                } else if (Object.keys(couchOptions).length > 0) {
                  Object.assign(opts, couchOptions);
                }

                _context22.next = 6;
                return this.fetchChangesRaw(opts);

              case 6:
                result = _context22.sent;
                newLastSeq = result.last_seq;
                docs = result.results.map(function (x) {
                  return x.doc;
                }).filter(Boolean);

                if (!options.includeDesign) {
                  docs = docs.filter(function (doc) {
                    return doc._id.indexOf('_design') !== 0;
                  });
                }

                if (!options.includeDeleted) {
                  docs = docs.filter(function (doc) {
                    return !doc._deleted;
                  });
                }

                return _context22.abrupt("return", {
                  newLastSeq: newLastSeq,
                  documents: docs.map(function (doc) {
                    return normalizeDoc(doc, _this4.doctype);
                  })
                });

              case 12:
              case "end":
                return _context22.stop();
            }
          }
        }, _callee22, this);
      }));

      function fetchChanges() {
        return _fetchChanges.apply(this, arguments);
      }

      return fetchChanges;
    }()
  }], [{
    key: "normalizeDoctype",
    value: function normalizeDoctype(doctype) {
      return this.normalizeDoctypeRawApi(doctype);
    }
    /**
     * `normalizeDoctype` for api end points returning json api responses
     *
     * @private
     * @param {string} doctype - Document doctype
     * @returns {Function} (data, response) => normalizedDocument
     *                                        using `normalizeDoc`
     */

  }, {
    key: "normalizeDoctypeJsonApi",
    value: function normalizeDoctypeJsonApi(doctype) {
      return function (data, response) {
        // use the "data" attribute of the response
        return normalizeDoc(data, doctype);
      };
    }
    /**
     * `normalizeDoctype` for api end points returning raw documents
     *
     * @private
     * @param {string} doctype - Document doctype
     * @returns {Function} (data, response) => normalizedDocument
     *                                        using `normalizeDoc`
     */

  }, {
    key: "normalizeDoctypeRawApi",
    value: function normalizeDoctypeRawApi(doctype) {
      return function (data, response) {
        // use the response directly
        return normalizeDoc(response, doctype);
      };
    }
  }]);
  return DocumentCollection;
}();

var _default = DocumentCollection;
exports.default = _default;
var normalizeDoctype = DocumentCollection.normalizeDoctype;
exports.normalizeDoctype = normalizeDoctype;

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _minilog = _interopRequireDefault(__webpack_require__(264));

var logger = (0, _minilog.default)('cozy-client');

_minilog.default.suggest.deny('cozy-client', 'info');

var _default = logger;
exports.default = _default;

/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

var microee = __webpack_require__(101);

// Implements a subset of Node's stream.Transform - in a cross-platform manner.
function Transform() {}

microee.mixin(Transform);

// The write() signature is different from Node's
// --> makes it much easier to work with objects in logs.
// One of the lessons from v1 was that it's better to target
// a good browser rather than the lowest common denominator
// internally.
// If you want to use external streams, pipe() to ./stringify.js first.
Transform.prototype.write = function(name, level, args) {
  this.emit('item', name, level, args);
};

Transform.prototype.end = function() {
  this.emit('end');
  this.removeAllListeners();
};

Transform.prototype.pipe = function(dest) {
  var s = this;
  // prevent double piping
  s.emit('unpipe', dest);
  // tell the dest that it's being piped to
  dest.emit('pipe', s);

  function onItem() {
    dest.write.apply(dest, Array.prototype.slice.call(arguments));
  }
  function onEnd() { !dest._isStdio && dest.end(); }

  s.on('item', onItem);
  s.on('end', onEnd);

  s.when('unpipe', function(from) {
    var match = (from === dest) || typeof from == 'undefined';
    if(match) {
      s.removeListener('item', onItem);
      s.removeListener('end', onEnd);
      dest.emit('unpipe');
    }
    return match;
  });

  return dest;
};

Transform.prototype.unpipe = function(from) {
  this.emit('unpipe', from);
  return this;
};

Transform.prototype.format = function(dest) {
  throw new Error([
    'Warning: .format() is deprecated in Minilog v2! Use .pipe() instead. For example:',
    'var Minilog = require(\'minilog\');',
    'Minilog',
    '  .pipe(Minilog.backends.console.formatClean)',
    '  .pipe(Minilog.backends.console);'].join('\n'));
};

Transform.mixin = function(dest) {
  var o = Transform.prototype, k;
  for (k in o) {
    o.hasOwnProperty(k) && (dest.prototype[k] = o[k]);
  }
};

module.exports = Transform;


/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

var getTimezoneOffsetInMilliseconds = __webpack_require__(795)
var isDate = __webpack_require__(359)

var MILLISECONDS_IN_HOUR = 3600000
var MILLISECONDS_IN_MINUTE = 60000
var DEFAULT_ADDITIONAL_DIGITS = 2

var parseTokenDateTimeDelimeter = /[T ]/
var parseTokenPlainTime = /:/

// year tokens
var parseTokenYY = /^(\d{2})$/
var parseTokensYYY = [
  /^([+-]\d{2})$/, // 0 additional digits
  /^([+-]\d{3})$/, // 1 additional digit
  /^([+-]\d{4})$/ // 2 additional digits
]

var parseTokenYYYY = /^(\d{4})/
var parseTokensYYYYY = [
  /^([+-]\d{4})/, // 0 additional digits
  /^([+-]\d{5})/, // 1 additional digit
  /^([+-]\d{6})/ // 2 additional digits
]

// date tokens
var parseTokenMM = /^-(\d{2})$/
var parseTokenDDD = /^-?(\d{3})$/
var parseTokenMMDD = /^-?(\d{2})-?(\d{2})$/
var parseTokenWww = /^-?W(\d{2})$/
var parseTokenWwwD = /^-?W(\d{2})-?(\d{1})$/

// time tokens
var parseTokenHH = /^(\d{2}([.,]\d*)?)$/
var parseTokenHHMM = /^(\d{2}):?(\d{2}([.,]\d*)?)$/
var parseTokenHHMMSS = /^(\d{2}):?(\d{2}):?(\d{2}([.,]\d*)?)$/

// timezone tokens
var parseTokenTimezone = /([Z+-].*)$/
var parseTokenTimezoneZ = /^(Z)$/
var parseTokenTimezoneHH = /^([+-])(\d{2})$/
var parseTokenTimezoneHHMM = /^([+-])(\d{2}):?(\d{2})$/

/**
 * @category Common Helpers
 * @summary Convert the given argument to an instance of Date.
 *
 * @description
 * Convert the given argument to an instance of Date.
 *
 * If the argument is an instance of Date, the function returns its clone.
 *
 * If the argument is a number, it is treated as a timestamp.
 *
 * If an argument is a string, the function tries to parse it.
 * Function accepts complete ISO 8601 formats as well as partial implementations.
 * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601
 *
 * If all above fails, the function passes the given argument to Date constructor.
 *
 * @param {Date|String|Number} argument - the value to convert
 * @param {Object} [options] - the object with options
 * @param {0 | 1 | 2} [options.additionalDigits=2] - the additional number of digits in the extended year format
 * @returns {Date} the parsed date in the local time zone
 *
 * @example
 * // Convert string '2014-02-11T11:30:30' to date:
 * var result = parse('2014-02-11T11:30:30')
 * //=> Tue Feb 11 2014 11:30:30
 *
 * @example
 * // Parse string '+02014101',
 * // if the additional number of digits in the extended year format is 1:
 * var result = parse('+02014101', {additionalDigits: 1})
 * //=> Fri Apr 11 2014 00:00:00
 */
function parse (argument, dirtyOptions) {
  if (isDate(argument)) {
    // Prevent the date to lose the milliseconds when passed to new Date() in IE10
    return new Date(argument.getTime())
  } else if (typeof argument !== 'string') {
    return new Date(argument)
  }

  var options = dirtyOptions || {}
  var additionalDigits = options.additionalDigits
  if (additionalDigits == null) {
    additionalDigits = DEFAULT_ADDITIONAL_DIGITS
  } else {
    additionalDigits = Number(additionalDigits)
  }

  var dateStrings = splitDateString(argument)

  var parseYearResult = parseYear(dateStrings.date, additionalDigits)
  var year = parseYearResult.year
  var restDateString = parseYearResult.restDateString

  var date = parseDate(restDateString, year)

  if (date) {
    var timestamp = date.getTime()
    var time = 0
    var offset

    if (dateStrings.time) {
      time = parseTime(dateStrings.time)
    }

    if (dateStrings.timezone) {
      offset = parseTimezone(dateStrings.timezone) * MILLISECONDS_IN_MINUTE
    } else {
      var fullTime = timestamp + time
      var fullTimeDate = new Date(fullTime)

      offset = getTimezoneOffsetInMilliseconds(fullTimeDate)

      // Adjust time when it's coming from DST
      var fullTimeDateNextDay = new Date(fullTime)
      fullTimeDateNextDay.setDate(fullTimeDate.getDate() + 1)
      var offsetDiff =
        getTimezoneOffsetInMilliseconds(fullTimeDateNextDay) -
        getTimezoneOffsetInMilliseconds(fullTimeDate)
      if (offsetDiff > 0) {
        offset += offsetDiff
      }
    }

    return new Date(timestamp + time + offset)
  } else {
    return new Date(argument)
  }
}

function splitDateString (dateString) {
  var dateStrings = {}
  var array = dateString.split(parseTokenDateTimeDelimeter)
  var timeString

  if (parseTokenPlainTime.test(array[0])) {
    dateStrings.date = null
    timeString = array[0]
  } else {
    dateStrings.date = array[0]
    timeString = array[1]
  }

  if (timeString) {
    var token = parseTokenTimezone.exec(timeString)
    if (token) {
      dateStrings.time = timeString.replace(token[1], '')
      dateStrings.timezone = token[1]
    } else {
      dateStrings.time = timeString
    }
  }

  return dateStrings
}

function parseYear (dateString, additionalDigits) {
  var parseTokenYYY = parseTokensYYY[additionalDigits]
  var parseTokenYYYYY = parseTokensYYYYY[additionalDigits]

  var token

  // YYYY or ±YYYYY
  token = parseTokenYYYY.exec(dateString) || parseTokenYYYYY.exec(dateString)
  if (token) {
    var yearString = token[1]
    return {
      year: parseInt(yearString, 10),
      restDateString: dateString.slice(yearString.length)
    }
  }

  // YY or ±YYY
  token = parseTokenYY.exec(dateString) || parseTokenYYY.exec(dateString)
  if (token) {
    var centuryString = token[1]
    return {
      year: parseInt(centuryString, 10) * 100,
      restDateString: dateString.slice(centuryString.length)
    }
  }

  // Invalid ISO-formatted year
  return {
    year: null
  }
}

function parseDate (dateString, year) {
  // Invalid ISO-formatted year
  if (year === null) {
    return null
  }

  var token
  var date
  var month
  var week

  // YYYY
  if (dateString.length === 0) {
    date = new Date(0)
    date.setUTCFullYear(year)
    return date
  }

  // YYYY-MM
  token = parseTokenMM.exec(dateString)
  if (token) {
    date = new Date(0)
    month = parseInt(token[1], 10) - 1
    date.setUTCFullYear(year, month)
    return date
  }

  // YYYY-DDD or YYYYDDD
  token = parseTokenDDD.exec(dateString)
  if (token) {
    date = new Date(0)
    var dayOfYear = parseInt(token[1], 10)
    date.setUTCFullYear(year, 0, dayOfYear)
    return date
  }

  // YYYY-MM-DD or YYYYMMDD
  token = parseTokenMMDD.exec(dateString)
  if (token) {
    date = new Date(0)
    month = parseInt(token[1], 10) - 1
    var day = parseInt(token[2], 10)
    date.setUTCFullYear(year, month, day)
    return date
  }

  // YYYY-Www or YYYYWww
  token = parseTokenWww.exec(dateString)
  if (token) {
    week = parseInt(token[1], 10) - 1
    return dayOfISOYear(year, week)
  }

  // YYYY-Www-D or YYYYWwwD
  token = parseTokenWwwD.exec(dateString)
  if (token) {
    week = parseInt(token[1], 10) - 1
    var dayOfWeek = parseInt(token[2], 10) - 1
    return dayOfISOYear(year, week, dayOfWeek)
  }

  // Invalid ISO-formatted date
  return null
}

function parseTime (timeString) {
  var token
  var hours
  var minutes

  // hh
  token = parseTokenHH.exec(timeString)
  if (token) {
    hours = parseFloat(token[1].replace(',', '.'))
    return (hours % 24) * MILLISECONDS_IN_HOUR
  }

  // hh:mm or hhmm
  token = parseTokenHHMM.exec(timeString)
  if (token) {
    hours = parseInt(token[1], 10)
    minutes = parseFloat(token[2].replace(',', '.'))
    return (hours % 24) * MILLISECONDS_IN_HOUR +
      minutes * MILLISECONDS_IN_MINUTE
  }

  // hh:mm:ss or hhmmss
  token = parseTokenHHMMSS.exec(timeString)
  if (token) {
    hours = parseInt(token[1], 10)
    minutes = parseInt(token[2], 10)
    var seconds = parseFloat(token[3].replace(',', '.'))
    return (hours % 24) * MILLISECONDS_IN_HOUR +
      minutes * MILLISECONDS_IN_MINUTE +
      seconds * 1000
  }

  // Invalid ISO-formatted time
  return null
}

function parseTimezone (timezoneString) {
  var token
  var absoluteOffset

  // Z
  token = parseTokenTimezoneZ.exec(timezoneString)
  if (token) {
    return 0
  }

  // ±hh
  token = parseTokenTimezoneHH.exec(timezoneString)
  if (token) {
    absoluteOffset = parseInt(token[2], 10) * 60
    return (token[1] === '+') ? -absoluteOffset : absoluteOffset
  }

  // ±hh:mm or ±hhmm
  token = parseTokenTimezoneHHMM.exec(timezoneString)
  if (token) {
    absoluteOffset = parseInt(token[2], 10) * 60 + parseInt(token[3], 10)
    return (token[1] === '+') ? -absoluteOffset : absoluteOffset
  }

  return 0
}

function dayOfISOYear (isoYear, week, day) {
  week = week || 0
  day = day || 0
  var date = new Date(0)
  date.setUTCFullYear(isoYear, 0, 4)
  var fourthOfJanuaryDay = date.getUTCDay() || 7
  var diff = week * 7 + day + 1 - fourthOfJanuaryDay
  date.setUTCDate(date.getUTCDate() + diff)
  return date
}

module.exports = parse


/***/ }),
/* 30 */
/***/ (function(module, exports) {

module.exports = require("util");

/***/ }),
/* 31 */
/***/ (function(module, exports) {

module.exports = require("url");

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

var arrayWithHoles = __webpack_require__(230);
var iterableToArrayLimit = __webpack_require__(504);
var unsupportedIterableToArray = __webpack_require__(164);
var nonIterableRest = __webpack_require__(233);
function _slicedToArray(arr, i) {
  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();
}
module.exports = _slicedToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

var baseSet = __webpack_require__(279);

/**
 * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
 * it's created. Arrays are created for missing index properties while objects
 * are created for all other missing properties. Use `_.setWith` to customize
 * `path` creation.
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Object
 * @param {Object} object The object to modify.
 * @param {Array|string} path The path of the property to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns `object`.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
 *
 * _.set(object, 'a[0].b.c', 4);
 * console.log(object.a[0].b.c);
 * // => 4
 *
 * _.set(object, ['x', '0', 'y', 'z'], 5);
 * console.log(object.x[0].y.z);
 * // => 5
 */
function set(object, path, value) {
  return object == null ? object : baseSet(object, path, value);
}

module.exports = set;


/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var microee = __webpack_require__(101); // Implements a subset of Node's stream.Transform - in a cross-platform manner.


function Transform() {}

microee.mixin(Transform); // The write() signature is different from Node's
// --> makes it much easier to work with objects in logs.
// One of the lessons from v1 was that it's better to target
// a good browser rather than the lowest common denominator
// internally.
// If you want to use external streams, pipe() to ./stringify.js first.

Transform.prototype.write = function (name, level, args) {
  this.emit('item', name, level, args);
};

Transform.prototype.end = function () {
  this.emit('end');
  this.removeAllListeners();
};

Transform.prototype.pipe = function (dest) {
  var s = this; // prevent double piping

  s.emit('unpipe', dest); // tell the dest that it's being piped to

  dest.emit('pipe', s);

  function onItem() {
    dest.write.apply(dest, Array.prototype.slice.call(arguments));
  }

  function onEnd() {
    !dest._isStdio && dest.end();
  }

  s.on('item', onItem);
  s.on('end', onEnd);
  s.when('unpipe', function (from) {
    var match = from === dest || typeof from == 'undefined';

    if (match) {
      s.removeListener('item', onItem);
      s.removeListener('end', onEnd);
      dest.emit('unpipe');
    }

    return match;
  });
  return dest;
};

Transform.prototype.unpipe = function (from) {
  this.emit('unpipe', from);
  return this;
};

Transform.prototype.format = function () {
  throw new Error(['Warning: .format() is deprecated in Minilog v2! Use .pipe() instead. For example:', "var Minilog = require('minilog');", 'Minilog', '  .pipe(Minilog.backends.console.formatClean)', '  .pipe(Minilog.backends.console);'].join('\n'));
};

Transform.mixin = function (dest) {
  var o = Transform.prototype,
      k;

  for (k in o) {
    // eslint-disable-next-line no-prototype-builtins
    o.hasOwnProperty(k) && (dest.prototype[k] = o[k]);
  }
};

module.exports = Transform;

/***/ }),
/* 35 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "c", function() { return /* binding */ modes; });
__webpack_require__.d(__webpack_exports__, "d", function() { return /* binding */ purposes; });
__webpack_require__.d(__webpack_exports__, "a", function() { return /* binding */ getAverageCO2PerKmByMode; });
__webpack_require__.d(__webpack_exports__, "b", function() { return /* binding */ modeToCategory; });

// UNUSED EXPORTS: pickModeIcon, modeToColor, pickPurposeIcon, purposeToColor, formattedModeToCO2PerKm, modeToCO2PerKm

// EXTERNAL MODULE: ./src/constants.js
var constants = __webpack_require__(0);

// EXTERNAL MODULE: ./node_modules/cozy-logger/src/index.js
var src = __webpack_require__(36);
var src_default = /*#__PURE__*/__webpack_require__.n(src);

// EXTERNAL MODULE: ./node_modules/cozy-minilog/dist/index.js
var dist = __webpack_require__(149);
var dist_default = /*#__PURE__*/__webpack_require__.n(dist);

// EXTERNAL MODULE: ./node_modules/cozy-ui/node_modules/@babel/runtime/helpers/extends.js
var helpers_extends = __webpack_require__(12);
var extends_default = /*#__PURE__*/__webpack_require__.n(helpers_extends);

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(2);
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// CONCATENATED MODULE: ./node_modules/cozy-ui/transpiled/react/Icons/Bike.js

// Automatically created, please run `scripts/generate-svgr-icon.sh assets/icons/ui/bike.svg` to regenerate;


function SvgBike(props) {
  return /*#__PURE__*/react_default.a.createElement("svg", extends_default()({
    viewBox: "0 0 16 16"
  }, props), /*#__PURE__*/react_default.a.createElement("path", {
    d: "M12.5 3a2 2 0 11-4 0 2 2 0 014 0zM8.457 7.543c.182.156.379.309.588.453C9.816 8.53 10.838 9 12 9a1 1 0 100-2c-.62 0-1.25-.257-1.819-.65s-.999-.867-1.204-1.164A1.561 1.561 0 007.701 4.5c-.394 0-.772.156-1.05.435L4.447 7.139a1.527 1.527 0 00.233 2.35L7 11.034V14a1 1 0 102 0v-3.5a1 1 0 00-.445-.832l-1.334-.89 1.236-1.235z"
  }), /*#__PURE__*/react_default.a.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M16 13a3 3 0 11-6 0 3 3 0 016 0zm-1.5 0a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM3 16a3 3 0 100-6 3 3 0 000 6zm0-1.5a1.5 1.5 0 100-3 1.5 1.5 0 000 3z"
  }));
}

/* harmony default export */ var Bike = (SvgBike);
// CONCATENATED MODULE: ./node_modules/cozy-ui/transpiled/react/Icons/Bus.js

// Automatically created, please run `scripts/generate-svgr-icon.sh assets/icons/ui/bus.svg` to regenerate;


function SvgBus(props) {
  return /*#__PURE__*/react_default.a.createElement("svg", extends_default()({
    viewBox: "0 0 16 16"
  }, props), /*#__PURE__*/react_default.a.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M1 11c0 .88.39 1.67 1 2.22v1.28c0 .83.67 1.5 1.5 1.5S5 15.33 5 14.5V14h6v.5c0 .82.67 1.5 1.5 1.5.82 0 1.5-.67 1.5-1.5v-1.28c.61-.55 1-1.34 1-2.22V4c0-3-3-4-7-4S1 1 1 4v7zm3.5 1c-.83 0-1.5-.67-1.5-1.5S3.67 9 4.5 9 6 9.67 6 10.5 5.33 12 4.5 12zm7 0c-.83 0-1.5-.67-1.5-1.5S10.67 9 11.5 9s1.5.67 1.5 1.5-.67 1.5-1.5 1.5zM13 7H3V3h10v4z"
  }));
}

/* harmony default export */ var Bus = (SvgBus);
// CONCATENATED MODULE: ./node_modules/cozy-ui/transpiled/react/Icons/Car.js

// Automatically created, please run `scripts/generate-svg-icon.sh assets/icons/ui/car.svg` to regenerate;


function SvgCar(props) {
  return /*#__PURE__*/react_default.a.createElement("svg", extends_default()({
    viewBox: "0 0 16 16"
  }, props), /*#__PURE__*/react_default.a.createElement("path", {
    fillRule: "evenodd",
    d: "M13.92 2.01C13.72 1.42 13.16 1 12.5 1h-9c-.66 0-1.21.42-1.42 1.01L.11 6.68c-.07.21-.11.43-.11.66v6.16c0 .83.67 1.5 1.5 1.5S3 14.33 3 13.5V13h10v.5c0 .82.67 1.5 1.5 1.5.82 0 1.5-.67 1.5-1.5V7.34c0-.22-.04-.45-.11-.66l-1.97-4.67zM3.5 11C2.67 11 2 10.33 2 9.5S2.67 8 3.5 8 5 8.67 5 9.5 4.33 11 3.5 11zm9 0c-.83 0-1.5-.67-1.5-1.5S11.67 8 12.5 8s1.5.67 1.5 1.5-.67 1.5-1.5 1.5zM2 6l1.27-2.82c.14-.4.52-.68.95-.68h7.56c.43 0 .81.28.95.68L14 6H2z"
  }));
}

/* harmony default export */ var Car = (SvgCar);
// CONCATENATED MODULE: ./node_modules/cozy-ui/transpiled/react/Icons/Carpooling.js

// Automatically created, please run `scripts/generate-svgr-icon.sh assets/icons/ui/carpooling.svg` to regenerate;


function SvgCarpooling(props) {
  return /*#__PURE__*/react_default.a.createElement("svg", extends_default()({
    viewBox: "0 0 16 16"
  }, props), /*#__PURE__*/react_default.a.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M16 10.25v.005-3.297a1.004 1.004 0 00-.072-.33l-2-5-.051-.11A1 1 0 0013 1H3l-.121.007a1 1 0 00-.807.622l-2 5-.04.119a.99.99 0 00-.033.239L0 13.5l.007.145A1.498 1.498 0 001.5 15c.83 0 1.5-.67 1.5-1.5V13h3.73c.116-.167.242-.332.376-.49.233-.27.602-.648 1.091-.958A4.453 4.453 0 018 10.25C8 8.13 9.576 6 12 6s4 2.13 4 4.25zM12 6H2.477l1.2-3h8.647l1.2 3H12zM3.5 8C2.67 8 2 8.67 2 9.5S2.67 11 3.5 11 5 10.33 5 9.5 4.33 8 3.5 8z"
  }), /*#__PURE__*/react_default.a.createElement("path", {
    d: "M10 10.25c0 1.243.895 2.25 2 2.25s2-1.007 2-2.25S13.105 8 12 8s-2 1.007-2 2.25zM10 13c-1 0-2 1.5-2 2s0 1 .5 1h7c.5 0 .5-.5.5-1s-1-2-2-2c-.45 0-.596.101-.757.212-.198.136-.417.288-1.243.288-.826 0-1.045-.152-1.243-.288C10.596 13.101 10.45 13 10 13z"
  }));
}

/* harmony default export */ var Carpooling = (SvgCarpooling);
// CONCATENATED MODULE: ./node_modules/cozy-ui/transpiled/react/Icons/Cocktail.js

// Automatically created, please run `scripts/generate-svgr-icon.sh assets/icons/ui/cocktail.svg` to regenerate;


function SvgCocktail(props) {
  return /*#__PURE__*/react_default.a.createElement("svg", extends_default()({
    viewBox: "0 0 16 16"
  }, props), /*#__PURE__*/react_default.a.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M7 10L.3 1.625A1 1 0 011.081 0H14.92a1 1 0 01.78 1.625L9 10v4h3a1 1 0 010 2H4a1 1 0 110-2h3v-4zm4.24-6H4.761l-1.6-2h9.677l-1.6 2z"
  }));
}

/* harmony default export */ var Cocktail = (SvgCocktail);
// CONCATENATED MODULE: ./node_modules/cozy-ui/transpiled/react/Icons/Company.js

// Automatically created, please run `scripts/generate-svg-icon.sh assets/icons/ui/company.svg` to regenerate;


function SvgCompany(props) {
  return /*#__PURE__*/react_default.a.createElement("svg", extends_default()({
    viewBox: "0 0 16 16"
  }, props), /*#__PURE__*/react_default.a.createElement("path", {
    fillRule: "evenodd",
    d: "M10 0v16H0V0h10zM4 12v-2H2v2h2zm0-4V6H2v2h2zm0-4V2H2v2h2zm4 0V2H6v2h2zm0 4V6H6v2h2zm0 4v-2H6v2h2zm3-8h5v12h-5V4zm3.5 8v-2h-2v2h2zm0-4V6h-2v2h2z"
  }));
}

/* harmony default export */ var Company = (SvgCompany);
// CONCATENATED MODULE: ./node_modules/cozy-ui/transpiled/react/Icons/ElectricBike.js

// Automatically created, please run `scripts/generate-svgr-icon.sh assets/icons/ui/electric-bike.svg` to regenerate;


function SvgElectricBike(props) {
  return /*#__PURE__*/react_default.a.createElement("svg", extends_default()({
    viewBox: "0 0 16 16"
  }, props), /*#__PURE__*/react_default.a.createElement("path", {
    d: "M4.736.17c.018-.053-.012-.11-.075-.143-.088-.046-.212-.032-.276.03L.115 4.15A.345.345 0 000 4.398c0 .232.265.42.593.42h1.592l-.658 3.021c-.011.053.021.106.084.137.09.043.213.027.274-.037l4.011-4.142A.34.34 0 006 3.561c0-.231-.265-.419-.593-.419H3.765L4.736.171zM10.5 5a2 2 0 100-4 2 2 0 000 4zM9.045 7.996a7.202 7.202 0 01-.588-.453L7.221 8.779l1.334.889A1 1 0 019 10.5V14a1 1 0 11-2 0v-2.965L4.68 9.488a1.527 1.527 0 01-.233-2.35l2.204-2.203a1.484 1.484 0 011.05-.435 1.56 1.56 0 011.276.686c.205.297.635.771 1.204 1.164.57.393 1.198.65 1.819.65a1 1 0 110 2c-1.162 0-2.184-.471-2.955-1.004z"
  }), /*#__PURE__*/react_default.a.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M16 13a3 3 0 11-6 0 3 3 0 016 0zm-1.5 0a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6 13a3 3 0 11-6 0 3 3 0 016 0zm-1.5 0a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0z"
  }));
}

/* harmony default export */ var ElectricBike = (SvgElectricBike);
// CONCATENATED MODULE: ./node_modules/cozy-ui/transpiled/react/Icons/ElectricCar.js

// Automatically created, please run `scripts/generate-svgr-icon.sh assets/icons/ui/electric-car.svg` to regenerate;


function SvgElectricCar(props) {
  return /*#__PURE__*/react_default.a.createElement("svg", extends_default()({
    viewBox: "0 0 16 16"
  }, props), /*#__PURE__*/react_default.a.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M14.283.92c.08.059.118.16.095.257L13.15 6.5h2.078a.75.75 0 01.62 1.174l-5.078 7.42a.25.25 0 01-.453-.18L11.15 9.5H9.134a.75.75 0 01-.604-1.195L13.934.972a.25.25 0 01.35-.053zM11.43 1L9.955 3H3.677l-1.2 3h5.268L6.92 7.118a2.75 2.75 0 00-.536 1.631l.005.168a2.751 2.751 0 002.244 2.536l.188.028L8.587 13H3v.5c0 .83-.67 1.5-1.5 1.5-.781 0-1.42-.594-1.493-1.355L0 13.5V6.987a.99.99 0 01.032-.239l.04-.12 2-5a1 1 0 01.807-.62L3 1h8.43zM3.5 8C2.67 8 2 8.67 2 9.5S2.67 11 3.5 11 5 10.33 5 9.5 4.33 8 3.5 8z"
  }));
}

/* harmony default export */ var ElectricCar = (SvgElectricCar);
// CONCATENATED MODULE: ./node_modules/cozy-ui/transpiled/react/Icons/ElectricScooter.js

// Automatically created, please run `scripts/generate-svgr-icon.sh assets/icons/ui/electric-scooter.svg` to regenerate;


function SvgElectricScooter(props) {
  return /*#__PURE__*/react_default.a.createElement("svg", extends_default()({
    viewBox: "0 0 16 16"
  }, props), /*#__PURE__*/react_default.a.createElement("path", {
    d: "M4.736.17c.018-.053-.012-.11-.075-.143-.088-.046-.212-.032-.276.03L.115 4.15A.345.345 0 000 4.398c0 .232.265.42.593.42h1.592l-.658 3.021c-.011.053.021.106.084.137.09.043.213.027.274-.037l4.011-4.142A.34.34 0 006 3.561c0-.231-.265-.419-.593-.419H3.765L4.736.171z"
  }), /*#__PURE__*/react_default.a.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M8 1a1 1 0 011-1h2.22a2 2 0 011.94 1.515l1.81 7.242A1 1 0 0114 10h-.5a3.5 3.5 0 00-3.465 4H4.95a2.5 2.5 0 11-.45-2h3.707a5.506 5.506 0 014.525-3.947L11.22 2H9a1 1 0 01-1-1zM3 13.5a.5.5 0 11-1 0 .5.5 0 011 0z"
  }), /*#__PURE__*/react_default.a.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M16 13.5a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0zm-2 0a.5.5 0 11-1 0 .5.5 0 011 0z"
  }));
}

/* harmony default export */ var ElectricScooter = (SvgElectricScooter);
// CONCATENATED MODULE: ./node_modules/cozy-ui/transpiled/react/Icons/Fitness.js

// Automatically created, please run `scripts/generate-svgr-icon.sh assets/icons/ui/fitness.svg` to regenerate;


function SvgFitness(props) {
  return /*#__PURE__*/react_default.a.createElement("svg", extends_default()({
    viewBox: "0 0 16 16"
  }, props), /*#__PURE__*/react_default.a.createElement("path", {
    d: "M14.982 9.273l.72-.72a.996.996 0 000-1.41l-.02-.02a.996.996 0 00-1.41 0l-2.86 2.86-5.4-5.4 2.86-2.86a.996.996 0 000-1.41l-.02-.02a.996.996 0 00-1.41 0l-.72.72-.72-.72c-.39-.39-1.03-.39-1.42 0l-1.43 1.43-.72-.72a1.02 1.02 0 00-1.43 0 1.02 1.02 0 000 1.43l.72.72-1.43 1.43a.996.996 0 000 1.41l.72.72-.72.73a.996.996 0 000 1.41l.02.02c.39.39 1.02.39 1.41 0l2.86-2.86 5.4 5.4-2.86 2.86a.996.996 0 000 1.41l.02.02c.39.39 1.02.39 1.41 0l.72-.72.72.72c.39.39 1.02.39 1.41 0l1.43-1.43.72.72c.39.39 1.04.39 1.43 0 .39-.39.39-1.04 0-1.43l-.72-.72 1.44-1.43a.996.996 0 000-1.41l-.72-.73z"
  }));
}

/* harmony default export */ var Fitness = (SvgFitness);
// CONCATENATED MODULE: ./node_modules/cozy-ui/transpiled/react/Icons/Moped.js

// Automatically created, please run `scripts/generate-svgr-icon.sh assets/icons/ui/moped.svg` to regenerate;


function SvgMoped(props) {
  return /*#__PURE__*/react_default.a.createElement("svg", extends_default()({
    viewBox: "0 0 16 16"
  }, props), /*#__PURE__*/react_default.a.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M10 0a1 1 0 100 2h2.246l1.604 5.613L12 9H8V5a1 1 0 00-1-1H2a1 1 0 100 2h2a4 4 0 00-4 4v1.986A1 1 0 001 13a3 3 0 006 0h2a3 3 0 104.48-2.61L15.6 8.8a1 1 0 00.362-1.075l-2-7A1 1 0 0013 0h-3zM4.922 12.613a1 1 0 11-1.903.19l1.903-.19zM12 14a1 1 0 100-2 1 1 0 000 2z"
  }));
}

/* harmony default export */ var Moped = (SvgMoped);
// CONCATENATED MODULE: ./node_modules/cozy-ui/transpiled/react/Icons/Motorcycle.js

// Automatically created, please run `scripts/generate-svgr-icon.sh assets/icons/ui/motorcycle.svg` to regenerate;


function SvgMotorcycle(props) {
  return /*#__PURE__*/react_default.a.createElement("svg", extends_default()({
    viewBox: "0 0 16 16"
  }, props), /*#__PURE__*/react_default.a.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M7.965 4H6a1 1 0 010-2h2.324c.444 0 .86.222 1.106.592l1.596 2.395L14 3.5V6h-2.298l1.333 2a3 3 0 11-1.946.687l-.744-1.116-1.589 3.814a1 1 0 01-.923.615H7.46a1 1 0 01-.76-.35l-.705-.822a3 3 0 11-2.908-2.826L3.086 8H1a1 1 0 010-2h2.615c.192 0 .375.076.511.212l1.282 1.282 1.57-1.121A2 2 0 018.141 6h1.157L7.965 4zM4 11a1 1 0 11-2 0 1 1 0 012 0zm10 0a1 1 0 11-2 0 1 1 0 012 0z"
  }));
}

/* harmony default export */ var Motorcycle = (SvgMotorcycle);
// CONCATENATED MODULE: ./node_modules/cozy-ui/transpiled/react/Icons/Mountain.js

// Automatically created, please run `scripts/generate-svgr-icon.sh assets/icons/ui/mountain.svg` to regenerate;


function SvgMountain(props) {
  return /*#__PURE__*/react_default.a.createElement("svg", extends_default()({
    viewBox: "0 0 16 16"
  }, props), /*#__PURE__*/react_default.a.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M6.065 7.66l-.003.005-1.19-2.116a1 1 0 00-1.744 0l-2.79 4.96A1 1 0 001.21 12h13.538a1 1 0 00.86-1.509l-4.747-8.034a1 1 0 00-1.722 0l-2.192 3.71 1.527 2.715a.75.75 0 11-1.308.736L6.065 7.66z"
  }));
}

/* harmony default export */ var Mountain = (SvgMountain);
// CONCATENATED MODULE: ./node_modules/cozy-ui/transpiled/react/Icons/Movement.js

// Automatically created, please run `scripts/generate-svgr-icon.sh assets/icons/ui/movement.svg` to regenerate;


function SvgMovement(props) {
  return /*#__PURE__*/react_default.a.createElement("svg", extends_default()({
    viewBox: "0 0 16 16"
  }, props), /*#__PURE__*/react_default.a.createElement("path", {
    d: "M12.585 7.002H1.001a1 1 0 100 2.002l11.582-.002-1.29 1.29a1 1 0 001.414 1.415l3-3a1 1 0 000-1.414l-3-3a1 1 0 10-1.414 1.414L12.586 7l-.001.002z"
  }));
}

/* harmony default export */ var Movement = (SvgMovement);
// CONCATENATED MODULE: ./node_modules/cozy-ui/transpiled/react/Icons/People.js

// Automatically created, please run `scripts/generate-svg-icon.sh assets/icons/ui/people.svg` to regenerate;


function SvgPeople(props) {
  return /*#__PURE__*/react_default.a.createElement("svg", extends_default()({
    viewBox: "0 0 16 16"
  }, props), /*#__PURE__*/react_default.a.createElement("path", {
    fillRule: "evenodd",
    d: "M8 9c2.21 0 4-2.015 4-4.5S10.21 0 8 0 4 2.015 4 4.5 5.79 9 8 9zm-8 5c0-1 2-4 4-4s1 1 4 1 2-1 4-1 4 3 4 4 0 2-1 2H1c-1 0-1-1-1-2z"
  }));
}

/* harmony default export */ var People = (SvgPeople);
// CONCATENATED MODULE: ./node_modules/cozy-ui/transpiled/react/Icons/Plane.js

// Automatically created, please run `scripts/generate-svgr-icon.sh assets/icons/ui/plane.svg` to regenerate;


function SvgPlane(props) {
  return /*#__PURE__*/react_default.a.createElement("svg", extends_default()({
    viewBox: "0 0 16 16"
  }, props), /*#__PURE__*/react_default.a.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M15.539.461a1.574 1.574 0 00-2.25.023L9.88 4.081 2.025 1.135a.51.51 0 00-.54.117L.15 2.588a.51.51 0 00.108.804l6.561 3.75-3.57 3.57-1.74-.435a.51.51 0 00-.506.158l-.861.98a.51.51 0 00.18.805l2.417 1.042 1.042 2.416a.51.51 0 00.806.181l.979-.861a.51.51 0 00.158-.507l-.435-1.739 3.57-3.57 3.75 6.56a.51.51 0 00.804.108l1.336-1.335a.51.51 0 00.117-.54L11.918 6.12l3.597-3.41c.636-.611.647-1.626.023-2.25z"
  }));
}

/* harmony default export */ var Plane = (SvgPlane);
// CONCATENATED MODULE: ./node_modules/cozy-ui/transpiled/react/Icons/Restore.js

// Automatically created, please run `scripts/generate-svg-icon.sh assets/icons/ui/restore.svg` to regenerate;


function SvgRestore(props) {
  return /*#__PURE__*/react_default.a.createElement("svg", extends_default()({
    viewBox: "0 0 16 16"
  }, props), /*#__PURE__*/react_default.a.createElement("g", {
    fillRule: "evenodd"
  }, /*#__PURE__*/react_default.a.createElement("path", {
    d: "M1 15h8c4.052 0 7-2.948 7-7s-2.948-7-7-7-7 2.948-7 7a1 1 0 102 0c0-2.948 2.052-5 5-5s5 2.052 5 5-2.052 5-5 5H1a1 1 0 000 2z"
  }), /*#__PURE__*/react_default.a.createElement("path", {
    d: "M1.832 4.445a1 1 0 00-1.664 1.11l2 3a1 1 0 001.387.277l3-2a1 1 0 00-1.11-1.664L3.277 6.613 1.832 4.445z"
  })));
}

/* harmony default export */ var Restore = (SvgRestore);
// CONCATENATED MODULE: ./node_modules/cozy-ui/transpiled/react/Icons/Shop.js

// Automatically created, please run `scripts/generate-svgr-icon.sh assets/icons/ui/shop.svg` to regenerate;


function SvgShop(props) {
  return /*#__PURE__*/react_default.a.createElement("svg", extends_default()({
    viewBox: "0 0 16 16"
  }, props), /*#__PURE__*/react_default.a.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M4.5 13a1.5 1.5 0 110 3 1.5 1.5 0 010-3zm8 0a1.5 1.5 0 110 3 1.5 1.5 0 010-3zM2.5 1a1 1 0 01.986.836L3.847 4H14a1 1 0 01.986 1.164l-.86 5.165A2 2 0 0112.153 12H4.847a2 2 0 01-1.973-1.671L1.652 3H1a1 1 0 01-.993-.883L0 2a1 1 0 01.883-.993L1 1h1.5z"
  }));
}

/* harmony default export */ var Shop = (SvgShop);
// CONCATENATED MODULE: ./node_modules/cozy-ui/transpiled/react/Icons/SportBag.js

// Automatically created, please run `scripts/generate-svgr-icon.sh assets/icons/ui/sport-bag.svg` to regenerate;


function SvgSportBag(props) {
  return /*#__PURE__*/react_default.a.createElement("svg", extends_default()({
    viewBox: "0 0 16 16"
  }, props), /*#__PURE__*/react_default.a.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M4 5a4 4 0 118 0h.459a3 3 0 012.96 2.507l.5 2A3 3 0 0112.958 13H3.042a3 3 0 01-2.96-3.493l.5-2A3 3 0 013.543 5H4zm2 0a2 2 0 114 0H6z"
  }));
}

/* harmony default export */ var SportBag = (SvgSportBag);
// CONCATENATED MODULE: ./node_modules/cozy-ui/transpiled/react/Icons/Subway.js

// Automatically created, please run `scripts/generate-svgr-icon.sh assets/icons/ui/subway.svg` to regenerate;


function SvgSubway(props) {
  return /*#__PURE__*/react_default.a.createElement("svg", extends_default()({
    viewBox: "0 0 16 16"
  }, props), /*#__PURE__*/react_default.a.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M12.64.64C11.2.072 9.488 0 8 0 6.512 0 4.8.072 3.36.64 1.224 1.472 0 3.24 0 5.488V16h16V5.488C16 3.24 14.776 1.472 12.64.64zM13 5.857v5c0 1.07-.785 1.958-1.811 2.118l1.097 1.096v.358h-1.429L9.43 13H6.57l-1.428 1.429H3.714v-.358l1.097-1.096A2.143 2.143 0 013 10.857v-5C3 3.714 5.143 3 8 3s5 .714 5 2.857zm-8.571-.714V8h7.142V5.143H4.43zM6.57 10.5a1.071 1.071 0 11-2.142 0 1.071 1.071 0 012.142 0zm3.929 1.071a1.071 1.071 0 100-2.142 1.071 1.071 0 000 2.142z"
  }));
}

/* harmony default export */ var Subway = (SvgSubway);
// CONCATENATED MODULE: ./node_modules/cozy-ui/transpiled/react/Icons/Train.js

// Automatically created, please run `scripts/generate-svgr-icon.sh assets/icons/ui/train.svg` to regenerate;


function SvgTrain(props) {
  return /*#__PURE__*/react_default.a.createElement("svg", extends_default()({
    viewBox: "0 0 16 16"
  }, props), /*#__PURE__*/react_default.a.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M15 4v7a3 3 0 01-2.536 2.964L14 15.5v.5h-2l-2-2H6l-2 2H2v-.5l1.536-1.536A3 3 0 011 11V4c0-3 3-4 7-4s7 1 7 4zM3 7h4V3H3v4zm6-4v4h4V3H9zm-3 7.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zm5.5 1.5a1.5 1.5 0 100-3 1.5 1.5 0 000 3z"
  }));
}

/* harmony default export */ var Train = (SvgTrain);
// CONCATENATED MODULE: ./node_modules/cozy-ui/transpiled/react/Icons/Tram.js

// Automatically created, please run `scripts/generate-svgr-icon.sh assets/icons/ui/tram.svg` to regenerate;


function SvgTram(props) {
  return /*#__PURE__*/react_default.a.createElement("svg", extends_default()({
    viewBox: "0 0 16 16"
  }, props), /*#__PURE__*/react_default.a.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M4 .75A.75.75 0 014.75 0h6.5a.75.75 0 010 1.5H9.589l-.764 1.526C11.527 3.201 14 4.276 14 7v5a3 3 0 01-1.765 2.735L13 15.5v.5h-2l-1-1H6l-1 1H3v-.5l.765-.765A3 3 0 012 12V7c0-2.78 1.718-3.843 5.153-3.984L7.911 1.5H4.75A.75.75 0 014 .75zM4 10V6h8v4H4zm4 4a1.5 1.5 0 100-3 1.5 1.5 0 000 3z"
  }));
}

/* harmony default export */ var Tram = (SvgTram);
// CONCATENATED MODULE: ./node_modules/cozy-ui/transpiled/react/Icons/Unknow.js

// Automatically created, please run `scripts/generate-svgr-icon.sh assets/icons/ui/unknow.svg` to regenerate;


function SvgUnknow(props) {
  return /*#__PURE__*/react_default.a.createElement("svg", extends_default()({
    viewBox: "0 0 16 16"
  }, props), /*#__PURE__*/react_default.a.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M8 12a1.5 1.5 0 110 3 1.5 1.5 0 010-3zm.968-10.9c1.777.372 3.182 1.858 3.472 3.65a4.507 4.507 0 01-2.828 4.953l-.112.039V11h-3V8.5a1.5 1.5 0 011.356-1.493L8 7a1.5 1.5 0 10-1.493-1.645L6.5 5.5h-3a4.506 4.506 0 015.468-4.4z"
  }));
}

/* harmony default export */ var Unknow = (SvgUnknow);
// CONCATENATED MODULE: ./node_modules/cozy-ui/transpiled/react/Icons/Walk.js

// Automatically created, please run `scripts/generate-svgr-icon.sh assets/icons/ui/walk.svg` to regenerate;


function SvgWalk(props) {
  return /*#__PURE__*/react_default.a.createElement("svg", extends_default()({
    viewBox: "0 0 16 17"
  }, props), /*#__PURE__*/react_default.a.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M10.602 3.663A2 2 0 118.38.337a2 2 0 012.222 3.326zm-.121 3.73c.424.362.954.575 1.51.607a1 1 0 110 2 4.071 4.071 0 01-3-1.29l-.69 1.58 2.33 1.94a1 1 0 01.36.77v2a1 1 0 01-2 0v-1.53l-2.58-2.12-1.48 4a1.003 1.003 0 11-1.88-.7L5.87 7l-1.12.32-.82 2a1 1 0 11-1.86-.74l1-2.5a1 1 0 01.66-.59l3.36-1h.12c.11-.014.22-.014.33 0h.1a2.16 2.16 0 012 1.51 2.56 2.56 0 00.84 1.394z"
  }));
}

/* harmony default export */ var Walk = (SvgWalk);
// CONCATENATED MODULE: ./node_modules/cozy-ui/transpiled/react/Icons/Work.js

// Automatically created, please run `scripts/generate-svgr-icon.sh assets/icons/ui/work.svg` to regenerate;


function SvgWork(props) {
  return /*#__PURE__*/react_default.a.createElement("svg", extends_default()({
    viewBox: "0 0 16 16"
  }, props), /*#__PURE__*/react_default.a.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M12 4h2c1.11 0 2 .89 2 2v7c0 1.11-.89 2-2 2H2c-1.11 0-2-.89-2-2l.01-7C.01 4.89.89 4 2 4h2V2c0-1.11.89-2 2-2h4c1.11 0 2 .89 2 2v2zM6 4h4V2H6v2zm1 4a1 1 0 100 2h2a1 1 0 100-2H7z"
  }));
}

/* harmony default export */ var Work = (SvgWork);
// CONCATENATED MODULE: ./src/components/helpers.js
// mode icons




























const log = dist_default()('components/helpers');
const modes = [constants["b" /* AIR_MODE */], constants["k" /* BICYCLING_ELECTRIC_MODE */], constants["l" /* BICYCLING_MODE */], constants["n" /* BUS_ELECTRIC_MODE */], constants["o" /* BUS_MODE */], constants["w" /* CAR_ELECTRIC_MODE */], constants["x" /* CAR_MODE */], constants["T" /* IN_VEHICLE_MODE */], constants["r" /* CARPOOL_ELECTRIC_MODE */], constants["s" /* CARPOOL_MODE */], constants["ib" /* MOTO_INF_250_MODE */], constants["kb" /* MOTO_SUP_250_MODE */], constants["wb" /* SCOOTER_ELECTRIC_MODE */], constants["gb" /* MOPED_MODE */], constants["Fb" /* SUBWAY_MODE */], constants["Hb" /* TRAIN_MODE */], constants["Jb" /* TRAMWAY_MODE */], constants["Rb" /* WALKING_MODE */], constants["lb" /* ON_FOOT_MODE */], constants["ub" /* RUNNING_MODE */], constants["Pb" /* UNKNOWN_MODE */]];
const pickModeIcon = mode => {
  switch (mode) {
    case constants["b" /* AIR_MODE */]:
      return Plane;
    case constants["k" /* BICYCLING_ELECTRIC_MODE */]:
      return ElectricBike;
    case constants["l" /* BICYCLING_MODE */]:
      return Bike;
    case constants["n" /* BUS_ELECTRIC_MODE */]:
      return Bus;
    case constants["x" /* CAR_MODE */]:
    case constants["T" /* IN_VEHICLE_MODE */]:
      return Car;
    case constants["o" /* BUS_MODE */]:
      return Bus;
    case constants["w" /* CAR_ELECTRIC_MODE */]:
    case constants["r" /* CARPOOL_ELECTRIC_MODE */]:
      return ElectricCar;
    case constants["s" /* CARPOOL_MODE */]:
      return Carpooling;
    case constants["ib" /* MOTO_INF_250_MODE */]:
    case constants["kb" /* MOTO_SUP_250_MODE */]:
      return Motorcycle;
    case constants["wb" /* SCOOTER_ELECTRIC_MODE */]:
      return ElectricScooter;
    case constants["gb" /* MOPED_MODE */]:
      return Moped;
    case constants["Fb" /* SUBWAY_MODE */]:
      return Subway;
    case constants["Hb" /* TRAIN_MODE */]:
      return Train;
    case constants["Jb" /* TRAMWAY_MODE */]:
      return Tram;
    case constants["Rb" /* WALKING_MODE */]:
    case constants["lb" /* ON_FOOT_MODE */]:
    case constants["ub" /* RUNNING_MODE */]:
      return Walk;
    case constants["Pb" /* UNKNOWN_MODE */]:
      return Unknow;
    default:
      log.info(`Unknown mode ${mode}`, 'pickModeIcon');
      return pickModeIcon(constants["Pb" /* UNKNOWN_MODE */]);
  }
};
const modeToColor = mode => {
  switch (mode) {
    case constants["b" /* AIR_MODE */]:
      return '#F05759';
    case constants["k" /* BICYCLING_ELECTRIC_MODE */]:
      return '#B3BF26';
    case constants["l" /* BICYCLING_MODE */]:
      return '#15CACD';
    case constants["wb" /* SCOOTER_ELECTRIC_MODE */]:
      return '#84C6AA';
    case constants["n" /* BUS_ELECTRIC_MODE */]:
      return '#F85AA8';
    case constants["o" /* BUS_MODE */]:
      return '#BA5AE8';
    case constants["w" /* CAR_ELECTRIC_MODE */]:
      return '#FC881C';
    case constants["x" /* CAR_MODE */]:
    case constants["T" /* IN_VEHICLE_MODE */]:
      return '#FF7B5E';
    case constants["r" /* CARPOOL_ELECTRIC_MODE */]:
      return '#80A5E1';
    case constants["s" /* CARPOOL_MODE */]:
      return '#1CAAE8';
    case constants["ib" /* MOTO_INF_250_MODE */]:
      return '#C78542';
    case constants["kb" /* MOTO_SUP_250_MODE */]:
      return '#C8A76F';
    case constants["gb" /* MOPED_MODE */]:
      return '#E3BE7D';
    case constants["Fb" /* SUBWAY_MODE */]:
      return '#8978FF';
    case constants["Hb" /* TRAIN_MODE */]:
      return '#F1B61E';
    case constants["Jb" /* TRAMWAY_MODE */]:
      return '#F1B61E';
    case constants["Pb" /* UNKNOWN_MODE */]:
      return '#A4A7AC';
    case constants["Rb" /* WALKING_MODE */]:
    case constants["lb" /* ON_FOOT_MODE */]:
    case constants["ub" /* RUNNING_MODE */]:
      return '#21B930';
    default:
      log.info(`Unknown mode ${mode}`, 'modeToColor');
      return modeToColor(constants["Pb" /* UNKNOWN_MODE */]);
  }
};
const purposes = [constants["y" /* COMMUTE_PURPOSE */], constants["Tb" /* WORK_PURPOSE */], constants["xb" /* SHOPPING_PURPOSE */], constants["ob" /* PERSONALMED_PURPOSE */], constants["pb" /* PICKDROP_PURPOSE */], constants["Db" /* SPORT_PURPOSE */], constants["P" /* EXERCISE_PURPOSE */], constants["O" /* ENTERTAINMENT_PURPOSE */], constants["Kb" /* TRAVEL_PURPOSE */], constants["nb" /* OTHER_PURPOSE */]];
const pickPurposeIcon = purpose => {
  switch (purpose) {
    case constants["y" /* COMMUTE_PURPOSE */]:
      return Company;
    case constants["Tb" /* WORK_PURPOSE */]:
      return Work;
    case constants["xb" /* SHOPPING_PURPOSE */]:
      return Shop;
    case constants["Kb" /* TRAVEL_PURPOSE */]:
      return Mountain;
    case constants["ob" /* PERSONALMED_PURPOSE */]:
      return People;
    case constants["P" /* EXERCISE_PURPOSE */]:
      return Fitness;
    case constants["O" /* ENTERTAINMENT_PURPOSE */]:
      return Cocktail;
    case constants["pb" /* PICKDROP_PURPOSE */]:
      return Restore;
    case constants["Db" /* SPORT_PURPOSE */]:
      return SportBag;
    case constants["nb" /* OTHER_PURPOSE */]:
      return Movement;
    default:
      log.info(`Unknown purpose ${purpose}`, 'pickPurposeIcon');
      return pickPurposeIcon(constants["nb" /* OTHER_PURPOSE */]);
  }
};
const purposeToColor = purpose => {
  switch (purpose) {
    case constants["y" /* COMMUTE_PURPOSE */]:
      return '#BA5AE8';
    case constants["Tb" /* WORK_PURPOSE */]:
      return '#8978FF';
    case constants["xb" /* SHOPPING_PURPOSE */]:
      return '#FF7B5E';
    case constants["Kb" /* TRAVEL_PURPOSE */]:
      return '#15CACD';
    case constants["ob" /* PERSONALMED_PURPOSE */]:
      return '#1CAAE8';
    case constants["P" /* EXERCISE_PURPOSE */]:
      return '#21B930';
    case constants["O" /* ENTERTAINMENT_PURPOSE */]:
      return '#F85AA8';
    case constants["pb" /* PICKDROP_PURPOSE */]:
      return '#C78542';
    case constants["Db" /* SPORT_PURPOSE */]:
      return '#B3BF26';
    case constants["nb" /* OTHER_PURPOSE */]:
      return '#A4A7AC';
    default:
      log.info(`Unknown purpose ${purpose}`, 'purposeToColor');
      return purposeToColor(constants["nb" /* OTHER_PURPOSE */]);
  }
};

/**
 * Returns the average CO2 emission in kg per km for a given mode.
 * @param {string} mode
 * @returns {number} CO2 emission in kg per km
 */
const getAverageCO2PerKmByMode = mode => {
  const getAverage = arr => {
    return parseFloat((arr.reduce((a, b) => a + b, 0) / arr.length).toFixed(5));
  };
  switch (mode) {
    case constants["b" /* AIR_MODE */]:
      return getAverage(constants["d" /* ALL_PLANE_CO2_KG_PER_KM */]);
    case constants["k" /* BICYCLING_ELECTRIC_MODE */]:
      return constants["j" /* BICYCLING_ELECTRIC_AVERAGE_CO2_KG_PER_KM */];
    case constants["l" /* BICYCLING_MODE */]:
      return constants["h" /* BICYCLING_AVERAGE_CO2_KG_PER_KM */];
    case constants["n" /* BUS_ELECTRIC_MODE */]:
      return constants["m" /* BUS_ELECTRIC_CO2_KG_PER_KM */];
    case constants["o" /* BUS_MODE */]:
      return getAverage(constants["c" /* ALL_BUS_CO2_KG_PER_KM */]);
    case constants["w" /* CAR_ELECTRIC_MODE */]:
      return constants["v" /* CAR_ELECTRIC_CO2_KG_PER_KM */];
    case constants["x" /* CAR_MODE */]:
    case constants["T" /* IN_VEHICLE_MODE */]:
      return constants["t" /* CAR_AVERAGE_CO2_KG_PER_KM */];
    case constants["r" /* CARPOOL_ELECTRIC_MODE */]:
      return constants["q" /* CARPOOL_ELECTRIC_CO2_KG_PER_KM */];
    case constants["s" /* CARPOOL_MODE */]:
      return constants["p" /* CARPOOL_CO2_KG_PER_KM */];
    case constants["ib" /* MOTO_INF_250_MODE */]:
      return constants["hb" /* MOTO_INF_250_CO2_KG_PER_KM */];
    case constants["kb" /* MOTO_SUP_250_MODE */]:
      return constants["jb" /* MOTO_SUP_250_CO2_KG_PER_KM */];
    case constants["wb" /* SCOOTER_ELECTRIC_MODE */]:
      return constants["vb" /* SCOOTER_ELECTRIC_AVERAGE_CO2_KG_PER_KM */];
    case constants["gb" /* MOPED_MODE */]:
      return constants["fb" /* MOPED_AVERAGE_CO2_KG_PER_KM */];
    case constants["Fb" /* SUBWAY_MODE */]:
      return getAverage(constants["e" /* ALL_SUBWAY_TRAM_CO2_KG_PER_KM */]);
    case constants["Hb" /* TRAIN_MODE */]:
      return getAverage(constants["f" /* ALL_TRAIN_CO2_KG_PER_KM */]);
    case constants["Jb" /* TRAMWAY_MODE */]:
      return constants["Ib" /* TRAMWAY_CO2_KG_PER_KM */];
    case constants["Pb" /* UNKNOWN_MODE */]:
      return constants["Ob" /* UNKNOWN_AVERAGE_CO2_KG_PER_KM */];
    case constants["Rb" /* WALKING_MODE */]:
    case constants["lb" /* ON_FOOT_MODE */]:
    case constants["ub" /* RUNNING_MODE */]:
      return constants["Qb" /* WALKING_AVERAGE_CO2_KG_PER_KM */];
    default:
      return constants["Ob" /* UNKNOWN_AVERAGE_CO2_KG_PER_KM */];
  }
};

/**
 * Returns the value in gram for a given kg value.
 * @param {number} value
 * @returns {number} value in gram
 */
const makeKgToGram = value => {
  return parseFloat(value) * 1000;
};

/**
 * Returns the CO2 emission in gram per km for a given mode.
 * @param {string} mode
 * @returns {string} CO2 emission in gram per km formatted
 */
const formattedModeToCO2PerKm = mode => {
  if (mode === constants["b" /* AIR_MODE */]) {
    return `(${makeKgToGram(constants["qb" /* PLANE_CO2_KG_PER_KM_LONG */])}~${makeKgToGram(constants["sb" /* PLANE_CO2_KG_PER_KM_SHORT */])}) g/km`;
  }
  return `${modeToCO2PerKm(mode)} g/km`;
};

/**
 * Returns the CO2 emission in gram per km for a given mode.
 * @param {string} mode
 * @returns {number} CO2 emission in gram per km
 */
const modeToCO2PerKm = mode => {
  return Math.round(makeKgToGram(getAverageCO2PerKmByMode(mode)));
};

/**
 * Return the category of a given mode.
 *
 * @param {string} mode
 * @returns {string} category
 */
const modeToCategory = mode => {
  switch (mode) {
    case constants["b" /* AIR_MODE */]:
    case constants["Rb" /* WALKING_MODE */]:
    case constants["lb" /* ON_FOOT_MODE */]:
    case constants["ub" /* RUNNING_MODE */]:
    case constants["Pb" /* UNKNOWN_MODE */]:
      return null;
    case constants["k" /* BICYCLING_ELECTRIC_MODE */]:
    case constants["l" /* BICYCLING_MODE */]:
    case constants["wb" /* SCOOTER_ELECTRIC_MODE */]:
      return constants["i" /* BICYCLING_CATEGORY */].name;
    case constants["n" /* BUS_ELECTRIC_MODE */]:
    case constants["o" /* BUS_MODE */]:
    case constants["Fb" /* SUBWAY_MODE */]:
    case constants["Hb" /* TRAIN_MODE */]:
    case constants["Jb" /* TRAMWAY_MODE */]:
      return constants["tb" /* PUBLIC_TRANSPORT_CATEGORY */].name;
    case constants["w" /* CAR_ELECTRIC_MODE */]:
    case constants["x" /* CAR_MODE */]:
    case constants["T" /* IN_VEHICLE_MODE */]:
    case constants["r" /* CARPOOL_ELECTRIC_MODE */]:
    case constants["s" /* CARPOOL_MODE */]:
    case constants["ib" /* MOTO_INF_250_MODE */]:
    case constants["kb" /* MOTO_SUP_250_MODE */]:
    case constants["gb" /* MOPED_MODE */]:
      return constants["u" /* CAR_CATEGORY */].name;
    default:
      src_default()('info', `Unknown mode ${mode}`, undefined, 'service/timeseriesWithoutAggregateMigration');
      log.info(`Unknown mode ${mode}`, 'modeToCategory');
      return modeToCategory(constants["Pb" /* UNKNOWN_MODE */]);
  }
};

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

const Secret = __webpack_require__(304)
const { filterLevel, filterSecrets } = __webpack_require__(637)
const { LOG_LEVEL } = process.env
let level = LOG_LEVEL || 'debug'
const format = __webpack_require__(638)
const filters = [filterLevel, filterSecrets]

const filterOut = function () {
  for (const filter of filters) {
    if (filter.apply(null, arguments) === false) {
      return true
    }
  }
  return false
}

/**
 * Use it to log messages in your konnector. Typical types are
 *
 * - `debug`
 * - `warning`
 * - `info`
 * - `error`
 * - `ok`
 *
 *
 * @example
 *
 * They will be colored in development mode. In production mode, those logs are formatted in JSON to be interpreted by the stack and possibly sent to the client. `error` will stop the konnector.
 *
 * ```js
 * logger = log('my-namespace')
 * logger('debug', '365 bills')
 * // my-namespace : debug : 365 bills
 * logger('info', 'Page fetched')
 * // my-namespace : info : Page fetched
 * ```
 * @param  {string} type
 * @param  {string} message
 * @param  {string} label
 * @param  {string} namespace
 */
function log(type, message, label, namespace) {
  if (filterOut(level, type, message, label, namespace)) {
    return
  }
  // eslint-disable-next-line no-console
  console.log(format(type, message, label, namespace))
}

log.addFilter = function (filter) {
  return filters.push(filter)
}

log.setLevel = function (lvl) {
  level = lvl
}

// Short-hands
const methods = ['debug', 'info', 'warn', 'error', 'ok', 'critical']
methods.forEach(level => {
  log[level] = function (message, label, namespace) {
    return log(level, message, label, namespace)
  }
})

module.exports = log

log.setNoRetry = obj => {
  if (obj) obj.no_retry = true
  else obj = { no_retry: true }
  return obj.no_retry
}
log.Secret = Secret
log.namespace = function (namespace) {
  return function (type, message, label, ns = namespace) {
    log(type, message, label, ns)
  }
}


/***/ }),
/* 37 */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.map` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
function arrayMap(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length,
      result = Array(length);

  while (++index < length) {
    result[index] = iteratee(array[index], index, array);
  }
  return result;
}

module.exports = arrayMap;


/***/ }),
/* 38 */
/***/ (function(module, exports) {

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

module.exports = isObject;


/***/ }),
/* 39 */
/***/ (function(module, exports) {

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

module.exports = isObjectLike;


/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireWildcard = __webpack_require__(22);

var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _toArray2 = _interopRequireDefault(__webpack_require__(229));

var _slicedToArray2 = _interopRequireDefault(__webpack_require__(32));

var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(41));

var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(50));

var _regenerator = _interopRequireDefault(__webpack_require__(6));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(7));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));

var _createClass2 = _interopRequireDefault(__webpack_require__(13));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(9));

var _mapValues = _interopRequireDefault(__webpack_require__(109));

var _fromPairs = _interopRequireDefault(__webpack_require__(135));

var _flatten = _interopRequireDefault(__webpack_require__(153));

var _uniqBy = _interopRequireDefault(__webpack_require__(532));

var _zip = _interopRequireDefault(__webpack_require__(534));

var _forEach = _interopRequireDefault(__webpack_require__(252));

var _get = _interopRequireDefault(__webpack_require__(10));

var _microee = _interopRequireDefault(__webpack_require__(101));

var _cozyStackClient = _interopRequireWildcard(__webpack_require__(253));

var _const = __webpack_require__(57);

var _StackLink = _interopRequireDefault(__webpack_require__(286));

var _associations = __webpack_require__(129);

var _helpers = __webpack_require__(185);

var _helpers2 = __webpack_require__(130);

var _dsl = __webpack_require__(20);

var _mobile = __webpack_require__(626);

var _optimize = _interopRequireDefault(__webpack_require__(649));

var _store = _interopRequireWildcard(__webpack_require__(77));

var _policies = _interopRequireDefault(__webpack_require__(186));

var _Schema = _interopRequireDefault(__webpack_require__(651));

var _CozyLink = __webpack_require__(182);

var _ObservableQuery = _interopRequireDefault(__webpack_require__(657));

var _snapshots = __webpack_require__(658);

var _logger = _interopRequireDefault(__webpack_require__(27));

var _queries = __webpack_require__(183);

var _jsonStableStringify = _interopRequireDefault(__webpack_require__(659));

var _promiseCache = _interopRequireDefault(__webpack_require__(663));

var _flagshipCertification = __webpack_require__(664);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var ensureArray = function ensureArray(arr) {
  return Array.isArray(arr) ? arr : [arr];
};

var deprecatedHandler = function deprecatedHandler(msg) {
  return {
    get: function get(target, prop) {
      _logger.default.warn(msg);

      return target[prop];
    }
  };
};

var supportsReferences = function supportsReferences(relationshipClass) {
  return relationshipClass.prototype.addReferences && relationshipClass.prototype.removeReferences;
};

var referencesUnsupportedError = function referencesUnsupportedError(relationshipClassName) {
  return new Error("The \"".concat(relationshipClassName, "\" relationship does not support references. If you need to add references to a document, its relationship class must have the methods {add,remove}References"));
};

var removeTrailingSlash = function removeTrailingSlash(str) {
  if (str.endsWith('/')) {
    return str.slice(0, -1);
  }

  return str;
};

var securiseUri = function securiseUri(uri) {
  var _window$cozy;

  if (uri && typeof window !== 'undefined' && (_window$cozy = window['cozy']) !== null && _window$cozy !== void 0 && _window$cozy.isSecureProtocol) {
    var secureUrl = new URL(uri);
    secureUrl.protocol = 'https:';
    return removeTrailingSlash(secureUrl.toString());
  }

  return uri;
};

var DOC_CREATION = 'creation';
var DOC_UPDATE = 'update';
/**
 * @typedef {object} ClientOptions
 * @property {object} [client]
 * @property {object} [link]
 * @property {object} [links]
 * @property {import("./types").Token} [token]
 * @property {string} [uri]
 * @property {object} [stackClient]
 * @property {boolean} [warningForCustomHandlers]
 * @property {boolean} [autoHydrate]
 * @property {boolean} [backgroundFetching] - If set to true, backgroundFetching will be enabled by default on every query. Meaning that, when the fetchStatus has already been loaded, it won't be updated during future fetches. Instead, a `isFetching` attribute will be used to indicate when background fetching is started.
 * @property {object} [oauth]
 * @property {Function} [onTokenRefresh]
 * @property {Function} [onError] - Default callback if a query is errored
 * @property  {import("./types").Link}         [link]   - Backward compatibility
 * @property  {Array<import("./types").Link>}  [links]  - List of links
 * @property  {object}       [schema] - Schema description for each doctypes
 * @property  {import("./types").AppMetadata}  [appMetadata] - Metadata about the application that will be used in ensureCozyMetadata
 * @property  {import("./types").ClientCapabilities} [capabilities] - Capabilities sent by the stack
 * @property  {boolean} [store] - If set to false, the client will not instantiate a Redux store automatically. Use this if you want to merge cozy-client's store with your own redux store. See [here](https://docs.cozy.io/en/cozy-client/react-integration/#1b-use-your-own-redux-store) for more information.
 */

/**
 * Responsible for
 *
 * - Creating observable queries
 * - Hydration
 * - Creating plan for saving documents
 * - Associations
 */

var CozyClient = /*#__PURE__*/function () {
  /**
   * @param  {ClientOptions} rawOptions - Options
   *
   * @example
   * ```js
   * const client = new CozyClient({
   *   schema: {
   *     todos: {
   *       doctype: 'io.cozy.todos',
   *       relationships: {
   *         authors: {
   *           type: 'has-many',
   *           doctype: 'io.cozy.persons'
   *         }
   *       }
   *     }
   *   }
   * })
   * ```
   *
   * Cozy-Client will automatically call `this.login()` if provided with a token and an uri
   */
  function CozyClient() {
    var _this = this;

    var rawOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    (0, _classCallCheck2.default)(this, CozyClient);
    (0, _defineProperty2.default)(this, "fetchQueryAndGetFromState", /*#__PURE__*/function () {
      var _ref2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(_ref) {
        var definition, options;
        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                definition = _ref.definition, options = _ref.options;
                _context.prev = 1;
                _context.next = 4;
                return _this.query(definition, options);

              case 4:
                return _context.abrupt("return", _this.getQueryFromState(options.as, options));

              case 7:
                _context.prev = 7;
                _context.t0 = _context["catch"](1);
                throw _context.t0;

              case 10:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, null, [[1, 7]]);
      }));

      return function (_x) {
        return _ref2.apply(this, arguments);
      };
    }());

    var link = rawOptions.link,
        links = rawOptions.links,
        _rawOptions$schema = rawOptions.schema,
        schema = _rawOptions$schema === void 0 ? {} : _rawOptions$schema,
        _rawOptions$appMetada = rawOptions.appMetadata,
        appMetadata = _rawOptions$appMetada === void 0 ? {} : _rawOptions$appMetada,
        capabilities = rawOptions.capabilities,
        _options = (0, _objectWithoutProperties2.default)(rawOptions, ["link", "links", "schema", "appMetadata", "capabilities"]);

    if (link) {
      _logger.default.warn('`link` is deprecated, use `links`');
    }

    this.appMetadata = appMetadata;
    this.loginPromise = null;
    _options.uri = securiseUri(_options.uri);
    this.options = _options;
    this.queryIdGenerator = new _queries.QueryIDGenerator();
    this.isLogged = false;
    this.instanceOptions = {}; // Bind handlers

    this.handleRevocationChange = this.handleRevocationChange.bind(this);
    this.handleTokenRefresh = this.handleTokenRefresh.bind(this);
    this.createClient();
    var stackClient = this.getStackClient();
    stackClient.on('error', function () {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _this.emit.apply(_this, ['error'].concat(args));
    });
    this.links = ensureArray(link || links || new _StackLink.default());
    this.registerClientOnLinks();
    this.chain = (0, _CozyLink.chain)(this.links);
    this.schema = new _Schema.default(schema, stackClient);
    /**
     * @type {import("./types").ClientCapabilities}
     */

    this.capabilities = capabilities || null; // Instances of plugins registered with registerPlugin

    this.plugins = {};

    if (!(this.stackClient instanceof _cozyStackClient.OAuthClient)) {
      try {
        this.loadInstanceOptionsFromDOM();
      } catch (err) {// not a critical error, we may be in node or the instance options are not on the default HTML element
      }
    }
    /**
     * Holds in-flight promises for deduplication purpose
     *
     * @private
     * @type {PromiseCache}
     */


    this._promiseCache = new _promiseCache.default();

    if (_options.uri && _options.token) {
      this.login();
    }
    /**
     * @type {object}
     */


    this.storeAccesors = null;

    if (_options.store !== false) {
      this.ensureStore();
    }
  }
  /**
   * Gets overrided by MicroEE.mixin
   * This is here just so typescript does not scream
   *
   * TODO Find a better way to make TS understand that emit is
   * a method from cozy-client
   */


  (0, _createClass2.default)(CozyClient, [{
    key: "emit",
    value: function emit() {}
  }, {
    key: "on",
    value: function on() {}
  }, {
    key: "removeListener",
    value: function removeListener() {}
    /**
     * A plugin is a class whose constructor receives the client as first argument.
     * The main mean of interaction with the client should be with events
     * like "login"/"logout".
     *
     * The plugin system is meant to encourage separation of concerns, modularity
     * and testability : instead of registering events at module level, please
     * create a plugin that subscribes to events.
     *
     * Plugin instances are stored internally in the `plugins` attribute of the client
     * and can be accessed via this mean. A plugin class must have the attribute
     * `pluginName` that will be use as the key in the `plugins` object.
     *
     * Two plugins with the same `pluginName` cannot co-exist.
     *
     * @example
     * ```js
     * class AlertPlugin {
     *   constructor(client, options) {
     *     this.client = client
     *     this.options = options
     *     this.handleLogin = this.handleLogin.bind(this)
     *     this.handleLogout = this.handleLogout.bind(this)
     *     this.client.on("login", this.handleLogin)
     *     this.client.on("logout", this.handleLogout)
     *   }
     *
     *   handleLogin() {
     *     alert(this.options.onLoginAlert)
     *   }
     *
     *   handleLogout() {
     *     alert(this.options.onLogoutAlert)
     *   }
     * }
     *
     * AlertPlugin.pluginName = 'alerts'
     *
     * client.registerPlugin(AlertPlugin, {
     *   onLoginAlert: 'client has logged in !',
     *   onLogoutAlert: 'client has logged out !'
     * })
     *
     * // the instance of the plugin is accessible via
     * client.plugins.alerts
     * ```
     */

  }, {
    key: "registerPlugin",
    value: function registerPlugin(Plugin, options) {
      if (!Plugin.pluginName) {
        throw new Error('Cannot register a plugin whose class does not have `pluginName` attribute.');
      }

      if (this.plugins[Plugin.pluginName]) {
        throw new Error("Cannot register plugin ".concat(Plugin.pluginName, ". A plugin with the same name has already been registered."));
      }

      var instance = new Plugin(this, options);
      this.plugins[Plugin.pluginName] = instance;
      return instance;
    }
    /**
     * To help with the transition from cozy-client-js to cozy-client, it is possible to instantiate
     * a client with a cookie-based instance of cozy-client-js.
     *
     * @param {import("./types").OldCozyClient} oldClient - An instance of the deprecated cozy-client
     * @param {object} options - CozyStackClient options
     * @returns {CozyClient}
     */

  }, {
    key: "addSchema",
    value: function addSchema(schemaDefinition) {
      this.schema.add(schemaDefinition);
    }
  }, {
    key: "registerClientOnLinks",
    value: function registerClientOnLinks() {
      var _iterator = _createForOfIteratorHelper(this.links),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var link = _step.value;

          if (link.registerClient) {
            try {
              link.registerClient(this);
            } catch (e) {
              _logger.default.warn(e);
            }
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    /**
     * Notify the links that they can start and set isLogged to true.
     *
     * On mobile, where url/token are set after instantiation, use this method
     * to set the token and uri via options.
     *
     * Emits
     *
     * - "beforeLogin" at the beginning, before links have been set up
     * - "login" when the client is fully logged in and links have been set up
     *
     * @param  {object}   [options] - Options
     * @param  {string}   options.token  - If passed, the token is set on the client
     * @param  {string}   options.uri  - If passed, the uri is set on the client
     * @returns {Promise} - Resolves when all links have been setup and client is fully logged in
     *
     */

  }, {
    key: "login",
    value: function login(options) {
      // Keep the promise to be able to return it in future calls.
      // This allows us to autoLogin in constructor without breaking any compatibility
      // with codes that uses an explicit login.
      if (this.isLogged && !this.isRevoked) {
        _logger.default.warn("CozyClient is already logged.");

        return this.loginPromise;
      }

      return this.loginPromise = this._login(options);
    }
  }, {
    key: "_login",
    value: function () {
      var _login2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(options) {
        var _iterator2, _step2, link;

        return _regenerator.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                this.emit('beforeLogin');
                this.registerClientOnLinks();

                if (options) {
                  if (options.uri) {
                    this.stackClient.setUri(options.uri);
                  }

                  if (options.token) {
                    this.stackClient.setToken(options.token);
                  }
                }

                _iterator2 = _createForOfIteratorHelper(this.links);
                _context2.prev = 4;

                _iterator2.s();

              case 6:
                if ((_step2 = _iterator2.n()).done) {
                  _context2.next = 13;
                  break;
                }

                link = _step2.value;

                if (!link.onLogin) {
                  _context2.next = 11;
                  break;
                }

                _context2.next = 11;
                return link.onLogin();

              case 11:
                _context2.next = 6;
                break;

              case 13:
                _context2.next = 18;
                break;

              case 15:
                _context2.prev = 15;
                _context2.t0 = _context2["catch"](4);

                _iterator2.e(_context2.t0);

              case 18:
                _context2.prev = 18;

                _iterator2.f();

                return _context2.finish(18);

              case 21:
                this.isLogged = true;
                this.isRevoked = false;

                if (!(this.stackClient instanceof _cozyStackClient.OAuthClient)) {
                  _context2.next = 26;
                  break;
                }

                _context2.next = 26;
                return this.loadInstanceOptionsFromStack();

              case 26:
                this.emit('login');

              case 27:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this, [[4, 15, 18, 21]]);
      }));

      function _login(_x2) {
        return _login2.apply(this, arguments);
      }

      return _login;
    }()
    /**
     * Logs out the client and reset all the links
     *
     * Emits
     *
     * - "beforeLogout" at the beginning, before links have been reset
     * - "logout" when the client is fully logged out and links have been reset
     *
     * @returns {Promise} - Resolves when all links have been reset and client is fully logged out
     */

  }, {
    key: "logout",
    value: function () {
      var _logout = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3() {
        var _iterator3, _step3, link;

        return _regenerator.default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                if (this.isLogged) {
                  _context3.next = 3;
                  break;
                }

                _logger.default.warn("CozyClient isn't logged.");

                return _context3.abrupt("return");

              case 3:
                this.emit('beforeLogout');
                this.isLogged = false;

                if (!(this.stackClient instanceof _cozyStackClient.OAuthClient)) {
                  _context3.next = 17;
                  break;
                }

                _context3.prev = 6;

                if (!(this.stackClient.unregister && (!this.stackClient.isRegistered || this.stackClient.isRegistered()))) {
                  _context3.next = 10;
                  break;
                }

                _context3.next = 10;
                return this.stackClient.unregister();

              case 10:
                _context3.next = 15;
                break;

              case 12:
                _context3.prev = 12;
                _context3.t0 = _context3["catch"](6);

                _logger.default.warn("Impossible to unregister client on stack: ".concat(_context3.t0));

              case 15:
                _context3.next = 25;
                break;

              case 17:
                _context3.prev = 17;
                _context3.next = 20;
                return this.stackClient.fetch('DELETE', '/auth/login');

              case 20:
                _context3.next = 25;
                break;

              case 22:
                _context3.prev = 22;
                _context3.t1 = _context3["catch"](17);

                _logger.default.warn("Impossible to log out: ".concat(_context3.t1));

              case 25:
                // clean information on links
                _iterator3 = _createForOfIteratorHelper(this.links);
                _context3.prev = 26;

                _iterator3.s();

              case 28:
                if ((_step3 = _iterator3.n()).done) {
                  _context3.next = 41;
                  break;
                }

                link = _step3.value;

                if (!link.reset) {
                  _context3.next = 39;
                  break;
                }

                _context3.prev = 31;
                _context3.next = 34;
                return link.reset();

              case 34:
                _context3.next = 39;
                break;

              case 36:
                _context3.prev = 36;
                _context3.t2 = _context3["catch"](31);

                _logger.default.warn(_context3.t2);

              case 39:
                _context3.next = 28;
                break;

              case 41:
                _context3.next = 46;
                break;

              case 43:
                _context3.prev = 43;
                _context3.t3 = _context3["catch"](26);

                _iterator3.e(_context3.t3);

              case 46:
                _context3.prev = 46;

                _iterator3.f();

                return _context3.finish(46);

              case 49:
                if (this.store) {
                  this.dispatch((0, _store.resetState)());
                }

                this.emit('logout');

              case 51:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this, [[6, 12], [17, 22], [26, 43, 46, 49], [31, 36]]);
      }));

      function logout() {
        return _logout.apply(this, arguments);
      }

      return logout;
    }()
    /**
     * Forwards to a stack client instance and returns
     * a [DocumentCollection]{@link https://docs.cozy.io/en/cozy-client/api/cozy-stack-client/#DocumentCollection} instance.
     *
     * @param  {string} doctype The collection doctype.
     * @returns {import("./types").DocumentCollection} Collection corresponding to the doctype
     */

  }, {
    key: "collection",
    value: function collection(doctype) {
      return this.getStackClient().collection(doctype);
    }
  }, {
    key: "fetch",
    value: function fetch(method, path, body) {
      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
      return this.getStackClient().fetch(method, path, body, options);
    }
  }, {
    key: "all",
    value: function all(doctype) {
      _logger.default.warn("\nclient.all is deprecated, prefer to use the Q helper to build a new QueryDefinition.\n\nimport { Q } from 'cozy-client'\nclient.query(Q('io.cozy.bills'))");

      return (0, _dsl.Q)(doctype);
    }
  }, {
    key: "find",
    value: function find(doctype) {
      var selector = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;

      _logger.default.warn('client.find(doctype, selector) is deprecated, please use Q(doctype).where(selector) to build the same query.');

      return new _dsl.QueryDefinition({
        doctype: doctype,
        selector: selector
      });
    }
  }, {
    key: "get",
    value: function get(doctype, id) {
      _logger.default.warn("client.get(".concat(doctype, ", id) is deprecated, please use Q(").concat(doctype, ").getById(id) to build the same query."));

      return new _dsl.QueryDefinition({
        doctype: doctype,
        id: id
      });
    }
    /**
     * Creates a document and saves it on the server
     *
     * @param  {string} type - Doctype of the document
     * @param  {object} doc - Document to save
     * @param  {import("./types").ReferenceMap} [references] - References are a special kind of relationship
     * that is not stored inside the referencer document, they are used for example between a photo
     * and its album. You should not need to use it normally.
     * @param  {object} options - Mutation options
     *
     * @example
     * ```js
     * await client.create('io.cozy.todos', {
     *   label: 'My todo',
     *   relationships: {
     *     authors: {
     *       data: [{_id: 1, _type: 'io.cozy.persons'}]
     *     }
     *   }
     * })
     * ```
     *
     * @returns {Promise}
     */

  }, {
    key: "create",
    value: function () {
      var _create = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee4(type, doc, references) {
        var options,
            _type,
            attributes,
            normalizedDoc,
            ret,
            _args4 = arguments;

        return _regenerator.default.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                options = _args4.length > 3 && _args4[3] !== undefined ? _args4[3] : {};
                _type = doc._type, attributes = (0, _objectWithoutProperties2.default)(doc, ["_type"]);
                normalizedDoc = _objectSpread({
                  _type: type
                }, attributes);
                _context4.next = 5;
                return this.schema.validate(normalizedDoc);

              case 5:
                ret = _context4.sent;

                if (!(ret !== true)) {
                  _context4.next = 8;
                  break;
                }

                throw new Error('Validation failed');

              case 8:
                return _context4.abrupt("return", this.mutate(this.getDocumentSavePlan(normalizedDoc, references), options));

              case 9:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function create(_x3, _x4, _x5) {
        return _create.apply(this, arguments);
      }

      return create;
    }()
  }, {
    key: "validate",
    value: function validate(document) {
      return this.schema.validate(document);
    }
    /**
     * Create or update a document on the server
     *
     * @param  {object} doc - Document to save
     * @param  {object} mutationOptions - Mutation options
     * @returns {Promise}
     */

  }, {
    key: "save",
    value: function () {
      var _save = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee5(doc) {
        var mutationOptions,
            _type,
            attributes,
            normalizedDoc,
            ret,
            _args5 = arguments;

        return _regenerator.default.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                mutationOptions = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : {};
                _type = doc._type, attributes = (0, _objectWithoutProperties2.default)(doc, ["_type"]);

                if (_type) {
                  _context5.next = 4;
                  break;
                }

                throw new Error('The document must have a `_type` property');

              case 4:
                normalizedDoc = _objectSpread({
                  _type: _type
                }, attributes);
                _context5.next = 7;
                return this.schema.validate(normalizedDoc);

              case 7:
                ret = _context5.sent;

                if (!(ret !== true)) {
                  _context5.next = 10;
                  break;
                }

                throw new Error('Validation failed');

              case 10:
                return _context5.abrupt("return", this.mutate(this.getDocumentSavePlan(normalizedDoc), mutationOptions));

              case 11:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function save(_x6) {
        return _save.apply(this, arguments);
      }

      return save;
    }()
    /**
     * Saves multiple documents in one batch
     * - Can only be called with documents from the same doctype
     * - Does not support automatic creation of references
     *
     * @param  {import("./types").CozyClientDocument[]} docs - Documents from the same doctype
     * @param  {Object} mutationOptions - Mutation Options
     * @param  {string}    [mutationOptions.as] - Mutation id
     * @param  {Function}    [mutationOptions.update] - Function to update the document
     * @param  {Function}    [mutationOptions.updateQueries] - Function to update queries
     * @returns {Promise<void>}
     */

  }, {
    key: "saveAll",
    value: function () {
      var _saveAll = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee6(docs) {
        var _this2 = this;

        var mutationOptions,
            doctypes,
            validations,
            errors,
            toSaveDocs,
            mutation,
            _args6 = arguments;
        return _regenerator.default.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                mutationOptions = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : {};
                doctypes = Array.from(new Set(docs.map(function (x) {
                  return x._type;
                })));

                if (!(doctypes.length !== 1)) {
                  _context6.next = 4;
                  break;
                }

                throw new Error('saveAll can only save documents with the same doctype');

              case 4:
                _context6.next = 6;
                return Promise.all(docs.map(function (d) {
                  return _this2.schema.validate(d);
                }));

              case 6:
                validations = _context6.sent;
                errors = validations.filter(function (validation) {
                  return validation !== true;
                });

                if (!(errors.length > 0)) {
                  _context6.next = 11;
                  break;
                }

                _logger.default.warn('There has been some validation errors while bulk saving', errors);

                throw new Error('Validation failed for at least one doc');

              case 11:
                toSaveDocs = docs.map(function (d) {
                  return _this2.prepareDocumentForSave(d);
                });
                mutation = _dsl.Mutations.updateDocuments(toSaveDocs);
                return _context6.abrupt("return", this.mutate(mutation, mutationOptions));

              case 14:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));

      function saveAll(_x7) {
        return _saveAll.apply(this, arguments);
      }

      return saveAll;
    }()
    /**
     * @param  {import("./types").CozyClientDocument} document - Document that will be saved
     * @param {object} [options={event: DOC_CREATION}] - Event
     * @param {string} [options.event] - Mutation type
     * @returns {import("./types").CozyClientDocument}
     */

  }, {
    key: "ensureCozyMetadata",
    value: function ensureCozyMetadata(document) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
        event: DOC_CREATION
      };
      var METADATA_VERSION = 1;
      if (this.appMetadata === undefined) return document;
      var doctypeVersion;

      if (document._type) {
        var schema = this.schema.getDoctypeSchema(document._type);
        doctypeVersion = (0, _get.default)(schema, 'doctypeVersion');
      }

      var _this$appMetadata = this.appMetadata,
          slug = _this$appMetadata.slug,
          sourceAccount = _this$appMetadata.sourceAccount,
          sourceAccountIdentifier = _this$appMetadata.sourceAccountIdentifier,
          version = _this$appMetadata.version;
      var now = new Date().toISOString();
      var cozyMetadata = (0, _get.default)(document, 'cozyMetadata', {});

      if (options.event === DOC_CREATION) {
        cozyMetadata = _objectSpread({
          metadataVersion: METADATA_VERSION,
          doctypeVersion: doctypeVersion,
          createdByApp: slug,
          sourceAccount: sourceAccount,
          sourceAccountIdentifier: sourceAccountIdentifier,
          createdAt: now,
          createdByAppVersion: version,
          updatedAt: now,
          updatedByApps: slug ? [{
            date: now,
            slug: slug,
            version: version
          }] : []
        }, cozyMetadata);
      } else if (options.event === DOC_UPDATE) {
        cozyMetadata = _objectSpread(_objectSpread({}, cozyMetadata), {}, {
          updatedAt: now,
          updatedByApps: [{
            date: now,
            slug: slug,
            version: version
          }].concat((0, _toConsumableArray2.default)((0, _get.default)(document, 'cozyMetadata.updatedByApps', []).filter(function (info) {
            return info.slug !== slug;
          })))
        });
      }

      return _objectSpread(_objectSpread({}, document), {}, {
        cozyMetadata: cozyMetadata
      });
    }
    /**
     * Dehydrates and adds metadata before saving a document
     *
     * @param  {import("./types").CozyClientDocument} doc - Document that will be saved
     * @returns {import("./types").CozyClientDocument}
     */

  }, {
    key: "prepareDocumentForSave",
    value: function prepareDocumentForSave(doc) {
      var isNewDoc = !doc._rev;
      var dehydratedDoc = this.ensureCozyMetadata((0, _helpers2.dehydrate)(doc), {
        event: isNewDoc ? DOC_CREATION : DOC_UPDATE
      });
      return dehydratedDoc;
    }
    /**
     * Creates a list of mutations to execute to create a document and its relationships.
     *
     * ```js
     * const baseDoc = { _type: 'io.cozy.todo', label: 'Go hiking' }
     * // relations can be arrays or single objects
     * const relationships = {
     *   attachments: [{ _id: 12345, _type: 'io.cozy.files' }, { _id: 6789, _type: 'io.cozy.files' }],
     *   bills: { _id: 9999, _type: 'io.cozy.bills' }
     * }
     * client.getDocumentSavePlan(baseDoc, relationships)
     * ```
     *
     *
     * @param  {import("./types").CozyClientDocument} document - Document to create
     * @param  {import("./types").ReferenceMap} [referencesByName] - References to the created document. The
     * relationship class associated to each reference list should support references, otherwise this
     * method will throw.
     *
     * @returns {import("./types").Mutation[]|import("./types").Mutation}  One or more mutation to execute
     */

  }, {
    key: "getDocumentSavePlan",
    value: function getDocumentSavePlan(document, referencesByName) {
      var _this3 = this;

      var isNewDoc = !document._rev;
      var docToSave = this.prepareDocumentForSave(document);
      var saveMutation = isNewDoc ? _dsl.Mutations.createDocument(docToSave) : _dsl.Mutations.updateDocument(docToSave);
      var hasReferences = referencesByName && Object.values(referencesByName).filter(function (references) {
        return Array.isArray(references) ? references.length > 0 : references;
      }).length > 0;

      if (!hasReferences) {
        return saveMutation;
      } else {
        for (var _i = 0, _Object$keys = Object.keys(referencesByName); _i < _Object$keys.length; _i++) {
          var relName = _Object$keys[_i];
          var doctype = document._type;
          var doctypeRelationship = this.schema.getRelationship(doctype, relName);
          var relationshipClass = doctypeRelationship.type;

          if (!supportsReferences(relationshipClass)) {
            throw referencesUnsupportedError(doctypeRelationship.name);
          }
        }
      }

      if (referencesByName && !isNewDoc) {
        throw new Error('Unable to save external relationships on a not-new document');
      }

      return [saveMutation, function (response) {
        var doc = _this3.hydrateDocument(response.data);

        return Object.entries(referencesByName).map(function (_ref3) {
          var _ref4 = (0, _slicedToArray2.default)(_ref3, 2),
              relName = _ref4[0],
              references = _ref4[1];

          var relationship = doc[relName];
          return relationship.addReferences(references);
        });
      }];
    }
    /**
     * Hooks are an observable system for events on documents.
     * There are at the moment only 2 hooks available.
     *
     * - before:destroy, called just before a document is destroyed via CozyClient::destroy
     * - after:destroy, called after a document is destroyed via CozyClient::destroy
     *
     * @example
     * ```
     * CozyClient.registerHook('io.cozy.bank.accounts', 'before:destroy', () => {
     *   console.log('A io.cozy.bank.accounts is being destroyed')
     * })
     * ```
     *
     * @param  {string}   doctype - Doctype on which the hook will be registered
     * @param  {string}   name    - Name of the hook
     * @param  {Function} fn      - Callback to be executed
     */

  }, {
    key: "triggerHook",
    value: function triggerHook(name, document) {
      if (!CozyClient.hooks) return;
      var allHooks = CozyClient.hooks[document._type] || {};
      var hooks = allHooks[name] || [];

      var _iterator4 = _createForOfIteratorHelper(hooks),
          _step4;

      try {
        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
          var h = _step4.value;
          h(this, document);
        }
      } catch (err) {
        _iterator4.e(err);
      } finally {
        _iterator4.f();
      }
    }
    /**
     * Destroys a document. {before,after}:destroy hooks will be fired.
     *
     * @param  {import("./types").CozyClientDocument} document - Document to be deleted
     * @returns {Promise<import("./types").CozyClientDocument>} The document that has been deleted
     */

  }, {
    key: "destroy",
    value: function () {
      var _destroy = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee7(document) {
        var mutationOptions,
            res,
            _args7 = arguments;
        return _regenerator.default.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                mutationOptions = _args7.length > 1 && _args7[1] !== undefined ? _args7[1] : {};
                _context7.next = 3;
                return this.triggerHook('before:destroy', document);

              case 3:
                _context7.next = 5;
                return this.mutate(_dsl.Mutations.deleteDocument(document), mutationOptions);

              case 5:
                res = _context7.sent;
                _context7.next = 8;
                return this.triggerHook('after:destroy', document);

              case 8:
                return _context7.abrupt("return", res);

              case 9:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7, this);
      }));

      function destroy(_x8) {
        return _destroy.apply(this, arguments);
      }

      return destroy;
    }()
  }, {
    key: "upload",
    value: function upload(file, dirPath) {
      var mutationOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      return this.mutate(_dsl.Mutations.uploadFile(file, dirPath), mutationOptions);
    }
    /**
     * Makes sure that the query exists in the store
     *
     * @param  {string} queryId - Id of the query
     * @param  {QueryDefinition} queryDefinition - Definition of the query
     * @param  {import("./types").QueryOptions} [options] - Additional options
     */

  }, {
    key: "ensureQueryExists",
    value: function ensureQueryExists(queryId, queryDefinition, options) {
      this.ensureStore();
      var existingQuery = (0, _store.getQueryFromState)(this.store.getState(), queryId); // Don't trigger the INIT_QUERY for fetchMore() calls

      if (existingQuery.fetchStatus !== 'loaded' || !queryDefinition.skip && !queryDefinition.bookmark) {
        this.dispatch((0, _store.initQuery)(queryId, queryDefinition, options));
      }
    }
    /**
     * Executes a query and returns its results.
     *
     * Results from the query will be saved internally and can be retrieved via
     * `getQueryFromState` or directly using `<Query />`. `<Query />` automatically
     * executes its query when mounted if no fetch policy has been indicated.
     *
     * If the query is called under the fetch policy's delay, then the query
     * is not executed and nothing is returned. If you need a result anyway,
     * please use `fetchQueryAndGetFromState` instead
     *
     * @param  {QueryDefinition} queryDefinition - Definition that will be executed
     * @param  {import("./types").QueryOptions} [options] - Options
     * @returns {Promise<import("./types").QueryResult>}
     */

  }, {
    key: "query",
    value: function () {
      var _query = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee8(queryDefinition) {
        var _this4 = this;

        var _ref5,
            update,
            options,
            queryId,
            existingQuery,
            shouldFetch,
            backgroundFetching,
            response,
            _args8 = arguments;

        return _regenerator.default.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                _ref5 = _args8.length > 1 && _args8[1] !== undefined ? _args8[1] : {};
                update = _ref5.update, options = (0, _objectWithoutProperties2.default)(_ref5, ["update"]);
                this.ensureStore();
                queryId = options.as || this.queryIdGenerator.generateId(queryDefinition);
                existingQuery = this.getQueryFromState(queryId, options);

                if (!(options.enabled !== undefined)) {
                  _context8.next = 8;
                  break;
                }

                if (!('boolean' !== typeof options.enabled)) {
                  _context8.next = 8;
                  break;
                }

                throw new Error("option.enabled should be a boolean for this query: ".concat(JSON.stringify(queryDefinition)));

              case 8:
                if (!options.fetchPolicy) {
                  _context8.next = 14;
                  break;
                }

                if (options.as) {
                  _context8.next = 11;
                  break;
                }

                throw new Error('Cannot use `fetchPolicy` without naming the query, please use `as` to name the query');

              case 11:
                shouldFetch = options.fetchPolicy(existingQuery);

                if (shouldFetch) {
                  _context8.next = 14;
                  break;
                }

                return _context8.abrupt("return");

              case 14:
                if (!(existingQuery && Object.keys(existingQuery).length > 0)) {
                  _context8.next = 17;
                  break;
                }

                if (!(existingQuery.fetchStatus === 'loading')) {
                  _context8.next = 17;
                  break;
                }

                return _context8.abrupt("return", this._promiseCache.get(function () {
                  return (0, _jsonStableStringify.default)(queryDefinition);
                }));

              case 17:
                this.ensureQueryExists(queryId, queryDefinition, options);
                _context8.prev = 18;
                backgroundFetching = options.backgroundFetching !== undefined ? options.backgroundFetching : this.options.backgroundFetching;
                this.dispatch((0, _store.loadQuery)(queryId, {
                  backgroundFetching: backgroundFetching
                }));
                _context8.next = 23;
                return this._promiseCache.exec(function () {
                  return _this4.requestQuery(queryDefinition);
                }, function () {
                  return (0, _jsonStableStringify.default)(queryDefinition);
                });

              case 23:
                response = _context8.sent;
                this.dispatch((0, _store.receiveQueryResult)(queryId, response, {
                  update: update,
                  backgroundFetching: backgroundFetching
                }));
                return _context8.abrupt("return", response);

              case 28:
                _context8.prev = 28;
                _context8.t0 = _context8["catch"](18);
                this.dispatch((0, _store.receiveQueryError)(queryId, _context8.t0)); // specific onError

                if (!options.onError) {
                  _context8.next = 35;
                  break;
                }

                options.onError(_context8.t0); // defaulted onError

                _context8.next = 40;
                break;

              case 35:
                if (!this.options.onError) {
                  _context8.next = 39;
                  break;
                }

                this.options.onError(_context8.t0);
                _context8.next = 40;
                break;

              case 39:
                throw _context8.t0;

              case 40:
              case "end":
                return _context8.stop();
            }
          }
        }, _callee8, this, [[18, 28]]);
      }));

      function query(_x9) {
        return _query.apply(this, arguments);
      }

      return query;
    }()
    /**
     * Will fetch all documents for a `queryDefinition`, automatically fetching more
     * documents if the total of documents is superior to the pagination limit. Can
     * result in a lot of network requests.
     *
     * @param  {QueryDefinition} queryDefinition - Definition to be executed
     * @param {import("./types").QueryOptions} [options] - Options
     * @returns {Promise<import("./types").QueryResult>} All documents matching the query
     */

  }, {
    key: "queryAll",
    value: function () {
      var _queryAll = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee9(queryDefinition) {
        var options,
            queryId,
            mergedOptions,
            resp,
            documents,
            currentResult,
            _args9 = arguments;
        return _regenerator.default.wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                options = _args9.length > 1 && _args9[1] !== undefined ? _args9[1] : {};
                queryId = options.as || this.queryIdGenerator.generateId(queryDefinition);
                mergedOptions = _objectSpread(_objectSpread({}, options), {}, {
                  as: queryId
                });
                _context9.prev = 3;
                _context9.next = 6;
                return this.query(queryDefinition, mergedOptions);

              case 6:
                resp = _context9.sent;
                documents = resp.data;

              case 8:
                if (!(resp && resp.next)) {
                  _context9.next = 22;
                  break;
                }

                if (!resp.bookmark) {
                  _context9.next = 15;
                  break;
                }

                _context9.next = 12;
                return this.query(queryDefinition.offsetBookmark(resp.bookmark), mergedOptions);

              case 12:
                resp = _context9.sent;
                _context9.next = 19;
                break;

              case 15:
                currentResult = (0, _store.getRawQueryFromState)(this.store.getState(), queryId);
                _context9.next = 18;
                return this.query(queryDefinition.offset(currentResult.data.length), mergedOptions);

              case 18:
                resp = _context9.sent;

              case 19:
                documents.push.apply(documents, (0, _toConsumableArray2.default)(resp.data));
                _context9.next = 8;
                break;

              case 22:
                return _context9.abrupt("return", documents);

              case 25:
                _context9.prev = 25;
                _context9.t0 = _context9["catch"](3);

                _logger.default.log("queryAll error for ".concat(_context9.t0.toString()));

                return _context9.abrupt("return", []);

              case 29:
              case "end":
                return _context9.stop();
            }
          }
        }, _callee9, this, [[3, 25]]);
      }));

      function queryAll(_x10) {
        return _queryAll.apply(this, arguments);
      }

      return queryAll;
    }()
  }, {
    key: "watchQuery",
    value: function watchQuery() {
      _logger.default.warn('client.watchQuery is deprecated, please use client.makeObservableQuery.');

      return this.makeObservableQuery.apply(this, arguments);
    }
  }, {
    key: "makeObservableQuery",
    value: function makeObservableQuery(queryDefinition) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      this.ensureStore();
      var queryId = options.as || this.queryIdGenerator.generateId(queryDefinition);
      this.ensureQueryExists(queryId, queryDefinition);
      return new _ObservableQuery.default(queryId, queryDefinition, this, options);
    }
    /**
     * Mutate a document
     *
     * @param  {object}    mutationDefinition - Describe the mutation
     * @param {object} [options] - Options
     * @param  {string}    [options.as] - Mutation id
     * @param  {Function}    [options.update] - Function to update the document
     * @param  {Function}    [options.updateQueries] - Function to update queries
     * @returns {Promise}
     */

  }, {
    key: "mutate",
    value: function () {
      var _mutate = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee10(mutationDefinition) {
        var _ref6,
            update,
            updateQueries,
            options,
            mutationId,
            response,
            _args10 = arguments;

        return _regenerator.default.wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                _ref6 = _args10.length > 1 && _args10[1] !== undefined ? _args10[1] : {};
                update = _ref6.update, updateQueries = _ref6.updateQueries, options = (0, _objectWithoutProperties2.default)(_ref6, ["update", "updateQueries"]);
                this.ensureStore();
                mutationId = options.as || this.queryIdGenerator.generateId(mutationDefinition);
                this.dispatch((0, _store.initMutation)(mutationId, mutationDefinition));
                _context10.prev = 5;
                _context10.next = 8;
                return this.requestMutation(mutationDefinition);

              case 8:
                response = _context10.sent;
                this.dispatch((0, _store.receiveMutationResult)(mutationId, response, {
                  update: update,
                  updateQueries: updateQueries
                }, mutationDefinition));
                return _context10.abrupt("return", response);

              case 13:
                _context10.prev = 13;
                _context10.t0 = _context10["catch"](5);
                this.dispatch((0, _store.receiveMutationError)(mutationId, _context10.t0, mutationDefinition));
                throw _context10.t0;

              case 17:
              case "end":
                return _context10.stop();
            }
          }
        }, _callee10, this, [[5, 13]]);
      }));

      function mutate(_x11) {
        return _mutate.apply(this, arguments);
      }

      return mutate;
    }()
    /**
     * Executes a query through links and fetches relationships
     *
     * @private
     * @param  {QueryDefinition} definition QueryDefinition to be executed
     * @returns {Promise<import("./types").ClientResponse>}
     */

  }, {
    key: "requestQuery",
    value: function () {
      var _requestQuery = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee11(definition) {
        var mainResponse, withIncluded;
        return _regenerator.default.wrap(function _callee11$(_context11) {
          while (1) {
            switch (_context11.prev = _context11.next) {
              case 0:
                _context11.next = 2;
                return this.chain.request(definition);

              case 2:
                mainResponse = _context11.sent;

                if (definition.includes) {
                  _context11.next = 5;
                  break;
                }

                return _context11.abrupt("return", mainResponse);

              case 5:
                _context11.next = 7;
                return this.fetchRelationships(mainResponse, this.getIncludesRelationships(definition));

              case 7:
                withIncluded = _context11.sent;
                return _context11.abrupt("return", withIncluded);

              case 9:
              case "end":
                return _context11.stop();
            }
          }
        }, _callee11, this);
      }));

      function requestQuery(_x12) {
        return _requestQuery.apply(this, arguments);
      }

      return requestQuery;
    }()
    /**
     * Fetch relationships for a response (can be several docs).
     * Fills the `relationships` attribute of each documents.
     *
     * Can potentially result in several fetch requests.
     * Queries are optimized before being sent (multiple single documents queries can be packed into
     * one multiple document query) for example.
     *
     * @private
     */

  }, {
    key: "fetchRelationships",
    value: function () {
      var _fetchRelationships = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee12(response, relationshipsByName) {
        var _this5 = this;

        var isSingleDoc, responseDocs, queryDefToDocIdAndRel, documents, definitions, optimizedDefinitions, responses, uniqueDocuments, included, relationshipsByDocId, _iterator5, _step5, _step5$value, def, resp, docIdAndRel, _docIdAndRel, docId, relName;

        return _regenerator.default.wrap(function _callee12$(_context12) {
          while (1) {
            switch (_context12.prev = _context12.next) {
              case 0:
                isSingleDoc = !Array.isArray(response.data);

                if (!(!isSingleDoc && response.data.length === 0)) {
                  _context12.next = 3;
                  break;
                }

                return _context12.abrupt("return", response);

              case 3:
                responseDocs = isSingleDoc ? [response.data] : response.data;
                queryDefToDocIdAndRel = new Map();
                documents = [];
                definitions = [];
                responseDocs.forEach(function (doc) {
                  return (0, _forEach.default)(relationshipsByName, function (relationship, relName) {
                    try {
                      var queryDef = relationship.type.query(doc, _this5, relationship);
                      var docId = doc._id; // Used to reattach responses into the relationships attribute of
                      // each document

                      queryDefToDocIdAndRel.set(queryDef, [docId, relName]); // Relationships can yield "queries" that are already resolved documents.
                      // These do not need to go through the usual link request mechanism.

                      if (queryDef instanceof _dsl.QueryDefinition) {
                        definitions.push(queryDef);
                      } else {
                        documents.push(queryDef);
                      }
                    } catch (_unused) {// eslint-disable-next-line
                      // We do not crash completely if one the relationship behaves badly and
                      // throws
                    }
                  });
                }); // Definitions can be in optimized/regrouped in case of HasMany relationships.

                optimizedDefinitions = (0, _optimize.default)(definitions);
                _context12.next = 11;
                return Promise.all(optimizedDefinitions.map(function (req) {
                  return _this5.chain.request(req);
                }));

              case 11:
                responses = _context12.sent;
                // "Included" documents will be stored in the `documents` store
                uniqueDocuments = (0, _uniqBy.default)((0, _flatten.default)(documents), '_id');
                included = (0, _flatten.default)(responses.map(function (r) {
                  return r.included || r.data;
                })).concat(uniqueDocuments).filter(Boolean); // Some relationships have the relationship data on the other side of the
                // relationship (ex: io.cozy.photos.albums do not have photo inclusion information,
                // it is on the io.cozy.files side).
                // Here we take the data received from the relationship queries, and group
                // it so that we can fill the `relationships` attribute of each doc before
                // storing the document. This makes the data easier to manipulate for the front-end.

                relationshipsByDocId = {};
                _iterator5 = _createForOfIteratorHelper((0, _zip.default)(optimizedDefinitions, responses));

                try {
                  for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
                    _step5$value = (0, _slicedToArray2.default)(_step5.value, 2), def = _step5$value[0], resp = _step5$value[1];
                    docIdAndRel = queryDefToDocIdAndRel.get(def);

                    if (docIdAndRel) {
                      _docIdAndRel = (0, _slicedToArray2.default)(docIdAndRel, 2), docId = _docIdAndRel[0], relName = _docIdAndRel[1];
                      relationshipsByDocId[docId] = relationshipsByDocId[docId] || {};
                      relationshipsByDocId[docId][relName] = (0, _helpers.responseToRelationship)(resp);
                    }
                  }
                } catch (err) {
                  _iterator5.e(err);
                } finally {
                  _iterator5.f();
                }

                return _context12.abrupt("return", _objectSpread(_objectSpread({}, (0, _helpers.attachRelationships)(response, relationshipsByDocId)), {}, {
                  included: included
                }));

              case 18:
              case "end":
                return _context12.stop();
            }
          }
        }, _callee12);
      }));

      function fetchRelationships(_x13, _x14) {
        return _fetchRelationships.apply(this, arguments);
      }

      return fetchRelationships;
    }()
  }, {
    key: "requestMutation",
    value: function () {
      var _requestMutation = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee13(definition) {
        var _this6 = this;

        var _definition, first, rest, firstResponse;

        return _regenerator.default.wrap(function _callee13$(_context13) {
          while (1) {
            switch (_context13.prev = _context13.next) {
              case 0:
                if (!Array.isArray(definition)) {
                  _context13.next = 8;
                  break;
                }

                _definition = (0, _toArray2.default)(definition), first = _definition[0], rest = _definition.slice(1);
                _context13.next = 4;
                return this.requestMutation(first);

              case 4:
                firstResponse = _context13.sent;
                _context13.next = 7;
                return Promise.all(rest.map(function (def) {
                  var mutationDef = typeof def === 'function' ? def(firstResponse) : def;
                  return _this6.requestMutation(mutationDef);
                }));

              case 7:
                return _context13.abrupt("return", firstResponse);

              case 8:
                return _context13.abrupt("return", this.chain.request(definition));

              case 9:
              case "end":
                return _context13.stop();
            }
          }
        }, _callee13, this);
      }));

      function requestMutation(_x15) {
        return _requestMutation.apply(this, arguments);
      }

      return requestMutation;
    }()
  }, {
    key: "getIncludesRelationships",
    value: function getIncludesRelationships(queryDefinition) {
      var _this7 = this;

      var includes = queryDefinition.includes,
          doctype = queryDefinition.doctype;
      if (!includes) return {};
      return (0, _fromPairs.default)(includes.map(function (relName) {
        return [relName, _this7.schema.getRelationship(doctype, relName)];
      }));
    }
    /**
     * Returns documents with their relationships resolved according to their schema.
     * If related documents are not in the store, they will not be fetched automatically.
     * Instead, the relationships will have null documents.
     *
     * @param  {string} doctype - Doctype of the documents being hydrated
     * @param  {Array<import("./types").CozyClientDocument>} documents - Documents to be hydrated
     * @returns {Array<import("./types").HydratedDocument>}
     */

  }, {
    key: "hydrateDocuments",
    value: function hydrateDocuments(doctype, documents) {
      var _this8 = this;

      if (this.options.autoHydrate === false) {
        return documents;
      }

      var schema = this.schema.getDoctypeSchema(doctype);
      var relationships = schema.relationships;

      if (relationships) {
        return documents.map(function (doc) {
          return _this8.hydrateDocument(doc, schema);
        });
      } else {
        return documents;
      }
    }
    /**
     * Resolves relationships on a document.
     *
     * The original document is kept in the target attribute of
     * the relationship
     *
     * @param  {import("./types").CozyClientDocument} document - for which relationships must be resolved
     * @param  {Schema} [schemaArg] - Optional
     * @returns {import("./types").HydratedDocument}
     */

  }, {
    key: "hydrateDocument",
    value: function hydrateDocument(document, schemaArg) {
      if (!document) {
        return document;
      }

      var schema = schemaArg || this.schema.getDoctypeSchema(document._type);
      return _objectSpread(_objectSpread({}, document), this.hydrateRelationships(document, schema.relationships));
    }
  }, {
    key: "hydrateRelationships",
    value: function hydrateRelationships(document, schemaRelationships) {
      var methods = this.getRelationshipStoreAccessors();
      return (0, _mapValues.default)(schemaRelationships, function (assoc, name) {
        return (0, _associations.create)(document, assoc, methods);
      });
    }
    /**
     * Creates (locally) a new document for the given doctype.
     * This document is hydrated : its relationships are there
     * and working.
     */

  }, {
    key: "makeNewDocument",
    value: function makeNewDocument(doctype) {
      var obj = {
        _type: doctype
      };
      return this.hydrateDocument(obj);
    }
  }, {
    key: "generateRandomId",
    value: function generateRandomId() {
      return this.queryIdGenerator.generateRandomId();
    }
    /**
     * Creates an association that is linked to the store.
     */

  }, {
    key: "getAssociation",
    value: function getAssociation(document, associationName) {
      return (0, _associations.create)(document, this.schema.getRelationship(document._type, associationName), this.getRelationshipStoreAccessors());
    }
    /**
     * Returns the accessors that are given to the relationships for them
     * to deal with the stores.
     *
     * Relationships need to have access to the store to ping it when
     * a modification (addById/removeById etc...) has been done. This wakes
     * the store up, which in turn will update the `<Query>`s and re-render the data.
     */

  }, {
    key: "getRelationshipStoreAccessors",
    value: function getRelationshipStoreAccessors() {
      var _this9 = this;

      if (!this.storeAccesors) {
        this.storeAccessors = {
          get: this.getDocumentFromState.bind(this),
          save: function save(document, opts) {
            return _this9.save.call(_this9, document, opts);
          },
          dispatch: this.dispatch.bind(this),
          query: function query(def, opts) {
            return _this9.query.call(_this9, def, opts);
          },
          mutate: function mutate(def, opts) {
            return _this9.mutate.call(_this9, def, opts);
          }
        };
      }

      return this.storeAccessors;
    }
    /**
     * Get a collection of documents from the internal store.
     *
     * @param {string} type - Doctype of the collection
     *
     * @returns {import("./types").CozyClientDocument[]} Array of documents or null if the collection does not exist.
     */

  }, {
    key: "getCollectionFromState",
    value: function getCollectionFromState(type) {
      try {
        return (0, _store.getCollectionFromState)(this.store.getState(), type);
      } catch (e) {
        _logger.default.warn('Could not getCollectionFromState', type, e.message);

        return null;
      }
    }
    /**
     * Get a document from the internal store.
     *
     * @param {string} type - Doctype of the document
     * @param {string} id   - Id of the document
     *
     * @returns {import("./types").CozyClientDocument} Document or null if the object does not exist.
     */

  }, {
    key: "getDocumentFromState",
    value: function getDocumentFromState(type, id) {
      try {
        return (0, _store.getDocumentFromState)(this.store.getState(), type, id);
      } catch (e) {
        _logger.default.warn('Could not getDocumentFromState', type, id, e.message);

        return null;
      }
    }
    /**
     * Get a query from the internal store.
     *
     * @param {string} id - Id of the query (set via Query.props.as)
     * @param {object} options - Options
     * @param {boolean} [options.hydrated] - Whether documents should be returned already hydrated (default: false)
     * @param  {object} [options.singleDocData] - If true, the "data" returned will be
     * a single doc instead of an array for single doc queries. Defaults to false for backward
     * compatibility but will be set to true in the future.
     *
     * @returns {import("./types").QueryState} - Query state or null if it does not exist.
     */

  }, {
    key: "getQueryFromState",
    value: function getQueryFromState(id) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var hydrated = options.hydrated || false;
      var singleDocData = options.singleDocData || false;

      try {
        var queryResults = (0, _store.getQueryFromState)(this.store.getState(), id);
        var doctype = queryResults.definition && queryResults.definition.doctype;
        var isSingleDocQuery = queryResults.definition && queryResults.definition.id;

        if (!hydrated && !singleDocData) {
          // Early return let's us preserve reference equality in the simple case
          return queryResults;
        }

        var data = hydrated && doctype ? this.hydrateDocuments(doctype, queryResults.data) : queryResults.data;
        return _objectSpread(_objectSpread({}, queryResults), {}, {
          data: isSingleDocQuery && singleDocData ? data[0] : data
        });
      } catch (e) {
        _logger.default.warn("Could not get query from state. queryId: ".concat(id, ", error: ").concat(e.message));

        return null;
      }
    }
    /**
     * Executes a query and returns the results from internal store.
     *
     * Can be useful in pure JS context (without React)
     * Has a behavior close to <Query /> or useQuery
     *
     * @param {object} query - Query with definition and options
     * @param {QueryDefinition} query.definition - Query Definition
     * @param {import("./types").QueryOptions} query.options - Query Options
     * @returns {Promise<import("./types").QueryState>} Query state
     */

  }, {
    key: "register",

    /**
     * Performs a complete OAuth flow using a Cordova webview
     * or React Native WebView for auth.
     * The `register` method's name has been chosen for compat reasons with the Authentication compo.
     *
     * @param   {string} cozyURL Receives the URL of the cozy instance.
     * @returns {object}   Contains the fetched token and the client information.
     */
    value: function register(cozyURL) {
      var stackClient = this.getStackClient();
      stackClient.setUri(cozyURL);
      return this.startOAuthFlow(_mobile.authFunction);
    }
  }, {
    key: "isReactNative",
    value: function isReactNative() {
      return typeof navigator != 'undefined' && navigator.product == 'ReactNative';
    }
    /**
     * Performs a complete OAuth flow, including updating the internal token at the end.
     *
     * @param   {import("./types").OpenURLCallback} openURLCallback Receives the URL to present to the user as a parameter, and should return a promise that resolves with the URL the user was redirected to after accepting the permissions.
     * @returns {Promise<object>} Contains the fetched token and the client information. These should be stored and used to restore the client.
     */

  }, {
    key: "startOAuthFlow",
    value: function () {
      var _startOAuthFlow = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee14(openURLCallback) {
        var stackClient;
        return _regenerator.default.wrap(function _callee14$(_context14) {
          while (1) {
            switch (_context14.prev = _context14.next) {
              case 0:
                stackClient = this.getStackClient();
                _context14.next = 3;
                return stackClient.register();

              case 3:
                _context14.next = 5;
                return this.certifyFlagship();

              case 5:
                return _context14.abrupt("return", this.authorize({
                  openURLCallback: openURLCallback
                }));

              case 6:
              case "end":
                return _context14.stop();
            }
          }
        }, _callee14, this);
      }));

      function startOAuthFlow(_x16) {
        return _startOAuthFlow.apply(this, arguments);
      }

      return startOAuthFlow;
    }()
    /**
     * Perform the Flagship certification process for verifying that the current running app is a genuine Cozy application
     *
     * This mechanism is described in https://github.com/cozy/cozy-client/blob/master/packages/cozy-client/src/flagship-certification/README.md
     */

  }, {
    key: "certifyFlagship",
    value: function () {
      var _certifyFlagship2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee15() {
        var stackClient;
        return _regenerator.default.wrap(function _callee15$(_context15) {
          while (1) {
            switch (_context15.prev = _context15.next) {
              case 0:
                stackClient = this.getStackClient();

                if (!stackClient.oauthOptions.shouldRequireFlagshipPermissions) {
                  _context15.next = 4;
                  break;
                }

                _context15.next = 4;
                return (0, _flagshipCertification.certifyFlagship)(stackClient.oauthOptions.certificationConfig, this);

              case 4:
              case "end":
                return _context15.stop();
            }
          }
        }, _callee15, this);
      }));

      function certifyFlagship() {
        return _certifyFlagship2.apply(this, arguments);
      }

      return certifyFlagship;
    }()
    /**
     * Creates an OAuth token with needed permissions for the current client.
     * The authorization page URL generation can be overriding by passing a function pointer as `openURLCallback` parameter
     * It is possible to skip the session creation process (when using an in-app browser) by passing a sessionCode (see https://docs.cozy.io/en/cozy-stack/auth/#post-authsession_code)
     *
     * @param {object} [options] - Authorization options
     * @param {import("./types").OpenURLCallback} [options.openURLCallback] - Receives the URL to present to the user as a parameter, and should return a promise that resolves with the URL the user was redirected to after accepting the permissions.
     * @param {import("./types").SessionCode} [options.sessionCode] - session code than can be added to the authorization URL to automatically create the session.
     * @param {import("./types").PKCECodes} [options.pkceCodes] - code verifier and a code challenge that should be used in the PKCE verification process.
     * @returns {Promise<object>} Contains the fetched token and the client information. These should be stored and used to restore the client.
     */

  }, {
    key: "authorize",
    value: function () {
      var _authorize = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee16() {
        var _ref7,
            _ref7$openURLCallback,
            openURLCallback,
            _ref7$sessionCode,
            sessionCode,
            _ref7$pkceCodes,
            pkceCodes,
            codeVerifier,
            codeChallenge,
            stackClient,
            stateCode,
            url,
            redirectedURL,
            code,
            token,
            _stackClient,
            _args16 = arguments;

        return _regenerator.default.wrap(function _callee16$(_context16) {
          while (1) {
            switch (_context16.prev = _context16.next) {
              case 0:
                _ref7 = _args16.length > 0 && _args16[0] !== undefined ? _args16[0] : {}, _ref7$openURLCallback = _ref7.openURLCallback, openURLCallback = _ref7$openURLCallback === void 0 ? _mobile.authFunction : _ref7$openURLCallback, _ref7$sessionCode = _ref7.sessionCode, sessionCode = _ref7$sessionCode === void 0 ? undefined : _ref7$sessionCode, _ref7$pkceCodes = _ref7.pkceCodes, pkceCodes = _ref7$pkceCodes === void 0 ? {} : _ref7$pkceCodes;
                _context16.prev = 1;
                codeVerifier = pkceCodes.codeVerifier, codeChallenge = pkceCodes.codeChallenge;
                stackClient = this.getStackClient();
                stateCode = stackClient.generateStateCode();
                url = stackClient.getAuthCodeURL({
                  stateCode: stateCode,
                  scopes: undefined,
                  sessionCode: sessionCode,
                  codeChallenge: codeChallenge
                });
                _context16.next = 8;
                return openURLCallback(url);

              case 8:
                redirectedURL = _context16.sent;
                code = stackClient.getAccessCodeFromURL(redirectedURL, stateCode);
                _context16.next = 12;
                return stackClient.fetchAccessToken(code, undefined, undefined, codeVerifier);

              case 12:
                token = _context16.sent;
                stackClient.setToken(token);
                return _context16.abrupt("return", {
                  token: token,
                  infos: stackClient.oauthOptions,
                  client: stackClient.oauthOptions // for compat with Authentication comp reasons

                });

              case 17:
                _context16.prev = 17;
                _context16.t0 = _context16["catch"](1);

                /* if REGISTRATION_ABORT is emited, we have to unregister the client. */
                if (_context16.t0.message === _const.REGISTRATION_ABORT) {
                  _stackClient = this.getStackClient();

                  _stackClient.unregister();
                }

                throw _context16.t0;

              case 21:
              case "end":
                return _context16.stop();
            }
          }
        }, _callee16, this, [[1, 17]]);
      }));

      function authorize() {
        return _authorize.apply(this, arguments);
      }

      return authorize;
    }()
    /**
     * Renews the token if, for instance, new permissions are required or token
     * has expired.
     *
     * @returns {object}   Contains the fetched token and the client information.
     */

  }, {
    key: "renewAuthorization",
    value: function renewAuthorization() {
      return this.authorize({
        openURLCallback: _mobile.authFunction
      });
    }
    /**
     * Sets the internal store of the client. Use this when you want to have cozy-client's
     * internal store colocated with your existing Redux store.
     *
     * Typically, you would need to do this only once in your application, this is why
     * setStore throws if you do it twice. If you really need to set the store again,
     * use options.force = true.
     *
     * @example
     * ```
     * const client = new CozyClient()
     * const store = createStore(combineReducers({
     *   todos: todoReducer,
     *   cozy: client.reducer()
     * })
     * client.setStore(store)
     * ```
     *
     * @param {import("./types").ReduxStore} store - A redux store
     * @param {object} [options] - Options
     * @param {boolean} [options.force] - Will deactivate throwing when client's store already exists
     */

  }, {
    key: "setStore",
    value: function setStore(store) {
      var _ref8 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
          _ref8$force = _ref8.force,
          force = _ref8$force === void 0 ? false : _ref8$force;

      if (store === undefined) {
        throw new Error('Store is undefined');
      } else if (this.store && !force) {
        throw new Error("Client already has a store, it is forbidden to change store.\nsetStore must be called before any query is executed. Try to\ncall setStore earlier in your code, preferably just after the\ninstantiation of the client.");
      }

      this.store = store;
    }
  }, {
    key: "ensureStore",
    value: function ensureStore() {
      if (!this.store) {
        this.setStore((0, _store.createStore)());
      }
    }
    /**
     * Returns whether the client has been revoked on the server
     */

  }, {
    key: "checkForRevocation",
    value: function () {
      var _checkForRevocation = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee17() {
        return _regenerator.default.wrap(function _callee17$(_context17) {
          while (1) {
            switch (_context17.prev = _context17.next) {
              case 0:
                if (!(this.stackClient instanceof _cozyStackClient.OAuthClient)) {
                  _context17.next = 4;
                  break;
                }

                return _context17.abrupt("return", this.stackClient.checkForRevocation());

              case 4:
                throw 'checkForRevocation is only implemented for OAutClient';

              case 5:
              case "end":
                return _context17.stop();
            }
          }
        }, _callee17, this);
      }));

      function checkForRevocation() {
        return _checkForRevocation.apply(this, arguments);
      }

      return checkForRevocation;
    }()
    /** Sets public attribute and emits event related to revocation */

  }, {
    key: "handleRevocationChange",
    value: function handleRevocationChange(state) {
      if (state) {
        this.isRevoked = true;
        this.emit('revoked');
      } else {
        this.isRevoked = false;
        this.emit('unrevoked');
      }
    }
    /** Emits event when token is refreshed */

  }, {
    key: "handleTokenRefresh",
    value: function handleTokenRefresh(token) {
      this.emit('tokenRefreshed');

      if (this.options.onTokenRefresh) {
        deprecatedHandler("Using onTokenRefresh is deprecated, please use events like this: cozyClient.on('tokenRefreshed', token => console.log('Token has been refreshed', token)). https://git.io/fj3M3");
        this.options.onTokenRefresh(token);
      }
    }
    /**
     * If no stack client has been passed in options, creates a default stack
     * client and attaches handlers for revocation and token refresh.
     * If a stackClient has been passed in options, ensure it has handlers for
     * revocation and token refresh.
     *
     * If `oauth` options are passed, stackClient is an OAuthStackClient.
     */

  }, {
    key: "createClient",
    value: function createClient() {
      if (this.options.client) {
        _logger.default.warn('CozyClient: Using options.client is deprecated, please use options.stackClient.');
      }

      var warningForCustomHandlers = this.options.warningForCustomHandlers !== undefined ? this.options.warningForCustomHandlers : true;
      var stackClient = this.options.client || this.options.stackClient;
      var handlers = {
        onRevocationChange: this.handleRevocationChange,
        onTokenRefresh: this.handleTokenRefresh
      };

      if (stackClient) {
        this.stackClient = stackClient;

        if (!stackClient.options) {
          stackClient.options = {};
        }

        for (var _i2 = 0, _Object$keys2 = Object.keys(handlers); _i2 < _Object$keys2.length; _i2++) {
          var handlerName = _Object$keys2[_i2];

          if (!stackClient.options[handlerName]) {
            stackClient.options[handlerName] = handlers[handlerName];
          } else {
            if (warningForCustomHandlers) {
              _logger.default.warn("You passed a stackClient with its own ".concat(handlerName, ". It is not supported, unexpected things might happen."));
            }
          }
        }
      } else {
        var options = _objectSpread(_objectSpread({}, this.options), handlers);

        this.stackClient = this.options.oauth ? new _cozyStackClient.OAuthClient(options) : new _cozyStackClient.default(options);
      }

      this.client = new Proxy(this.stackClient, deprecatedHandler('Using cozyClient.client is deprecated, please use cozyClient.stackClient.'));
    }
  }, {
    key: "getClient",
    value: function getClient() {
      _logger.default.warn('CozyClient: getClient() is deprecated, please use getStackClient().');

      return this.getStackClient();
    }
  }, {
    key: "getStackClient",
    value: function getStackClient() {
      if (!this.stackClient) {
        this.createClient();
      }

      return this.stackClient;
    }
  }, {
    key: "reducer",
    value: function reducer() {
      return _store.default;
    }
  }, {
    key: "dispatch",
    value: function dispatch(action) {
      return this.store.dispatch(action);
    }
    /**
     * getInstanceOptions - Returns current instance options, such as domain or app slug
     *
     * @returns {object}
     */

  }, {
    key: "getInstanceOptions",
    value: function getInstanceOptions() {
      return this.instanceOptions;
    }
    /**
     * loadInstanceOptionsFromDOM - Loads the dataset injected by the Stack in web pages and exposes it through getInstanceOptions
     *
     * @param {string} [selector=[role=application]] A selector for the node that holds the dataset to load
     *
     * @returns {void}
     */

  }, {
    key: "loadInstanceOptionsFromDOM",
    value: function loadInstanceOptionsFromDOM() {
      var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '[role=application]';
      var root = document.querySelector(selector);

      if (!(root instanceof HTMLElement)) {
        throw new Error('The selector that is passed does not return an HTMLElement');
      }

      var _root$dataset = root.dataset,
          _root$dataset$cozy = _root$dataset.cozy,
          cozy = _root$dataset$cozy === void 0 ? '{}' : _root$dataset$cozy,
          dataset = (0, _objectWithoutProperties2.default)(_root$dataset, ["cozy"]);
      this.instanceOptions = _objectSpread(_objectSpread({}, JSON.parse(cozy)), dataset);
      this.capabilities = this.instanceOptions.capabilities || null;
    }
    /**
     * loadInstanceOptionsFromStack - Loads the instance options from cozy-stack and exposes it through getInstanceOptions
     *
     * This method is not iso with loadInstanceOptionsFromDOM for now.
     *
     * @returns {Promise<void>}
     */

  }, {
    key: "loadInstanceOptionsFromStack",
    value: function () {
      var _loadInstanceOptionsFromStack = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee18() {
        var _instanceData$attribu, _instanceData$attribu2;

        var _yield$this$query, data, _yield$this$query2, instanceData;

        return _regenerator.default.wrap(function _callee18$(_context18) {
          while (1) {
            switch (_context18.prev = _context18.next) {
              case 0:
                _context18.next = 2;
                return this.query((0, _dsl.Q)('io.cozy.settings').getById('io.cozy.settings.capabilities'));

              case 2:
                _yield$this$query = _context18.sent;
                data = _yield$this$query.data;
                _context18.next = 6;
                return this.query((0, _dsl.Q)('io.cozy.settings').getById('io.cozy.settings.instance'));

              case 6:
                _yield$this$query2 = _context18.sent;
                instanceData = _yield$this$query2.data;
                this.instanceOptions = {
                  capabilities: data.attributes,
                  locale: (_instanceData$attribu = instanceData.attributes) === null || _instanceData$attribu === void 0 ? void 0 : _instanceData$attribu.locale,
                  tracking: (_instanceData$attribu2 = instanceData.attributes) === null || _instanceData$attribu2 === void 0 ? void 0 : _instanceData$attribu2.tracking
                };
                this.capabilities = this.instanceOptions.capabilities || null;

              case 10:
              case "end":
                return _context18.stop();
            }
          }
        }, _callee18, this);
      }));

      function loadInstanceOptionsFromStack() {
        return _loadInstanceOptionsFromStack.apply(this, arguments);
      }

      return loadInstanceOptionsFromStack;
    }()
    /**
     * Directly set the data in the store, without using a query
     * This is useful for cases like Pouch replication, which wants to
     * set some data in the store.
     *
     * @param {object} data - Data that is inserted in the store. Shape: { doctype: [data] }
     */

  }, {
    key: "setData",
    value: function setData(data) {
      var _this10 = this;

      this.ensureStore();
      Object.entries(data).forEach(function (_ref9) {
        var _ref10 = (0, _slicedToArray2.default)(_ref9, 2),
            doctype = _ref10[0],
            data = _ref10[1];

        _this10.dispatch((0, _store.receiveQueryResult)(null, {
          data: data
        }));
      });
    }
    /**
     * At any time put an error function
     *
     * @param {Function} [onError] - Set a callback for queries which are errored
     * @throws {Error} onError should not have been defined yet
     */

  }, {
    key: "setOnError",
    value: function setOnError(onError) {
      if (this.options && this.options.onError) {
        throw new Error('On Error is already defined');
      }

      this.options.onError = onError;
    }
  }, {
    key: "toJSON",
    value: function toJSON() {
      return new _snapshots.CozyClient({
        uri: this.options.uri
      });
    }
    /**
     *
     * @param {import("./types").AppMetadata} newAppMetadata AppMetadata to update
     */

  }, {
    key: "setAppMetadata",
    value: function setAppMetadata(newAppMetadata) {
      this.appMetadata = _objectSpread(_objectSpread({}, this.appMetadata), newAppMetadata);
    }
    /**
     * Query the cozy-app settings corresponding to the given slug and
     * extract the value corresponding to the given `key`
     *
     * @template {string} T
     *
     * @param {string} slug - the cozy-app's slug containing the setting (can be 'instance' for global settings)
     * @param {T[]} keys - The names of the settings to retrieve
     * @returns {Promise<Record<T, any>>} - The value of the requested setting
     */

  }, {
    key: "getSettings",
    value: function () {
      var _getSettings2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee19(slug, keys) {
        return _regenerator.default.wrap(function _callee19$(_context19) {
          while (1) {
            switch (_context19.prev = _context19.next) {
              case 0:
                return _context19.abrupt("return", (0, _helpers2.getSettings)(this, slug, keys));

              case 1:
              case "end":
                return _context19.stop();
            }
          }
        }, _callee19, this);
      }));

      function getSettings(_x17, _x18) {
        return _getSettings2.apply(this, arguments);
      }

      return getSettings;
    }()
    /**
     * Save the given value into the corresponding cozy-app setting
     *
     * This methods will first query the cozy-app's settings before injecting the new value and then
     * save the new resulting settings into database
     *
     * @template {string} T
     *
     * @param {string} slug - the cozy-app's slug containing the setting (can be 'instance' for global settings)
     * @param {Record<string, any> | ((oldValue) => Record<T, any>)} itemsOrSetter - The new values of the settings to save. It can be a raw dictionnary, or a callback that should return a new dictionnary
     * @param {T[]=} setterKeys - The new values of the settings to save. It can be a raw dictionnary, or a callback that should return a new dictionnary
     * @returns {Promise<any>} - The result of the `client.save()` call
     */

  }, {
    key: "saveAfterFetchSettings",
    value: function () {
      var _saveAfterFetchSettings2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee20(slug, itemsOrSetter, setterKeys) {
        return _regenerator.default.wrap(function _callee20$(_context20) {
          while (1) {
            switch (_context20.prev = _context20.next) {
              case 0:
                return _context20.abrupt("return", (0, _helpers2.saveAfterFetchSettings)(this, slug, itemsOrSetter, setterKeys));

              case 1:
              case "end":
                return _context20.stop();
            }
          }
        }, _callee20, this);
      }));

      function saveAfterFetchSettings(_x19, _x20, _x21) {
        return _saveAfterFetchSettings2.apply(this, arguments);
      }

      return saveAfterFetchSettings;
    }()
  }], [{
    key: "fromOldClient",
    value: function fromOldClient(oldClient, options) {
      return new CozyClient(_objectSpread({
        uri: oldClient._url,
        token: oldClient._token.token
      }, options));
    }
    /**
     * To help with the transition from cozy-client-js to cozy-client, it is possible to instantiate
     * a client with an OAuth-based instance of cozy-client-js.
     *
     * Warning: unlike other instantiators, this one needs to be awaited.
     *
     * @param {import("./types").OldCozyClient} oldClient - An OAuth instance of the deprecated cozy-client
     * @param {object} options - CozyStackClient options
     * @returns {Promise<CozyClient>} An instance of a client, configured from the old client
     */

  }, {
    key: "fromOldOAuthClient",
    value: function () {
      var _fromOldOAuthClient = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee21(oldClient, options) {
        var credentials, oauthOptions, client;
        return _regenerator.default.wrap(function _callee21$(_context21) {
          while (1) {
            switch (_context21.prev = _context21.next) {
              case 0:
                if (!oldClient._oauth) {
                  _context21.next = 12;
                  break;
                }

                _context21.next = 3;
                return oldClient.authorize();

              case 3:
                credentials = _context21.sent;
                oauthOptions = {
                  oauth: credentials.client,
                  token: credentials.token,
                  scope: credentials.token.scope
                };
                client = new CozyClient(_objectSpread(_objectSpread({
                  uri: oldClient._url
                }, oauthOptions), options));

                if (!client.loginPromise) {
                  _context21.next = 9;
                  break;
                }

                _context21.next = 9;
                return client.loginPromise;

              case 9:
                return _context21.abrupt("return", client);

              case 12:
                throw new Error('Cannot instantiate a new client: old client is not an OAuth client. CozyClient.fromOldClient might be more suitable.');

              case 13:
              case "end":
                return _context21.stop();
            }
          }
        }, _callee21);
      }));

      function fromOldOAuthClient(_x22, _x23) {
        return _fromOldOAuthClient.apply(this, arguments);
      }

      return fromOldOAuthClient;
    }()
    /**
     * In konnector/service context, CozyClient can be instantiated from
     * environment variables
     *
     * @param  {import("./types").NodeEnvironment} [envArg]  - The environment
     * @param  {object} options - Options
     * @returns {CozyClient}
     */

  }, {
    key: "fromEnv",
    value: function fromEnv(envArg) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var env = envArg || (typeof process !== 'undefined' ? process.env : {});
      var COZY_URL = env.COZY_URL,
          COZY_CREDENTIALS = env.COZY_CREDENTIALS;

      if (!COZY_URL || !COZY_CREDENTIALS) {
        throw new Error('Env used to instantiate CozyClient must have COZY_URL and COZY_CREDENTIALS');
      }

      try {
        options.oauth = JSON.parse(COZY_CREDENTIALS);
      } catch (err) {
        options.token = COZY_CREDENTIALS.trim();
      }

      options.uri = COZY_URL.trim();
      return new CozyClient(_objectSpread({}, options));
    }
    /**
     * When used from an app, CozyClient can be instantiated from the data injected by the stack in
     * the DOM.
     *
     * @param  {object}   options  - CozyClient constructor options
     * @param  {string}   selector - Options
     * @returns {CozyClient} - CozyClient instance
     */

  }, {
    key: "fromDOM",
    value: function fromDOM() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var selector = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '[role=application]';
      var root = document.querySelector(selector);

      if (!(root instanceof HTMLElement)) {
        throw new Error("Cannot find an HTMLElement corresponding to ".concat(selector));
      }

      if (!root || !root.dataset) {
        throw new Error("Found no data in ".concat(selector, " to instantiate cozyClient"));
      }

      var data = root.dataset.cozy ? JSON.parse(root.dataset.cozy) : _objectSpread({}, root.dataset);
      var domain = data.domain,
          token = data.token;

      if (!domain || !token) {
        domain = domain || data.cozyDomain;
        token = token || data.cozyToken;
      }

      if (!domain || !token) {
        throw new Error("Found no data in ".concat(root.dataset, " to instantiate cozyClient"));
      }

      return new CozyClient(_objectSpread({
        uri: "".concat(window.location.protocol, "//").concat(domain),
        token: token,
        capabilities: data.capabilities
      }, options));
    }
  }, {
    key: "registerHook",
    value: function registerHook(doctype, name, fn) {
      var hooks = CozyClient.hooks[doctype] = CozyClient.hooks[doctype] || {};
      hooks[name] = hooks[name] || [];
      hooks[name].push(fn);
    }
  }]);
  return CozyClient;
}();

CozyClient.hooks = CozyClient.hooks || {};
CozyClient.fetchPolicies = _policies.default; //COZY_CLIENT_VERSION_PACKAGE in replaced by babel. See babel config

CozyClient.version = "46.9.1";

_microee.default.mixin(CozyClient);

var _default = CozyClient;
exports.default = _default;

/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

var arrayWithoutHoles = __webpack_require__(505);
var iterableToArray = __webpack_require__(231);
var unsupportedIterableToArray = __webpack_require__(164);
var nonIterableSpread = __webpack_require__(506);
function _toConsumableArray(arr) {
  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();
}
module.exports = _toConsumableArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var undefined;

var $SyntaxError = SyntaxError;
var $Function = Function;
var $TypeError = TypeError;

// eslint-disable-next-line consistent-return
var getEvalledConstructor = function (expressionSyntax) {
	try {
		return $Function('"use strict"; return (' + expressionSyntax + ').constructor;')();
	} catch (e) {}
};

var $gOPD = Object.getOwnPropertyDescriptor;
if ($gOPD) {
	try {
		$gOPD({}, '');
	} catch (e) {
		$gOPD = null; // this is IE 8, which has a broken gOPD
	}
}

var throwTypeError = function () {
	throw new $TypeError();
};
var ThrowTypeError = $gOPD
	? (function () {
		try {
			// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties
			arguments.callee; // IE 8 does not throw here
			return throwTypeError;
		} catch (calleeThrows) {
			try {
				// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')
				return $gOPD(arguments, 'callee').get;
			} catch (gOPDthrows) {
				return throwTypeError;
			}
		}
	}())
	: throwTypeError;

var hasSymbols = __webpack_require__(136)();
var hasProto = __webpack_require__(762)();

var getProto = Object.getPrototypeOf || (
	hasProto
		? function (x) { return x.__proto__; } // eslint-disable-line no-proto
		: null
);

var needsEval = {};

var TypedArray = typeof Uint8Array === 'undefined' || !getProto ? undefined : getProto(Uint8Array);

var INTRINSICS = {
	'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,
	'%Array%': Array,
	'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,
	'%ArrayIteratorPrototype%': hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined,
	'%AsyncFromSyncIteratorPrototype%': undefined,
	'%AsyncFunction%': needsEval,
	'%AsyncGenerator%': needsEval,
	'%AsyncGeneratorFunction%': needsEval,
	'%AsyncIteratorPrototype%': needsEval,
	'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,
	'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,
	'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,
	'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,
	'%Boolean%': Boolean,
	'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,
	'%Date%': Date,
	'%decodeURI%': decodeURI,
	'%decodeURIComponent%': decodeURIComponent,
	'%encodeURI%': encodeURI,
	'%encodeURIComponent%': encodeURIComponent,
	'%Error%': Error,
	'%eval%': eval, // eslint-disable-line no-eval
	'%EvalError%': EvalError,
	'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,
	'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,
	'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,
	'%Function%': $Function,
	'%GeneratorFunction%': needsEval,
	'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,
	'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,
	'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,
	'%isFinite%': isFinite,
	'%isNaN%': isNaN,
	'%IteratorPrototype%': hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined,
	'%JSON%': typeof JSON === 'object' ? JSON : undefined,
	'%Map%': typeof Map === 'undefined' ? undefined : Map,
	'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]()),
	'%Math%': Math,
	'%Number%': Number,
	'%Object%': Object,
	'%parseFloat%': parseFloat,
	'%parseInt%': parseInt,
	'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,
	'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,
	'%RangeError%': RangeError,
	'%ReferenceError%': ReferenceError,
	'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,
	'%RegExp%': RegExp,
	'%Set%': typeof Set === 'undefined' ? undefined : Set,
	'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Set()[Symbol.iterator]()),
	'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,
	'%String%': String,
	'%StringIteratorPrototype%': hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined,
	'%Symbol%': hasSymbols ? Symbol : undefined,
	'%SyntaxError%': $SyntaxError,
	'%ThrowTypeError%': ThrowTypeError,
	'%TypedArray%': TypedArray,
	'%TypeError%': $TypeError,
	'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,
	'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,
	'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,
	'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,
	'%URIError%': URIError,
	'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,
	'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,
	'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet
};

if (getProto) {
	try {
		null.error; // eslint-disable-line no-unused-expressions
	} catch (e) {
		// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229
		var errorProto = getProto(getProto(e));
		INTRINSICS['%Error.prototype%'] = errorProto;
	}
}

var doEval = function doEval(name) {
	var value;
	if (name === '%AsyncFunction%') {
		value = getEvalledConstructor('async function () {}');
	} else if (name === '%GeneratorFunction%') {
		value = getEvalledConstructor('function* () {}');
	} else if (name === '%AsyncGeneratorFunction%') {
		value = getEvalledConstructor('async function* () {}');
	} else if (name === '%AsyncGenerator%') {
		var fn = doEval('%AsyncGeneratorFunction%');
		if (fn) {
			value = fn.prototype;
		}
	} else if (name === '%AsyncIteratorPrototype%') {
		var gen = doEval('%AsyncGenerator%');
		if (gen && getProto) {
			value = getProto(gen.prototype);
		}
	}

	INTRINSICS[name] = value;

	return value;
};

var LEGACY_ALIASES = {
	'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],
	'%ArrayPrototype%': ['Array', 'prototype'],
	'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],
	'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],
	'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],
	'%ArrayProto_values%': ['Array', 'prototype', 'values'],
	'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],
	'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],
	'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],
	'%BooleanPrototype%': ['Boolean', 'prototype'],
	'%DataViewPrototype%': ['DataView', 'prototype'],
	'%DatePrototype%': ['Date', 'prototype'],
	'%ErrorPrototype%': ['Error', 'prototype'],
	'%EvalErrorPrototype%': ['EvalError', 'prototype'],
	'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],
	'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],
	'%FunctionPrototype%': ['Function', 'prototype'],
	'%Generator%': ['GeneratorFunction', 'prototype'],
	'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],
	'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],
	'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],
	'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],
	'%JSONParse%': ['JSON', 'parse'],
	'%JSONStringify%': ['JSON', 'stringify'],
	'%MapPrototype%': ['Map', 'prototype'],
	'%NumberPrototype%': ['Number', 'prototype'],
	'%ObjectPrototype%': ['Object', 'prototype'],
	'%ObjProto_toString%': ['Object', 'prototype', 'toString'],
	'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],
	'%PromisePrototype%': ['Promise', 'prototype'],
	'%PromiseProto_then%': ['Promise', 'prototype', 'then'],
	'%Promise_all%': ['Promise', 'all'],
	'%Promise_reject%': ['Promise', 'reject'],
	'%Promise_resolve%': ['Promise', 'resolve'],
	'%RangeErrorPrototype%': ['RangeError', 'prototype'],
	'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],
	'%RegExpPrototype%': ['RegExp', 'prototype'],
	'%SetPrototype%': ['Set', 'prototype'],
	'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],
	'%StringPrototype%': ['String', 'prototype'],
	'%SymbolPrototype%': ['Symbol', 'prototype'],
	'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],
	'%TypedArrayPrototype%': ['TypedArray', 'prototype'],
	'%TypeErrorPrototype%': ['TypeError', 'prototype'],
	'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],
	'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],
	'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],
	'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],
	'%URIErrorPrototype%': ['URIError', 'prototype'],
	'%WeakMapPrototype%': ['WeakMap', 'prototype'],
	'%WeakSetPrototype%': ['WeakSet', 'prototype']
};

var bind = __webpack_require__(102);
var hasOwn = __webpack_require__(105);
var $concat = bind.call(Function.call, Array.prototype.concat);
var $spliceApply = bind.call(Function.apply, Array.prototype.splice);
var $replace = bind.call(Function.call, String.prototype.replace);
var $strSlice = bind.call(Function.call, String.prototype.slice);
var $exec = bind.call(Function.call, RegExp.prototype.exec);

/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */
var rePropName = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
var reEscapeChar = /\\(\\)?/g; /** Used to match backslashes in property paths. */
var stringToPath = function stringToPath(string) {
	var first = $strSlice(string, 0, 1);
	var last = $strSlice(string, -1);
	if (first === '%' && last !== '%') {
		throw new $SyntaxError('invalid intrinsic syntax, expected closing `%`');
	} else if (last === '%' && first !== '%') {
		throw new $SyntaxError('invalid intrinsic syntax, expected opening `%`');
	}
	var result = [];
	$replace(string, rePropName, function (match, number, quote, subString) {
		result[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;
	});
	return result;
};
/* end adaptation */

var getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {
	var intrinsicName = name;
	var alias;
	if (hasOwn(LEGACY_ALIASES, intrinsicName)) {
		alias = LEGACY_ALIASES[intrinsicName];
		intrinsicName = '%' + alias[0] + '%';
	}

	if (hasOwn(INTRINSICS, intrinsicName)) {
		var value = INTRINSICS[intrinsicName];
		if (value === needsEval) {
			value = doEval(intrinsicName);
		}
		if (typeof value === 'undefined' && !allowMissing) {
			throw new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');
		}

		return {
			alias: alias,
			name: intrinsicName,
			value: value
		};
	}

	throw new $SyntaxError('intrinsic ' + name + ' does not exist!');
};

module.exports = function GetIntrinsic(name, allowMissing) {
	if (typeof name !== 'string' || name.length === 0) {
		throw new $TypeError('intrinsic name must be a non-empty string');
	}
	if (arguments.length > 1 && typeof allowMissing !== 'boolean') {
		throw new $TypeError('"allowMissing" argument must be a boolean');
	}

	if ($exec(/^%?[^%]*%?$/, name) === null) {
		throw new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');
	}
	var parts = stringToPath(name);
	var intrinsicBaseName = parts.length > 0 ? parts[0] : '';

	var intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);
	var intrinsicRealName = intrinsic.name;
	var value = intrinsic.value;
	var skipFurtherCaching = false;

	var alias = intrinsic.alias;
	if (alias) {
		intrinsicBaseName = alias[0];
		$spliceApply(parts, $concat([0, 1], alias));
	}

	for (var i = 1, isOwn = true; i < parts.length; i += 1) {
		var part = parts[i];
		var first = $strSlice(part, 0, 1);
		var last = $strSlice(part, -1);
		if (
			(
				(first === '"' || first === "'" || first === '`')
				|| (last === '"' || last === "'" || last === '`')
			)
			&& first !== last
		) {
			throw new $SyntaxError('property names with quotes must have matching quotes');
		}
		if (part === 'constructor' || !isOwn) {
			skipFurtherCaching = true;
		}

		intrinsicBaseName += '.' + part;
		intrinsicRealName = '%' + intrinsicBaseName + '%';

		if (hasOwn(INTRINSICS, intrinsicRealName)) {
			value = INTRINSICS[intrinsicRealName];
		} else if (value != null) {
			if (!(part in value)) {
				if (!allowMissing) {
					throw new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');
				}
				return void undefined;
			}
			if ($gOPD && (i + 1) >= parts.length) {
				var desc = $gOPD(value, part);
				isOwn = !!desc;

				// By convention, when a data property is converted to an accessor
				// property to emulate a data property that does not suffer from
				// the override mistake, that accessor's getter is marked with
				// an `originalValue` property. Here, when we detect this, we
				// uphold the illusion by pretending to see that original data
				// property, i.e., returning the value rather than the getter
				// itself.
				if (isOwn && 'get' in desc && !('originalValue' in desc.get)) {
					value = desc.get;
				} else {
					value = value[part];
				}
			} else {
				isOwn = hasOwn(value, part);
				value = value[part];
			}

			if (isOwn && !skipFurtherCaching) {
				INTRINSICS[intrinsicRealName] = value;
			}
		}
	}
	return value;
};


/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

var freeGlobal = __webpack_require__(225);

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

module.exports = root;


/***/ }),
/* 44 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return startOfMonth; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(5);


/**
 * @name startOfMonth
 * @category Month Helpers
 * @summary Return the start of a month for the given date.
 *
 * @description
 * Return the start of a month for the given date.
 * The result will be in the local timezone.
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the start of a month
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The start of a month for 2 September 2014 11:55:00:
 * const result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Mon Sep 01 2014 00:00:00
 */

function startOfMonth(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])(1, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(dirtyDate);
  date.setDate(1);
  date.setHours(0, 0, 0, 0);
  return date;
}

/***/ }),
/* 45 */
/***/ (function(module, exports) {

function _taggedTemplateLiteral(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, {
    raw: {
      value: Object.freeze(raw)
    }
  }));
}
module.exports = _taggedTemplateLiteral, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.formatBytes = exports.slugify = exports.sleep = exports.attempt = exports.uri = void 0;

/**
 * @function
 * @description Template tag function for URIs encoding
 *
 * Will automatically apply `encodeURIComponent` to template literal placeholders
 *
 * @example
 * ```
 * const safe = uri`/data/${doctype}/_all_docs?limit=${limit}`
 * ```
 *
 * @private
 */
var uri = function uri(strings) {
  var parts = [strings[0]];

  for (var i = 0; i < (arguments.length <= 1 ? 0 : arguments.length - 1); i++) {
    parts.push(encodeURIComponent(i + 1 < 1 || arguments.length <= i + 1 ? undefined : arguments[i + 1]) + strings[i + 1]);
  }

  return parts.join('');
};
/**
 * @function
 * @description Helps to avoid nested try/catch when using async/await
 *
 * Inspired by a Go pattern: http://blog.grossman.io/how-to-write-async-await-without-try-catch-blocks-in-javascript/
 *
 * @example
 * ```
 * if (await attempt(collection.all()) return
 * await sleep(1000)
 * if (await attempt(collection.all()) return
 * await sleep(1000)
 * return
 * ```
 *
 * @private
 */


exports.uri = uri;

var attempt = function attempt(promise) {
  return promise.then(function () {
    return true;
  }).catch(function () {
    return false;
  });
};
/**
 * @function
 * @description Helps to avoid nested try/catch when using async/await — see documentation for attempt
 * @private
 */


exports.attempt = attempt;

var sleep = function sleep(time, args) {
  return new Promise(function (resolve) {
    setTimeout(resolve, time, args);
  });
};

exports.sleep = sleep;

var slugify = function slugify(text) {
  return text.toString().toLowerCase().replace(/\s+/g, '-') // Replace spaces with -
  .replace(/[^\w-]+/g, '') // Remove all non-word chars
  .replace(/--+/g, '-') // Replace multiple - with single -
  .replace(/^-+/, '') // Trim - from start of text
  .replace(/-+$/, '');
}; // Trim - from end of text


exports.slugify = slugify;

var formatBytes = function formatBytes(bytes) {
  var decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;
  if (bytes === 0) return '0 Bytes';
  var k = 1024;
  var dm = decimals < 0 ? 0 : decimals;
  var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];
  var i = Math.floor(Math.log(bytes) / Math.log(k));
  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];
};

exports.formatBytes = formatBytes;

/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

var baseMatches = __webpack_require__(514),
    baseMatchesProperty = __webpack_require__(527),
    identity = __webpack_require__(85),
    isArray = __webpack_require__(21),
    property = __webpack_require__(530);

/**
 * The base implementation of `_.iteratee`.
 *
 * @private
 * @param {*} [value=_.identity] The value to convert to an iteratee.
 * @returns {Function} Returns the iteratee.
 */
function baseIteratee(value) {
  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
  if (typeof value == 'function') {
    return value;
  }
  if (value == null) {
    return identity;
  }
  if (typeof value == 'object') {
    return isArray(value)
      ? baseMatchesProperty(value[0], value[1])
      : baseMatches(value);
  }
  return property(value);
}

module.exports = baseIteratee;


/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _flag = _interopRequireDefault(__webpack_require__(554));

/* global __ENABLED_FLAGS__ */
if (typeof __ENABLED_FLAGS__ !== 'undefined') {
  _flag.default.enable(__ENABLED_FLAGS__);
}

var _default = _flag.default;
exports.default = _default;

/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

const punycode = __webpack_require__(214);
const tr46 = __webpack_require__(470);

const specialSchemes = {
  ftp: 21,
  file: null,
  gopher: 70,
  http: 80,
  https: 443,
  ws: 80,
  wss: 443
};

const failure = Symbol("failure");

function countSymbols(str) {
  return punycode.ucs2.decode(str).length;
}

function at(input, idx) {
  const c = input[idx];
  return isNaN(c) ? undefined : String.fromCodePoint(c);
}

function isASCIIDigit(c) {
  return c >= 0x30 && c <= 0x39;
}

function isASCIIAlpha(c) {
  return (c >= 0x41 && c <= 0x5A) || (c >= 0x61 && c <= 0x7A);
}

function isASCIIAlphanumeric(c) {
  return isASCIIAlpha(c) || isASCIIDigit(c);
}

function isASCIIHex(c) {
  return isASCIIDigit(c) || (c >= 0x41 && c <= 0x46) || (c >= 0x61 && c <= 0x66);
}

function isSingleDot(buffer) {
  return buffer === "." || buffer.toLowerCase() === "%2e";
}

function isDoubleDot(buffer) {
  buffer = buffer.toLowerCase();
  return buffer === ".." || buffer === "%2e." || buffer === ".%2e" || buffer === "%2e%2e";
}

function isWindowsDriveLetterCodePoints(cp1, cp2) {
  return isASCIIAlpha(cp1) && (cp2 === 58 || cp2 === 124);
}

function isWindowsDriveLetterString(string) {
  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && (string[1] === ":" || string[1] === "|");
}

function isNormalizedWindowsDriveLetterString(string) {
  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && string[1] === ":";
}

function containsForbiddenHostCodePoint(string) {
  return string.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|%|\/|:|\?|@|\[|\\|\]/) !== -1;
}

function containsForbiddenHostCodePointExcludingPercent(string) {
  return string.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|\/|:|\?|@|\[|\\|\]/) !== -1;
}

function isSpecialScheme(scheme) {
  return specialSchemes[scheme] !== undefined;
}

function isSpecial(url) {
  return isSpecialScheme(url.scheme);
}

function defaultPort(scheme) {
  return specialSchemes[scheme];
}

function percentEncode(c) {
  let hex = c.toString(16).toUpperCase();
  if (hex.length === 1) {
    hex = "0" + hex;
  }

  return "%" + hex;
}

function utf8PercentEncode(c) {
  const buf = new Buffer(c);

  let str = "";

  for (let i = 0; i < buf.length; ++i) {
    str += percentEncode(buf[i]);
  }

  return str;
}

function utf8PercentDecode(str) {
  const input = new Buffer(str);
  const output = [];
  for (let i = 0; i < input.length; ++i) {
    if (input[i] !== 37) {
      output.push(input[i]);
    } else if (input[i] === 37 && isASCIIHex(input[i + 1]) && isASCIIHex(input[i + 2])) {
      output.push(parseInt(input.slice(i + 1, i + 3).toString(), 16));
      i += 2;
    } else {
      output.push(input[i]);
    }
  }
  return new Buffer(output).toString();
}

function isC0ControlPercentEncode(c) {
  return c <= 0x1F || c > 0x7E;
}

const extraPathPercentEncodeSet = new Set([32, 34, 35, 60, 62, 63, 96, 123, 125]);
function isPathPercentEncode(c) {
  return isC0ControlPercentEncode(c) || extraPathPercentEncodeSet.has(c);
}

const extraUserinfoPercentEncodeSet =
  new Set([47, 58, 59, 61, 64, 91, 92, 93, 94, 124]);
function isUserinfoPercentEncode(c) {
  return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);
}

function percentEncodeChar(c, encodeSetPredicate) {
  const cStr = String.fromCodePoint(c);

  if (encodeSetPredicate(c)) {
    return utf8PercentEncode(cStr);
  }

  return cStr;
}

function parseIPv4Number(input) {
  let R = 10;

  if (input.length >= 2 && input.charAt(0) === "0" && input.charAt(1).toLowerCase() === "x") {
    input = input.substring(2);
    R = 16;
  } else if (input.length >= 2 && input.charAt(0) === "0") {
    input = input.substring(1);
    R = 8;
  }

  if (input === "") {
    return 0;
  }

  const regex = R === 10 ? /[^0-9]/ : (R === 16 ? /[^0-9A-Fa-f]/ : /[^0-7]/);
  if (regex.test(input)) {
    return failure;
  }

  return parseInt(input, R);
}

function parseIPv4(input) {
  const parts = input.split(".");
  if (parts[parts.length - 1] === "") {
    if (parts.length > 1) {
      parts.pop();
    }
  }

  if (parts.length > 4) {
    return input;
  }

  const numbers = [];
  for (const part of parts) {
    if (part === "") {
      return input;
    }
    const n = parseIPv4Number(part);
    if (n === failure) {
      return input;
    }

    numbers.push(n);
  }

  for (let i = 0; i < numbers.length - 1; ++i) {
    if (numbers[i] > 255) {
      return failure;
    }
  }
  if (numbers[numbers.length - 1] >= Math.pow(256, 5 - numbers.length)) {
    return failure;
  }

  let ipv4 = numbers.pop();
  let counter = 0;

  for (const n of numbers) {
    ipv4 += n * Math.pow(256, 3 - counter);
    ++counter;
  }

  return ipv4;
}

function serializeIPv4(address) {
  let output = "";
  let n = address;

  for (let i = 1; i <= 4; ++i) {
    output = String(n % 256) + output;
    if (i !== 4) {
      output = "." + output;
    }
    n = Math.floor(n / 256);
  }

  return output;
}

function parseIPv6(input) {
  const address = [0, 0, 0, 0, 0, 0, 0, 0];
  let pieceIndex = 0;
  let compress = null;
  let pointer = 0;

  input = punycode.ucs2.decode(input);

  if (input[pointer] === 58) {
    if (input[pointer + 1] !== 58) {
      return failure;
    }

    pointer += 2;
    ++pieceIndex;
    compress = pieceIndex;
  }

  while (pointer < input.length) {
    if (pieceIndex === 8) {
      return failure;
    }

    if (input[pointer] === 58) {
      if (compress !== null) {
        return failure;
      }
      ++pointer;
      ++pieceIndex;
      compress = pieceIndex;
      continue;
    }

    let value = 0;
    let length = 0;

    while (length < 4 && isASCIIHex(input[pointer])) {
      value = value * 0x10 + parseInt(at(input, pointer), 16);
      ++pointer;
      ++length;
    }

    if (input[pointer] === 46) {
      if (length === 0) {
        return failure;
      }

      pointer -= length;

      if (pieceIndex > 6) {
        return failure;
      }

      let numbersSeen = 0;

      while (input[pointer] !== undefined) {
        let ipv4Piece = null;

        if (numbersSeen > 0) {
          if (input[pointer] === 46 && numbersSeen < 4) {
            ++pointer;
          } else {
            return failure;
          }
        }

        if (!isASCIIDigit(input[pointer])) {
          return failure;
        }

        while (isASCIIDigit(input[pointer])) {
          const number = parseInt(at(input, pointer));
          if (ipv4Piece === null) {
            ipv4Piece = number;
          } else if (ipv4Piece === 0) {
            return failure;
          } else {
            ipv4Piece = ipv4Piece * 10 + number;
          }
          if (ipv4Piece > 255) {
            return failure;
          }
          ++pointer;
        }

        address[pieceIndex] = address[pieceIndex] * 0x100 + ipv4Piece;

        ++numbersSeen;

        if (numbersSeen === 2 || numbersSeen === 4) {
          ++pieceIndex;
        }
      }

      if (numbersSeen !== 4) {
        return failure;
      }

      break;
    } else if (input[pointer] === 58) {
      ++pointer;
      if (input[pointer] === undefined) {
        return failure;
      }
    } else if (input[pointer] !== undefined) {
      return failure;
    }

    address[pieceIndex] = value;
    ++pieceIndex;
  }

  if (compress !== null) {
    let swaps = pieceIndex - compress;
    pieceIndex = 7;
    while (pieceIndex !== 0 && swaps > 0) {
      const temp = address[compress + swaps - 1];
      address[compress + swaps - 1] = address[pieceIndex];
      address[pieceIndex] = temp;
      --pieceIndex;
      --swaps;
    }
  } else if (compress === null && pieceIndex !== 8) {
    return failure;
  }

  return address;
}

function serializeIPv6(address) {
  let output = "";
  const seqResult = findLongestZeroSequence(address);
  const compress = seqResult.idx;
  let ignore0 = false;

  for (let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex) {
    if (ignore0 && address[pieceIndex] === 0) {
      continue;
    } else if (ignore0) {
      ignore0 = false;
    }

    if (compress === pieceIndex) {
      const separator = pieceIndex === 0 ? "::" : ":";
      output += separator;
      ignore0 = true;
      continue;
    }

    output += address[pieceIndex].toString(16);

    if (pieceIndex !== 7) {
      output += ":";
    }
  }

  return output;
}

function parseHost(input, isSpecialArg) {
  if (input[0] === "[") {
    if (input[input.length - 1] !== "]") {
      return failure;
    }

    return parseIPv6(input.substring(1, input.length - 1));
  }

  if (!isSpecialArg) {
    return parseOpaqueHost(input);
  }

  const domain = utf8PercentDecode(input);
  const asciiDomain = tr46.toASCII(domain, false, tr46.PROCESSING_OPTIONS.NONTRANSITIONAL, false);
  if (asciiDomain === null) {
    return failure;
  }

  if (containsForbiddenHostCodePoint(asciiDomain)) {
    return failure;
  }

  const ipv4Host = parseIPv4(asciiDomain);
  if (typeof ipv4Host === "number" || ipv4Host === failure) {
    return ipv4Host;
  }

  return asciiDomain;
}

function parseOpaqueHost(input) {
  if (containsForbiddenHostCodePointExcludingPercent(input)) {
    return failure;
  }

  let output = "";
  const decoded = punycode.ucs2.decode(input);
  for (let i = 0; i < decoded.length; ++i) {
    output += percentEncodeChar(decoded[i], isC0ControlPercentEncode);
  }
  return output;
}

function findLongestZeroSequence(arr) {
  let maxIdx = null;
  let maxLen = 1; // only find elements > 1
  let currStart = null;
  let currLen = 0;

  for (let i = 0; i < arr.length; ++i) {
    if (arr[i] !== 0) {
      if (currLen > maxLen) {
        maxIdx = currStart;
        maxLen = currLen;
      }

      currStart = null;
      currLen = 0;
    } else {
      if (currStart === null) {
        currStart = i;
      }
      ++currLen;
    }
  }

  // if trailing zeros
  if (currLen > maxLen) {
    maxIdx = currStart;
    maxLen = currLen;
  }

  return {
    idx: maxIdx,
    len: maxLen
  };
}

function serializeHost(host) {
  if (typeof host === "number") {
    return serializeIPv4(host);
  }

  // IPv6 serializer
  if (host instanceof Array) {
    return "[" + serializeIPv6(host) + "]";
  }

  return host;
}

function trimControlChars(url) {
  return url.replace(/^[\u0000-\u001F\u0020]+|[\u0000-\u001F\u0020]+$/g, "");
}

function trimTabAndNewline(url) {
  return url.replace(/\u0009|\u000A|\u000D/g, "");
}

function shortenPath(url) {
  const path = url.path;
  if (path.length === 0) {
    return;
  }
  if (url.scheme === "file" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {
    return;
  }

  path.pop();
}

function includesCredentials(url) {
  return url.username !== "" || url.password !== "";
}

function cannotHaveAUsernamePasswordPort(url) {
  return url.host === null || url.host === "" || url.cannotBeABaseURL || url.scheme === "file";
}

function isNormalizedWindowsDriveLetter(string) {
  return /^[A-Za-z]:$/.test(string);
}

function URLStateMachine(input, base, encodingOverride, url, stateOverride) {
  this.pointer = 0;
  this.input = input;
  this.base = base || null;
  this.encodingOverride = encodingOverride || "utf-8";
  this.stateOverride = stateOverride;
  this.url = url;
  this.failure = false;
  this.parseError = false;

  if (!this.url) {
    this.url = {
      scheme: "",
      username: "",
      password: "",
      host: null,
      port: null,
      path: [],
      query: null,
      fragment: null,

      cannotBeABaseURL: false
    };

    const res = trimControlChars(this.input);
    if (res !== this.input) {
      this.parseError = true;
    }
    this.input = res;
  }

  const res = trimTabAndNewline(this.input);
  if (res !== this.input) {
    this.parseError = true;
  }
  this.input = res;

  this.state = stateOverride || "scheme start";

  this.buffer = "";
  this.atFlag = false;
  this.arrFlag = false;
  this.passwordTokenSeenFlag = false;

  this.input = punycode.ucs2.decode(this.input);

  for (; this.pointer <= this.input.length; ++this.pointer) {
    const c = this.input[this.pointer];
    const cStr = isNaN(c) ? undefined : String.fromCodePoint(c);

    // exec state machine
    const ret = this["parse " + this.state](c, cStr);
    if (!ret) {
      break; // terminate algorithm
    } else if (ret === failure) {
      this.failure = true;
      break;
    }
  }
}

URLStateMachine.prototype["parse scheme start"] = function parseSchemeStart(c, cStr) {
  if (isASCIIAlpha(c)) {
    this.buffer += cStr.toLowerCase();
    this.state = "scheme";
  } else if (!this.stateOverride) {
    this.state = "no scheme";
    --this.pointer;
  } else {
    this.parseError = true;
    return failure;
  }

  return true;
};

URLStateMachine.prototype["parse scheme"] = function parseScheme(c, cStr) {
  if (isASCIIAlphanumeric(c) || c === 43 || c === 45 || c === 46) {
    this.buffer += cStr.toLowerCase();
  } else if (c === 58) {
    if (this.stateOverride) {
      if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {
        return false;
      }

      if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {
        return false;
      }

      if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === "file") {
        return false;
      }

      if (this.url.scheme === "file" && (this.url.host === "" || this.url.host === null)) {
        return false;
      }
    }
    this.url.scheme = this.buffer;
    this.buffer = "";
    if (this.stateOverride) {
      return false;
    }
    if (this.url.scheme === "file") {
      if (this.input[this.pointer + 1] !== 47 || this.input[this.pointer + 2] !== 47) {
        this.parseError = true;
      }
      this.state = "file";
    } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {
      this.state = "special relative or authority";
    } else if (isSpecial(this.url)) {
      this.state = "special authority slashes";
    } else if (this.input[this.pointer + 1] === 47) {
      this.state = "path or authority";
      ++this.pointer;
    } else {
      this.url.cannotBeABaseURL = true;
      this.url.path.push("");
      this.state = "cannot-be-a-base-URL path";
    }
  } else if (!this.stateOverride) {
    this.buffer = "";
    this.state = "no scheme";
    this.pointer = -1;
  } else {
    this.parseError = true;
    return failure;
  }

  return true;
};

URLStateMachine.prototype["parse no scheme"] = function parseNoScheme(c) {
  if (this.base === null || (this.base.cannotBeABaseURL && c !== 35)) {
    return failure;
  } else if (this.base.cannotBeABaseURL && c === 35) {
    this.url.scheme = this.base.scheme;
    this.url.path = this.base.path.slice();
    this.url.query = this.base.query;
    this.url.fragment = "";
    this.url.cannotBeABaseURL = true;
    this.state = "fragment";
  } else if (this.base.scheme === "file") {
    this.state = "file";
    --this.pointer;
  } else {
    this.state = "relative";
    --this.pointer;
  }

  return true;
};

URLStateMachine.prototype["parse special relative or authority"] = function parseSpecialRelativeOrAuthority(c) {
  if (c === 47 && this.input[this.pointer + 1] === 47) {
    this.state = "special authority ignore slashes";
    ++this.pointer;
  } else {
    this.parseError = true;
    this.state = "relative";
    --this.pointer;
  }

  return true;
};

URLStateMachine.prototype["parse path or authority"] = function parsePathOrAuthority(c) {
  if (c === 47) {
    this.state = "authority";
  } else {
    this.state = "path";
    --this.pointer;
  }

  return true;
};

URLStateMachine.prototype["parse relative"] = function parseRelative(c) {
  this.url.scheme = this.base.scheme;
  if (isNaN(c)) {
    this.url.username = this.base.username;
    this.url.password = this.base.password;
    this.url.host = this.base.host;
    this.url.port = this.base.port;
    this.url.path = this.base.path.slice();
    this.url.query = this.base.query;
  } else if (c === 47) {
    this.state = "relative slash";
  } else if (c === 63) {
    this.url.username = this.base.username;
    this.url.password = this.base.password;
    this.url.host = this.base.host;
    this.url.port = this.base.port;
    this.url.path = this.base.path.slice();
    this.url.query = "";
    this.state = "query";
  } else if (c === 35) {
    this.url.username = this.base.username;
    this.url.password = this.base.password;
    this.url.host = this.base.host;
    this.url.port = this.base.port;
    this.url.path = this.base.path.slice();
    this.url.query = this.base.query;
    this.url.fragment = "";
    this.state = "fragment";
  } else if (isSpecial(this.url) && c === 92) {
    this.parseError = true;
    this.state = "relative slash";
  } else {
    this.url.username = this.base.username;
    this.url.password = this.base.password;
    this.url.host = this.base.host;
    this.url.port = this.base.port;
    this.url.path = this.base.path.slice(0, this.base.path.length - 1);

    this.state = "path";
    --this.pointer;
  }

  return true;
};

URLStateMachine.prototype["parse relative slash"] = function parseRelativeSlash(c) {
  if (isSpecial(this.url) && (c === 47 || c === 92)) {
    if (c === 92) {
      this.parseError = true;
    }
    this.state = "special authority ignore slashes";
  } else if (c === 47) {
    this.state = "authority";
  } else {
    this.url.username = this.base.username;
    this.url.password = this.base.password;
    this.url.host = this.base.host;
    this.url.port = this.base.port;
    this.state = "path";
    --this.pointer;
  }

  return true;
};

URLStateMachine.prototype["parse special authority slashes"] = function parseSpecialAuthoritySlashes(c) {
  if (c === 47 && this.input[this.pointer + 1] === 47) {
    this.state = "special authority ignore slashes";
    ++this.pointer;
  } else {
    this.parseError = true;
    this.state = "special authority ignore slashes";
    --this.pointer;
  }

  return true;
};

URLStateMachine.prototype["parse special authority ignore slashes"] = function parseSpecialAuthorityIgnoreSlashes(c) {
  if (c !== 47 && c !== 92) {
    this.state = "authority";
    --this.pointer;
  } else {
    this.parseError = true;
  }

  return true;
};

URLStateMachine.prototype["parse authority"] = function parseAuthority(c, cStr) {
  if (c === 64) {
    this.parseError = true;
    if (this.atFlag) {
      this.buffer = "%40" + this.buffer;
    }
    this.atFlag = true;

    // careful, this is based on buffer and has its own pointer (this.pointer != pointer) and inner chars
    const len = countSymbols(this.buffer);
    for (let pointer = 0; pointer < len; ++pointer) {
      const codePoint = this.buffer.codePointAt(pointer);

      if (codePoint === 58 && !this.passwordTokenSeenFlag) {
        this.passwordTokenSeenFlag = true;
        continue;
      }
      const encodedCodePoints = percentEncodeChar(codePoint, isUserinfoPercentEncode);
      if (this.passwordTokenSeenFlag) {
        this.url.password += encodedCodePoints;
      } else {
        this.url.username += encodedCodePoints;
      }
    }
    this.buffer = "";
  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||
             (isSpecial(this.url) && c === 92)) {
    if (this.atFlag && this.buffer === "") {
      this.parseError = true;
      return failure;
    }
    this.pointer -= countSymbols(this.buffer) + 1;
    this.buffer = "";
    this.state = "host";
  } else {
    this.buffer += cStr;
  }

  return true;
};

URLStateMachine.prototype["parse hostname"] =
URLStateMachine.prototype["parse host"] = function parseHostName(c, cStr) {
  if (this.stateOverride && this.url.scheme === "file") {
    --this.pointer;
    this.state = "file host";
  } else if (c === 58 && !this.arrFlag) {
    if (this.buffer === "") {
      this.parseError = true;
      return failure;
    }

    const host = parseHost(this.buffer, isSpecial(this.url));
    if (host === failure) {
      return failure;
    }

    this.url.host = host;
    this.buffer = "";
    this.state = "port";
    if (this.stateOverride === "hostname") {
      return false;
    }
  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||
             (isSpecial(this.url) && c === 92)) {
    --this.pointer;
    if (isSpecial(this.url) && this.buffer === "") {
      this.parseError = true;
      return failure;
    } else if (this.stateOverride && this.buffer === "" &&
               (includesCredentials(this.url) || this.url.port !== null)) {
      this.parseError = true;
      return false;
    }

    const host = parseHost(this.buffer, isSpecial(this.url));
    if (host === failure) {
      return failure;
    }

    this.url.host = host;
    this.buffer = "";
    this.state = "path start";
    if (this.stateOverride) {
      return false;
    }
  } else {
    if (c === 91) {
      this.arrFlag = true;
    } else if (c === 93) {
      this.arrFlag = false;
    }
    this.buffer += cStr;
  }

  return true;
};

URLStateMachine.prototype["parse port"] = function parsePort(c, cStr) {
  if (isASCIIDigit(c)) {
    this.buffer += cStr;
  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||
             (isSpecial(this.url) && c === 92) ||
             this.stateOverride) {
    if (this.buffer !== "") {
      const port = parseInt(this.buffer);
      if (port > Math.pow(2, 16) - 1) {
        this.parseError = true;
        return failure;
      }
      this.url.port = port === defaultPort(this.url.scheme) ? null : port;
      this.buffer = "";
    }
    if (this.stateOverride) {
      return false;
    }
    this.state = "path start";
    --this.pointer;
  } else {
    this.parseError = true;
    return failure;
  }

  return true;
};

const fileOtherwiseCodePoints = new Set([47, 92, 63, 35]);

URLStateMachine.prototype["parse file"] = function parseFile(c) {
  this.url.scheme = "file";

  if (c === 47 || c === 92) {
    if (c === 92) {
      this.parseError = true;
    }
    this.state = "file slash";
  } else if (this.base !== null && this.base.scheme === "file") {
    if (isNaN(c)) {
      this.url.host = this.base.host;
      this.url.path = this.base.path.slice();
      this.url.query = this.base.query;
    } else if (c === 63) {
      this.url.host = this.base.host;
      this.url.path = this.base.path.slice();
      this.url.query = "";
      this.state = "query";
    } else if (c === 35) {
      this.url.host = this.base.host;
      this.url.path = this.base.path.slice();
      this.url.query = this.base.query;
      this.url.fragment = "";
      this.state = "fragment";
    } else {
      if (this.input.length - this.pointer - 1 === 0 || // remaining consists of 0 code points
          !isWindowsDriveLetterCodePoints(c, this.input[this.pointer + 1]) ||
          (this.input.length - this.pointer - 1 >= 2 && // remaining has at least 2 code points
           !fileOtherwiseCodePoints.has(this.input[this.pointer + 2]))) {
        this.url.host = this.base.host;
        this.url.path = this.base.path.slice();
        shortenPath(this.url);
      } else {
        this.parseError = true;
      }

      this.state = "path";
      --this.pointer;
    }
  } else {
    this.state = "path";
    --this.pointer;
  }

  return true;
};

URLStateMachine.prototype["parse file slash"] = function parseFileSlash(c) {
  if (c === 47 || c === 92) {
    if (c === 92) {
      this.parseError = true;
    }
    this.state = "file host";
  } else {
    if (this.base !== null && this.base.scheme === "file") {
      if (isNormalizedWindowsDriveLetterString(this.base.path[0])) {
        this.url.path.push(this.base.path[0]);
      } else {
        this.url.host = this.base.host;
      }
    }
    this.state = "path";
    --this.pointer;
  }

  return true;
};

URLStateMachine.prototype["parse file host"] = function parseFileHost(c, cStr) {
  if (isNaN(c) || c === 47 || c === 92 || c === 63 || c === 35) {
    --this.pointer;
    if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {
      this.parseError = true;
      this.state = "path";
    } else if (this.buffer === "") {
      this.url.host = "";
      if (this.stateOverride) {
        return false;
      }
      this.state = "path start";
    } else {
      let host = parseHost(this.buffer, isSpecial(this.url));
      if (host === failure) {
        return failure;
      }
      if (host === "localhost") {
        host = "";
      }
      this.url.host = host;

      if (this.stateOverride) {
        return false;
      }

      this.buffer = "";
      this.state = "path start";
    }
  } else {
    this.buffer += cStr;
  }

  return true;
};

URLStateMachine.prototype["parse path start"] = function parsePathStart(c) {
  if (isSpecial(this.url)) {
    if (c === 92) {
      this.parseError = true;
    }
    this.state = "path";

    if (c !== 47 && c !== 92) {
      --this.pointer;
    }
  } else if (!this.stateOverride && c === 63) {
    this.url.query = "";
    this.state = "query";
  } else if (!this.stateOverride && c === 35) {
    this.url.fragment = "";
    this.state = "fragment";
  } else if (c !== undefined) {
    this.state = "path";
    if (c !== 47) {
      --this.pointer;
    }
  }

  return true;
};

URLStateMachine.prototype["parse path"] = function parsePath(c) {
  if (isNaN(c) || c === 47 || (isSpecial(this.url) && c === 92) ||
      (!this.stateOverride && (c === 63 || c === 35))) {
    if (isSpecial(this.url) && c === 92) {
      this.parseError = true;
    }

    if (isDoubleDot(this.buffer)) {
      shortenPath(this.url);
      if (c !== 47 && !(isSpecial(this.url) && c === 92)) {
        this.url.path.push("");
      }
    } else if (isSingleDot(this.buffer) && c !== 47 &&
               !(isSpecial(this.url) && c === 92)) {
      this.url.path.push("");
    } else if (!isSingleDot(this.buffer)) {
      if (this.url.scheme === "file" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {
        if (this.url.host !== "" && this.url.host !== null) {
          this.parseError = true;
          this.url.host = "";
        }
        this.buffer = this.buffer[0] + ":";
      }
      this.url.path.push(this.buffer);
    }
    this.buffer = "";
    if (this.url.scheme === "file" && (c === undefined || c === 63 || c === 35)) {
      while (this.url.path.length > 1 && this.url.path[0] === "") {
        this.parseError = true;
        this.url.path.shift();
      }
    }
    if (c === 63) {
      this.url.query = "";
      this.state = "query";
    }
    if (c === 35) {
      this.url.fragment = "";
      this.state = "fragment";
    }
  } else {
    // TODO: If c is not a URL code point and not "%", parse error.

    if (c === 37 &&
      (!isASCIIHex(this.input[this.pointer + 1]) ||
        !isASCIIHex(this.input[this.pointer + 2]))) {
      this.parseError = true;
    }

    this.buffer += percentEncodeChar(c, isPathPercentEncode);
  }

  return true;
};

URLStateMachine.prototype["parse cannot-be-a-base-URL path"] = function parseCannotBeABaseURLPath(c) {
  if (c === 63) {
    this.url.query = "";
    this.state = "query";
  } else if (c === 35) {
    this.url.fragment = "";
    this.state = "fragment";
  } else {
    // TODO: Add: not a URL code point
    if (!isNaN(c) && c !== 37) {
      this.parseError = true;
    }

    if (c === 37 &&
        (!isASCIIHex(this.input[this.pointer + 1]) ||
         !isASCIIHex(this.input[this.pointer + 2]))) {
      this.parseError = true;
    }

    if (!isNaN(c)) {
      this.url.path[0] = this.url.path[0] + percentEncodeChar(c, isC0ControlPercentEncode);
    }
  }

  return true;
};

URLStateMachine.prototype["parse query"] = function parseQuery(c, cStr) {
  if (isNaN(c) || (!this.stateOverride && c === 35)) {
    if (!isSpecial(this.url) || this.url.scheme === "ws" || this.url.scheme === "wss") {
      this.encodingOverride = "utf-8";
    }

    const buffer = new Buffer(this.buffer); // TODO: Use encoding override instead
    for (let i = 0; i < buffer.length; ++i) {
      if (buffer[i] < 0x21 || buffer[i] > 0x7E || buffer[i] === 0x22 || buffer[i] === 0x23 ||
          buffer[i] === 0x3C || buffer[i] === 0x3E) {
        this.url.query += percentEncode(buffer[i]);
      } else {
        this.url.query += String.fromCodePoint(buffer[i]);
      }
    }

    this.buffer = "";
    if (c === 35) {
      this.url.fragment = "";
      this.state = "fragment";
    }
  } else {
    // TODO: If c is not a URL code point and not "%", parse error.
    if (c === 37 &&
      (!isASCIIHex(this.input[this.pointer + 1]) ||
        !isASCIIHex(this.input[this.pointer + 2]))) {
      this.parseError = true;
    }

    this.buffer += cStr;
  }

  return true;
};

URLStateMachine.prototype["parse fragment"] = function parseFragment(c) {
  if (isNaN(c)) { // do nothing
  } else if (c === 0x0) {
    this.parseError = true;
  } else {
    // TODO: If c is not a URL code point and not "%", parse error.
    if (c === 37 &&
      (!isASCIIHex(this.input[this.pointer + 1]) ||
        !isASCIIHex(this.input[this.pointer + 2]))) {
      this.parseError = true;
    }

    this.url.fragment += percentEncodeChar(c, isC0ControlPercentEncode);
  }

  return true;
};

function serializeURL(url, excludeFragment) {
  let output = url.scheme + ":";
  if (url.host !== null) {
    output += "//";

    if (url.username !== "" || url.password !== "") {
      output += url.username;
      if (url.password !== "") {
        output += ":" + url.password;
      }
      output += "@";
    }

    output += serializeHost(url.host);

    if (url.port !== null) {
      output += ":" + url.port;
    }
  } else if (url.host === null && url.scheme === "file") {
    output += "//";
  }

  if (url.cannotBeABaseURL) {
    output += url.path[0];
  } else {
    for (const string of url.path) {
      output += "/" + string;
    }
  }

  if (url.query !== null) {
    output += "?" + url.query;
  }

  if (!excludeFragment && url.fragment !== null) {
    output += "#" + url.fragment;
  }

  return output;
}

function serializeOrigin(tuple) {
  let result = tuple.scheme + "://";
  result += serializeHost(tuple.host);

  if (tuple.port !== null) {
    result += ":" + tuple.port;
  }

  return result;
}

module.exports.serializeURL = serializeURL;

module.exports.serializeURLOrigin = function (url) {
  // https://url.spec.whatwg.org/#concept-url-origin
  switch (url.scheme) {
    case "blob":
      try {
        return module.exports.serializeURLOrigin(module.exports.parseURL(url.path[0]));
      } catch (e) {
        // serializing an opaque origin returns "null"
        return "null";
      }
    case "ftp":
    case "gopher":
    case "http":
    case "https":
    case "ws":
    case "wss":
      return serializeOrigin({
        scheme: url.scheme,
        host: url.host,
        port: url.port
      });
    case "file":
      // spec says "exercise to the reader", chrome says "file://"
      return "file://";
    default:
      // serializing an opaque origin returns "null"
      return "null";
  }
};

module.exports.basicURLParse = function (input, options) {
  if (options === undefined) {
    options = {};
  }

  const usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);
  if (usm.failure) {
    return "failure";
  }

  return usm.url;
};

module.exports.setTheUsername = function (url, username) {
  url.username = "";
  const decoded = punycode.ucs2.decode(username);
  for (let i = 0; i < decoded.length; ++i) {
    url.username += percentEncodeChar(decoded[i], isUserinfoPercentEncode);
  }
};

module.exports.setThePassword = function (url, password) {
  url.password = "";
  const decoded = punycode.ucs2.decode(password);
  for (let i = 0; i < decoded.length; ++i) {
    url.password += percentEncodeChar(decoded[i], isUserinfoPercentEncode);
  }
};

module.exports.serializeHost = serializeHost;

module.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;

module.exports.serializeInteger = function (integer) {
  return String(integer);
};

module.exports.parseURL = function (input, options) {
  if (options === undefined) {
    options = {};
  }

  // We don't handle blobs, so this just delegates:
  return module.exports.basicURLParse(input, { baseURL: options.baseURL, encodingOverride: options.encodingOverride });
};


/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

var objectWithoutPropertiesLoose = __webpack_require__(507);
function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = objectWithoutPropertiesLoose(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }
  return target;
}
module.exports = _objectWithoutProperties, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _minilog = _interopRequireDefault(__webpack_require__(264));

var logger = (0, _minilog.default)('cozy-stack-client');

_minilog.default.suggest.deny('cozy-stack-client', 'info');

var _default = logger;
exports.default = _default;

/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

var baseMerge = __webpack_require__(574),
    createAssigner = __webpack_require__(452);

/**
 * This method is like `_.assign` except that it recursively merges own and
 * inherited enumerable string keyed properties of source objects into the
 * destination object. Source properties that resolve to `undefined` are
 * skipped if a destination value exists. Array and plain object properties
 * are merged recursively. Other objects and value types are overridden by
 * assignment. Source objects are applied from left to right. Subsequent
 * sources overwrite property assignments of previous sources.
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 0.5.0
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} [sources] The source objects.
 * @returns {Object} Returns `object`.
 * @example
 *
 * var object = {
 *   'a': [{ 'b': 2 }, { 'd': 4 }]
 * };
 *
 * var other = {
 *   'a': [{ 'c': 3 }, { 'e': 5 }]
 * };
 *
 * _.merge(object, other);
 * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
 */
var merge = createAssigner(function(object, source, srcIndex) {
  baseMerge(object, source, srcIndex);
});

module.exports = merge;


/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

var isFunction = __webpack_require__(150),
    isLength = __webpack_require__(163);

/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
function isArrayLike(value) {
  return value != null && isLength(value.length) && !isFunction(value);
}

module.exports = isArrayLike;


/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (false) { var throwOnDirectAccess, ReactIs; } else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  module.exports = __webpack_require__(842)();
}


/***/ }),
/* 55 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "i", function() { return /* binding */ makeAggregationTitle; });
__webpack_require__.d(__webpack_exports__, "a", function() { return /* binding */ computeAggregatedTimeseries; });
__webpack_require__.d(__webpack_exports__, "b", function() { return /* binding */ computeCO2Timeseries; });
__webpack_require__.d(__webpack_exports__, "f", function() { return /* binding */ getPlaceDisplayName; });
__webpack_require__.d(__webpack_exports__, "e", function() { return /* binding */ getPlaceCoordinates; });
__webpack_require__.d(__webpack_exports__, "j", function() { return /* binding */ setAutomaticPurpose; });
__webpack_require__.d(__webpack_exports__, "c", function() { return /* binding */ countUniqDays; });
__webpack_require__.d(__webpack_exports__, "g", function() { return /* binding */ getStartPlaceCoordinates; });
__webpack_require__.d(__webpack_exports__, "d", function() { return /* binding */ getEndPlaceCoordinates; });
__webpack_require__.d(__webpack_exports__, "h", function() { return /* binding */ isLoopTrip; });

// UNUSED EXPORTS: collectFeaturesByOid, transformSerieToTrip, transformTimeseriesToTrips, updateSectionMode, fixSectionsIntegrity, sortGroupedTimeseries, sortTimeseriesByCO2GroupedByMode, getTimeseriePurpose, getTimeseriePurposeOld, makeTimeseriesAndTotalCO2ByPurposes, sortTimeseriesByCO2GroupedByPurpose, getStartDate, getEndDate, getPlaceDate, getStartPlaceDisplayName, getEndPlaceDisplayName, getFormattedPlaceCoordinates, getGeoJSONData, getTotalDuration, getTitle, getFormattedDuration, getFormattedDistance, getTotalCO2, getFormattedTotalCO2, getTotalCalories, getFormattedTotalCalories, getformattedEndDate, getformattedStartDate, setManualPurpose, setAggregationPurpose, computeTotalCO2ByMode, computeAndFormatTotalCO2ByMode, getModesSortedByDistance, computeMonthsAndCO2s, getEarliestTimeserie, filterTimeseriesByYear

// EXTERNAL MODULE: ./node_modules/date-fns/esm/_lib/toInteger/index.js
var toInteger = __webpack_require__(14);

// EXTERNAL MODULE: ./node_modules/date-fns/esm/addMilliseconds/index.js
var addMilliseconds = __webpack_require__(210);

// EXTERNAL MODULE: ./node_modules/date-fns/esm/_lib/requiredArgs/index.js
var requiredArgs = __webpack_require__(5);

// CONCATENATED MODULE: ./node_modules/date-fns/esm/addHours/index.js



var MILLISECONDS_IN_HOUR = 3600000;
/**
 * @name addHours
 * @category Hour Helpers
 * @summary Add the specified number of hours to the given date.
 *
 * @description
 * Add the specified number of hours to the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of hours to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the hours added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add 2 hours to 10 July 2014 23:00:00:
 * const result = addHours(new Date(2014, 6, 10, 23, 0), 2)
 * //=> Fri Jul 11 2014 01:00:00
 */

function addHours(dirtyDate, dirtyAmount) {
  Object(requiredArgs["a" /* default */])(2, arguments);
  var amount = Object(toInteger["a" /* default */])(dirtyAmount);
  return Object(addMilliseconds["a" /* default */])(dirtyDate, amount * MILLISECONDS_IN_HOUR);
}
// EXTERNAL MODULE: ./node_modules/date-fns/esm/_lib/defaultOptions/index.js
var _lib_defaultOptions = __webpack_require__(98);

// EXTERNAL MODULE: ./node_modules/date-fns/esm/toDate/index.js
var toDate = __webpack_require__(11);

// CONCATENATED MODULE: ./node_modules/date-fns/esm/compareAsc/index.js


/**
 * @name compareAsc
 * @category Common Helpers
 * @summary Compare the two dates and return -1, 0 or 1.
 *
 * @description
 * Compare the two dates and return 1 if the first date is after the second,
 * -1 if the first date is before the second or 0 if dates are equal.
 *
 * @param {Date|Number} dateLeft - the first date to compare
 * @param {Date|Number} dateRight - the second date to compare
 * @returns {Number} the result of the comparison
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Compare 11 February 1987 and 10 July 1989:
 * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))
 * //=> -1
 *
 * @example
 * // Sort the array of dates:
 * const result = [
 *   new Date(1995, 6, 2),
 *   new Date(1987, 1, 11),
 *   new Date(1989, 6, 10)
 * ].sort(compareAsc)
 * //=> [
 * //   Wed Feb 11 1987 00:00:00,
 * //   Mon Jul 10 1989 00:00:00,
 * //   Sun Jul 02 1995 00:00:00
 * // ]
 */

function compareAsc(dirtyDateLeft, dirtyDateRight) {
  Object(requiredArgs["a" /* default */])(2, arguments);
  var dateLeft = Object(toDate["a" /* default */])(dirtyDateLeft);
  var dateRight = Object(toDate["a" /* default */])(dirtyDateRight);
  var diff = dateLeft.getTime() - dateRight.getTime();

  if (diff < 0) {
    return -1;
  } else if (diff > 0) {
    return 1; // Return 0 if diff is 0; return NaN if diff is NaN
  } else {
    return diff;
  }
}
// CONCATENATED MODULE: ./node_modules/date-fns/esm/differenceInCalendarMonths/index.js


/**
 * @name differenceInCalendarMonths
 * @category Month Helpers
 * @summary Get the number of calendar months between the given dates.
 *
 * @description
 * Get the number of calendar months between the given dates.
 *
 * @param {Date|Number} dateLeft - the later date
 * @param {Date|Number} dateRight - the earlier date
 * @returns {Number} the number of calendar months
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // How many calendar months are between 31 January 2014 and 1 September 2014?
 * const result = differenceInCalendarMonths(
 *   new Date(2014, 8, 1),
 *   new Date(2014, 0, 31)
 * )
 * //=> 8
 */

function differenceInCalendarMonths(dirtyDateLeft, dirtyDateRight) {
  Object(requiredArgs["a" /* default */])(2, arguments);
  var dateLeft = Object(toDate["a" /* default */])(dirtyDateLeft);
  var dateRight = Object(toDate["a" /* default */])(dirtyDateRight);
  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();
  var monthDiff = dateLeft.getMonth() - dateRight.getMonth();
  return yearDiff * 12 + monthDiff;
}
// CONCATENATED MODULE: ./node_modules/date-fns/esm/endOfDay/index.js


/**
 * @name endOfDay
 * @category Day Helpers
 * @summary Return the end of a day for the given date.
 *
 * @description
 * Return the end of a day for the given date.
 * The result will be in the local timezone.
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the end of a day
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The end of a day for 2 September 2014 11:55:00:
 * const result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Tue Sep 02 2014 23:59:59.999
 */

function endOfDay(dirtyDate) {
  Object(requiredArgs["a" /* default */])(1, arguments);
  var date = Object(toDate["a" /* default */])(dirtyDate);
  date.setHours(23, 59, 59, 999);
  return date;
}
// EXTERNAL MODULE: ./node_modules/date-fns/esm/endOfMonth/index.js
var endOfMonth = __webpack_require__(67);

// CONCATENATED MODULE: ./node_modules/date-fns/esm/isLastDayOfMonth/index.js




/**
 * @name isLastDayOfMonth
 * @category Month Helpers
 * @summary Is the given date the last day of a month?
 *
 * @description
 * Is the given date the last day of a month?
 *
 * @param {Date|Number} date - the date to check
 * @returns {Boolean} the date is the last day of a month
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Is 28 February 2014 the last day of a month?
 * const result = isLastDayOfMonth(new Date(2014, 1, 28))
 * //=> true
 */

function isLastDayOfMonth(dirtyDate) {
  Object(requiredArgs["a" /* default */])(1, arguments);
  var date = Object(toDate["a" /* default */])(dirtyDate);
  return endOfDay(date).getTime() === Object(endOfMonth["a" /* default */])(date).getTime();
}
// CONCATENATED MODULE: ./node_modules/date-fns/esm/differenceInMonths/index.js





/**
 * @name differenceInMonths
 * @category Month Helpers
 * @summary Get the number of full months between the given dates.
 *
 * @description
 * Get the number of full months between the given dates using trunc as a default rounding method.
 *
 * @param {Date|Number} dateLeft - the later date
 * @param {Date|Number} dateRight - the earlier date
 * @returns {Number} the number of full months
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // How many full months are between 31 January 2014 and 1 September 2014?
 * const result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))
 * //=> 7
 */

function differenceInMonths(dirtyDateLeft, dirtyDateRight) {
  Object(requiredArgs["a" /* default */])(2, arguments);
  var dateLeft = Object(toDate["a" /* default */])(dirtyDateLeft);
  var dateRight = Object(toDate["a" /* default */])(dirtyDateRight);
  var sign = compareAsc(dateLeft, dateRight);
  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight));
  var result; // Check for the difference of less than month

  if (difference < 1) {
    result = 0;
  } else {
    if (dateLeft.getMonth() === 1 && dateLeft.getDate() > 27) {
      // This will check if the date is end of Feb and assign a higher end of month date
      // to compare it with Jan
      dateLeft.setDate(30);
    }

    dateLeft.setMonth(dateLeft.getMonth() - sign * difference); // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full
    // If so, result must be decreased by 1 in absolute value

    var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign; // Check for cases of one full calendar month

    if (isLastDayOfMonth(Object(toDate["a" /* default */])(dirtyDateLeft)) && difference === 1 && compareAsc(dirtyDateLeft, dateRight) === 1) {
      isLastMonthNotFull = false;
    }

    result = sign * (difference - Number(isLastMonthNotFull));
  } // Prevent negative zero


  return result === 0 ? 0 : result;
}
// CONCATENATED MODULE: ./node_modules/date-fns/esm/differenceInMilliseconds/index.js


/**
 * @name differenceInMilliseconds
 * @category Millisecond Helpers
 * @summary Get the number of milliseconds between the given dates.
 *
 * @description
 * Get the number of milliseconds between the given dates.
 *
 * @param {Date|Number} dateLeft - the later date
 * @param {Date|Number} dateRight - the earlier date
 * @returns {Number} the number of milliseconds
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // How many milliseconds are between
 * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?
 * const result = differenceInMilliseconds(
 *   new Date(2014, 6, 2, 12, 30, 21, 700),
 *   new Date(2014, 6, 2, 12, 30, 20, 600)
 * )
 * //=> 1100
 */

function differenceInMilliseconds(dateLeft, dateRight) {
  Object(requiredArgs["a" /* default */])(2, arguments);
  return Object(toDate["a" /* default */])(dateLeft).getTime() - Object(toDate["a" /* default */])(dateRight).getTime();
}
// CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/roundingMethods/index.js
var roundingMap = {
  ceil: Math.ceil,
  round: Math.round,
  floor: Math.floor,
  trunc: function trunc(value) {
    return value < 0 ? Math.ceil(value) : Math.floor(value);
  } // Math.trunc is not supported by IE

};
var defaultRoundingMethod = 'trunc';
function getRoundingMethod(method) {
  return method ? roundingMap[method] : roundingMap[defaultRoundingMethod];
}
// CONCATENATED MODULE: ./node_modules/date-fns/esm/differenceInSeconds/index.js



/**
 * @name differenceInSeconds
 * @category Second Helpers
 * @summary Get the number of seconds between the given dates.
 *
 * @description
 * Get the number of seconds between the given dates.
 *
 * @param {Date|Number} dateLeft - the later date
 * @param {Date|Number} dateRight - the earlier date
 * @param {Object} [options] - an object with options.
 * @param {String} [options.roundingMethod='trunc'] - a rounding method (`ceil`, `floor`, `round` or `trunc`)
 * @returns {Number} the number of seconds
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // How many seconds are between
 * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?
 * const result = differenceInSeconds(
 *   new Date(2014, 6, 2, 12, 30, 20, 0),
 *   new Date(2014, 6, 2, 12, 30, 7, 999)
 * )
 * //=> 12
 */

function differenceInSeconds(dateLeft, dateRight, options) {
  Object(requiredArgs["a" /* default */])(2, arguments);
  var diff = differenceInMilliseconds(dateLeft, dateRight) / 1000;
  return getRoundingMethod(options === null || options === void 0 ? void 0 : options.roundingMethod)(diff);
}
// EXTERNAL MODULE: ./node_modules/date-fns/esm/_lib/defaultLocale/index.js + 10 modules
var defaultLocale = __webpack_require__(211);

// CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/assign/index.js
function assign_assign(target, object) {
  if (target == null) {
    throw new TypeError('assign requires that input parameter not be null or undefined');
  }

  for (var property in object) {
    if (Object.prototype.hasOwnProperty.call(object, property)) {
      ;
      target[property] = object[property];
    }
  }

  return target;
}
// CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/cloneObject/index.js

function cloneObject(object) {
  return assign_assign({}, object);
}
// EXTERNAL MODULE: ./node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js
var getTimezoneOffsetInMilliseconds = __webpack_require__(143);

// CONCATENATED MODULE: ./node_modules/date-fns/esm/formatDistance/index.js










var MINUTES_IN_DAY = 1440;
var MINUTES_IN_ALMOST_TWO_DAYS = 2520;
var MINUTES_IN_MONTH = 43200;
var MINUTES_IN_TWO_MONTHS = 86400;
/**
 * @name formatDistance
 * @category Common Helpers
 * @summary Return the distance between the given dates in words.
 *
 * @description
 * Return the distance between the given dates in words.
 *
 * | Distance between dates                                            | Result              |
 * |-------------------------------------------------------------------|---------------------|
 * | 0 ... 30 secs                                                     | less than a minute  |
 * | 30 secs ... 1 min 30 secs                                         | 1 minute            |
 * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |
 * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |
 * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |
 * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |
 * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |
 * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |
 * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |
 * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |
 * | 1 yr ... 1 yr 3 months                                            | about 1 year        |
 * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |
 * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |
 * | N yrs ... N yrs 3 months                                          | about N years       |
 * | N yrs 3 months ... N yrs 9 months                                 | over N years        |
 * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |
 *
 * With `options.includeSeconds == true`:
 * | Distance between dates | Result               |
 * |------------------------|----------------------|
 * | 0 secs ... 5 secs      | less than 5 seconds  |
 * | 5 secs ... 10 secs     | less than 10 seconds |
 * | 10 secs ... 20 secs    | less than 20 seconds |
 * | 20 secs ... 40 secs    | half a minute        |
 * | 40 secs ... 60 secs    | less than a minute   |
 * | 60 secs ... 90 secs    | 1 minute             |
 *
 * @param {Date|Number} date - the date
 * @param {Date|Number} baseDate - the date to compare with
 * @param {Object} [options] - an object with options.
 * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed
 * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first
 * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
 * @returns {String} the distance in words
 * @throws {TypeError} 2 arguments required
 * @throws {RangeError} `date` must not be Invalid Date
 * @throws {RangeError} `baseDate` must not be Invalid Date
 * @throws {RangeError} `options.locale` must contain `formatDistance` property
 *
 * @example
 * // What is the distance between 2 July 2014 and 1 January 2015?
 * const result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))
 * //=> '6 months'
 *
 * @example
 * // What is the distance between 1 January 2015 00:00:15
 * // and 1 January 2015 00:00:00, including seconds?
 * const result = formatDistance(
 *   new Date(2015, 0, 1, 0, 0, 15),
 *   new Date(2015, 0, 1, 0, 0, 0),
 *   { includeSeconds: true }
 * )
 * //=> 'less than 20 seconds'
 *
 * @example
 * // What is the distance from 1 January 2016
 * // to 1 January 2015, with a suffix?
 * const result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {
 *   addSuffix: true
 * })
 * //=> 'about 1 year ago'
 *
 * @example
 * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?
 * import { eoLocale } from 'date-fns/locale/eo'
 * const result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {
 *   locale: eoLocale
 * })
 * //=> 'pli ol 1 jaro'
 */

function formatDistance(dirtyDate, dirtyBaseDate, options) {
  var _ref, _options$locale;

  Object(requiredArgs["a" /* default */])(2, arguments);
  var defaultOptions = Object(_lib_defaultOptions["a" /* getDefaultOptions */])();
  var locale = (_ref = (_options$locale = options === null || options === void 0 ? void 0 : options.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions.locale) !== null && _ref !== void 0 ? _ref : defaultLocale["a" /* default */];

  if (!locale.formatDistance) {
    throw new RangeError('locale must contain formatDistance property');
  }

  var comparison = compareAsc(dirtyDate, dirtyBaseDate);

  if (isNaN(comparison)) {
    throw new RangeError('Invalid time value');
  }

  var localizeOptions = assign_assign(cloneObject(options), {
    addSuffix: Boolean(options === null || options === void 0 ? void 0 : options.addSuffix),
    comparison: comparison
  });
  var dateLeft;
  var dateRight;

  if (comparison > 0) {
    dateLeft = Object(toDate["a" /* default */])(dirtyBaseDate);
    dateRight = Object(toDate["a" /* default */])(dirtyDate);
  } else {
    dateLeft = Object(toDate["a" /* default */])(dirtyDate);
    dateRight = Object(toDate["a" /* default */])(dirtyBaseDate);
  }

  var seconds = differenceInSeconds(dateRight, dateLeft);
  var offsetInSeconds = (Object(getTimezoneOffsetInMilliseconds["a" /* default */])(dateRight) - Object(getTimezoneOffsetInMilliseconds["a" /* default */])(dateLeft)) / 1000;
  var minutes = Math.round((seconds - offsetInSeconds) / 60);
  var months; // 0 up to 2 mins

  if (minutes < 2) {
    if (options !== null && options !== void 0 && options.includeSeconds) {
      if (seconds < 5) {
        return locale.formatDistance('lessThanXSeconds', 5, localizeOptions);
      } else if (seconds < 10) {
        return locale.formatDistance('lessThanXSeconds', 10, localizeOptions);
      } else if (seconds < 20) {
        return locale.formatDistance('lessThanXSeconds', 20, localizeOptions);
      } else if (seconds < 40) {
        return locale.formatDistance('halfAMinute', 0, localizeOptions);
      } else if (seconds < 60) {
        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);
      } else {
        return locale.formatDistance('xMinutes', 1, localizeOptions);
      }
    } else {
      if (minutes === 0) {
        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);
      } else {
        return locale.formatDistance('xMinutes', minutes, localizeOptions);
      }
    } // 2 mins up to 0.75 hrs

  } else if (minutes < 45) {
    return locale.formatDistance('xMinutes', minutes, localizeOptions); // 0.75 hrs up to 1.5 hrs
  } else if (minutes < 90) {
    return locale.formatDistance('aboutXHours', 1, localizeOptions); // 1.5 hrs up to 24 hrs
  } else if (minutes < MINUTES_IN_DAY) {
    var hours = Math.round(minutes / 60);
    return locale.formatDistance('aboutXHours', hours, localizeOptions); // 1 day up to 1.75 days
  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {
    return locale.formatDistance('xDays', 1, localizeOptions); // 1.75 days up to 30 days
  } else if (minutes < MINUTES_IN_MONTH) {
    var days = Math.round(minutes / MINUTES_IN_DAY);
    return locale.formatDistance('xDays', days, localizeOptions); // 1 month up to 2 months
  } else if (minutes < MINUTES_IN_TWO_MONTHS) {
    months = Math.round(minutes / MINUTES_IN_MONTH);
    return locale.formatDistance('aboutXMonths', months, localizeOptions);
  }

  months = differenceInMonths(dateRight, dateLeft); // 2 months up to 12 months

  if (months < 12) {
    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);
    return locale.formatDistance('xMonths', nearestMonth, localizeOptions); // 1 year up to max Date
  } else {
    var monthsSinceStartOfYear = months % 12;
    var years = Math.floor(months / 12); // N years up to 1 years 3 months

    if (monthsSinceStartOfYear < 3) {
      return locale.formatDistance('aboutXYears', years, localizeOptions); // N years 3 months up to N years 9 months
    } else if (monthsSinceStartOfYear < 9) {
      return locale.formatDistance('overXYears', years, localizeOptions); // N years 9 months up to N year 12 months
    } else {
      return locale.formatDistance('almostXYears', years + 1, localizeOptions);
    }
  }
}
// EXTERNAL MODULE: ./node_modules/date-fns/esm/startOfMonth/index.js
var startOfMonth = __webpack_require__(44);

// EXTERNAL MODULE: ./node_modules/date-fns/esm/subMonths/index.js
var subMonths = __webpack_require__(99);

// EXTERNAL MODULE: ./node_modules/lodash/fromPairs.js
var fromPairs = __webpack_require__(135);
var fromPairs_default = /*#__PURE__*/__webpack_require__.n(fromPairs);

// EXTERNAL MODULE: ./node_modules/lodash/get.js
var get = __webpack_require__(10);
var get_default = /*#__PURE__*/__webpack_require__.n(get);

// EXTERNAL MODULE: ./node_modules/lodash/keyBy.js
var keyBy = __webpack_require__(140);
var keyBy_default = /*#__PURE__*/__webpack_require__.n(keyBy);

// EXTERNAL MODULE: ./node_modules/lodash/merge.js
var merge = __webpack_require__(52);
var merge_default = /*#__PURE__*/__webpack_require__.n(merge);

// EXTERNAL MODULE: ./node_modules/lodash/set.js
var set = __webpack_require__(33);
var set_default = /*#__PURE__*/__webpack_require__.n(set);

// EXTERNAL MODULE: ./node_modules/lodash/sortBy.js
var sortBy = __webpack_require__(144);
var sortBy_default = /*#__PURE__*/__webpack_require__.n(sortBy);

// EXTERNAL MODULE: ./node_modules/lodash/sumBy.js
var sumBy = __webpack_require__(437);
var sumBy_default = /*#__PURE__*/__webpack_require__.n(sumBy);

// EXTERNAL MODULE: ./node_modules/lodash/toPairs.js
var toPairs = __webpack_require__(438);
var toPairs_default = /*#__PURE__*/__webpack_require__.n(toPairs);

// EXTERNAL MODULE: ./node_modules/lodash/uniq.js
var uniq = __webpack_require__(84);
var uniq_default = /*#__PURE__*/__webpack_require__.n(uniq);

// EXTERNAL MODULE: ./node_modules/lodash/unset.js
var unset = __webpack_require__(439);
var unset_default = /*#__PURE__*/__webpack_require__.n(unset);

// EXTERNAL MODULE: ./src/constants.js
var constants = __webpack_require__(0);

// CONCATENATED MODULE: ./src/components/ContactToPlace/actions/helpers.js

const isCustomLabel = (label, t) => ![t('contactToPlace.work'), t('contactToPlace.home'), undefined].includes(label);
const makeCustomLabel = ({
  label,
  category,
  t
}) => {
  const type = constants["a" /* ADDRESS_CATEGORY_TO_LABEL */][category];
  const firstString = isCustomLabel(label, t) ? label : t('contactToPlace.custom');
  const secondString = isCustomLabel(label, t) ? ` (${t(`contactToPlace.${type}`)})`.toLowerCase() : '';
  return firstString + secondString;
};
// EXTERNAL MODULE: ./src/doctypes/index.js
var doctypes = __webpack_require__(3);

// EXTERNAL MODULE: ./src/lib/contacts.js
var contacts = __webpack_require__(334);

// EXTERNAL MODULE: ./node_modules/cozy-client/dist/models/contact.js
var models_contact = __webpack_require__(141);

// CONCATENATED MODULE: ./node_modules/cozy-ui/transpiled/react/helpers/getRandomUUID.js
/**
 * Returns a random UUID without using window.crypto API
 * @returns {string} a random UUID
 */
var createUUID = function createUUID() {
  var func = function func(c) {
    var r = (dt + Math.random() * 16) % 16 | 0;
    dt = Math.floor(dt / 16);
    return (c == 'x' ? r : r & 0x3 | 0x8).toString(16);
  };

  var dt = new Date().getTime();
  var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, func);
  return uuid;
};
/**
 * Returns a random UUID
 * @returns {string} a random UUID
 */


var getRandomUUID = function getRandomUUID() {
  var _window, _window$crypto, _window$crypto$random;

  if (false) {}

  return ((_window = window) === null || _window === void 0 ? void 0 : (_window$crypto = _window.crypto) === null || _window$crypto === void 0 ? void 0 : (_window$crypto$random = _window$crypto.randomUUID) === null || _window$crypto$random === void 0 ? void 0 : _window$crypto$random.call(_window$crypto)) || createUUID();
};
// CONCATENATED MODULE: ./src/components/ContactToPlace/helpers.js
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }









const getRelationshipKey = type => {
  return type === 'start' ? 'startPlaceContact' : type === 'end' ? 'endPlaceContact' : null;
};
const getMatchingAddressFromGeo = ({
  contact,
  timeserie,
  type
}) => {
  const hasAddress = !!(contact !== null && contact !== void 0 && contact.address);
  if (!hasAddress) {
    return null;
  }
  const matchingAddress = Object(contacts["a" /* findMatchingContactAddressForTimeserie */])({
    contact,
    timeserie,
    startOrEnd: type
  });
  return matchingAddress;
};
const getContactAddressAndIndexFromRelationships = ({
  contact,
  timeserie,
  type
}) => {
  var _timeserie$relationsh, _timeserie$relationsh2, _timeserie$relationsh3;
  const hasAddress = !!(contact !== null && contact !== void 0 && contact.address);
  const hasRelAddress = !!((_timeserie$relationsh = timeserie.relationships[getRelationshipKey(type)]) !== null && _timeserie$relationsh !== void 0 && (_timeserie$relationsh2 = _timeserie$relationsh.data) !== null && _timeserie$relationsh2 !== void 0 && (_timeserie$relationsh3 = _timeserie$relationsh2.metadata) !== null && _timeserie$relationsh3 !== void 0 && _timeserie$relationsh3.addressId);
  if (!hasAddress || !hasRelAddress) {
    return {
      address: undefined,
      index: -1
    };
  }
  const index = contact.address.findIndex(address => address.id === timeserie.relationships[getRelationshipKey(type)].data.metadata.addressId);
  return {
    address: index === -1 ? undefined : contact.address[index],
    index
  };
};
const getCategoryByType = ({
  contact,
  timeserie,
  type
}) => {
  var _getContactAddressAnd, _getContactAddressAnd2, _getContactAddressAnd3;
  return (_getContactAddressAnd = getContactAddressAndIndexFromRelationships({
    contact,
    timeserie,
    type
  })) === null || _getContactAddressAnd === void 0 ? void 0 : (_getContactAddressAnd2 = _getContactAddressAnd.address) === null || _getContactAddressAnd2 === void 0 ? void 0 : (_getContactAddressAnd3 = _getContactAddressAnd2.geo) === null || _getContactAddressAnd3 === void 0 ? void 0 : _getContactAddressAnd3.cozyCategory;
};
const getAddressLabel = ({
  contact,
  timeserie,
  type
}) => {
  var _getContactAddressAnd4, _getContactAddressAnd5;
  return (_getContactAddressAnd4 = getContactAddressAndIndexFromRelationships({
    contact,
    timeserie,
    type
  })) === null || _getContactAddressAnd4 === void 0 ? void 0 : (_getContactAddressAnd5 = _getContactAddressAnd4.address) === null || _getContactAddressAnd5 === void 0 ? void 0 : _getContactAddressAnd5.label;
};
const getAddressType = ({
  contact,
  timeserie,
  type
}) => {
  var _contactWithAdd$addre;
  const contactWithAdd = getContactAddressAndIndexFromRelationships({
    contact,
    timeserie,
    type
  });
  return contactWithAdd === null || contactWithAdd === void 0 ? void 0 : (_contactWithAdd$addre = contactWithAdd.address) === null || _contactWithAdd$addre === void 0 ? void 0 : _contactWithAdd$addre.type;
};
const getRelationshipByType = (timeserie, type) => {
  return timeserie[getRelationshipKey(type)];
};
const hasRelationshipByType = (timeserie, type) => {
  var _getRelationshipByTyp;
  return !!((_getRelationshipByTyp = getRelationshipByType(timeserie, type)) !== null && _getRelationshipByTyp !== void 0 && _getRelationshipByTyp.data);
};
const getPlaceLabelByContact = ({
  timeserie,
  type,
  t
}) => {
  var _getRelationshipByTyp2;
  const contact = (_getRelationshipByTyp2 = getRelationshipByType(timeserie, type)) === null || _getRelationshipByTyp2 === void 0 ? void 0 : _getRelationshipByTyp2.data;
  if (!contact) {
    return null;
  }
  const isMyself = !!contact.me;
  const category = getCategoryByType({
    timeserie,
    type,
    contact
  });
  const addressType = getAddressType({
    timeserie,
    type,
    contact
  });
  const displayName = Object(models_contact["getDisplayName"])(contact);
  const isHome = category === constants["S" /* HOME_ADDRESS_CATEGORY */];
  if (!isCustomLabel(addressType, t) && isHome && isMyself) {
    return t('contactToPlace.atHome');
  }
  if (!category) {
    return displayName;
  }
  const homeOrWorkLabel = t(`contactToPlace.${category}`);
  if (isMyself) {
    return isCustomLabel(addressType, t) ? addressType : homeOrWorkLabel;
  }
  return isCustomLabel(addressType, t) ? `${displayName} (${addressType})` : `${displayName} (${homeOrWorkLabel})`;
};
const removeRelationship = async ({
  client,
  timeserie,
  type,
  t,
  contact
}) => {
  await client.save(contact);
  const {
    data: timeserieWithUpdatedRelationships
  } = await getRelationshipByType(timeserie, type).remove();
  unset_default()(timeserieWithUpdatedRelationships, `relationships.${getRelationshipKey(type)}.data.metadata.addressId`);
  set_default()(timeserieWithUpdatedRelationships, 'aggregation.automaticTitle', makeAggregationTitle(_objectSpread(_objectSpread({}, timeserieWithUpdatedRelationships), {}, {
    // relationships are not included, we need to add them manually
    startPlaceContact: timeserie.startPlaceContact,
    endPlaceContact: timeserie.endPlaceContact
  }), t));
  await client.save(timeserieWithUpdatedRelationships);
};
const addAddressToContact = ({
  contact,
  addressId,
  label,
  timeserie,
  type,
  t,
  category
}) => {
  return _objectSpread(_objectSpread({}, contact), {}, {
    address: [...(contact.address || []), {
      id: addressId,
      type: isCustomLabel(label, t) ? label : undefined,
      label: category,
      formattedAddress: getPlaceDisplayName({
        timeserie,
        type,
        t
      }),
      geo: {
        geo: getPlaceCoordinates(timeserie, type),
        cozyCategory: category
      }
    }]
  });
};
const setTimeserieTitleWithRel = ({
  timeserie,
  t
}) => {
  set_default()(timeserie, 'aggregation.automaticTitle', makeAggregationTitle(_objectSpread(_objectSpread({}, timeserie), {}, {
    // relationships are not included, we need to add them manually
    startPlaceContact: timeserie.startPlaceContact,
    endPlaceContact: timeserie.endPlaceContact
  }), t));
};
const updateTimeserieWithContactRelationship = async ({
  client,
  timeserie,
  contact,
  addressId,
  type,
  t
}) => {
  const {
    data: timeserieWithUpdatedRelationships
  } = await getRelationshipByType(timeserie, type).add(contact);
  set_default()(timeserieWithUpdatedRelationships, `relationships.${getRelationshipKey(type)}.data.metadata`, {
    addressId: addressId
  });
  const hydratedTs = client.hydrateDocument(timeserieWithUpdatedRelationships);
  setTimeserieTitleWithRel({
    timeserie: hydratedTs,
    t
  });
  await client.save(timeserieWithUpdatedRelationships);
};
const createAddressAndRelationship = async ({
  client,
  contact,
  timeserie,
  type,
  label,
  category,
  t
}) => {
  // --- Update contact with existing address
  const addressId = getRandomUUID();
  const contactToSave = addAddressToContact({
    contact,
    addressId,
    label,
    timeserie,
    type,
    t,
    category
  });
  await client.save(contactToSave);

  // --- Update timeserie with address relationship
  await updateTimeserieWithContactRelationship({
    client,
    timeserie,
    contact,
    addressId,
    type,
    t
  });
};
const updateAddressAndRelationship = async ({
  client,
  contact,
  address,
  timeserie,
  type,
  label,
  category,
  t
}) => {
  // --- Update contact with existing address
  const addressIdx = contact.address.findIndex(address => address.id === address.id);
  set_default()(contact, `address[${addressIdx}].type`, isCustomLabel(label, t) ? label : undefined);
  set_default()(contact, `address[${addressIdx}].label`, category);
  set_default()(contact, `address[${addressIdx}].geo.cozyCategory`, category);
  await client.save(contact);

  // --- Update timeserie with address relationship
  await updateTimeserieWithContactRelationship({
    client,
    timeserie,
    contact,
    addressId: address.id,
    type,
    t
  });
};

/**
 * @param {Object} params
 * @param {import('cozy-client/types/CozyClient').default} params.client - The cozy client
 * @param {Object} params.setting - The io.cozy.coachco2.settings document
 * @param {'start'|'end'} params.type - The type of the relationship
 * @param {Object} params.timeserie - The timeserie document
 * @param {Object} params.contact - The contact document
 * @param {string} params.label - The label of the relationship
 * @param {boolean} params.isSameContact - Whether the contact is the same as the previous one
 * @param {'home'|'work'} params.category - The category of the relationship
 * @param {Function} params.t - The translation function
 */
const saveAddressAndRelationship = async ({
  client,
  setting,
  type,
  timeserie,
  contact,
  label,
  isSameContact,
  category,
  t
}) => {
  var _timeserie$relationsh4, _timeserie$relationsh5, _timeserie$relationsh6;
  const relType = getRelationshipKey(type);
  const hasAddress = !!(contact !== null && contact !== void 0 && contact.address);
  const hasRelAddress = !!((_timeserie$relationsh4 = timeserie.relationships[relType]) !== null && _timeserie$relationsh4 !== void 0 && (_timeserie$relationsh5 = _timeserie$relationsh4.data) !== null && _timeserie$relationsh5 !== void 0 && (_timeserie$relationsh6 = _timeserie$relationsh5.metadata) !== null && _timeserie$relationsh6 !== void 0 && _timeserie$relationsh6.addressId);
  let address;
  if (hasAddress && hasRelAddress) {
    const addressAndIndex = getContactAddressAndIndexFromRelationships({
      contact,
      timeserie,
      type
    });
    address = addressAndIndex.address;
  } else if (hasAddress && !hasRelAddress) {
    address = getMatchingAddressFromGeo({
      contact,
      timeserie,
      type
    });
  }
  if (isSameContact && !!address) {
    updateAddressAndRelationship({
      client,
      contact,
      timeserie,
      address,
      type,
      label,
      category,
      t
    });
  } else {
    createAddressAndRelationship({
      client,
      contact,
      timeserie,
      type,
      label,
      category,
      t
    });
  }
  client.save(_objectSpread(_objectSpread({}, setting), {}, {
    _type: doctypes["b" /* CCO2_SETTINGS_DOCTYPE */],
    hidePoiModal: true
  }));
};
// EXTERNAL MODULE: ./src/components/helpers.js + 25 modules
var helpers = __webpack_require__(35);

// EXTERNAL MODULE: ./src/lib/helpers.js
var lib_helpers = __webpack_require__(80);

// CONCATENATED MODULE: ./src/lib/metrics.js



/**
 * Compute the total CO2 consumed by the section based on the mode and distance.
 *
 * @param {object} section - The computed section by getSectionsFromTrip
 * @returns {number} The consumed CO2, in kg
 */
const computeCO2Section = section => {
  let totalCO2 = 0;
  const distance = section.distance / 1000; // convert in km

  switch (section.mode) {
    case constants["b" /* AIR_MODE */]:
      if (distance <= constants["yb" /* SHORT_PLANE_TRIP_MAX_DISTANCE */]) {
        totalCO2 += distance * constants["sb" /* PLANE_CO2_KG_PER_KM_SHORT */];
        break;
      } else if (distance <= constants["V" /* MEDIUM_PLANE_TRIP_MAX_DISTANCE */]) {
        totalCO2 += distance * constants["rb" /* PLANE_CO2_KG_PER_KM_MEDIUM */];
      } else {
        totalCO2 += distance * constants["qb" /* PLANE_CO2_KG_PER_KM_LONG */];
      }
      break;
    case constants["k" /* BICYCLING_ELECTRIC_MODE */]:
      totalCO2 += distance * constants["j" /* BICYCLING_ELECTRIC_AVERAGE_CO2_KG_PER_KM */];
      break;
    case constants["l" /* BICYCLING_MODE */]:
      totalCO2 += distance * constants["h" /* BICYCLING_AVERAGE_CO2_KG_PER_KM */];
      break;
    case constants["n" /* BUS_ELECTRIC_MODE */]:
      totalCO2 += distance * constants["m" /* BUS_ELECTRIC_CO2_KG_PER_KM */];
      break;
    case constants["o" /* BUS_MODE */]:
      totalCO2 += distance * Object(helpers["a" /* getAverageCO2PerKmByMode */])(constants["o" /* BUS_MODE */]);
      break;
    case constants["w" /* CAR_ELECTRIC_MODE */]:
      totalCO2 += distance * constants["v" /* CAR_ELECTRIC_CO2_KG_PER_KM */];
      break;
    case constants["x" /* CAR_MODE */]:
    case constants["T" /* IN_VEHICLE_MODE */]:
      // TODO: should depends on the energy type + number of passengers
      totalCO2 += distance * constants["t" /* CAR_AVERAGE_CO2_KG_PER_KM */];
      break;
    case constants["r" /* CARPOOL_ELECTRIC_MODE */]:
      totalCO2 += distance * constants["q" /* CARPOOL_ELECTRIC_CO2_KG_PER_KM */];
      break;
    case constants["s" /* CARPOOL_MODE */]:
      totalCO2 += distance * constants["p" /* CARPOOL_CO2_KG_PER_KM */];
      break;
    case constants["ib" /* MOTO_INF_250_MODE */]:
      totalCO2 += distance * constants["hb" /* MOTO_INF_250_CO2_KG_PER_KM */];
      break;
    case constants["kb" /* MOTO_SUP_250_MODE */]:
      totalCO2 += distance * constants["jb" /* MOTO_SUP_250_CO2_KG_PER_KM */];
      break;
    case constants["wb" /* SCOOTER_ELECTRIC_MODE */]:
      totalCO2 += distance * constants["vb" /* SCOOTER_ELECTRIC_AVERAGE_CO2_KG_PER_KM */];
      break;
    case constants["gb" /* MOPED_MODE */]:
      totalCO2 += distance * constants["fb" /* MOPED_AVERAGE_CO2_KG_PER_KM */];
      break;
    case constants["Fb" /* SUBWAY_MODE */]:
      totalCO2 += distance * Object(helpers["a" /* getAverageCO2PerKmByMode */])(constants["Fb" /* SUBWAY_MODE */]);
      break;
    case constants["Hb" /* TRAIN_MODE */]:
      totalCO2 += distance * Object(helpers["a" /* getAverageCO2PerKmByMode */])(constants["Hb" /* TRAIN_MODE */]);
      break;
    case constants["Jb" /* TRAMWAY_MODE */]:
      totalCO2 += distance * constants["Ib" /* TRAMWAY_CO2_KG_PER_KM */];
      break;
    case constants["Pb" /* UNKNOWN_MODE */]:
      totalCO2 += distance * constants["Ob" /* UNKNOWN_AVERAGE_CO2_KG_PER_KM */];
      break;
    case constants["Rb" /* WALKING_MODE */]:
    case constants["ub" /* RUNNING_MODE */]:
    case constants["lb" /* ON_FOOT_MODE */]:
      totalCO2 += distance * constants["Qb" /* WALKING_AVERAGE_CO2_KG_PER_KM */];
      break;
    default:
      break;
  }
  return totalCO2;
};

/**
 * Compute the calories produced based on weight, MET and duration.
 * Source of this formula:
 *  Bushman B PhD. Complete Guide to Fitness and Health 2nd Edition.
 *  American College of Sports Medicine. Human Kinetics. 2017.
 *  https://books.google.fr/books/about/ACSM_s_Complete_Guide_to_Fitness_Health.html?id=kPR6DwAAQBAJ&printsec=frontcover&source=kp_read_button&redir_esc=y#v=onepage&q&f=false
 *
 * @param {number} MET
 * @param {number} durationInMinutes
 * @returns {number} The number of kcal
 */
const caloriesFormula = (MET, durationInMinutes) => {
  const CBM = MET * constants["N" /* DEFAULT_WEIGHT_KG */] * 3.5 / 200;
  return CBM * durationInMinutes;
};
const computeCaloriesSection = section => {
  const speed = section.averageSpeed;
  const durationInMinutes = section.duration / 60; // duration is in seconds
  let MET;
  switch (section.mode) {
    case constants["Rb" /* WALKING_MODE */]:
    case constants["lb" /* ON_FOOT_MODE */]:
    case constants["ub" /* RUNNING_MODE */]:
      if (speed <= constants["Cb" /* SLOW_WALKING_MAX_SPEED */]) {
        MET = constants["db" /* MET_WALKING_SLOW */];
      } else if (speed <= constants["W" /* MEDIUM_WALKING_MAX_SPEED */]) {
        MET = constants["cb" /* MET_WALKING_MEDIUM */];
      } else if (speed <= constants["Q" /* FAST_WALKING_MAX_SPEED */]) {
        MET = constants["bb" /* MET_WALKING_FAST */];
      } else {
        MET = constants["eb" /* MET_WALKING_VERY_FAST */];
      }
      break;
    case constants["l" /* BICYCLING_MODE */]:
      if (speed <= constants["Bb" /* SLOW_BICYCLING_MAX_SPEED */]) {
        MET = constants["Z" /* MET_BICYCLING_SLOW */];
      } else if (speed <= constants["Ab" /* SLOW_BICYCLING_MAX_MEDIUM */]) {
        MET = constants["Y" /* MET_BICYCLING_MEDIUM */];
      } else if (speed <= constants["zb" /* SLOW_BICYCLING_MAX_FAST */]) {
        MET = constants["X" /* MET_BICYCLING_FAST */];
      } else {
        MET = constants["ab" /* MET_BICYCLING_VERY_FAST */];
      }
      break;
    default:
      break;
  }
  if (!MET) {
    // No relevant MET found for this section
    return 0;
  }
  return caloriesFormula(MET, durationInMinutes);
};
// EXTERNAL MODULE: ./src/lib/trips.js
var trips = __webpack_require__(69);

// EXTERNAL MODULE: ./node_modules/cozy-client/dist/index.node.js
var index_node = __webpack_require__(4);

// CONCATENATED MODULE: ./src/lib/timeseries.js
function timeseries_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function timeseries_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? timeseries_ownKeys(Object(source), !0).forEach(function (key) { timeseries_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : timeseries_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function timeseries_defineProperty(obj, key, value) { key = timeseries_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function timeseries_toPropertyKey(arg) { var key = timeseries_toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function timeseries_toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }




















const {
  geodesicDistance
} = index_node["models"].geo;
const collectFeaturesByOid = geojson => {
  const res = {};
  for (let item of geojson) {
    for (let feature of item.features) {
      res[feature.id] = feature;
    }
  }
  return res;
};

/**
 * Add feature data into timeserie start_place and end_place properties
 * according to $oid pointers
 */
const transformSerieToTrip = serie => {
  const {
    features,
    properties
  } = serie;
  const featureIndex = keyBy_default()(features, feature => feature.id);
  return merge_default()({}, serie, {
    properties: {
      start_place: {
        data: featureIndex[properties.start_place['$oid']]
      },
      end_place: {
        data: featureIndex[properties.end_place['$oid']]
      }
    }
  });
};
const transformTimeseriesToTrips = timeseries => {
  return timeseries.flatMap((timeserie, index) => {
    if (!timeserie.series) {
      throw new Error(`The timeserie with id ${timeserie._id} must have a "series" attributes to make transformTimeseriesToTrips() working properly`);
    }
    return timeserie.series.map(serie => transformSerieToTrip(timeseries_objectSpread(timeseries_objectSpread({}, serie), {}, {
      timeserieId: timeseries[index]._id
    })));
  });
};

/**
 * Update section of aggregated timeseries with new mode
 * @param {object} opts - Object with sectionId and mode
 * @param {object} opts.timeserie - Current timeserie
 * @param {string} opts.sectionId - The section id to be updated
 * @param {string} opts.mode - The mode to be updated
 * @returns {array} The updated sections
 */
const updateSectionMode = ({
  timeserie,
  sectionId,
  mode
}) => {
  const {
    sections: currentSections
  } = timeserie.aggregation;
  const currentSection = currentSections.find(section => section.id === sectionId);
  const currentSectionUpdated = Object.assign({}, currentSection, {
    mode
  });
  const currentSectionsUpdated = currentSections.map(section => section.id === sectionId ? currentSectionUpdated : section);
  return currentSectionsUpdated;
};

/**
 * Build a title based on contacts and display names.
 *
 * Note the timeserie MUST be hydrated with contacts relationship, which is not
 * automatically done, notably in node.
 * See: https://github.com/cozy/cozy-client/issues/493
 *
 *
 * @param {import('./types').TimeseriesGeoJSON} timeserieWithContacts - The timeserie that may includes contacts
 * @param {function(string)} t - The translation function
 * @returns {string} The built title
 */
const makeAggregationTitle = (timeserieWithContacts, t) => {
  var _getStartPlaceDisplay, _getStartPlaceDisplay2, _getStartPlaceDisplay3, _getEndPlaceDisplayNa, _getEndPlaceDisplayNa2, _getEndPlaceDisplayNa3;
  const startLabelByContact = getPlaceLabelByContact({
    timeserie: timeserieWithContacts,
    type: 'start',
    t
  });
  const endLabelByContact = getPlaceLabelByContact({
    timeserie: timeserieWithContacts,
    type: 'end',
    t
  });
  const startCity = ((_getStartPlaceDisplay = getStartPlaceDisplayName(timeserieWithContacts, t)) === null || _getStartPlaceDisplay === void 0 ? void 0 : (_getStartPlaceDisplay2 = _getStartPlaceDisplay.split(',')) === null || _getStartPlaceDisplay2 === void 0 ? void 0 : (_getStartPlaceDisplay3 = _getStartPlaceDisplay2[1]) === null || _getStartPlaceDisplay3 === void 0 ? void 0 : _getStartPlaceDisplay3.trim()) || '';
  const endCity = ((_getEndPlaceDisplayNa = getEndPlaceDisplayName(timeserieWithContacts, t)) === null || _getEndPlaceDisplayNa === void 0 ? void 0 : (_getEndPlaceDisplayNa2 = _getEndPlaceDisplayNa.split(',')) === null || _getEndPlaceDisplayNa2 === void 0 ? void 0 : (_getEndPlaceDisplayNa3 = _getEndPlaceDisplayNa2[1]) === null || _getEndPlaceDisplayNa3 === void 0 ? void 0 : _getEndPlaceDisplayNa3.trim()) || '';
  if (startLabelByContact || endLabelByContact) {
    const startLabel = startLabelByContact || getStartPlaceDisplayName(timeserieWithContacts, t);
    const endLabel = endLabelByContact || getEndPlaceDisplayName(timeserieWithContacts, t);
    return `${startLabel} ➝ ${endLabel}`;
  }
  if ((startCity || endCity) && startCity !== endCity) {
    return `${startCity} ➝ ${endCity}`.trim();
  }
  return getEndPlaceDisplayName(timeserieWithContacts, t);
};

/**
 * Auto fix wrong section values if negative values are detected.
 * It happens that openpath produce wrong section values, so we auto fix them.
 * We typically noticed negative duration or speed values
 *
 * @param {Array<Section>} section - The sections to inspect
 * @returns {Section} the fixed section, if necessary
 */
const fixSectionsIntegrity = sections => {
  const fixedSections = [];
  for (const section of sections) {
    const fixSection = timeseries_objectSpread({}, section);
    if (section.duration < 0) {
      const sectionDurationMs = section.timestamps[section.timestamps.length - 1] - section.timestamps[0];
      fixSection.duration = sectionDurationMs / 1000; // In seconds
    }

    if (section.distance < 0) {
      const sectionDist = section.distances.reduce((a, b) => a + b, 0);
      fixSection.distance = sectionDist;
    }
    if (section.duration < 0 || section.distance < 0) {
      fixSection.avgSpeed = fixSection.distance / fixSection.duration;
    }
    fixedSections.push(fixSection);
  }
  return fixedSections;
};

/**
 * Add aggregates for all timeseries by computing section's data
 * @param {array} timeseries - Timeseries to be aggregated
 * @param {Function} makeSection - Callback to get sections from timeserie
 * @param {Function} t - Translate function
 * @returns {array} The aggregated timeseries
 */
const computeAggregatedTimeseries = ({
  timeseries,
  makeSections,
  t
}) => {
  const aggregatedTimeseries = timeseries.map(timeserie => {
    if (!timeserie.series) {
      throw new Error(`The timeserie with id ${timeserie._id} must have a "series" attributes to make computeAggregatedTimeseries() working properly`);
    }
    const serie = timeserie.series[0];
    let totalSerieCO2 = 0;
    let totalSerieDistance = 0;
    let totalSerieDuration = 0;
    let totalSerieCalories = 0;
    const modes = [];
    const sections = fixSectionsIntegrity(makeSections(timeserie));
    const computedSections = sections.map(section => {
      const summarySection = {
        startDate: section.startDate,
        endDate: section.endDate,
        CO2: computeCO2Section(section),
        calories: computeCaloriesSection(section),
        avgSpeed: section.avgSpeed,
        duration: section.duration,
        distance: section.distance,
        mode: section.mode,
        id: section.id
      };
      totalSerieCO2 += summarySection.CO2;
      totalSerieDistance += summarySection.distance;
      totalSerieDuration += summarySection.duration;
      totalSerieCalories += summarySection.calories;
      modes.push(summarySection.mode);
      return summarySection;
    });
    return timeseries_objectSpread(timeseries_objectSpread({}, timeserie), {}, {
      aggregation: {
        automaticTitle: makeAggregationTitle(timeserie, t),
        totalCO2: totalSerieCO2,
        totalDistance: totalSerieDistance,
        totalDuration: totalSerieDuration,
        totalCalories: totalSerieCalories,
        startPlaceDisplayName: getStartPlaceDisplayName(timeserie, t),
        endPlaceDisplayName: getEndPlaceDisplayName(timeserie, t),
        coordinates: {
          startPoint: getStartPlaceCoordinates(timeserie),
          endPoint: getEndPlaceCoordinates(timeserie)
        },
        purpose: Object(trips["b" /* getManualPurpose */])(serie) || Object(trips["a" /* getAutomaticPurpose */])(serie),
        modes,
        sections: computedSections
      }
    });
  });
  return aggregatedTimeseries;
};

/**
 * Computes the total CO2 for all aggregated timeseries
 * @param {array} aggregatedTimeseries - Aggregated timeseries
 * @returns {number} The total CO2 of all timeseries
 */
const computeCO2Timeseries = aggregatedTimeseries => {
  let totalCO2 = 0;
  aggregatedTimeseries.forEach(aggregatedTimeserie => {
    var _aggregatedTimeserie$;
    totalCO2 += ((_aggregatedTimeserie$ = aggregatedTimeserie.aggregation) === null || _aggregatedTimeserie$ === void 0 ? void 0 : _aggregatedTimeserie$.totalCO2) || 0;
  });
  return totalCO2;
};

/**
 * Sort modes from aggregated timeseries by CO2,
 * and by timeseries count for those who don't have CO2 value
 * @param {object} timeseriesByModes - Sorted aggregated timeseries by modes
 * @returns {object} Sorted aggregated timeseries by CO2
 */
const sortGroupedTimeseries = (groupedTimeseries, keyForUnknown) => {
  const pairedGroupedTimeseries = toPairs_default()(groupedTimeseries);
  const unknown = groupedTimeseries[keyForUnknown];
  const isUnknownWithNoData = unknown.timeseries.length === 0 && unknown.totalCO2 === 0;
  const withCO2 = sortBy_default()(pairedGroupedTimeseries.filter(el => isUnknownWithNoData ? el[0] !== keyForUnknown && el[1].totalCO2 > 0 : el[1].totalCO2 > 0), el => el[1].totalCO2).reverse();
  const withZeroCO2 = sortBy_default()(pairedGroupedTimeseries.filter(el => isUnknownWithNoData ? el[0] !== keyForUnknown && el[1].totalCO2 === 0 : el[1].totalCO2 === 0), el => el[1].timeseries.length).reverse();
  return timeseries_objectSpread(timeseries_objectSpread(timeseries_objectSpread({}, fromPairs_default()(withCO2)), fromPairs_default()(withZeroCO2)), isUnknownWithNoData && {
    [keyForUnknown]: unknown
  });
};

// Modes usages

/**
 * Group timeseries ids by mode, and add totalCO2 for each modes
 * @param {array} aggregatedTimeseries - Aggregated timeseries
 * @returns {object}
 */
const makeTimeseriesAndTotalCO2ByModes = aggregatedTimeseries => {
  const timeseriesByModes = helpers["c" /* modes */].reduce((a, v) => timeseries_objectSpread(timeseries_objectSpread({}, a), {}, {
    [v]: {
      timeseries: [],
      totalCO2: 0
    }
  }), {});
  aggregatedTimeseries.forEach(aggregatedTimeserie => {
    const aggregatedSections = aggregatedTimeserie.aggregation.sections;
    aggregatedSections.forEach(section => {
      const collectedTimeseries = timeseriesByModes[section.mode].timeseries;
      if (!collectedTimeseries.some(collectedTimeserie => collectedTimeserie.id === aggregatedTimeserie.id)) {
        collectedTimeseries.push(aggregatedTimeserie);
      }
      timeseriesByModes[section.mode].totalCO2 += section.CO2;
    });
  });
  return timeseriesByModes;
};

/**
 * Sort aggregated timeseries by modes and CO2
 * @param {array} aggregatedTimeseries - Aggregated timeseries
 * @returns {object} Sorted aggregated timeseries by CO2 and modes
 */
const sortTimeseriesByCO2GroupedByMode = aggregatedTimeseries => {
  const timeseriesByModes = makeTimeseriesAndTotalCO2ByModes(aggregatedTimeseries);
  return sortGroupedTimeseries(timeseriesByModes, constants["Pb" /* UNKNOWN_MODE */]);
};

// Purpose usages

const getTimeseriePurpose = timeserie => {
  const originalPurpose = get_default()(timeserie, 'aggregation.purpose', '').toUpperCase();
  const isSupportedPurpose = helpers["d" /* purposes */].includes(originalPurpose);
  return isSupportedPurpose && originalPurpose || constants["nb" /* OTHER_PURPOSE */];
};
const getTimeseriePurposeOld = timeserie => {
  const manualPurpose = get_default()(timeserie, 'series[0].properties.manual_purpose', '').toUpperCase();
  const isSupportedPurpose = helpers["d" /* purposes */].includes(manualPurpose);
  return isSupportedPurpose && manualPurpose || constants["nb" /* OTHER_PURPOSE */];
};

/**
 * Group timeseries ids by purpose, and add totalCO2 for each purposes
 * @param {array} aggregatedTimeseries - Aggregated timeseries
 * @returns {object}
 */
const makeTimeseriesAndTotalCO2ByPurposes = aggregatedTimeseries => {
  const timeseriesByPurposes = helpers["d" /* purposes */].reduce((a, v) => timeseries_objectSpread(timeseries_objectSpread({}, a), {}, {
    [v]: {
      timeseries: [],
      totalCO2: 0
    }
  }), {});
  aggregatedTimeseries.forEach(aggregatedTimeserie => {
    const timeseriePurpose = getTimeseriePurpose(aggregatedTimeserie);
    const collectedTimeseries = timeseriesByPurposes[timeseriePurpose].timeseries;
    if (!collectedTimeseries.some(collectedTimeserie => collectedTimeserie.id === aggregatedTimeserie.id)) {
      collectedTimeseries.push(aggregatedTimeserie);
    }
    timeseriesByPurposes[timeseriePurpose].totalCO2 += aggregatedTimeserie.aggregation.totalCO2;
  });
  return timeseriesByPurposes;
};

/**
 * Sort aggregated timeseries by purposes and CO2
 * @param {array} aggregatedTimeseries - Aggregated timeseries
 * @returns {array}
 */
const sortTimeseriesByCO2GroupedByPurpose = aggregatedTimeseries => {
  const timeseriesByPurposes = makeTimeseriesAndTotalCO2ByPurposes(aggregatedTimeseries);
  return sortGroupedTimeseries(timeseriesByPurposes, constants["nb" /* OTHER_PURPOSE */]);
};
const getStartDate = timeserie => {
  return timeserie.startDate ? new Date(timeserie.startDate) : null;
};
const getEndDate = timeserie => {
  return timeserie.endDate ? new Date(timeserie.endDate) : null;
};
const getPlaceDate = (timeserie, type) => {
  return type === 'start' ? getStartDate(timeserie) : type === 'end' ? getEndDate(timeserie) : null;
};
const getStartPlaceDisplayName = (timeserie, t) => {
  var _timeserie$series;
  return get_default()(timeserie, 'aggregation.startPlaceDisplayName') || get_default()((_timeserie$series = timeserie.series) === null || _timeserie$series === void 0 ? void 0 : _timeserie$series[0], 'features[0].properties.display_name') || t('trips.departure');
};
const getEndPlaceDisplayName = (timeserie, t) => {
  var _timeserie$series2;
  return get_default()(timeserie, 'aggregation.endPlaceDisplayName') || get_default()((_timeserie$series2 = timeserie.series) === null || _timeserie$series2 === void 0 ? void 0 : _timeserie$series2[0], 'features[1].properties.display_name') || t('trips.arrival');
};
const getPlaceDisplayName = ({
  timeserie,
  type,
  t
}) => {
  return type === 'start' ? getStartPlaceDisplayName(timeserie, t) : type === 'end' ? getEndPlaceDisplayName(timeserie, t) : null;
};
const getPlaceCoordinates = (timeserie, type) => {
  const geojson = getGeoJSONData(timeserie);
  return [...geojson.properties[`${type}_loc`].coordinates];
};
const getFormattedPlaceCoordinates = ({
  timeserie,
  type,
  t
}) => {
  return `${t('contactToPlace.lat')}: ` + getPlaceCoordinates(timeserie, type).reverse().toString().replace(',', `, ${t('contactToPlace.long')}: `);
};
const getGeoJSONData = timeserie => {
  return get_default()(timeserie, 'series[0]');
};
const getTotalDuration = timeserie => {
  return get_default()(timeserie, 'aggregation.totalDuration');
};
const getTitle = (timeserie, isMobile) => {
  const manualTitle = get_default()(timeserie, 'title');
  if (manualTitle) {
    return manualTitle;
  }
  const title = get_default()(timeserie, 'aggregation.automaticTitle');
  if (!title) {
    return null;
  }
  if (!isMobile) {
    return title;
  }
  const [firstEl, secondEl] = title.split('➝');
  return firstEl.length > 12 && !!secondEl ? `${firstEl.slice(0, 12).trim()}... ➝ ${secondEl.trim()}` : title;
};
const getFormattedDuration = timeserie => {
  const startDate = getStartDate(timeserie);
  const endDate = getEndDate(timeserie);
  return formatDistance(endDate, startDate);
};
const getFormattedDistance = timeserie => {
  return Object(lib_helpers["d" /* formatDistance */])(timeserie.aggregation.totalDistance);
};
const getTotalCO2 = timeserie => {
  return get_default()(timeserie, 'aggregation.totalCO2', '');
};
const getFormattedTotalCO2 = timeserie => {
  const totalCO2 = getTotalCO2(timeserie);
  return Object(lib_helpers["b" /* formatCO2 */])(totalCO2);
};
const getTotalCalories = timeserie => {
  return get_default()(timeserie, 'aggregation.totalCalories', '');
};
const getFormattedTotalCalories = timeserie => {
  const totalCalories = getTotalCalories(timeserie);
  return Object(lib_helpers["c" /* formatCalories */])(totalCalories);
};
const getformattedEndDate = (timeserie, f) => {
  const date = f(getEndDate(timeserie), 'dddd D MMMM YYYY');
  return date.charAt(0).toUpperCase() + date.slice(1);
};
const getformattedStartDate = (timeserie, f) => {
  const date = f(getStartDate(timeserie), 'dddd D MMMM YYYY');
  return date.charAt(0).toUpperCase() + date.slice(1);
};

/**
 * Set an automatic purpose and the aggregation purpose.
 * An automatic purpose implies a recurring trip.
 *
 * @param {object} timeserie - The timeserie to set
 * @param {string} purpose - The new purpose
 *
 * @returns
 */
const setAutomaticPurpose = (timeserie, purpose) => {
  var _timeserie$series3;
  if (!(timeserie !== null && timeserie !== void 0 && (_timeserie$series3 = timeserie.series) !== null && _timeserie$series3 !== void 0 && _timeserie$series3[0])) {
    throw new Error('Timeserie is malformed');
  }
  const newTimeserie = timeseries_objectSpread({}, timeserie);
  set_default()(newTimeserie, 'series[0].properties.automatic_purpose', purpose);
  set_default()(newTimeserie, 'aggregation.recurring', true); // An automatic purpose is necessary recurring - otherwise it's manual
  return setAggregationPurpose(newTimeserie);
};
const setManualPurpose = (timeserie, purpose, {
  isRecurringTrip = null
} = {}) => {
  var _timeserie$series4;
  if (!(timeserie !== null && timeserie !== void 0 && (_timeserie$series4 = timeserie.series) !== null && _timeserie$series4 !== void 0 && _timeserie$series4[0])) {
    throw new Error('Timeserie is malformed');
  }
  const newTimeserie = timeseries_objectSpread({}, timeserie);
  set_default()(newTimeserie, 'series[0].properties.manual_purpose', purpose.toUpperCase());
  if (isRecurringTrip !== null) {
    set_default()(newTimeserie, 'aggregation.recurring', isRecurringTrip);
  }
  return setAggregationPurpose(newTimeserie);
};

/**
 * Set the aggregation purpose, which is the manual purpose if any,
 * or the automatic purpose.
 * The automatic purpose is preferred when the trip is recurring.
 *
 * @param {object} timeserie - The timeserie to set
 * @returns {object} - The timeserie with the set purpose
 */
const setAggregationPurpose = timeserie => {
  var _timeserie$aggregatio;
  if (!timeserie.series) {
    throw new Error(`The timeserie with id ${timeserie._id} must have a "series" attributes to make setAggregationPurpose() working properly`);
  }
  const serie = timeserie.series[0];
  const purpose = timeserie !== null && timeserie !== void 0 && (_timeserie$aggregatio = timeserie.aggregation) !== null && _timeserie$aggregatio !== void 0 && _timeserie$aggregatio.recurring ? Object(trips["a" /* getAutomaticPurpose */])(serie) || Object(trips["b" /* getManualPurpose */])(serie) : Object(trips["b" /* getManualPurpose */])(serie);
  if (!purpose) {
    return timeserie;
  }
  return timeseries_objectSpread(timeseries_objectSpread({}, timeserie), {}, {
    aggregation: timeseries_objectSpread(timeseries_objectSpread({}, timeserie.aggregation), {}, {
      purpose
    })
  });
};

/**
 * Compute the total CO2 consumed only by the specified mode
 */
const computeTotalCO2ByMode = (timeserie, mode) => {
  let totalCO2 = 0;
  for (const section of timeserie.aggregation.sections) {
    if (section.mode === mode) {
      totalCO2 += section.CO2;
    }
  }
  return totalCO2;
};
const computeAndFormatTotalCO2ByMode = (timeserie, mode) => {
  const totalCO2ByMode = computeTotalCO2ByMode(timeserie, mode);
  return Object(lib_helpers["b" /* formatCO2 */])(totalCO2ByMode);
};
const getModesSortedByDistance = timeserie => {
  return uniq_default()(timeserie.aggregation.sections.sort((sectionA, sectionB) => sectionA.distance > sectionB.distance ? -1 : 1).map(section => section.mode).filter(Boolean));
};

/**
 * Computes total CO2 by month of timeseries on twelve last months
 * @param {array} timeseries - Timeseries to be parsed
 * @param {function} f - format from I18n
 * @returns {object}
 */
const computeMonthsAndCO2s = (timeseries, f) => {
  const lastDate = new Date();
  const months = Array.from({
    length: 12
  }, (_, index) => Object(startOfMonth["a" /* default */])(Object(subMonths["a" /* default */])(lastDate, index))).reverse();
  const formatedMonths = months.map(month => f(month, 'MMM').toUpperCase());
  const CO2s = months.map((month, index) => {
    const isLastMonth = index === months.length - 1;
    const filteredTimeseries = timeseries.filter(timeserie => new Date(timeserie.startDate) >= month && (isLastMonth ? true : new Date(timeserie.startDate) < months[index + 1]));
    const sum = sumBy_default()(filteredTimeseries, 'aggregation.totalCO2');
    return Math.round(sum * 100) / 100; // Round values to 2 decimals
  });

  return {
    months: formatedMonths,
    CO2s
  };
};
const countUniqDays = timeseries => {
  let count = 0;
  const sortedTimeseriesByStartdateAsc = [...timeseries].sort((a, b) => {
    return getStartDate(a) - getStartDate(b);
  });
  sortedTimeseriesByStartdateAsc.forEach((timeserie, index) => {
    if (index === 0) {
      count++;
    } else {
      const startDate = getStartDate(timeserie);
      const prevTimeserie = sortedTimeseriesByStartdateAsc[index - 1];
      const prevStartDate = getStartDate(prevTimeserie);
      const prevStartDatePlus12Hours = addHours(prevStartDate, 12);
      const isSameDay = startDate.toDateString() === prevStartDate.toDateString();
      const isIn12Hours = startDate < prevStartDatePlus12Hours;
      if (!isSameDay && !isIn12Hours) {
        count++;
      }
    }
  });
  return count;
};
const getEarliestTimeserie = timeseries => {
  return timeseries.reduce((prev, current) => {
    return prev.startDate < current.startDate ? prev : current;
  });
};
const filterTimeseriesByYear = (timeseries, year) => {
  if (!timeseries) return [];
  return timeseries.filter(timeserie => new Date(timeserie.startDate).getFullYear().toString() === year);
};
const getStartPlaceCoordinates = timeserie => {
  var _timeserie$series5, _timeserie$series5$, _timeserie$series5$$p, _timeserie$series5$$p2, _timeserie$series5$$p3, _timeserie$series6, _timeserie$series6$, _timeserie$series6$$p, _timeserie$series6$$p2, _timeserie$series6$$p3;
  return {
    lon: timeserie === null || timeserie === void 0 ? void 0 : (_timeserie$series5 = timeserie.series) === null || _timeserie$series5 === void 0 ? void 0 : (_timeserie$series5$ = _timeserie$series5[0]) === null || _timeserie$series5$ === void 0 ? void 0 : (_timeserie$series5$$p = _timeserie$series5$.properties) === null || _timeserie$series5$$p === void 0 ? void 0 : (_timeserie$series5$$p2 = _timeserie$series5$$p.start_loc) === null || _timeserie$series5$$p2 === void 0 ? void 0 : (_timeserie$series5$$p3 = _timeserie$series5$$p2.coordinates) === null || _timeserie$series5$$p3 === void 0 ? void 0 : _timeserie$series5$$p3[0],
    lat: timeserie === null || timeserie === void 0 ? void 0 : (_timeserie$series6 = timeserie.series) === null || _timeserie$series6 === void 0 ? void 0 : (_timeserie$series6$ = _timeserie$series6[0]) === null || _timeserie$series6$ === void 0 ? void 0 : (_timeserie$series6$$p = _timeserie$series6$.properties) === null || _timeserie$series6$$p === void 0 ? void 0 : (_timeserie$series6$$p2 = _timeserie$series6$$p.start_loc) === null || _timeserie$series6$$p2 === void 0 ? void 0 : (_timeserie$series6$$p3 = _timeserie$series6$$p2.coordinates) === null || _timeserie$series6$$p3 === void 0 ? void 0 : _timeserie$series6$$p3[1]
  };
};
const getEndPlaceCoordinates = timeserie => {
  var _timeserie$series7, _timeserie$series7$, _timeserie$series7$$p, _timeserie$series7$$p2, _timeserie$series7$$p3, _timeserie$series8, _timeserie$series8$, _timeserie$series8$$p, _timeserie$series8$$p2, _timeserie$series8$$p3;
  return {
    lon: timeserie === null || timeserie === void 0 ? void 0 : (_timeserie$series7 = timeserie.series) === null || _timeserie$series7 === void 0 ? void 0 : (_timeserie$series7$ = _timeserie$series7[0]) === null || _timeserie$series7$ === void 0 ? void 0 : (_timeserie$series7$$p = _timeserie$series7$.properties) === null || _timeserie$series7$$p === void 0 ? void 0 : (_timeserie$series7$$p2 = _timeserie$series7$$p.end_loc) === null || _timeserie$series7$$p2 === void 0 ? void 0 : (_timeserie$series7$$p3 = _timeserie$series7$$p2.coordinates) === null || _timeserie$series7$$p3 === void 0 ? void 0 : _timeserie$series7$$p3[0],
    lat: timeserie === null || timeserie === void 0 ? void 0 : (_timeserie$series8 = timeserie.series) === null || _timeserie$series8 === void 0 ? void 0 : (_timeserie$series8$ = _timeserie$series8[0]) === null || _timeserie$series8$ === void 0 ? void 0 : (_timeserie$series8$$p = _timeserie$series8$.properties) === null || _timeserie$series8$$p === void 0 ? void 0 : (_timeserie$series8$$p2 = _timeserie$series8$$p.end_loc) === null || _timeserie$series8$$p2 === void 0 ? void 0 : (_timeserie$series8$$p3 = _timeserie$series8$$p2.coordinates) === null || _timeserie$series8$$p3 === void 0 ? void 0 : _timeserie$series8$$p3[1]
  };
};

/**
 * Whether of not a timeserie is a loop trip, i.e. with the same start
 * and end point.
 * We accept a distance error margin, as coordinates are rarely perfecly exact.
 *
 * @param {import('./types').TimeseriesGeoJSON} timeserie - The timeserie to compute
 * @returns {boolean} Whether or not this is a loop trip
 */
const isLoopTrip = timeserie => {
  var _timeserie$aggregatio2, _timeserie$aggregatio3, _timeserie$aggregatio4, _timeserie$aggregatio5;
  const startCoordinates = timeserie === null || timeserie === void 0 ? void 0 : (_timeserie$aggregatio2 = timeserie.aggregation) === null || _timeserie$aggregatio2 === void 0 ? void 0 : (_timeserie$aggregatio3 = _timeserie$aggregatio2.coordinates) === null || _timeserie$aggregatio3 === void 0 ? void 0 : _timeserie$aggregatio3.startPoint;
  const endCoordinates = timeserie === null || timeserie === void 0 ? void 0 : (_timeserie$aggregatio4 = timeserie.aggregation) === null || _timeserie$aggregatio4 === void 0 ? void 0 : (_timeserie$aggregatio5 = _timeserie$aggregatio4.coordinates) === null || _timeserie$aggregatio5 === void 0 ? void 0 : _timeserie$aggregatio5.endPoint;
  if (!startCoordinates || !endCoordinates) {
    return false;
  }
  const distanceStartEnd = geodesicDistance(startCoordinates, endCoordinates);
  return distanceStartEnd <= constants["Eb" /* START_END_DISTANCE_THRESHOLD_M */];
};

/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FetchError = exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));

var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(127));

var _inherits2 = _interopRequireDefault(__webpack_require__(18));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(19));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(16));

var _wrapNativeSuper2 = _interopRequireDefault(__webpack_require__(93));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var EXPIRED_TOKEN = /Expired token/;
var CLIENT_NOT_FOUND = /Client not found/;
var INVALID_TOKEN = /Invalid JWT token/;
var INVALID_TOKEN_ALT = /Invalid token/;
var UNREGISTERED_CLIENT = /the client must be registered/;
var _default = {
  EXPIRED_TOKEN: EXPIRED_TOKEN,
  CLIENT_NOT_FOUND: CLIENT_NOT_FOUND,
  INVALID_TOKEN: INVALID_TOKEN,
  INVALID_TOKEN_ALT: INVALID_TOKEN_ALT,
  UNREGISTERED_CLIENT: UNREGISTERED_CLIENT
};
exports.default = _default;
var invalidTokenRegex = /invalid_token/;
var expiredTokenRegex = /access_token_expired/;

var getWwwAuthenticateErrorMessage = function getWwwAuthenticateErrorMessage(response) {
  var _response$headers;

  var wwwAuthenticateHeader = (_response$headers = response.headers) === null || _response$headers === void 0 ? void 0 : _response$headers.get('www-authenticate');
  if (!wwwAuthenticateHeader) return undefined;
  if (expiredTokenRegex.test(wwwAuthenticateHeader)) return 'Expired token';
  if (invalidTokenRegex.test(wwwAuthenticateHeader)) return 'Invalid token';
};

var getReasonMessage = function getReasonMessage(reason, wwwAuthenticateErrorMessage) {
  // As for now we only want to use `reason.error` over `reason.message` if it's an unregistered client error
  // For other scenarios, we want to still use `reason.message` over `JSON.stringify(reason)` for better backward compatibility
  var isUnregisteredError = typeof reason.error === 'string' && UNREGISTERED_CLIENT.test(reason.error) ? reason.error : undefined;
  return isUnregisteredError || reason.message || wwwAuthenticateErrorMessage || (typeof reason === 'string' ? reason : JSON.stringify(reason));
};

var FetchError = /*#__PURE__*/function (_Error) {
  (0, _inherits2.default)(FetchError, _Error);

  var _super = _createSuper(FetchError);

  function FetchError(response, reason) {
    var _Error$captureStackTr;

    var _this;

    (0, _classCallCheck2.default)(this, FetchError);
    _this = _super.call(this);
    (_Error$captureStackTr = Error.captureStackTrace) === null || _Error$captureStackTr === void 0 ? void 0 : _Error$captureStackTr.call(Error, (0, _assertThisInitialized2.default)(_this), _this.constructor); // WARN We have to hardcode this because babel doesn't play nice when extending Error

    _this.name = 'FetchError';
    _this.response = response;
    _this.url = response.url;
    _this.status = response.status;
    _this.reason = reason;

    if (reason === null) {
      throw new Error("FetchError received a ".concat(response.status, " error without a Response Body when calling ").concat(response.url));
    }

    var wwwAuthenticateErrorMessage = getWwwAuthenticateErrorMessage(response);
    Object.defineProperty((0, _assertThisInitialized2.default)(_this), 'message', {
      value: getReasonMessage(reason, wwwAuthenticateErrorMessage)
    });
    return _this;
  }

  return FetchError;
}( /*#__PURE__*/(0, _wrapNativeSuper2.default)(Error));

exports.FetchError = FetchError;

/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DOCTYPE_PERMISSIONS = exports.DOCTYPE_FILES = exports.REGISTRATION_ABORT = void 0;
var REGISTRATION_ABORT = 'REGISTRATION_ABORT';
exports.REGISTRATION_ABORT = REGISTRATION_ABORT;
var DOCTYPE_FILES = 'io.cozy.files';
exports.DOCTYPE_FILES = DOCTYPE_FILES;
var DOCTYPE_PERMISSIONS = 'io.cozy.permissions';
exports.DOCTYPE_PERMISSIONS = DOCTYPE_PERMISSIONS;

/***/ }),
/* 58 */
/***/ (function(module, exports) {

module.exports = require("http");

/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

var identity = __webpack_require__(85),
    overRest = __webpack_require__(227),
    setToString = __webpack_require__(222);

/**
 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @returns {Function} Returns the new function.
 */
function baseRest(func, start) {
  return setToString(overRest(func, start, identity), func + '');
}

module.exports = baseRest;


/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var bind = __webpack_require__(102);
var GetIntrinsic = __webpack_require__(23);

var $apply = GetIntrinsic('%Function.prototype.apply%');
var $call = GetIntrinsic('%Function.prototype.call%');
var $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);

var $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);
var $defineProperty = GetIntrinsic('%Object.defineProperty%', true);
var $max = GetIntrinsic('%Math.max%');

if ($defineProperty) {
	try {
		$defineProperty({}, 'a', { value: 1 });
	} catch (e) {
		// IE 8 has a broken defineProperty
		$defineProperty = null;
	}
}

module.exports = function callBind(originalFunction) {
	var func = $reflectApply(bind, $call, arguments);
	if ($gOPD && $defineProperty) {
		var desc = $gOPD(func, 'length');
		if (desc.configurable) {
			// original length, plus the receiver, minus any additional arguments (after the receiver)
			$defineProperty(
				func,
				'length',
				{ value: 1 + $max(0, originalFunction.length - (arguments.length - 1)) }
			);
		}
	}
	return func;
};

var applyBind = function applyBind() {
	return $reflectApply(bind, $apply, arguments);
};

if ($defineProperty) {
	$defineProperty(module.exports, 'apply', { value: applyBind });
} else {
	module.exports.apply = applyBind;
}


/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(72),
    getRawTag = __webpack_require__(477),
    objectToString = __webpack_require__(478);

/** `Object#toString` result references. */
var nullTag = '[object Null]',
    undefinedTag = '[object Undefined]';

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }
  return (symToStringTag && symToStringTag in Object(value))
    ? getRawTag(value)
    : objectToString(value);
}

module.exports = baseGetTag;


/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsNative = __webpack_require__(476),
    getValue = __webpack_require__(481);

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : undefined;
}

module.exports = getNative;


/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

var DataView = __webpack_require__(524),
    Map = __webpack_require__(161),
    Promise = __webpack_require__(525),
    Set = __webpack_require__(244),
    WeakMap = __webpack_require__(245),
    baseGetTag = __webpack_require__(61),
    toSource = __webpack_require__(226);

/** `Object#toString` result references. */
var mapTag = '[object Map]',
    objectTag = '[object Object]',
    promiseTag = '[object Promise]',
    setTag = '[object Set]',
    weakMapTag = '[object WeakMap]';

var dataViewTag = '[object DataView]';

/** Used to detect maps, sets, and weakmaps. */
var dataViewCtorString = toSource(DataView),
    mapCtorString = toSource(Map),
    promiseCtorString = toSource(Promise),
    setCtorString = toSource(Set),
    weakMapCtorString = toSource(WeakMap);

/**
 * Gets the `toStringTag` of `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
var getTag = baseGetTag;

// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
    (Map && getTag(new Map) != mapTag) ||
    (Promise && getTag(Promise.resolve()) != promiseTag) ||
    (Set && getTag(new Set) != setTag) ||
    (WeakMap && getTag(new WeakMap) != weakMapTag)) {
  getTag = function(value) {
    var result = baseGetTag(value),
        Ctor = result == objectTag ? value.constructor : undefined,
        ctorString = Ctor ? toSource(Ctor) : '';

    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString: return dataViewTag;
        case mapCtorString: return mapTag;
        case promiseCtorString: return promiseTag;
        case setCtorString: return setTag;
        case weakMapCtorString: return weakMapTag;
      }
    }
    return result;
  };
}

module.exports = getTag;


/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));

var _createClass2 = _interopRequireDefault(__webpack_require__(13));

var _dsl = __webpack_require__(20);

/**
 * Associations are used by components to access related store documents that are
 * linked in a document. They are also responsible for building the `QueryDefinition` that is
 * used by the client to automatically fetch relationship data.
 *
 * Hydrated documents used by components come with Association instances.
 *
 * @interface
 *
 * @description
 * Example: The schema defines an `author` relationship :
 *
 * ```js
 * const BOOK_SCHEMA = {
 *   relationships: {
 *      author: 'has-one'
 *   }
 * }
 * ```
 *
 * Hydrated `books` will have the `author` association instance under the `author` key.
 * Accessing `hydratedBook.author.data` gives you the author from the store, for example :
 *
 * ```json
 * {
 *   "name": "St-Exupery",
 *   "firstName": "Antoine",
 *   "_id": "antoine"
 * }
 * ```
 *
 * It is the responsibility of the relationship to decide how the relationship data is stored.
 * For example, here since we use the default `has-one` relationship, the relationship data
 * is stored in the `relationships` attribute of the original document (in our case here, our book
 * would be
 *
 * ```json
 * {
 *   "title": "Le petit prince",
 *   "relationships": {
 *     "author": {
 *       "data": {
 *         "doctype": "io.cozy.authors",
 *         "_id": "antoine"
 *       }
 *     }
 *   }
 * }
 * ```
 *
 * In the case of an "in-place" relationship, the relationship data is stored directly under the attribute named
 * by the relationship (in our case `author`). Our book would be
 *
 * ```json
 * {
 *     "title": "Le petit prince",
 *     "author": "antoine"
 * }
 * ```
 *
 * ---
 *
 * Each different type of Association may change:
 *
 * - `get raw`: how the relationship data is stored (either as per the JSON API spec or
 *  in a custom way)
 * - `get data`: how the store documents are then fetched from the store to be added to
 * the hydrated document (.data method). View components will access
 * `hydratedDoc[relationshipName].data`.
 * - `get query`: how to build the query to fetch related documents
 *
 */
var Association = /*#__PURE__*/function () {
  /**
   * @param  {object} target - Original object containing raw data
   * @param  {string} name - Attribute under which the association is stored
   * @param  {string} doctype - Doctype of the documents managed by the association
   * @param {object} options - Options passed from the client
   * @param {Function} options.get - Get a document from the store
   * @param {Function} options.query - Execute client query
   * @param {Function} options.mutate - Execute client mutate
   * @param {Function} options.save - Execute client save
   * @param  {Function} options.dispatch - Store's dispatch, comes from the client
   */
  function Association(target, name, doctype, options) {
    (0, _classCallCheck2.default)(this, Association);
    var dispatch = options.dispatch,
        get = options.get,
        query = options.query,
        mutate = options.mutate,
        save = options.save;
    /**
     * The original document declaring the relationship
     *
     * @type {object}
     */

    this.target = target;
    /**
     * The name of the relationship.
     *
     * @type {string}
     * @example 'author'
     */

    this.name = name;
    /**
     * Doctype of the relationship
     *
     * @type {string}
     * @example 'io.cozy.authors'
     */

    this.doctype = doctype;
    /**
     * Returns the document from the store
     *
     * @type {Function}
     */

    this.get = get;
    /**
     * Performs a query to retrieve relationship documents.
     *
     * @param {QueryDefinition} queryDefinition
     * @function
     */

    this.query = query;
    /**
     * Performs a mutation on the relationship.
     *
     * @function
     */

    this.mutate = mutate;
    /**
     * Saves the relationship in store.
     *
     * @type {Function}
     */

    this.save = save;
    /**
     * Dispatch an action on the store.
     *
     * @type {Function}
     */

    this.dispatch = dispatch;
  }
  /**
   *
   * Returns the raw relationship data as stored in the original document
   *
   * For a document with relationships stored as JSON API spec:
   *
   * ```js
   * const book = {
   *   title: 'Moby Dick',
   *   relationships: {
   *     author: {
   *       data: {
   *         doctype: 'io.cozy.authors',
   *         id: 'herman'
   *       }
   *     }
   *   }
   *  }
   * ```
   *
   * Raw value will be
   *
   * ```json
   * {
   *   "doctype": "io.cozy.authors",
   *   "id": "herman"
   * }
   * ```
   *
   * Derived `Association`s need to implement this method.
   *
   * @returns {object}
   */


  (0, _createClass2.default)(Association, [{
    key: "raw",
    get: function get() {
      throw new Error('A relationship must define its raw getter');
    }
    /**
     * Returns the document(s) from the store
     *
     * For document with relationships stored as JSON API spec :
     *
     * ```js
     * const book = {
     *   title: 'Moby Dick',
     *   relationships: {
     *     author: {
     *       data: {
     *         doctype: 'io.cozy.authors',
     *         id: 'herman'
     *       }
     *     }
     *   }
     *  }
     * ```
     *
     * `data` will be
     *
     * ```json
     * {
     *   "_id": "herman"
     *   "_type": "io.cozy.authors",
     *   "firstName": "herman",
     *   "name": "Melville"
     * }
     * ```
     *
     * Derived `Association`s need to implement this method.
     *
     * @returns {object}
     */

  }, {
    key: "data",
    get: function get() {
      throw new Error('A relationship must define its data getter');
    }
    /**
     * Derived `Association`s need to implement this method.
     *
     * @param {import("../types").CozyClientDocument} document - Document to query
     * @param {object} client - The CozyClient instance
     * @param {Association} assoc - Association containing info on how to build the query to fetch related documents
     *
     * @returns {import("../types").CozyClientDocument | QueryDefinition }
     */

  }], [{
    key: "query",
    value: function query(document, client, assoc) {
      throw new Error('A custom relationship must define its query() function');
    }
  }]);
  return Association;
}();

var _default = Association;
exports.default = _default;

/***/ }),
/* 65 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return addMonths; });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(14);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(11);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(5);



/**
 * @name addMonths
 * @category Month Helpers
 * @summary Add the specified number of months to the given date.
 *
 * @description
 * Add the specified number of months to the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of months to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the months added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add 5 months to 1 September 2014:
 * const result = addMonths(new Date(2014, 8, 1), 5)
 * //=> Sun Feb 01 2015 00:00:00
 */

function addMonths(dirtyDate, dirtyAmount) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(2, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])(dirtyDate);
  var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(dirtyAmount);

  if (isNaN(amount)) {
    return new Date(NaN);
  }

  if (!amount) {
    // If 0 months, no-op to avoid changing times in the hour before end of DST
    return date;
  }

  var dayOfMonth = date.getDate(); // The JS Date object supports date math by accepting out-of-bounds values for
  // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and
  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we
  // want except that dates will wrap around the end of a month, meaning that
  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So
  // we'll default to the end of the desired month by adding 1 to the desired
  // month and using a date of 0 to back up one day to the end of the desired
  // month.

  var endOfDesiredMonth = new Date(date.getTime());
  endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);
  var daysInMonth = endOfDesiredMonth.getDate();

  if (dayOfMonth >= daysInMonth) {
    // If we're already at the end of the month, then this is the correct date
    // and we're done.
    return endOfDesiredMonth;
  } else {
    // Otherwise, we now know that setting the original day-of-month value won't
    // cause an overflow, so set the desired day-of-month. Note that we can't
    // just set the date of `endOfDesiredMonth` because that object may have had
    // its time changed in the unusual case where where a DST transition was on
    // the last day of the month and its local time was in the hour skipped or
    // repeated next to a DST transition.  So we use `date` instead which is
    // guaranteed to still have the original time.
    date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);
    return date;
  }
}

/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeKeys = __webpack_require__(236),
    baseKeys = __webpack_require__(152),
    isArrayLike = __webpack_require__(53);

/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */
function keys(object) {
  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
}

module.exports = keys;


/***/ }),
/* 67 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return endOfMonth; });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(5);


/**
 * @name endOfMonth
 * @category Month Helpers
 * @summary Return the end of a month for the given date.
 *
 * @description
 * Return the end of a month for the given date.
 * The result will be in the local timezone.
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the end of a month
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The end of a month for 2 September 2014 11:55:00:
 * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Tue Sep 30 2014 23:59:59.999
 */

function endOfMonth(dirtyDate) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])(1, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(dirtyDate);
  var month = date.getMonth();
  date.setFullYear(date.getFullYear(), month + 1, 0);
  date.setHours(23, 59, 59, 999);
  return date;
}

/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

var assignValue = __webpack_require__(154),
    baseAssignValue = __webpack_require__(73);

/**
 * Copies properties of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy properties from.
 * @param {Array} props The property identifiers to copy.
 * @param {Object} [object={}] The object to copy properties to.
 * @param {Function} [customizer] The function to customize copied values.
 * @returns {Object} Returns `object`.
 */
function copyObject(source, props, object, customizer) {
  var isNew = !object;
  object || (object = {});

  var index = -1,
      length = props.length;

  while (++index < length) {
    var key = props[index];

    var newValue = customizer
      ? customizer(object[key], source[key], key, object, source)
      : undefined;

    if (newValue === undefined) {
      newValue = source[key];
    }
    if (isNew) {
      baseAssignValue(object, key, newValue);
    } else {
      assignValue(object, key, newValue);
    }
  }
  return object;
}

module.exports = copyObject;


/***/ }),
/* 69 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return getManualPurpose; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return getAutomaticPurpose; });
/* unused harmony export getStartPlaceDisplayName */
/* unused harmony export getEndPlaceDisplayName */
/* unused harmony export getFeatureMode */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return getSectionsFromTrip; });
/* unused harmony export getTripStartDate */
/* unused harmony export getTripEndDate */
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(10);
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_get__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash_memoize__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(139);
/* harmony import */ var lodash_memoize__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_memoize__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var src_components_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(35);
/* harmony import */ var src_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(0);
/* harmony import */ var src_lib_helpers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(80);





const getManualPurpose = trip => {
  return lodash_get__WEBPACK_IMPORTED_MODULE_0___default()(trip, 'properties.manual_purpose');
};
const getAutomaticPurpose = trip => {
  var _trip$properties;
  return trip === null || trip === void 0 ? void 0 : (_trip$properties = trip.properties) === null || _trip$properties === void 0 ? void 0 : _trip$properties.automatic_purpose;
};
const getStartPlaceDisplayName = trip => {
  return lodash_get__WEBPACK_IMPORTED_MODULE_0___default()(trip, 'properties.start_place.data.properties.display_name');
};
const getEndPlaceDisplayName = trip => {
  return lodash_get__WEBPACK_IMPORTED_MODULE_0___default()(trip, 'properties.end_place.data.properties.display_name');
};

/**
 * Returns the mode of a feature
 * manual mode is created when the user edit the feature mode manualy
 * sensed mode is created by the prediction algorithm
 * default mode is created by the user in the settings of mode, if defined it takes priority over sensed mode
 * @param {object} feature - The feature from a section
 * @param {object} appSetting - The app settings
 * @returns The mode used in the following priority: manual / default / sensed / unknown
 */
const getFeatureMode = (feature, appSetting) => {
  const {
    defaultTransportModeByGroup
  } = appSetting || {};
  const manualMode = lodash_get__WEBPACK_IMPORTED_MODULE_0___default()(feature, 'properties.manual_mode', '').toUpperCase();
  const sensedOriginalMode = lodash_get__WEBPACK_IMPORTED_MODULE_0___default()(feature, 'properties.sensed_mode', '').toUpperCase();
  const sensedMode = sensedOriginalMode.split('PREDICTEDMODETYPES.')[1] || sensedOriginalMode.split('MOTIONTYPES.')[1];
  const isSupportedSensedMode = src_components_helpers__WEBPACK_IMPORTED_MODULE_2__[/* modes */ "c"].includes(sensedMode);
  const isSupportedManualMode = src_components_helpers__WEBPACK_IMPORTED_MODULE_2__[/* modes */ "c"].includes(manualMode);
  const defaultMode = src_components_helpers__WEBPACK_IMPORTED_MODULE_2__[/* modes */ "c"].find(mode => (defaultTransportModeByGroup === null || defaultTransportModeByGroup === void 0 ? void 0 : defaultTransportModeByGroup[Object(src_components_helpers__WEBPACK_IMPORTED_MODULE_2__[/* modeToCategory */ "b"])(sensedMode)]) === mode);
  return isSupportedManualMode && manualMode || !!defaultMode && defaultMode || isSupportedSensedMode && sensedMode || src_constants__WEBPACK_IMPORTED_MODULE_3__[/* UNKNOWN_MODE */ "Pb"];
};
const getSectionFromFeatureColl = (featureCollection, appSetting) => {
  return featureCollection.features.map(feature => {
    const startDate = lodash_get__WEBPACK_IMPORTED_MODULE_0___default()(feature, 'properties.start_fmt_time');
    const endDate = lodash_get__WEBPACK_IMPORTED_MODULE_0___default()(feature, 'properties.end_fmt_time');
    const speeds = lodash_get__WEBPACK_IMPORTED_MODULE_0___default()(feature, 'properties.speeds');
    return {
      id: feature.id,
      mode: getFeatureMode(feature, appSetting),
      coordinates: lodash_get__WEBPACK_IMPORTED_MODULE_0___default()(feature, 'geometry.coordinates'),
      timestamps: lodash_get__WEBPACK_IMPORTED_MODULE_0___default()(feature, 'properties.timestamps'),
      distance: lodash_get__WEBPACK_IMPORTED_MODULE_0___default()(feature, 'properties.distance'),
      // in meters
      distances: lodash_get__WEBPACK_IMPORTED_MODULE_0___default()(feature, 'properties.distances'),
      // in meters (Array)
      duration: lodash_get__WEBPACK_IMPORTED_MODULE_0___default()(feature, 'properties.duration'),
      // in seconds
      startDate: startDate ? new Date(startDate) : startDate,
      endDate: endDate ? new Date(endDate) : endDate,
      speeds,
      // in m/s (Array)
      avgSpeed: speeds ? Object(src_lib_helpers__WEBPACK_IMPORTED_MODULE_4__[/* averageSpeedKmH */ "a"])(speeds) : undefined // in km/h
    };
  });
};

const getSectionsFromTrip = lodash_memoize__WEBPACK_IMPORTED_MODULE_1___default()((trip, appSetting) => {
  return trip.features.filter(feature => feature.type === 'FeatureCollection').flatMap(featureColl => getSectionFromFeatureColl(featureColl, appSetting));
});
const getTripStartDate = trip => {
  return new Date(trip.properties.start_fmt_time);
};
const getTripEndDate = trip => {
  return new Date(trip.properties.end_fmt_time);
};

/***/ }),
/* 70 */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */
function baseUnary(func) {
  return function(value) {
    return func(value);
  };
}

module.exports = baseUnary;


/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

var isSymbol = __webpack_require__(86);

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/**
 * Converts `value` to a string key if it's not a string or symbol.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {string|symbol} Returns the key.
 */
function toKey(value) {
  if (typeof value == 'string' || isSymbol(value)) {
    return value;
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

module.exports = toKey;


/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(43);

/** Built-in value references. */
var Symbol = root.Symbol;

module.exports = Symbol;


/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

var defineProperty = __webpack_require__(228);

/**
 * The base implementation of `assignValue` and `assignMergeValue` without
 * value checks.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function baseAssignValue(object, key, value) {
  if (key == '__proto__' && defineProperty) {
    defineProperty(object, key, {
      'configurable': true,
      'enumerable': true,
      'value': value,
      'writable': true
    });
  } else {
    object[key] = value;
  }
}

module.exports = baseAssignValue;


/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

var isArray = __webpack_require__(21),
    isKey = __webpack_require__(170),
    stringToPath = __webpack_require__(456),
    toString = __webpack_require__(82);

/**
 * Casts `value` to a path array if it's not one.
 *
 * @private
 * @param {*} value The value to inspect.
 * @param {Object} [object] The object to query keys on.
 * @returns {Array} Returns the cast property path array.
 */
function castPath(value, object) {
  if (isArray(value)) {
    return value;
  }
  return isKey(value, object) ? [value] : stringToPath(toString(value));
}

module.exports = castPath;


/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Collection = exports.isDocumentUpdateConflict = exports.isNoUsableIndexError = exports.isIndexNotUsedWarning = exports.isIndexConflictError = exports.isIndexNotFoundError = exports.dontThrowNotFoundError = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(6));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(7));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));

var _createClass2 = _interopRequireDefault(__webpack_require__(13));

var _types = __webpack_require__(262);

/**
 * Handler for error response which return a empty value for "not found" error
 *
 * @param  {Error}         error - An error
 * @param  {Array|object|null}  data Data to return in case of "not found" error
 * @returns {object}        JsonAPI response with empty data in case of "not
 * found" error.
 */
var dontThrowNotFoundError = function dontThrowNotFoundError(error) {
  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

  if (error.message.match(/not_found/)) {
    var expectsCollection = Array.isArray(data); // Return expected JsonAPI attributes : collections are expecting
    // meta, skip and next attribute

    return expectsCollection ? {
      data: data,
      meta: {
        count: 0
      },
      skip: 0,
      next: false
    } : {
      data: data
    };
  }

  throw error;
};
/**
 * Helper to identify an index not found error
 *
 * @param {Error} error - An error
 * @returns {Array|null} - Whether or not the error is an index not found error
 */


exports.dontThrowNotFoundError = dontThrowNotFoundError;

var isIndexNotFoundError = function isIndexNotFoundError(error) {
  return error.message.match(/no_index/);
};
/**
 * Helper to identify an index conflict
 *
 * @param {Error} error - An error
 * @returns {Array|null} - Whether or not the error is an index conflict error
 */


exports.isIndexNotFoundError = isIndexNotFoundError;

var isIndexConflictError = function isIndexConflictError(error) {
  return error.message.match(/error_saving_ddoc/);
};
/**
 * Helper to identify a not used index
 *
 * @param {string} warning - The warning returned by CouchDB
 * @returns {Array|null} Whether or not this is a not used index warning
 */


exports.isIndexConflictError = isIndexConflictError;

var isIndexNotUsedWarning = function isIndexNotUsedWarning(warning) {
  return warning.match(/was not used because it does not contain a valid index for this query/);
};
/**
 * Helper to identify a no usable index error
 *
 * @param {Error} error - An error
 * @returns {Array|null} - Whether or not the error is a no usable index error
 */


exports.isIndexNotUsedWarning = isIndexNotUsedWarning;

var isNoUsableIndexError = function isNoUsableIndexError(error) {
  return error.message.match(/no_usable_index/);
};
/**
 * Helper to identify a document conflict
 *
 * @param {Error} error - An error
 * @returns {Array|null} - Whether or not the error is a document conflict error
 */


exports.isNoUsableIndexError = isNoUsableIndexError;

var isDocumentUpdateConflict = function isDocumentUpdateConflict(error) {
  return error.message.match(/Document update conflict/);
};
/**
 * Utility class to abstract an regroup identical methods and logics for
 * specific collections.
 */


exports.isDocumentUpdateConflict = isDocumentUpdateConflict;

var Collection = /*#__PURE__*/function () {
  function Collection() {
    (0, _classCallCheck2.default)(this, Collection);
  }

  (0, _createClass2.default)(Collection, null, [{
    key: "get",

    /**
     * Utility method aimed to return only one document.
     *
     * @param  {CozyStackClient}  stackClient - CozyStackClient
     * @param  {string}  endpoint - Stack endpoint
     * @param  {object}  options - Options of the collection
     * @param  {Function}    options.normalize Callback to normalize response data
     * (default `data => data`)
     * @param  {string}  [options.method=GET]  -  HTTP method
     * @returns {Promise<object>}  JsonAPI response containing normalized
     * document as data attribute
     */
    value: function () {
      var _get = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(stackClient, endpoint, _ref) {
        var _ref$normalize, normalize, _ref$method, method, resp;

        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _ref$normalize = _ref.normalize, normalize = _ref$normalize === void 0 ? function (data, response) {
                  return data;
                } : _ref$normalize, _ref$method = _ref.method, method = _ref$method === void 0 ? 'GET' : _ref$method;
                _context.prev = 1;
                _context.next = 4;
                return stackClient.fetchJSON(method, endpoint);

              case 4:
                resp = _context.sent;
                return _context.abrupt("return", {
                  data: normalize(resp.data, resp)
                });

              case 8:
                _context.prev = 8;
                _context.t0 = _context["catch"](1);
                return _context.abrupt("return", dontThrowNotFoundError(_context.t0, null));

              case 11:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, null, [[1, 8]]);
      }));

      function get(_x, _x2, _x3) {
        return _get.apply(this, arguments);
      }

      return get;
    }()
  }]);
  return Collection;
}();

exports.Collection = Collection;
var _default = Collection;
exports.default = _default;

/***/ }),
/* 76 */
/***/ (function(module, exports) {

var styles = {
  //styles
  bold: ["\x1B[1m", "\x1B[22m"],
  italic: ["\x1B[3m", "\x1B[23m"],
  underline: ["\x1B[4m", "\x1B[24m"],
  inverse: ["\x1B[7m", "\x1B[27m"],
  //grayscale
  white: ["\x1B[37m", "\x1B[39m"],
  grey: ["\x1B[90m", "\x1B[39m"],
  black: ["\x1B[30m", "\x1B[39m"],
  //colors
  blue: ["\x1B[34m", "\x1B[39m"],
  cyan: ["\x1B[36m", "\x1B[39m"],
  green: ["\x1B[32m", "\x1B[39m"],
  magenta: ["\x1B[35m", "\x1B[39m"],
  red: ["\x1B[31m", "\x1B[39m"],
  yellow: ["\x1B[33m", "\x1B[39m"]
};

exports.levelMap = { debug: 1, info: 2, warn: 3, error: 4 };

exports.style = function(str, style) {
  return styles[style][0] + str + styles[style][1];
};


/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireWildcard = __webpack_require__(22);

var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "initQuery", {
  enumerable: true,
  get: function get() {
    return _queries.initQuery;
  }
});
Object.defineProperty(exports, "loadQuery", {
  enumerable: true,
  get: function get() {
    return _queries.loadQuery;
  }
});
Object.defineProperty(exports, "receiveQueryResult", {
  enumerable: true,
  get: function get() {
    return _queries.receiveQueryResult;
  }
});
Object.defineProperty(exports, "receiveQueryError", {
  enumerable: true,
  get: function get() {
    return _queries.receiveQueryError;
  }
});
Object.defineProperty(exports, "initMutation", {
  enumerable: true,
  get: function get() {
    return _mutations.initMutation;
  }
});
Object.defineProperty(exports, "receiveMutationResult", {
  enumerable: true,
  get: function get() {
    return _mutations.receiveMutationResult;
  }
});
Object.defineProperty(exports, "receiveMutationError", {
  enumerable: true,
  get: function get() {
    return _mutations.receiveMutationError;
  }
});
exports.resetState = exports.getRawQueryFromState = exports.getQueryFromState = exports.getQueryFromStore = exports.getDocumentFromState = exports.getCollectionFromState = exports.getStateRoot = exports.createStore = exports.default = exports.StoreProxy = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(9));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));

var _createClass2 = _interopRequireDefault(__webpack_require__(13));

var _cozyFlags = _interopRequireDefault(__webpack_require__(48));

var _redux = __webpack_require__(738);

var _reduxThunk = _interopRequireDefault(__webpack_require__(614));

var _documents = _interopRequireWildcard(__webpack_require__(290));

var _queries = _interopRequireWildcard(__webpack_require__(183));

var _mutations = __webpack_require__(184);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var RESET_ACTION_TYPE = 'COZY_CLIENT.RESET_STATE';

var resetState = function resetState() {
  return {
    type: RESET_ACTION_TYPE
  };
};

exports.resetState = resetState;

var StoreProxy = /*#__PURE__*/function () {
  function StoreProxy(state) {
    (0, _classCallCheck2.default)(this, StoreProxy);
    this.state = state;
  }

  (0, _createClass2.default)(StoreProxy, [{
    key: "readDocument",
    value: function readDocument(doctype, id) {
      return this.state.documents[doctype][id];
    }
  }, {
    key: "writeDocument",
    value: function writeDocument(document) {
      this.setState(function (state) {
        return _objectSpread(_objectSpread({}, state), {}, {
          documents: _objectSpread(_objectSpread({}, state.documents), {}, (0, _defineProperty2.default)({}, document._type, _objectSpread(_objectSpread({}, state.documents[document._type]), {}, (0, _defineProperty2.default)({}, document._id, document))))
        });
      });
    }
  }, {
    key: "setState",
    value: function setState(updaterFn) {
      this.state = updaterFn(this.state);
    }
  }, {
    key: "getState",
    value: function getState() {
      return this.state;
    }
  }]);
  return StoreProxy;
}();

exports.StoreProxy = StoreProxy;
var initialState = {
  documents: {},
  queries: {}
};

var combinedReducer = function combinedReducer() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
  var action = arguments.length > 1 ? arguments[1] : undefined;

  if (action.type == RESET_ACTION_TYPE) {
    return initialState;
  }

  if (!(0, _queries.isQueryAction)(action) && !(0, _mutations.isMutationAction)(action)) {
    return state;
  }

  if (action.update) {
    var proxy = new StoreProxy(state);
    action.update(proxy, action.response);
    return {
      documents: proxy.getState().documents,
      queries: (0, _queries.default)(proxy.getState().queries, action, proxy.getState().documents)
    };
  }

  var nextDocuments = (0, _documents.default)(state.documents, action);
  var haveDocumentsChanged = nextDocuments !== state.documents;
  return {
    documents: nextDocuments,
    queries: (0, _queries.default)(state.queries, action, nextDocuments, haveDocumentsChanged)
  };
};

var _default = combinedReducer;
exports.default = _default;

var composedEnhancer = // @ts-ignore '__REDUX_DEVTOOLS_EXTENSION_COMPOSE__' doesn't exist 'Window & typeof globalThis'.ts(2339)
// should be (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ in ts file
// see https://github.com/reduxjs/redux-devtools/tree/main/extension#11-basic-store
(0, _cozyFlags.default)('debug') && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || _redux.compose;

var createStore = function createStore() {
  return (0, _redux.createStore)((0, _redux.combineReducers)({
    cozy: combinedReducer
  }), composedEnhancer((0, _redux.applyMiddleware)(_reduxThunk.default)));
};

exports.createStore = createStore;

var getStateRoot = function getStateRoot(state) {
  return state.cozy || {};
};

exports.getStateRoot = getStateRoot;

var getCollectionFromState = function getCollectionFromState(state, doctype) {
  return (0, _documents.getCollectionFromSlice)(getStateRoot(state).documents, doctype);
};

exports.getCollectionFromState = getCollectionFromState;

var getDocumentFromState = function getDocumentFromState(state, doctype, id) {
  return (0, _documents.getDocumentFromSlice)(getStateRoot(state).documents, doctype, id);
};

exports.getDocumentFromState = getDocumentFromState;

var getQueryFromStore = function getQueryFromStore(store, queryId) {
  return getQueryFromState(store.getState(), queryId);
};

exports.getQueryFromStore = getQueryFromStore;

var getQueryFromState = function getQueryFromState(state, queryId) {
  return (0, _queries.getQueryFromSlice)(getStateRoot(state).queries, queryId, getStateRoot(state).documents);
};

exports.getQueryFromState = getQueryFromState;

var getRawQueryFromState = function getRawQueryFromState(state, queryId) {
  return (0, _queries.getQueryFromSlice)(getStateRoot(state).queries, queryId);
};

exports.getRawQueryFromState = getRawQueryFromState;

/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var keys = __webpack_require__(199);
var hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';

var toStr = Object.prototype.toString;
var concat = Array.prototype.concat;
var origDefineProperty = Object.defineProperty;

var isFunction = function (fn) {
	return typeof fn === 'function' && toStr.call(fn) === '[object Function]';
};

var hasPropertyDescriptors = __webpack_require__(200)();

var supportsDescriptors = origDefineProperty && hasPropertyDescriptors;

var defineProperty = function (object, name, value, predicate) {
	if (name in object && (!isFunction(predicate) || !predicate())) {
		return;
	}
	if (supportsDescriptors) {
		origDefineProperty(object, name, {
			configurable: true,
			enumerable: false,
			value: value,
			writable: true
		});
	} else {
		object[name] = value; // eslint-disable-line no-param-reassign
	}
};

var defineProperties = function (object, map) {
	var predicates = arguments.length > 2 ? arguments[2] : {};
	var props = keys(map);
	if (hasSymbols) {
		props = concat.call(props, Object.getOwnPropertySymbols(map));
	}
	for (var i = 0; i < props.length; i += 1) {
		defineProperty(object, props[i], map[props[i]], predicates[props[i]]);
	}
};

defineProperties.supportsDescriptors = !!supportsDescriptors;

module.exports = defineProperties;


/***/ }),
/* 79 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "b", function() { return /* binding */ buildAggregatedTimeseriesQuery; });
__webpack_require__.d(__webpack_exports__, "f", function() { return /* binding */ buildTimeseriesQueryByDateAndAccountId; });
__webpack_require__.d(__webpack_exports__, "c", function() { return /* binding */ buildBikeCommuteTimeseriesQueryByAccountId; });
__webpack_require__.d(__webpack_exports__, "h", function() { return /* binding */ queryTimeserieByDocId; });
__webpack_require__.d(__webpack_exports__, "g", function() { return /* binding */ queryContactByDocId; });
__webpack_require__.d(__webpack_exports__, "a", function() { return /* binding */ buildAccountQuery; });
__webpack_require__.d(__webpack_exports__, "d", function() { return /* binding */ buildServiceAccountsQueryByCreatedAt; });
__webpack_require__.d(__webpack_exports__, "e", function() { return /* binding */ buildSettingsQuery; });

// UNUSED EXPORTS: buildAggregatedTimeseriesQueryByAccountLogin, buildHasTimeseriesQueryByAccountLogin, buildTimeseriesQuery, buildTimeseriesQueryByAccountLogin, buildTimeserieQueryById, buildTimeseriesQueryByDate, buildTimeseriesQueryByDateAndAccountLogin, buildOneYearOldTimeseriesWithAggregation, buildOneYearOldTimeseriesWithAggregationByAccountLogin, buildBikeCommuteTimeseriesQuery, buildBikeCommuteTimeseriesQueryByAccountLogin, buildContextQuery, buildContactsQueryById, buildLastFileCreatedByCCO2Query, buildFileQueryById, buildAccountQueryByLogin

// EXTERNAL MODULE: ./node_modules/date-fns/esm/endOfMonth/index.js
var endOfMonth = __webpack_require__(67);

// EXTERNAL MODULE: ./node_modules/date-fns/esm/toDate/index.js
var toDate = __webpack_require__(11);

// EXTERNAL MODULE: ./node_modules/date-fns/esm/_lib/requiredArgs/index.js
var requiredArgs = __webpack_require__(5);

// CONCATENATED MODULE: ./node_modules/date-fns/esm/endOfYear/index.js


/**
 * @name endOfYear
 * @category Year Helpers
 * @summary Return the end of a year for the given date.
 *
 * @description
 * Return the end of a year for the given date.
 * The result will be in the local timezone.
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the end of a year
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The end of a year for 2 September 2014 11:55:00:
 * const result = endOfYear(new Date(2014, 8, 2, 11, 55, 00))
 * //=> Wed Dec 31 2014 23:59:59.999
 */

function endOfYear(dirtyDate) {
  Object(requiredArgs["a" /* default */])(1, arguments);
  var date = Object(toDate["a" /* default */])(dirtyDate);
  var year = date.getFullYear();
  date.setFullYear(year + 1, 0, 0);
  date.setHours(23, 59, 59, 999);
  return date;
}
// EXTERNAL MODULE: ./node_modules/date-fns/esm/startOfMonth/index.js
var startOfMonth = __webpack_require__(44);

// CONCATENATED MODULE: ./node_modules/date-fns/esm/startOfYear/index.js


/**
 * @name startOfYear
 * @category Year Helpers
 * @summary Return the start of a year for the given date.
 *
 * @description
 * Return the start of a year for the given date.
 * The result will be in the local timezone.
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the start of a year
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The start of a year for 2 September 2014 11:55:00:
 * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))
 * //=> Wed Jan 01 2014 00:00:00
 */

function startOfYear(dirtyDate) {
  Object(requiredArgs["a" /* default */])(1, arguments);
  var cleanDate = Object(toDate["a" /* default */])(dirtyDate);
  var date = new Date(0);
  date.setFullYear(cleanDate.getFullYear(), 0, 1);
  date.setHours(0, 0, 0, 0);
  return date;
}
// EXTERNAL MODULE: ./node_modules/date-fns/esm/_lib/toInteger/index.js
var toInteger = __webpack_require__(14);

// EXTERNAL MODULE: ./node_modules/date-fns/esm/addMonths/index.js
var addMonths = __webpack_require__(65);

// CONCATENATED MODULE: ./node_modules/date-fns/esm/addYears/index.js



/**
 * @name addYears
 * @category Year Helpers
 * @summary Add the specified number of years to the given date.
 *
 * @description
 * Add the specified number of years to the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of years to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the years added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add 5 years to 1 September 2014:
 * const result = addYears(new Date(2014, 8, 1), 5)
 * //=> Sun Sep 01 2019 00:00:00
 */

function addYears(dirtyDate, dirtyAmount) {
  Object(requiredArgs["a" /* default */])(2, arguments);
  var amount = Object(toInteger["a" /* default */])(dirtyAmount);
  return Object(addMonths["a" /* default */])(dirtyDate, amount * 12);
}
// CONCATENATED MODULE: ./node_modules/date-fns/esm/subYears/index.js



/**
 * @name subYears
 * @category Year Helpers
 * @summary Subtract the specified number of years from the given date.
 *
 * @description
 * Subtract the specified number of years from the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of years to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the years subtracted
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Subtract 5 years from 1 September 2014:
 * const result = subYears(new Date(2014, 8, 1), 5)
 * //=> Tue Sep 01 2009 00:00:00
 */

function subYears(dirtyDate, dirtyAmount) {
  Object(requiredArgs["a" /* default */])(2, arguments);
  var amount = Object(toInteger["a" /* default */])(dirtyAmount);
  return addYears(dirtyDate, -amount);
}
// EXTERNAL MODULE: ./src/constants.js
var constants = __webpack_require__(0);

// EXTERNAL MODULE: ./src/doctypes/index.js
var doctypes = __webpack_require__(3);

// EXTERNAL MODULE: ./node_modules/cozy-client/dist/index.node.js
var index_node = __webpack_require__(4);
var index_node_default = /*#__PURE__*/__webpack_require__.n(index_node);

// CONCATENATED MODULE: ./src/queries/queries.js
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }








const older30s = 30 * 1000;
const neverReload = 100000 * 1000;

// Timeseries doctype -------------

const buildAggregatedTimeseriesQuery = ({
  limit,
  sortOrder = 'desc'
} = {}) => ({
  definition: Object(index_node["Q"])(doctypes["g" /* GEOJSON_DOCTYPE */]).where({}).partialIndex({
    aggregation: {
      $exists: true
    }
  }).select(['startDate', 'endDate', 'title', 'aggregation', 'captureDevice'])
  // FIXME "endDate" should be removed when https://github.com/cozy/cozy-client/issues/1216 fixed
  .indexFields(['startDate', 'endDate']).sortBy([{
    startDate: sortOrder
  }]).limitBy(limit),
  options: {
    as: `${doctypes["g" /* GEOJSON_DOCTYPE */]}/limitedBy/${limit}/sortedBy/${sortOrder}`,
    fetchPolicy: index_node_default.a.fetchPolicies.olderThan(older30s)
  }
});
const buildAggregatedTimeseriesQueryByAccountLogin = ({
  accountLogin,
  limit
}) => {
  return {
    definition: Object(index_node["Q"])(doctypes["g" /* GEOJSON_DOCTYPE */]).where({
      captureDevice: accountLogin
    }).partialIndex({
      aggregation: {
        $exists: true
      }
    }).select(['startDate', 'endDate', 'title', 'aggregation', 'captureDevice']).indexFields(['captureDevice', 'startDate', 'endDate']).sortBy([{
      captureDevice: 'desc'
    }, {
      startDate: 'desc'
    }, {
      endDate: 'desc'
    }]).limitBy(limit),
    options: {
      as: `${doctypes["g" /* GEOJSON_DOCTYPE */]}/accountLogin/${accountLogin}/limitedBy/${limit}`,
      fetchPolicy: index_node_default.a.fetchPolicies.olderThan(older30s)
    }
  };
};
const buildHasTimeseriesQueryByAccountLogin = accountLogin => ({
  definition: Object(index_node["Q"])(doctypes["g" /* GEOJSON_DOCTYPE */]).where({
    captureDevice: accountLogin
  }).indexFields(['captureDevice']).select(['captureDevice']).limitBy(1),
  options: {
    as: `${doctypes["g" /* GEOJSON_DOCTYPE */]}/hasTimeseries/accountLogin/${accountLogin}`,
    fetchPolicy: index_node_default.a.fetchPolicies.olderThan(older30s)
  }
});
const buildTimeseriesQuery = () => ({
  definition: Object(index_node["Q"])(doctypes["g" /* GEOJSON_DOCTYPE */]).where({}).indexFields(['cozyMetadata.sourceAccount']).sortBy([{
    'cozyMetadata.sourceAccount': 'desc'
  }]).limitBy(1000),
  options: {
    as: doctypes["g" /* GEOJSON_DOCTYPE */],
    fetchPolicy: index_node_default.a.fetchPolicies.olderThan(older30s)
  }
});
const buildTimeseriesQueryByAccountLogin = ({
  accountLogin
}) => {
  return {
    definition: Object(index_node["Q"])(doctypes["g" /* GEOJSON_DOCTYPE */]).where({
      captureDevice: accountLogin
    }).indexFields(['captureDevice']).sortBy([{
      captureDevice: 'desc'
    }]).limitBy(1000),
    options: {
      as: `${doctypes["g" /* GEOJSON_DOCTYPE */]}/accountLogin/${accountLogin}`,
      fetchPolicy: index_node_default.a.fetchPolicies.olderThan(older30s)
    }
  };
};
const buildTimeserieQueryById = timeserieId => ({
  definition: Object(index_node["Q"])(doctypes["g" /* GEOJSON_DOCTYPE */]).getById(timeserieId).include(['startPlaceContact', 'endPlaceContact']),
  options: {
    as: `${doctypes["g" /* GEOJSON_DOCTYPE */]}/${timeserieId}`,
    fetchPolicy: index_node_default.a.fetchPolicies.olderThan(older30s),
    singleDocData: true
  }
});
const buildTimeseriesQueryByDate = ({
  date = null,
  isFullYear,
  limit = 1000
} = {}) => {
  const startMonth = Object(startOfMonth["a" /* default */])(date) || null;
  const endMonth = Object(endOfMonth["a" /* default */])(date) || null;
  const startYear = startOfYear(date) || null;
  const endYear = endOfYear(date) || null;
  const dateAsOption = !date ? 'noDate' : `${startMonth.getFullYear()}-${startMonth.getMonth()}${isFullYear ? '-fullyear' : ''}`;
  return {
    definition: Object(index_node["Q"])(doctypes["g" /* GEOJSON_DOCTYPE */]).where(_objectSpread({
      // FIXME should be removed when https://github.com/cozy/cozy-client/issues/1374 fixed
      // This querie is call after "buildTimeseriesWithoutAggregation", couchDB should create a new view but doesn't and therefore "aggregation" in the partialIndex remains "false"
      // This tip necessarily consists of a new view (because it is named differently)
      endDate: {
        $gt: null
      }
    }, date && {
      startDate: {
        $gte: isFullYear ? startYear.toISOString() : startMonth.toISOString(),
        $lte: isFullYear ? endYear.toISOString() : endMonth.toISOString()
      }
    })).partialIndex({
      aggregation: {
        $exists: true
      }
    }).select(['aggregation', 'title', 'startDate', 'endDate', 'captureDevice']).indexFields(['endDate', ...(date ? ['startDate'] : [])]).limitBy(limit),
    options: {
      as: `${doctypes["g" /* GEOJSON_DOCTYPE */]}/date/${dateAsOption}/limitedBy/${limit}`,
      fetchPolicy: index_node_default.a.fetchPolicies.olderThan(older30s),
      enabled: Boolean(date)
    }
  };
};
const buildTimeseriesQueryByDateAndAccountId = ({
  date = null,
  isFullYear,
  accountId,
  limit = 1000
} = {}) => {
  const startMonth = Object(startOfMonth["a" /* default */])(date) || null;
  const endMonth = Object(endOfMonth["a" /* default */])(date) || null;
  const startYear = startOfYear(date) || null;
  const endYear = endOfYear(date) || null;
  const dateAsOption = !date ? 'noDate' : `${startMonth.getFullYear()}-${startMonth.getMonth()}${isFullYear ? '-fullyear' : ''}`;
  const queryDef = Object(index_node["Q"])(doctypes["g" /* GEOJSON_DOCTYPE */]).where(_objectSpread({
    'cozyMetadata.sourceAccount': accountId
  }, date && {
    startDate: {
      $gte: isFullYear ? startYear.toISOString() : startMonth.toISOString(),
      $lte: isFullYear ? endYear.toISOString() : endMonth.toISOString()
    }
  })).partialIndex({
    aggregation: {
      $exists: true
    }
  }).select(['aggregation', 'title', 'cozyMetadata.sourceAccount', 'startDate', 'endDate', 'captureDevice']).indexFields(['cozyMetadata.sourceAccount', ...(date ? ['startDate'] : [])]).limitBy(limit);
  return {
    definition: queryDef,
    options: {
      as: `${doctypes["g" /* GEOJSON_DOCTYPE */]}/sourceAccount/${accountId}/date/${dateAsOption}/limitedBy/${limit}`,
      fetchPolicy: index_node_default.a.fetchPolicies.olderThan(older30s),
      enabled: Boolean(date) && Boolean(accountId)
    }
  };
};
const buildTimeseriesQueryByDateAndAccountLogin = ({
  date = null,
  isFullYear,
  accountLogin,
  limit = 1000
} = {}) => {
  const startMonth = Object(startOfMonth["a" /* default */])(date) || null;
  const endMonth = Object(endOfMonth["a" /* default */])(date) || null;
  const startYear = startOfYear(date) || null;
  const endYear = endOfYear(date) || null;
  const dateAsOption = !date ? 'noDate' : `${startMonth.getFullYear()}-${startMonth.getMonth()}${isFullYear ? '-fullyear' : ''}`;
  const queryDef = Object(index_node["Q"])(doctypes["g" /* GEOJSON_DOCTYPE */]).where(_objectSpread({
    captureDevice: accountLogin
  }, date && {
    startDate: {
      $gte: isFullYear ? startYear.toISOString() : startMonth.toISOString(),
      $lte: isFullYear ? endYear.toISOString() : endMonth.toISOString()
    }
  })).partialIndex({
    aggregation: {
      $exists: true
    }
  }).select(['aggregation', 'title', 'startDate', 'endDate', 'captureDevice']).indexFields(['captureDevice', ...(date ? ['startDate'] : [])]).limitBy(limit);
  return {
    definition: queryDef,
    options: {
      as: `${doctypes["g" /* GEOJSON_DOCTYPE */]}/accountLogin/${accountLogin}/date/${dateAsOption}/limitedBy/${limit}`,
      fetchPolicy: index_node_default.a.fetchPolicies.olderThan(older30s),
      enabled: Boolean(date) && Boolean(accountLogin)
    }
  };
};
const buildOneYearOldTimeseriesWithAggregation = () => {
  const dateOneYearAgoFromNow = Object(startOfMonth["a" /* default */])(subYears(new Date(), 1));
  return {
    definition: Object(index_node["Q"])(doctypes["g" /* GEOJSON_DOCTYPE */]).where({
      startDate: {
        $gte: dateOneYearAgoFromNow.toISOString()
      }
    }).partialIndex({
      aggregation: {
        $exists: true
      }
    }).select(['startDate', 'endDate', 'aggregation', 'title', 'cozyMetadata.sourceAccount', 'captureDevice']).indexFields(['cozyMetadata.sourceAccount', 'startDate']).sortBy([{
      'cozyMetadata.sourceAccount': 'asc'
    }, {
      startDate: 'asc'
    }]).limitBy(1000),
    options: {
      as: `${doctypes["g" /* GEOJSON_DOCTYPE */]}/withAggregation/fromDate/${dateOneYearAgoFromNow.getFullYear()}-${dateOneYearAgoFromNow.getMonth()}`,
      fetchPolicy: index_node_default.a.fetchPolicies.olderThan(older30s)
    }
  };
};
const buildOneYearOldTimeseriesWithAggregationByAccountLogin = ({
  accountLogin
}) => {
  const dateOneYearAgoFromNow = Object(startOfMonth["a" /* default */])(subYears(new Date(), 1));
  return {
    definition: Object(index_node["Q"])(doctypes["g" /* GEOJSON_DOCTYPE */]).where({
      captureDevice: accountLogin,
      startDate: {
        $gte: dateOneYearAgoFromNow.toISOString()
      }
    }).partialIndex({
      aggregation: {
        $exists: true
      }
    }).select(['startDate', 'endDate', 'aggregation', 'title', 'captureDevice']).indexFields(['captureDevice', 'startDate']).sortBy([{
      captureDevice: 'asc'
    }, {
      startDate: 'asc'
    }]).limitBy(1000),
    options: {
      as: `${doctypes["g" /* GEOJSON_DOCTYPE */]}/accountLogin/${accountLogin}/withAggregation/fromDate/${dateOneYearAgoFromNow.getFullYear()}-${dateOneYearAgoFromNow.getMonth()}`,
      fetchPolicy: index_node_default.a.fetchPolicies.olderThan(older30s)
    }
  };
};
const buildBikeCommuteTimeseriesQuery = ({
  date = null
} = {}) => {
  const selector = {};
  if (date) {
    const startYearDate = startOfYear(new Date(date)).toISOString();
    const endYearDate = endOfYear(new Date(date)).toISOString();
    selector.startDate = {
      $gte: startYearDate,
      $lte: endYearDate
    };
  } else {
    selector.startDate = {
      $gt: null
    };
  }
  return {
    definition: Object(index_node["Q"])(doctypes["g" /* GEOJSON_DOCTYPE */]).where(selector).partialIndex({
      'aggregation.purpose': constants["y" /* COMMUTE_PURPOSE */],
      'aggregation.modes': {
        $in: [constants["l" /* BICYCLING_MODE */], constants["k" /* BICYCLING_ELECTRIC_MODE */], constants["wb" /* SCOOTER_ELECTRIC_MODE */]]
      }
    }).select(['startDate', 'endDate', 'title', 'aggregation', 'aggregation.modes', 'aggregation.purpose', 'cozyMetadata.sourceAccount', 'captureDevice']).indexFields(['cozyMetadata.sourceAccount', 'startDate']).sortBy([{
      'cozyMetadata.sourceAccount': 'desc'
    }, {
      startDate: 'desc'
    }]).limitBy(1000),
    options: {
      as: `${doctypes["g" /* GEOJSON_DOCTYPE */]}/BikeCommute`,
      fetchPolicy: index_node_default.a.fetchPolicies.olderThan(neverReload)
    }
  };
};
const buildBikeCommuteTimeseriesQueryByAccountId = ({
  accountId,
  date = null
}) => {
  const selector = {
    'cozyMetadata.sourceAccount': accountId
  };
  if (date) {
    const startYearDate = startOfYear(new Date(date)).toISOString();
    const endYearDate = endOfYear(new Date(date)).toISOString();
    selector.startDate = {
      $gte: startYearDate,
      $lte: endYearDate
    };
  } else {
    selector.startDate = {
      $gt: null
    };
  }
  return {
    definition: Object(index_node["Q"])(doctypes["g" /* GEOJSON_DOCTYPE */]).where(selector).partialIndex({
      'aggregation.purpose': constants["y" /* COMMUTE_PURPOSE */],
      'aggregation.modes': {
        $in: [constants["l" /* BICYCLING_MODE */], constants["k" /* BICYCLING_ELECTRIC_MODE */], constants["wb" /* SCOOTER_ELECTRIC_MODE */]]
      }
    }).select(['startDate', 'endDate', 'title', 'aggregation', 'aggregation.modes', 'aggregation.purpose', 'cozyMetadata.sourceAccount', 'captureDevice']).indexFields(['cozyMetadata.sourceAccount', 'startDate']).sortBy([{
      'cozyMetadata.sourceAccount': 'desc'
    }, {
      startDate: 'desc'
    }]).limitBy(1000),
    options: {
      as: `${doctypes["g" /* GEOJSON_DOCTYPE */]}/sourceAccount/${accountId}/BikeCommute`,
      fetchPolicy: index_node_default.a.fetchPolicies.olderThan(neverReload)
    }
  };
};
const buildBikeCommuteTimeseriesQueryByAccountLogin = ({
  accountLogin,
  date = null
}) => {
  const selector = {
    captureDevice: accountLogin
  };
  if (date) {
    const startYearDate = startOfYear(new Date(date)).toISOString();
    const endYearDate = endOfYear(new Date(date)).toISOString();
    selector.startDate = {
      $gte: startYearDate,
      $lte: endYearDate
    };
  } else {
    selector.startDate = {
      $gt: null
    };
  }
  return {
    definition: Object(index_node["Q"])(doctypes["g" /* GEOJSON_DOCTYPE */]).where(selector).partialIndex({
      'aggregation.purpose': constants["y" /* COMMUTE_PURPOSE */],
      'aggregation.modes': {
        $in: [constants["l" /* BICYCLING_MODE */], constants["k" /* BICYCLING_ELECTRIC_MODE */], constants["wb" /* SCOOTER_ELECTRIC_MODE */]]
      }
    }).select(['startDate', 'endDate', 'title', 'aggregation', 'aggregation.modes', 'aggregation.purpose', 'captureDevice']).indexFields(['captureDevice', 'startDate']).sortBy([{
      captureDevice: 'desc'
    }, {
      startDate: 'desc'
    }]).limitBy(1000),
    options: {
      as: `${doctypes["g" /* GEOJSON_DOCTYPE */]}/accountLogin/${accountLogin}/BikeCommute`,
      fetchPolicy: index_node_default.a.fetchPolicies.olderThan(neverReload)
    }
  };
};
const queryTimeserieByDocId = async (client, docId) => {
  const res = await client.query(Object(index_node["Q"])(doctypes["g" /* GEOJSON_DOCTYPE */]).getById(docId).include(['startPlaceContact', 'endPlaceContact']));
  return res === null || res === void 0 ? void 0 : res.data;
};
const queryContactByDocId = async (client, docId) => {
  const res = await client.query(Object(index_node["Q"])(doctypes["c" /* CONTACTS_DOCTYPE */]).getById(docId));
  return res === null || res === void 0 ? void 0 : res.data;
};

// other doctypes -------------

const buildAccountQuery = ({
  limit = 100,
  withOnlyLogin = true
} = {}) => {
  const queryDef = Object(index_node["Q"])(doctypes["a" /* ACCOUNTS_DOCTYPE */]).partialIndex({
    account_type: {
      $or: ['tracemob', 'openpath']
    }
  }).limitBy(limit);
  if (withOnlyLogin) {
    queryDef.select(['auth.login', 'account_type']);
  }
  return {
    definition: queryDef,
    options: {
      as: `${doctypes["a" /* ACCOUNTS_DOCTYPE */]}/account_type/limitedBy/${limit}/withOnlyLogin/${withOnlyLogin}`,
      fetchPolicy: index_node_default.a.fetchPolicies.olderThan(older30s)
    }
  };
};
const buildServiceAccountsQueryByCreatedAt = ({
  limit = 100
} = {}) => {
  const queryDef = Object(index_node["Q"])(doctypes["a" /* ACCOUNTS_DOCTYPE */]).where({
    'cozyMetadata.createdAt': {
      $gt: null
    }
  }).partialIndex({
    account_type: 'openpath',
    token: {
      $exists: true
    }
  }).indexFields(['cozyMetadata.createdAt']).sortBy([{
    'cozyMetadata.createdAt': 'desc'
  }]).limitBy(limit);
  return {
    definition: queryDef,
    options: {
      as: `${doctypes["a" /* ACCOUNTS_DOCTYPE */]}/account_type/openpath-with-token`,
      fetchPolicy: index_node_default.a.fetchPolicies.olderThan(older30s)
    }
  };
};
const buildSettingsQuery = () => ({
  definition: Object(index_node["Q"])(doctypes["b" /* CCO2_SETTINGS_DOCTYPE */]),
  options: {
    as: doctypes["b" /* CCO2_SETTINGS_DOCTYPE */],
    fetchPolicy: index_node_default.a.fetchPolicies.olderThan(neverReload)
  }
});
const buildContextQuery = () => ({
  definition: Object(index_node["Q"])(doctypes["i" /* SETTINGS_DOCTYPE */]).getById('context'),
  options: {
    as: `${doctypes["i" /* SETTINGS_DOCTYPE */]}/context`,
    fetchPolicy: index_node_default.a.fetchPolicies.olderThan(neverReload),
    singleDocData: true
  }
});
const buildContactsQueryById = contactId => ({
  definition: Object(index_node["Q"])(doctypes["c" /* CONTACTS_DOCTYPE */]).getById(contactId),
  options: {
    as: `${doctypes["c" /* CONTACTS_DOCTYPE */]}/${contactId}`,
    fetchPolicy: index_node_default.a.fetchPolicies.olderThan(older30s),
    singleDocData: true
  }
});
const buildLastFileCreatedByCCO2Query = () => ({
  definition: Object(index_node["Q"])(doctypes["f" /* FILES_DOCTYPE */]).partialIndex({
    'cozyMetadata.createdByApp': 'coachco2',
    class: 'pdf',
    type: 'file',
    trashed: false
  }).indexFields(['cozyMetadata.updatedAt']).sortBy([{
    'cozyMetadata.updatedAt': 'desc'
  }]).limitBy(1),
  options: {
    as: doctypes["f" /* FILES_DOCTYPE */],
    fetchPolicy: index_node_default.a.fetchPolicies.olderThan(neverReload)
  }
});
const buildFileQueryById = fileId => ({
  definition: () => Object(index_node["Q"])(doctypes["f" /* FILES_DOCTYPE */]).getById(fileId),
  options: {
    as: `${doctypes["f" /* FILES_DOCTYPE */]}/${fileId}`,
    fetchPolicy: index_node_default.a.fetchPolicies.olderThan(neverReload)
  }
});
const buildAccountQueryByLogin = login => ({
  definition: Object(index_node["Q"])(doctypes["a" /* ACCOUNTS_DOCTYPE */]).where({
    'auth.login': login
  }).partialIndex({
    account_type: {
      $or: ['tracemob', 'openpath']
    }
  }).indexFields(['auth.login']).select(['auth.login', 'account_type']),
  options: {
    as: `${doctypes["a" /* ACCOUNTS_DOCTYPE */]}/account_type/login/${login}`
  }
});

/***/ }),
/* 80 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return formatDistance; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return formatCO2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return formatCalories; });
/* unused harmony export formatDuration */
/* unused harmony export formatAvgSpeed */
/* unused harmony export formatDate */
/* unused harmony export computeFormatedPercentage */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return averageSpeedKmH; });
/* harmony import */ var humanize_duration__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(440);
/* harmony import */ var humanize_duration__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(humanize_duration__WEBPACK_IMPORTED_MODULE_0__);

const formatDistance = distance => {
  let unit = 'm';
  let formatedDistance = distance;
  if (distance > 1000) {
    unit = 'km';
    formatedDistance = distance / 1000;
  }
  return `${Math.round(formatedDistance)} ${unit}`;
};
const formatCO2 = CO2 => `${Math.round(CO2 * 100) / 100} kg`;
const formatCalories = calories => `${Math.round(calories)} kcal`;
const formatDuration = (duration, lang) => {
  const language = ['fr', 'en'].includes(lang) ? lang : 'en';
  return humanize_duration__WEBPACK_IMPORTED_MODULE_0___default()(duration * 1000, {
    delimiter: ' ',
    largest: 2,
    round: true,
    units: ['h', 'm'],
    language,
    languages: {
      fr: {
        d: () => 'j',
        h: () => 'h',
        m: () => 'min',
        s: () => 's',
        ms: () => 'ms'
      },
      en: {
        d: () => 'd',
        h: () => 'h',
        m: () => 'min',
        s: () => 's',
        ms: () => 'ms'
      }
    }
  });
};

// The average speed is given in km/h
const formatAvgSpeed = avgSpeed => `${Math.round(avgSpeed)} km/h`;
const formatDate = ({
  f,
  lang,
  date
}) => {
  if (lang === 'fr') {
    return f(date, 'HH[h]mm');
  }
  return f(date, 'HH:mm');
};

/**
 * Compute the percentage and returns it as a formatted string
 * @param {number} value
 * @param {number} total
 * @returns {string}
 */
const computeFormatedPercentage = (value, total) => {
  if (total === 0) return '0%';
  const [int, dec] = (value * 100 / total).toFixed(2).split('.');
  if (dec === '00') return `${int}%`;
  return `${int}.${dec}%`;
};

/**
 * Get the average speed in km/h from an array of m/s values
 * @param {Array} speeds - The speed values, in m/s
 * @returns {number} The average speed, given in km/h
 */
const averageSpeedKmH = speeds => {
  const avgSpeed = speeds.reduce((a, b) => a + b, 0) / speeds.length;
  // The speed is given in m/s
  return avgSpeed * 3.6;
};

/***/ }),
/* 81 */
/***/ (function(module, exports) {

module.exports = function(module) {
	if (!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

var baseToString = __webpack_require__(171);

/**
 * Converts `value` to a string. An empty string is returned for `null`
 * and `undefined` values. The sign of `-0` is preserved.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.toString(null);
 * // => ''
 *
 * _.toString(-0);
 * // => '-0'
 *
 * _.toString([1, 2, 3]);
 * // => '1,2,3'
 */
function toString(value) {
  return value == null ? '' : baseToString(value);
}

module.exports = toString;


/***/ }),
/* 83 */
/***/ (function(module, exports) {

module.exports = require("fs");

/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

var baseUniq = __webpack_require__(173);

/**
 * Creates a duplicate-free version of an array, using
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons, in which only the first occurrence of each element
 * is kept. The order of result values is determined by the order they occur
 * in the array.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @returns {Array} Returns the new duplicate free array.
 * @example
 *
 * _.uniq([2, 1, 2]);
 * // => [2, 1]
 */
function uniq(array) {
  return (array && array.length) ? baseUniq(array) : [];
}

module.exports = uniq;


/***/ }),
/* 85 */
/***/ (function(module, exports) {

/**
 * This method returns the first argument it receives.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'a': 1 };
 *
 * console.log(_.identity(object) === object);
 * // => true
 */
function identity(value) {
  return value;
}

module.exports = identity;


/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(61),
    isObjectLike = __webpack_require__(39);

/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike(value) && baseGetTag(value) == symbolTag);
}

module.exports = isSymbol;


/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeKeys = __webpack_require__(236),
    baseKeysIn = __webpack_require__(538),
    isArrayLike = __webpack_require__(53);

/**
 * Creates an array of the own and inherited enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keysIn(new Foo);
 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
 */
function keysIn(object) {
  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
}

module.exports = keysIn;


/***/ }),
/* 88 */
/***/ (function(module, exports) {

/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

module.exports = eq;


/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsArguments = __webpack_require__(501),
    isObjectLike = __webpack_require__(39);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Built-in value references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
    !propertyIsEnumerable.call(value, 'callee');
};

module.exports = isArguments;


/***/ }),
/* 90 */
/***/ (function(module, exports) {

function _typeof(o) {
  "@babel/helpers - typeof";

  return (module.exports = _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {
    return typeof o;
  } : function (o) {
    return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports), _typeof(o);
}
module.exports = _typeof, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(43),
    stubFalse = __webpack_require__(511);

/** Detect free variable `exports`. */
var freeExports =  true && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;

/**
 * Checks if `value` is a buffer.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
 * @example
 *
 * _.isBuffer(new Buffer(2));
 * // => true
 *
 * _.isBuffer(new Uint8Array(2));
 * // => false
 */
var isBuffer = nativeIsBuffer || stubFalse;

module.exports = isBuffer;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(81)(module)))

/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

var castPath = __webpack_require__(74),
    toKey = __webpack_require__(71);

/**
 * The base implementation of `_.get` without support for default values.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @returns {*} Returns the resolved value.
 */
function baseGet(object, path) {
  path = castPath(path, object);

  var index = 0,
      length = path.length;

  while (object != null && index < length) {
    object = object[toKey(path[index++])];
  }
  return (index && index == length) ? object : undefined;
}

module.exports = baseGet;


/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

var getPrototypeOf = __webpack_require__(16);
var setPrototypeOf = __webpack_require__(177);
var isNativeFunction = __webpack_require__(587);
var construct = __webpack_require__(588);
function _wrapNativeSuper(Class) {
  var _cache = typeof Map === "function" ? new Map() : undefined;
  module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {
    if (Class === null || !isNativeFunction(Class)) return Class;
    if (typeof Class !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }
    if (typeof _cache !== "undefined") {
      if (_cache.has(Class)) return _cache.get(Class);
      _cache.set(Class, Wrapper);
    }
    function Wrapper() {
      return construct(Class, arguments, getPrototypeOf(this).constructor);
    }
    Wrapper.prototype = Object.create(Class.prototype, {
      constructor: {
        value: Wrapper,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    return setPrototypeOf(Wrapper, Class);
  }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  return _wrapNativeSuper(Class);
}
module.exports = _wrapNativeSuper, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.updateRelationship = exports.updateHasManyItem = exports.removeHasManyItem = exports.setHasManyItem = exports.getHasManyItems = exports.getHasManyItem = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));

var _createClass2 = _interopRequireDefault(__webpack_require__(13));

var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(127));

var _inherits2 = _interopRequireDefault(__webpack_require__(18));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(19));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(16));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(9));

var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(41));

var _get = _interopRequireDefault(__webpack_require__(10));

var _merge = _interopRequireDefault(__webpack_require__(52));

var _dsl = __webpack_require__(20);

var _store = __webpack_require__(77);

var _Association2 = _interopRequireDefault(__webpack_require__(64));

var _logger = _interopRequireDefault(__webpack_require__(27));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

/**
 * @typedef {object} Relationship
 * @property {string} relName - name of the relationship
 * @property {string} relItemId - id of the relation
 * @property {Relation} relItemAttrs - Attributes to be set (at least _id and _type)
 */

/**
 * @typedef {object} Relation
 * @property {string} _id - id of the relation
 * @property {string} _type - doctype of the relation
 */
var empty = function empty() {
  return {
    data: [],
    next: true,
    meta: {
      count: 0
    }
  };
};

var updateArray = function updateArray(array, indexArg, el) {
  var index = indexArg === -1 ? array.length : indexArg;
  return [].concat((0, _toConsumableArray2.default)(array.slice(0, index)), [el], (0, _toConsumableArray2.default)(array.slice(index + 1)));
};
/**
 * Related documents are stored in the relationships attribute of the object,
 * following the JSON API spec.
 *
 * Responsible for
 *
 * - Creating relationships
 * - Removing relationships
 *
 * @description
 *
 * ```
 * const schema = {
 *   todos: {
 *      doctype: 'io.cozy.todos',
 *      relationships: {
 *        tasks: {
 *          doctype: 'io.cozy.tasks',
 *          type: 'has-many'
 *        }
 *      }
 *    }
 * }
 *
 * const todo = {
 *   label: "Protect people's privacy",
 *   relationships: {
 *     tasks: {
 *       data: [
 *         {_id: 1, _type: 'io.cozy.tasks'},
 *         {_id: 2, _type: 'io.cozy.tasks'}
 *       ]
 *     }
 *   }
 * }
 * ```
 */


var HasMany = /*#__PURE__*/function (_Association) {
  (0, _inherits2.default)(HasMany, _Association);

  var _super = _createSuper(HasMany);

  function HasMany() {
    var _this;

    (0, _classCallCheck2.default)(this, HasMany);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "updateRelationshipData", function (getUpdatedRelationshipData) {
      return function (dispatch, getState) {
        var previousRelationship = (0, _store.getDocumentFromState)(getState(), _this.target._type, _this.target._id);
        dispatch((0, _store.receiveQueryResult)(null, {
          data: _objectSpread(_objectSpread({}, previousRelationship), {}, {
            relationships: _objectSpread(_objectSpread({}, previousRelationship.relationships), {}, (0, _defineProperty2.default)({}, _this.name, getUpdatedRelationshipData(previousRelationship.relationships[_this.name])))
          })
        }));
      };
    });
    return _this;
  }

  (0, _createClass2.default)(HasMany, [{
    key: "fetchMore",
    value: function fetchMore() {
      throw 'Not implemented';
    }
  }, {
    key: "exists",
    value: function exists(document) {
      return this.existsById(document._id);
    }
  }, {
    key: "containsById",
    value: function containsById(id) {
      return this.getRelationship().data.find(function (_ref) {
        var _id = _ref._id;
        return id === _id;
      }) !== undefined;
    }
  }, {
    key: "existsById",
    value: function existsById(id) {
      return Boolean(this.containsById(id) && this.get(this.doctype, id));
    }
    /**
     * Add the relationships to the target document
     *
     * @param {import("../types").CozyClientDocument[]} docsArg - Documents to add as relationships
     * @returns {import("../types").CozyClientDocument} The saved target document
     */

  }, {
    key: "add",
    value: function add(docsArg) {
      var docs = Array.isArray(docsArg) ? docsArg : [docsArg];
      var ids = docs.map(function (doc) {
        return doc._id;
      });
      return this.addById(ids);
    }
    /**
     * Remove the relationships from the target document
     *
     * @param {import("../types").CozyClientDocument[]} docsArg - Documents to remove as relationships
     * @returns {import("../types").CozyClientDocument} The saved target document
     */

  }, {
    key: "remove",
    value: function remove(docsArg) {
      var docs = Array.isArray(docsArg) ? docsArg : [docsArg];
      var ids = docs.map(function (doc) {
        return doc._id;
      });
      return this.removeById(ids);
    }
    /**
     * Update target document with relationships
     *
     * @param {string[]} idsArg - The ids to add as a relationship
     */

  }, {
    key: "addTargetRelationships",
    value: function addTargetRelationships(idsArg) {
      var _this2 = this,
          _this$target$relation;

      if (!this.target.relationships) this.target.relationships = {};

      if (!this.target.relationships[this.name]) {
        this.target.relationships[this.name] = {
          data: []
        };
      }

      var ids = Array.isArray(idsArg) ? idsArg : [idsArg];
      var newRelations = ids.filter(function (id) {
        return !_this2.existsById(id);
      }).map(function (id) {
        return {
          _id: id,
          _type: _this2.doctype
        };
      });

      (_this$target$relation = this.target.relationships[this.name].data).push.apply(_this$target$relation, (0, _toConsumableArray2.default)(newRelations));

      this.updateMetaCount();
    }
    /**
     * Add a referenced document by id. You need to call save()
     * in order to synchronize your document with the store.
     *
     * @todo We shouldn't create the array of relationship manually since
     * it'll not be present in the store as well.
     * We certainly should use something like `updateRelationship`
     *
     */

  }, {
    key: "addById",
    value: function addById(idsArg) {
      this.addTargetRelationships(idsArg);
      return this.save(this.target);
    }
    /**
     * Remove relationships from target document
     *
     * @param {string[]} idsArg - The ids to remove from the target relationships
     */

  }, {
    key: "removeTargetRelationships",
    value: function removeTargetRelationships(idsArg) {
      var ids = Array.isArray(idsArg) ? idsArg : [idsArg];
      this.target.relationships[this.name].data = this.target.relationships[this.name].data.filter(function (_ref2) {
        var _id = _ref2._id;
        return !ids.includes(_id);
      });
      this.updateMetaCount();
    }
  }, {
    key: "removeById",
    value: function removeById(idsArg) {
      this.removeTargetRelationships(idsArg);
      return this.save(this.target);
    }
  }, {
    key: "updateMetaCount",
    value: function updateMetaCount() {
      if ((0, _get.default)(this.target.relationships[this.name], 'meta.count') !== undefined) {
        this.target.relationships[this.name].meta = _objectSpread(_objectSpread({}, this.target.relationships[this.name].meta), {}, {
          count: this.target.relationships[this.name].data.length
        });
      }
    }
  }, {
    key: "getRelationship",
    value: function getRelationship() {
      var rawData = this.target[this.name];
      var relationship = (0, _get.default)(this.target, "relationships.".concat(this.name));

      if (!relationship) {
        if (rawData && rawData.length) {
          _logger.default.warn("You're trying to access data on a relationship that appear to not be loaded yet. You may want to use 'include()' on your query");
        }

        return empty();
      }

      return relationship;
    }
  }, {
    key: "updateTargetRelationship",
    value: function updateTargetRelationship(store, updateFn) {
      // TODO See if updateTargetRelationship is still used, removing it would enable us
      // to remove store.readDocument and store.writeDocument and the StoreProxy
      var prevTarget = store.readDocument(this.target._type, this.target._id);
      store.writeDocument(this.updateRelationship(prevTarget, updateFn));
    }
  }, {
    key: "updateRelationship",
    value: function updateRelationship(target, updateFn) {
      return HasMany.updateRelationship(target, this.name, updateFn);
    }
  }, {
    key: "dehydrate",
    value: function dehydrate(doc) {
      return _objectSpread(_objectSpread({}, doc), {}, {
        relationships: _objectSpread(_objectSpread({}, doc.relationships), {}, (0, _defineProperty2.default)({}, this.name, {
          data: this.raw
        }))
      });
    }
    /**
     * @param {import("../types").CozyClientDocument} document - Document to query
     * @param {object} client - The CozyClient instance
     * @param {Association} assoc - The query params
     *
     * @returns {import("../types").CozyClientDocument | QueryDefinition}
     */

  }, {
    key: "raw",
    get: function get() {
      return this.getRelationship().data;
    }
    /**
     * Returns store documents
     */

  }, {
    key: "data",
    get: function get() {
      var _this3 = this;

      return this.getRelationship().data.map(function (_ref3) {
        var _id = _ref3._id,
            _type = _ref3._type;
        return _this3.get(_type, _id);
      }).filter(Boolean);
    }
  }, {
    key: "hasMore",
    get: function get() {
      return this.getRelationship().next;
    }
    /**
     * Returns the total number of documents in the relationship.
     * Does not handle documents absent from the store. If you want
     * to do that, you can use .data.length.
     *
     * @returns {number} - Total number of documents in the relationships
     */

  }, {
    key: "count",
    get: function get() {
      var relationship = this.getRelationship();
      return relationship.meta ? relationship.meta.count : relationship.data.length;
    }
  }], [{
    key: "query",
    value: function query(document, client, assoc) {
      var relationships = (0, _get.default)(document, "relationships.".concat(assoc.name, ".data"), []);
      var ids = relationships.map(function (assoc) {
        return assoc._id;
      });
      return new _dsl.QueryDefinition({
        doctype: assoc.doctype,
        ids: ids
      });
    }
  }]);
  return HasMany;
}(_Association2.default);
/**
 * Gets a relationship item with the relationship name and id
 *
 * @param {object} doc - Document to be updated
 * @param {string} relName - Name of the relationship
 * @param {string} relItemId - Id of the relationship item
 */


var getHasManyItem = HasMany.getHasManyItem = function (doc, relName, relItemId) {
  var relData = (0, _get.default)(doc, "relationships.".concat(relName, ".data"), []);
  return relData.find(function (rel) {
    return rel._id == relItemId;
  });
};

exports.getHasManyItem = getHasManyItem;

var getHasManyItems = HasMany.getHasManyItems = function (doc, relName) {
  return (0, _get.default)(doc, "relationships.".concat(relName, ".data"), []);
};
/**
 * Sets a relationship item with the relationship name and id
 *
 * @param {object} doc - Document to be updated
 * @param {string} relName - Name of the relationship
 * @param {string} relItemId - Id of the relationship item
 * @param {object} relItemAttrs - Attributes to be set (at least _id and _type)
 */


exports.getHasManyItems = getHasManyItems;

var setHasManyItem = HasMany.setHasManyItem = function (doc, relName, relItemId, relItemAttrs) {
  var relData = HasMany.getHasManyItems(doc, relName);
  var relIndex = relData.findIndex(function (rel) {
    return rel._id === relItemId;
  });
  var updatedRelItem = (0, _merge.default)({}, relData[relIndex], relItemAttrs);
  var updatedRelData = updateArray(relData, relIndex, updatedRelItem);
  var updatedDocument = HasMany.updateRelationship(doc, relName, function (relationship) {
    return (0, _merge.default)({}, relationship, {
      data: updatedRelData
    });
  });
  return updatedDocument;
};
/**
 * Remove one relationship item
 *
 * @param {object} doc - Document to be updated
 * @param {string} relName - Name of the relationship
 * @param {string} relItemId - Id of the relationship item
 */


exports.setHasManyItem = setHasManyItem;

var removeHasManyItem = HasMany.removeHasManyItem = function (doc, relName, relItemId) {
  var relData = HasMany.getHasManyItems(doc, relName);
  var updatedRelData = relData.filter(function (rel) {
    return rel._id !== relItemId;
  });
  var updatedDocument = HasMany.updateRelationship(doc, relName, function () {
    return {
      data: updatedRelData
    };
  });
  return updatedDocument;
};
/**
 * Updates a relationship item with the relationship name and id
 *
 * @param {object} doc - Document to be updated
 * @param {string} relName - Name of the relationship
 * @param {string} relItemId - Id of the relationship item
 * @param {Function} updater - receives the current relationship item and should
 * return an updated version. Merge should be used in the updater
 * if previous relationship item fields are to be kept.
 */


exports.removeHasManyItem = removeHasManyItem;

var updateHasManyItem = HasMany.updateHasManyItem = function (doc, relName, relItemId, updater) {
  var relItem = HasMany.getHasManyItem(doc, relName, relItemId);
  var updatedRelItem = updater(relItem);
  return HasMany.setHasManyItem(doc, relName, relItemId, updatedRelItem);
};

exports.updateHasManyItem = updateHasManyItem;

var updateRelationship = HasMany.updateRelationship = function (doc, relName, updateFn) {
  return _objectSpread(_objectSpread({}, doc), {}, {
    relationships: _objectSpread(_objectSpread({}, doc.relationships), {}, (0, _defineProperty2.default)({}, relName, _objectSpread(_objectSpread({}, doc.relationships ? doc.relationships[relName] : {}), updateFn(doc.relationships ? doc.relationships[relName] : {}))))
  });
};

exports.updateRelationship = updateRelationship;
var _default = HasMany;
exports.default = _default;

/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = __webpack_require__(688);


/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var styles = {
  // styles
  bold: ['\x1B[1m', '\x1B[22m'],
  italic: ['\x1B[3m', '\x1B[23m'],
  underline: ['\x1B[4m', '\x1B[24m'],
  inverse: ['\x1B[7m', '\x1B[27m'],
  // grayscale
  white: ['\x1B[37m', '\x1B[39m'],
  grey: ['\x1B[90m', '\x1B[39m'],
  black: ['\x1B[30m', '\x1B[39m'],
  // colors
  blue: ['\x1B[34m', '\x1B[39m'],
  cyan: ['\x1B[36m', '\x1B[39m'],
  green: ['\x1B[32m', '\x1B[39m'],
  magenta: ['\x1B[35m', '\x1B[39m'],
  red: ['\x1B[31m', '\x1B[39m'],
  yellow: ['\x1B[33m', '\x1B[39m']
};
exports.levelMap = {
  debug: 1,
  info: 2,
  warn: 3,
  error: 4
};

exports.style = function (str, style) {
  return styles[style][0] + str + styles[style][1];
};

/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var keys = __webpack_require__(199);
var hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';

var toStr = Object.prototype.toString;
var concat = Array.prototype.concat;
var origDefineProperty = Object.defineProperty;

var isFunction = function (fn) {
	return typeof fn === 'function' && toStr.call(fn) === '[object Function]';
};

var hasPropertyDescriptors = __webpack_require__(200)();

var supportsDescriptors = origDefineProperty && hasPropertyDescriptors;

var defineProperty = function (object, name, value, predicate) {
	if (name in object) {
		if (predicate === true) {
			if (object[name] === value) {
				return;
			}
		} else if (!isFunction(predicate) || !predicate()) {
			return;
		}
	}
	if (supportsDescriptors) {
		origDefineProperty(object, name, {
			configurable: true,
			enumerable: false,
			value: value,
			writable: true
		});
	} else {
		object[name] = value; // eslint-disable-line no-param-reassign
	}
};

var defineProperties = function (object, map) {
	var predicates = arguments.length > 2 ? arguments[2] : {};
	var props = keys(map);
	if (hasSymbols) {
		props = concat.call(props, Object.getOwnPropertySymbols(map));
	}
	for (var i = 0; i < props.length; i += 1) {
		defineProperty(object, props[i], map[props[i]], predicates[props[i]]);
	}
};

defineProperties.supportsDescriptors = !!supportsDescriptors;

module.exports = defineProperties;


/***/ }),
/* 98 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return getDefaultOptions; });
/* unused harmony export setDefaultOptions */
var defaultOptions = {};
function getDefaultOptions() {
  return defaultOptions;
}
function setDefaultOptions(newOptions) {
  defaultOptions = newOptions;
}

/***/ }),
/* 99 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return subMonths; });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(14);
/* harmony import */ var _addMonths_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(65);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(5);



/**
 * @name subMonths
 * @category Month Helpers
 * @summary Subtract the specified number of months from the given date.
 *
 * @description
 * Subtract the specified number of months from the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of months to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the months subtracted
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Subtract 5 months from 1 February 2015:
 * const result = subMonths(new Date(2015, 1, 1), 5)
 * //=> Mon Sep 01 2014 00:00:00
 */

function subMonths(dirtyDate, dirtyAmount) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(2, arguments);
  var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(dirtyAmount);
  return Object(_addMonths_index_js__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])(dirtyDate, -amount);
}

/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.URL = __webpack_require__(466).interface;
exports.serializeURL = __webpack_require__(49).serializeURL;
exports.serializeURLOrigin = __webpack_require__(49).serializeURLOrigin;
exports.basicURLParse = __webpack_require__(49).basicURLParse;
exports.setTheUsername = __webpack_require__(49).setTheUsername;
exports.setThePassword = __webpack_require__(49).setThePassword;
exports.serializeHost = __webpack_require__(49).serializeHost;
exports.serializeInteger = __webpack_require__(49).serializeInteger;
exports.parseURL = __webpack_require__(49).parseURL;


/***/ }),
/* 101 */
/***/ (function(module, exports) {

function M() { this._events = {}; }
M.prototype = {
  on: function(ev, cb) {
    this._events || (this._events = {});
    var e = this._events;
    (e[ev] || (e[ev] = [])).push(cb);
    return this;
  },
  removeListener: function(ev, cb) {
    var e = this._events[ev] || [], i;
    for(i = e.length-1; i >= 0 && e[i]; i--){
      if(e[i] === cb || e[i].cb === cb) { e.splice(i, 1); }
    }
  },
  removeAllListeners: function(ev) {
    if(!ev) { this._events = {}; }
    else { this._events[ev] && (this._events[ev] = []); }
  },
  listeners: function(ev) {
    return (this._events ? this._events[ev] || [] : []);
  },
  emit: function(ev) {
    this._events || (this._events = {});
    var args = Array.prototype.slice.call(arguments, 1), i, e = this._events[ev] || [];
    for(i = e.length-1; i >= 0 && e[i]; i--){
      e[i].apply(this, args);
    }
    return this;
  },
  when: function(ev, cb) {
    return this.once(ev, cb, true);
  },
  once: function(ev, cb, when) {
    if(!cb) return this;
    function c() {
      if(!when) this.removeListener(ev, c);
      if(cb.apply(this, arguments) && when) this.removeListener(ev, c);
    }
    c.cb = cb;
    this.on(ev, c);
    return this;
  }
};
M.mixin = function(dest) {
  var o = M.prototype, k;
  for (k in o) {
    o.hasOwnProperty(k) && (dest.prototype[k] = o[k]);
  }
};
module.exports = M;


/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var implementation = __webpack_require__(584);

module.exports = Function.prototype.bind || implementation;


/***/ }),
/* 103 */,
/* 104 */
/***/ (function(module, exports) {

module.exports = require("https");

/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var bind = __webpack_require__(102);

module.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);


/***/ }),
/* 106 */,
/* 107 */,
/* 108 */,
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

var baseAssignValue = __webpack_require__(73),
    baseForOwn = __webpack_require__(165),
    baseIteratee = __webpack_require__(47);

/**
 * Creates an object with the same keys as `object` and values generated
 * by running each own enumerable string keyed property of `object` thru
 * `iteratee`. The iteratee is invoked with three arguments:
 * (value, key, object).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Object
 * @param {Object} object The object to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Object} Returns the new mapped object.
 * @see _.mapKeys
 * @example
 *
 * var users = {
 *   'fred':    { 'user': 'fred',    'age': 40 },
 *   'pebbles': { 'user': 'pebbles', 'age': 1 }
 * };
 *
 * _.mapValues(users, function(o) { return o.age; });
 * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
 *
 * // The `_.property` iteratee shorthand.
 * _.mapValues(users, 'age');
 * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
 */
function mapValues(object, iteratee) {
  var result = {};
  iteratee = baseIteratee(iteratee, 3);

  baseForOwn(object, function(value, key, object) {
    baseAssignValue(result, key, iteratee(value, key, object));
  });
  return result;
}

module.exports = mapValues;


/***/ }),
/* 110 */
/***/ (function(module, exports) {

/**
 * Copies the values of `source` to `array`.
 *
 * @private
 * @param {Array} source The array to copy values from.
 * @param {Array} [array=[]] The array to copy values to.
 * @returns {Array} Returns `array`.
 */
function copyArray(source, array) {
  var index = -1,
      length = source.length;

  array || (array = Array(length));
  while (++index < length) {
    array[index] = source[index];
  }
  return array;
}

module.exports = copyArray;


/***/ }),
/* 111 */
/***/ (function(module, exports) {

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/** Used to detect unsigned integer values. */
var reIsUint = /^(?:0|[1-9]\d*)$/;

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  var type = typeof value;
  length = length == null ? MAX_SAFE_INTEGER : length;

  return !!length &&
    (type == 'number' ||
      (type != 'symbol' && reIsUint.test(value))) &&
        (value > -1 && value % 1 == 0 && value < length);
}

module.exports = isIndex;


/***/ }),
/* 112 */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */
function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

  return value === proto;
}

module.exports = isPrototype;


/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

var arrayMap = __webpack_require__(37),
    baseClone = __webpack_require__(217),
    baseUnset = __webpack_require__(327),
    castPath = __webpack_require__(74),
    copyObject = __webpack_require__(68),
    customOmitClone = __webpack_require__(573),
    flatRest = __webpack_require__(146),
    getAllKeysIn = __webpack_require__(175);

/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1,
    CLONE_FLAT_FLAG = 2,
    CLONE_SYMBOLS_FLAG = 4;

/**
 * The opposite of `_.pick`; this method creates an object composed of the
 * own and inherited enumerable property paths of `object` that are not omitted.
 *
 * **Note:** This method is considerably slower than `_.pick`.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The source object.
 * @param {...(string|string[])} [paths] The property paths to omit.
 * @returns {Object} Returns the new object.
 * @example
 *
 * var object = { 'a': 1, 'b': '2', 'c': 3 };
 *
 * _.omit(object, ['a', 'c']);
 * // => { 'b': '2' }
 */
var omit = flatRest(function(object, paths) {
  var result = {};
  if (object == null) {
    return result;
  }
  var isDeep = false;
  paths = arrayMap(paths, function(path) {
    path = castPath(path, object);
    isDeep || (isDeep = path.length > 1);
    return path;
  });
  copyObject(object, getAllKeysIn(object), result);
  if (isDeep) {
    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
  }
  var length = paths.length;
  while (length--) {
    baseUnset(result, paths[length]);
  }
  return result;
});

module.exports = omit;


/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = __webpack_require__(761);


/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var ES5Type = __webpack_require__(768);

// https://262.ecma-international.org/11.0/#sec-ecmascript-data-types-and-values

module.exports = function Type(x) {
	if (typeof x === 'symbol') {
		return 'Symbol';
	}
	if (typeof x === 'bigint') {
		return 'BigInt';
	}
	return ES5Type(x);
};


/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

var MapCache = __webpack_require__(160),
    setCacheAdd = __webpack_require__(496),
    setCacheHas = __webpack_require__(497);

/**
 *
 * Creates an array cache object to store unique values.
 *
 * @private
 * @constructor
 * @param {Array} [values] The values to cache.
 */
function SetCache(values) {
  var index = -1,
      length = values == null ? 0 : values.length;

  this.__data__ = new MapCache;
  while (++index < length) {
    this.add(values[index]);
  }
}

// Add methods to `SetCache`.
SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
SetCache.prototype.has = setCacheHas;

module.exports = SetCache;


/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(62);

/* Built-in method references that are verified to be native. */
var nativeCreate = getNative(Object, 'create');

module.exports = nativeCreate;


/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

var listCacheClear = __webpack_require__(486),
    listCacheDelete = __webpack_require__(487),
    listCacheGet = __webpack_require__(488),
    listCacheHas = __webpack_require__(489),
    listCacheSet = __webpack_require__(490);

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `ListCache`.
ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;

module.exports = ListCache;


/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

var eq = __webpack_require__(88);

/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

module.exports = assocIndexOf;


/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

var isKeyable = __webpack_require__(492);

/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return isKeyable(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

module.exports = getMapData;


/***/ }),
/* 121 */
/***/ (function(module, exports) {

/**
 * Checks if a `cache` value for `key` exists.
 *
 * @private
 * @param {Object} cache The cache to query.
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function cacheHas(cache, key) {
  return cache.has(key);
}

module.exports = cacheHas;


/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

var arrayPush = __webpack_require__(123),
    isFlattenable = __webpack_require__(500);

/**
 * The base implementation of `_.flatten` with support for restricting flattening.
 *
 * @private
 * @param {Array} array The array to flatten.
 * @param {number} depth The maximum recursion depth.
 * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
 * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
 * @param {Array} [result=[]] The initial result value.
 * @returns {Array} Returns the new flattened array.
 */
function baseFlatten(array, depth, predicate, isStrict, result) {
  var index = -1,
      length = array.length;

  predicate || (predicate = isFlattenable);
  result || (result = []);

  while (++index < length) {
    var value = array[index];
    if (depth > 0 && predicate(value)) {
      if (depth > 1) {
        // Recursively flatten arrays (susceptible to call stack limits).
        baseFlatten(value, depth - 1, predicate, isStrict, result);
      } else {
        arrayPush(result, value);
      }
    } else if (!isStrict) {
      result[result.length] = value;
    }
  }
  return result;
}

module.exports = baseFlatten;


/***/ }),
/* 123 */
/***/ (function(module, exports) {

/**
 * Appends the elements of `values` to `array`.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to append.
 * @returns {Array} Returns `array`.
 */
function arrayPush(array, values) {
  var index = -1,
      length = values.length,
      offset = array.length;

  while (++index < length) {
    array[offset + index] = values[index];
  }
  return array;
}

module.exports = arrayPush;


/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

var isArrayLike = __webpack_require__(53),
    isObjectLike = __webpack_require__(39);

/**
 * This method is like `_.isArrayLike` except that it also checks if `value`
 * is an object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array-like object,
 *  else `false`.
 * @example
 *
 * _.isArrayLikeObject([1, 2, 3]);
 * // => true
 *
 * _.isArrayLikeObject(document.body.children);
 * // => true
 *
 * _.isArrayLikeObject('abc');
 * // => false
 *
 * _.isArrayLikeObject(_.noop);
 * // => false
 */
function isArrayLikeObject(value) {
  return isObjectLike(value) && isArrayLike(value);
}

module.exports = isArrayLikeObject;


/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsTypedArray = __webpack_require__(512),
    baseUnary = __webpack_require__(70),
    nodeUtil = __webpack_require__(166);

/* Node.js helper references. */
var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

/**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */
var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

module.exports = isTypedArray;


/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__(118),
    stackClear = __webpack_require__(516),
    stackDelete = __webpack_require__(517),
    stackGet = __webpack_require__(518),
    stackHas = __webpack_require__(519),
    stackSet = __webpack_require__(520);

/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Stack(entries) {
  var data = this.__data__ = new ListCache(entries);
  this.size = data.size;
}

// Add methods to `Stack`.
Stack.prototype.clear = stackClear;
Stack.prototype['delete'] = stackDelete;
Stack.prototype.get = stackGet;
Stack.prototype.has = stackHas;
Stack.prototype.set = stackSet;

module.exports = Stack;


/***/ }),
/* 127 */
/***/ (function(module, exports) {

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
module.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

var superPropBase = __webpack_require__(597);
function _get() {
  if (typeof Reflect !== "undefined" && Reflect.get) {
    module.exports = _get = Reflect.get.bind(), module.exports.__esModule = true, module.exports["default"] = module.exports;
  } else {
    module.exports = _get = function _get(target, property, receiver) {
      var base = superPropBase(target, property);
      if (!base) return;
      var desc = Object.getOwnPropertyDescriptor(base, property);
      if (desc.get) {
        return desc.get.call(arguments.length < 3 ? target : receiver);
      }
      return desc.value;
    }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
  return _get.apply(this, arguments);
}
module.exports = _get, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "HasManyFiles", {
  enumerable: true,
  get: function get() {
    return _HasManyFiles.default;
  }
});
Object.defineProperty(exports, "HasMany", {
  enumerable: true,
  get: function get() {
    return _HasMany.default;
  }
});
Object.defineProperty(exports, "HasOne", {
  enumerable: true,
  get: function get() {
    return _HasOne.default;
  }
});
Object.defineProperty(exports, "HasOneInPlace", {
  enumerable: true,
  get: function get() {
    return _HasOneInPlace.default;
  }
});
Object.defineProperty(exports, "HasManyInPlace", {
  enumerable: true,
  get: function get() {
    return _HasManyInPlace.default;
  }
});
Object.defineProperty(exports, "HasManyTriggers", {
  enumerable: true,
  get: function get() {
    return _HasManyTriggers.default;
  }
});
Object.defineProperty(exports, "Association", {
  enumerable: true,
  get: function get() {
    return _Association.default;
  }
});
Object.defineProperty(exports, "resolveClass", {
  enumerable: true,
  get: function get() {
    return _helpers.resolveClass;
  }
});
Object.defineProperty(exports, "create", {
  enumerable: true,
  get: function get() {
    return _helpers.create;
  }
});
Object.defineProperty(exports, "isReferencedBy", {
  enumerable: true,
  get: function get() {
    return _helpers.isReferencedBy;
  }
});
Object.defineProperty(exports, "isReferencedById", {
  enumerable: true,
  get: function get() {
    return _helpers.isReferencedById;
  }
});
Object.defineProperty(exports, "getReferencedBy", {
  enumerable: true,
  get: function get() {
    return _helpers.getReferencedBy;
  }
});
Object.defineProperty(exports, "getReferencedById", {
  enumerable: true,
  get: function get() {
    return _helpers.getReferencedById;
  }
});

var _HasManyFiles = _interopRequireDefault(__webpack_require__(289));

var _HasMany = _interopRequireDefault(__webpack_require__(94));

var _HasOne = _interopRequireDefault(__webpack_require__(298));

var _HasOneInPlace = _interopRequireDefault(__webpack_require__(299));

var _HasManyInPlace = _interopRequireDefault(__webpack_require__(300));

var _HasManyTriggers = _interopRequireDefault(__webpack_require__(622));

var _Association = _interopRequireDefault(__webpack_require__(64));

var _helpers = __webpack_require__(185);

/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "deconstructCozyWebLinkWithSlug", {
  enumerable: true,
  get: function get() {
    return _urlHelper.deconstructCozyWebLinkWithSlug;
  }
});
Object.defineProperty(exports, "deconstructRedirectLink", {
  enumerable: true,
  get: function get() {
    return _urlHelper.deconstructRedirectLink;
  }
});
Object.defineProperty(exports, "generateWebLink", {
  enumerable: true,
  get: function get() {
    return _urlHelper.generateWebLink;
  }
});
Object.defineProperty(exports, "ensureFirstSlash", {
  enumerable: true,
  get: function get() {
    return _urlHelper.ensureFirstSlash;
  }
});
Object.defineProperty(exports, "rootCozyUrl", {
  enumerable: true,
  get: function get() {
    return _urlHelper.rootCozyUrl;
  }
});
Object.defineProperty(exports, "InvalidRedirectLinkError", {
  enumerable: true,
  get: function get() {
    return _urlHelper.InvalidRedirectLinkError;
  }
});
Object.defineProperty(exports, "InvalidCozyUrlError", {
  enumerable: true,
  get: function get() {
    return _urlHelper.InvalidCozyUrlError;
  }
});
Object.defineProperty(exports, "InvalidProtocolError", {
  enumerable: true,
  get: function get() {
    return _urlHelper.InvalidProtocolError;
  }
});
Object.defineProperty(exports, "BlockedCozyError", {
  enumerable: true,
  get: function get() {
    return _urlHelper.BlockedCozyError;
  }
});
Object.defineProperty(exports, "dehydrate", {
  enumerable: true,
  get: function get() {
    return _dehydrateHelper.dehydrate;
  }
});
Object.defineProperty(exports, "editSettings", {
  enumerable: true,
  get: function get() {
    return _settings.editSettings;
  }
});
Object.defineProperty(exports, "getQuery", {
  enumerable: true,
  get: function get() {
    return _settings.getQuery;
  }
});
Object.defineProperty(exports, "getSettings", {
  enumerable: true,
  get: function get() {
    return _settings.getSettings;
  }
});
Object.defineProperty(exports, "normalizeSettings", {
  enumerable: true,
  get: function get() {
    return _settings.normalizeSettings;
  }
});
Object.defineProperty(exports, "saveAfterFetchSettings", {
  enumerable: true,
  get: function get() {
    return _settings.saveAfterFetchSettings;
  }
});

var _urlHelper = __webpack_require__(623);

var _dehydrateHelper = __webpack_require__(624);

var _settings = __webpack_require__(625);

/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isCordova = void 0;

// cordova
var isCordova = function isCordova() {
  return typeof window !== 'undefined' && window.cordova !== undefined;
};

exports.isCordova = isCordova;

/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var ES5Type = __webpack_require__(692);

// https://262.ecma-international.org/11.0/#sec-ecmascript-data-types-and-values

module.exports = function Type(x) {
	if (typeof x === 'symbol') {
		return 'Symbol';
	}
	if (typeof x === 'bigint') {
		return 'BigInt';
	}
	return ES5Type(x);
};


/***/ }),
/* 133 */,
/* 134 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return addDays; });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(14);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(11);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(5);



/**
 * @name addDays
 * @category Day Helpers
 * @summary Add the specified number of days to the given date.
 *
 * @description
 * Add the specified number of days to the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} - the new date with the days added
 * @throws {TypeError} - 2 arguments required
 *
 * @example
 * // Add 10 days to 1 September 2014:
 * const result = addDays(new Date(2014, 8, 1), 10)
 * //=> Thu Sep 11 2014 00:00:00
 */

function addDays(dirtyDate, dirtyAmount) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(2, arguments);
  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])(dirtyDate);
  var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(dirtyAmount);

  if (isNaN(amount)) {
    return new Date(NaN);
  }

  if (!amount) {
    // If 0 days, no-op to avoid changing times in the hour before end of DST
    return date;
  }

  date.setDate(date.getDate() + amount);
  return date;
}

/***/ }),
/* 135 */
/***/ (function(module, exports) {

/**
 * The inverse of `_.toPairs`; this method returns an object composed
 * from key-value `pairs`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} pairs The key-value pairs.
 * @returns {Object} Returns the new object.
 * @example
 *
 * _.fromPairs([['a', 1], ['b', 2]]);
 * // => { 'a': 1, 'b': 2 }
 */
function fromPairs(pairs) {
  var index = -1,
      length = pairs == null ? 0 : pairs.length,
      result = {};

  while (++index < length) {
    var pair = pairs[index];
    result[pair[0]] = pair[1];
  }
  return result;
}

module.exports = fromPairs;


/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var origSymbol = typeof Symbol !== 'undefined' && Symbol;
var hasSymbolSham = __webpack_require__(273);

module.exports = function hasNativeSymbols() {
	if (typeof origSymbol !== 'function') { return false; }
	if (typeof Symbol !== 'function') { return false; }
	if (typeof origSymbol('foo') !== 'symbol') { return false; }
	if (typeof Symbol('bar') !== 'symbol') { return false; }

	return hasSymbolSham();
};


/***/ }),
/* 137 */
/***/ (function(module, exports) {

module.exports = require("path");

/***/ }),
/* 138 */,
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

var MapCache = __webpack_require__(160);

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/**
 * Creates a function that memoizes the result of `func`. If `resolver` is
 * provided, it determines the cache key for storing the result based on the
 * arguments provided to the memoized function. By default, the first argument
 * provided to the memoized function is used as the map cache key. The `func`
 * is invoked with the `this` binding of the memoized function.
 *
 * **Note:** The cache is exposed as the `cache` property on the memoized
 * function. Its creation may be customized by replacing the `_.memoize.Cache`
 * constructor with one whose instances implement the
 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
 * method interface of `clear`, `delete`, `get`, `has`, and `set`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to have its output memoized.
 * @param {Function} [resolver] The function to resolve the cache key.
 * @returns {Function} Returns the new memoized function.
 * @example
 *
 * var object = { 'a': 1, 'b': 2 };
 * var other = { 'c': 3, 'd': 4 };
 *
 * var values = _.memoize(_.values);
 * values(object);
 * // => [1, 2]
 *
 * values(other);
 * // => [3, 4]
 *
 * object.a = 2;
 * values(object);
 * // => [1, 2]
 *
 * // Modify the result cache.
 * values.cache.set(object, ['a', 'b']);
 * values(object);
 * // => ['a', 'b']
 *
 * // Replace `_.memoize.Cache`.
 * _.memoize.Cache = WeakMap;
 */
function memoize(func, resolver) {
  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  var memoized = function() {
    var args = arguments,
        key = resolver ? resolver.apply(this, args) : args[0],
        cache = memoized.cache;

    if (cache.has(key)) {
      return cache.get(key);
    }
    var result = func.apply(this, args);
    memoized.cache = cache.set(key, result) || cache;
    return result;
  };
  memoized.cache = new (memoize.Cache || MapCache);
  return memoized;
}

// Expose `MapCache`.
memoize.Cache = MapCache;

module.exports = memoize;


/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

var baseAssignValue = __webpack_require__(73),
    createAggregator = __webpack_require__(291);

/**
 * Creates an object composed of keys generated from the results of running
 * each element of `collection` thru `iteratee`. The corresponding value of
 * each key is the last element responsible for generating the key. The
 * iteratee is invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
 * @returns {Object} Returns the composed aggregate object.
 * @example
 *
 * var array = [
 *   { 'dir': 'left', 'code': 97 },
 *   { 'dir': 'right', 'code': 100 }
 * ];
 *
 * _.keyBy(array, function(o) {
 *   return String.fromCharCode(o.code);
 * });
 * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
 *
 * _.keyBy(array, 'dir');
 * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
 */
var keyBy = createAggregator(function(result, value, key) {
  baseAssignValue(result, key, value);
});

module.exports = keyBy;


/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isContact = exports.getIndexByFamilyNameGivenNameEmailCozyUrl = exports.getDefaultSortIndexValue = exports.makeDefaultSortIndexValue = exports.getDisplayName = exports.makeDisplayName = exports.getFullname = exports.makeFullname = exports.getPrimaryAddress = exports.getPrimaryPhone = exports.getPrimaryCozyDomain = exports.getPrimaryCozy = exports.getPrimaryEmail = exports.getInitials = exports.getPrimaryOrFirst = exports.CONTACTS_DOCTYPE = void 0;

var _get = _interopRequireDefault(__webpack_require__(10));

var _isEmpty = _interopRequireDefault(__webpack_require__(724));

var _logger = _interopRequireDefault(__webpack_require__(27));

var CONTACTS_DOCTYPE = 'io.cozy.contacts';
/**
 * @typedef {'namePrefix'|'givenName'|'additionalName'|'familyName'|'nameSuffix'} FullnameAttributes
 */

exports.CONTACTS_DOCTYPE = CONTACTS_DOCTYPE;

var getPrimaryOrFirst = function getPrimaryOrFirst(property) {
  return function (obj) {
    return !obj[property] || obj[property].length === 0 ? '' : obj[property].find(function (property) {
      return property.primary;
    }) || obj[property][0];
  };
};
/**
 * Returns the initials of the contact.
 *
 * @param {import('../types').IOCozyContact} contact - A contact
 * @returns {string} - the contact's initials
 */


exports.getPrimaryOrFirst = getPrimaryOrFirst;

var getInitials = function getInitials(contact) {
  var _contact$name, _contact$name2;

  if (contact !== null && contact !== void 0 && (_contact$name = contact.name) !== null && _contact$name !== void 0 && _contact$name.givenName || contact !== null && contact !== void 0 && (_contact$name2 = contact.name) !== null && _contact$name2 !== void 0 && _contact$name2.familyName) {
    return ['givenName', 'familyName'].map(function (part) {
      return (0, _get.default)(contact, ['name', part, 0], '');
    }).join('').toUpperCase();
  }

  var email = getPrimaryEmail(contact);

  if (email) {
    return email[0].toUpperCase();
  }

  var cozy = getPrimaryCozyDomain(contact);

  if (cozy) {
    return cozy[0].toUpperCase();
  }

  return '';
};
/**
 * Returns the contact's main email
 *
 * @param {object} contact - A contact
 * @returns {string} - The contact's main email
 */


exports.getInitials = getInitials;

var getPrimaryEmail = function getPrimaryEmail(contact) {
  return Array.isArray(contact.email) ? getPrimaryOrFirst('email')(contact).address || '' : contact.email;
};
/**
 * Returns the contact's main cozy
 *
 * @param {object} contact - A contact
 * @returns {string} - The contact's main cozy
 */


exports.getPrimaryEmail = getPrimaryEmail;

var getPrimaryCozy = function getPrimaryCozy(contact) {
  return Array.isArray(contact.cozy) ? getPrimaryOrFirst('cozy')(contact).url || '' : contact.url;
};
/**
 * Returns the contact's main cozy url without protocol
 *
 * @param {object} contact - A contact
 * @returns {string} - The contact's main cozy url
 */


exports.getPrimaryCozy = getPrimaryCozy;

var getPrimaryCozyDomain = function getPrimaryCozyDomain(contact) {
  try {
    var url = new URL(getPrimaryCozy(contact));
    return url.hostname.replace(/^(www.)/g, '');
  } catch (_unused) {
    return getPrimaryCozy(contact);
  }
};
/**
 * Returns the contact's main phone number
 *
 * @param {object} contact - A contact
 * @returns {string} - The contact's main phone number
 */


exports.getPrimaryCozyDomain = getPrimaryCozyDomain;

var getPrimaryPhone = function getPrimaryPhone(contact) {
  return getPrimaryOrFirst('phone')(contact).number || '';
};
/**
 * Returns the contact's main address
 *
 * @param {object} contact - A contact
 * @returns {string} - The contact's main address
 */


exports.getPrimaryPhone = getPrimaryPhone;

var getPrimaryAddress = function getPrimaryAddress(contact) {
  return getPrimaryOrFirst('address')(contact).formattedAddress || '';
};
/**
 * @type {FullnameAttributes[]}
 */


exports.getPrimaryAddress = getPrimaryAddress;
var defaultFullnameAttributes = ['namePrefix', 'givenName', 'additionalName', 'familyName', 'nameSuffix'];
/**
 * Makes fullname from contact name
 *
 * @param {object} contact - A contact
 * @param {{ attributesFullname: FullnameAttributes[] }} [opts] - Options
 * @returns {string} - The contact's fullname
 */

var makeFullname = function makeFullname(contact, opts) {
  var fullnameAttributes = (opts === null || opts === void 0 ? void 0 : opts.attributesFullname) || defaultFullnameAttributes;

  if (contact.name) {
    return fullnameAttributes.map(function (part) {
      return contact.name[part];
    }).filter(function (part) {
      return part !== undefined;
    }).join(' ').trim();
  }

  return '';
};
/**
 * Returns the contact's fullname
 *
 * @param {object} contact - A contact
 * @returns {string} - The contact's fullname
 */


exports.makeFullname = makeFullname;

var getFullname = function getFullname(contact) {
  if ((0, _get.default)(contact, 'fullname')) {
    return contact.fullname;
  }

  return makeFullname(contact);
};
/**
 * Makes displayName from contact data
 *
 * @param {*} contact - A contact
 * @param {{ attributesFullname: FullnameAttributes[] }} [opts] - Options
 * @returns {string} - The contact's displayName
 */


exports.getFullname = getFullname;

var makeDisplayName = function makeDisplayName(contact, opts) {
  var fullname = makeFullname(contact, opts);
  var primaryEmail = getPrimaryEmail(contact);
  var primaryCozyDomain = getPrimaryCozyDomain(contact);

  if (fullname && fullname.length > 0) {
    return fullname;
  }

  if (primaryEmail && primaryEmail.length > 0) {
    return primaryEmail;
  }

  if (primaryCozyDomain && primaryCozyDomain.length > 0) {
    return primaryCozyDomain;
  }

  return '';
};
/**
 * Returns a display name for the contact
 *
 * @param {object} contact - A contact
 * @returns {string} - the contact's display name
 **/


exports.makeDisplayName = makeDisplayName;

var getDisplayName = function getDisplayName(contact) {
  if ((0, _get.default)(contact, 'displayName')) {
    return contact.displayName;
  }

  return makeDisplayName(contact);
};
/**
 * Makes 'byFamilyNameGivenNameEmailCozyUrl' index of a contact
 *
 * @param {object} contact - A contact
 * @returns {string} - the contact's 'byFamilyNameGivenNameEmailCozyUrl' index
 */


exports.getDisplayName = getDisplayName;

var makeDefaultSortIndexValue = function makeDefaultSortIndexValue(contact) {
  var defaultSortIndexValue = [(0, _get.default)(contact, 'name.familyName', ''), (0, _get.default)(contact, 'name.givenName', ''), getPrimaryEmail(contact), getPrimaryCozyDomain(contact)].join('').trim().toLowerCase();

  if (defaultSortIndexValue.length === 0) {
    return null;
  }

  return defaultSortIndexValue;
};
/**
 * Returns 'byFamilyNameGivenNameEmailCozyUrl' index of a contact
 *
 * @param {object} contact - A contact
 * @returns {string} - the contact's 'byFamilyNameGivenNameEmailCozyUrl' index
 */


exports.makeDefaultSortIndexValue = makeDefaultSortIndexValue;

var getDefaultSortIndexValue = function getDefaultSortIndexValue(contact) {
  var defaultSortIndexValue = (0, _get.default)(contact, 'indexes.byFamilyNameGivenNameEmailCozyUrl', null);

  if (defaultSortIndexValue !== null) {
    return (0, _isEmpty.default)(defaultSortIndexValue) ? null : defaultSortIndexValue;
  }

  return makeDefaultSortIndexValue(contact);
};
/**
 * Returns 'byFamilyNameGivenNameEmailCozyUrl' index of a contact
 *
 * @deprecated Prefer to use getDefaultSortIndexValue.
 * @param {object} contact - A contact
 * @returns {string} - the contact's 'byFamilyNameGivenNameEmailCozyUrl' index
 */


exports.getDefaultSortIndexValue = getDefaultSortIndexValue;

var getIndexByFamilyNameGivenNameEmailCozyUrl = function getIndexByFamilyNameGivenNameEmailCozyUrl(contact) {
  _logger.default.warn('Deprecation: `getIndexByFamilyNameGivenNameEmailCozyUrl` is deprecated, please use `getDefaultSortIndexValue` instead');

  return getDefaultSortIndexValue(contact);
};
/**
 * Whether the document is a contact
 *
 * @param {object} doc - A document (from io.cozy.something, or com.bitwarden or anything else)
 * @returns {boolean}
 */


exports.getIndexByFamilyNameGivenNameEmailCozyUrl = getIndexByFamilyNameGivenNameEmailCozyUrl;

var isContact = function isContact(doc) {
  return doc._type === CONTACTS_DOCTYPE;
};

exports.isContact = isContact;

/***/ }),
/* 142 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return buildOldestTimeseriesQueryByAccountId; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return buildTimeseriesQueryByDate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return buildNewestRecurringTimeseriesQuery; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return buildRecurringTimeseriesByStartAndEndPointRange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return buildTimeseriesByDateRange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return buildTimeseriesWithoutAggregation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return buildAccountByToken; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "j", function() { return queryAccountByDocId; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return buildContactsWithGeoCoordinates; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return buildAggregateCaptureDeviceTimeseriesQuery; });
/* harmony import */ var src_doctypes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var cozy_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(4);
/* harmony import */ var cozy_client__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(cozy_client__WEBPACK_IMPORTED_MODULE_1__);
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }


const older30s = 30 * 1000;

// accounId from buildAccountQuery function
const buildOldestTimeseriesQueryByAccountId = accountId => ({
  definition: Object(cozy_client__WEBPACK_IMPORTED_MODULE_1__["Q"])(src_doctypes__WEBPACK_IMPORTED_MODULE_0__[/* GEOJSON_DOCTYPE */ "g"]).where({
    'cozyMetadata.sourceAccount': accountId
  }).indexFields(['cozyMetadata.sourceAccount', 'startDate']).sortBy([{
    'cozyMetadata.sourceAccount': 'asc'
  }, {
    startDate: 'asc'
  }]).limitBy(1)
});
const buildTimeseriesQueryByDate = ({
  date = null
}) => {
  return {
    definition: Object(cozy_client__WEBPACK_IMPORTED_MODULE_1__["Q"])(src_doctypes__WEBPACK_IMPORTED_MODULE_0__[/* GEOJSON_DOCTYPE */ "g"]).where(_objectSpread({}, date && {
      startDate: {
        $gt: date
      }
    })).indexFields([...(date ? ['startDate'] : [])]).sortBy([...(date ? [{
      startDate: 'desc'
    }] : [])]).limitBy(1000),
    options: {
      as: `${src_doctypes__WEBPACK_IMPORTED_MODULE_0__[/* GEOJSON_DOCTYPE */ "g"]}/date/${date}`,
      fetchPolicy: cozy_client__WEBPACK_IMPORTED_MODULE_1___default.a.fetchPolicies.olderThan(older30s)
    }
  };
};
const buildNewestRecurringTimeseriesQuery = () => ({
  definition: Object(cozy_client__WEBPACK_IMPORTED_MODULE_1__["Q"])(src_doctypes__WEBPACK_IMPORTED_MODULE_0__[/* GEOJSON_DOCTYPE */ "g"]).where({}).partialIndex({
    'aggregation.recurring': true
  }).indexFields(['startDate']).sortBy([{
    startDate: 'desc'
  }]).limitBy(1)
});

// accounId from timeseries (timeseries.cozyMetadata.sourceAccount)
const buildRecurringTimeseriesByStartAndEndPointRange = ({
  minLatStart,
  maxLatStart,
  minLonStart,
  maxLonStart,
  minLonEnd,
  maxLonEnd,
  minLatEnd,
  maxLatEnd,
  limit = 1000
}) => {
  return {
    definition: Object(cozy_client__WEBPACK_IMPORTED_MODULE_1__["Q"])(src_doctypes__WEBPACK_IMPORTED_MODULE_0__[/* GEOJSON_DOCTYPE */ "g"]).where({
      'aggregation.coordinates.startPoint.lon': {
        $gte: minLonStart,
        $lte: maxLonStart
      },
      'aggregation.coordinates.startPoint.lat': {
        $gte: minLatStart,
        $lte: maxLatStart
      },
      'aggregation.coordinates.endPoint.lon': {
        $gte: minLonEnd,
        $lte: maxLonEnd
      },
      'aggregation.coordinates.endPoint.lat': {
        $gte: minLatEnd,
        $lte: maxLatEnd
      }
    }).partialIndex({
      'aggregation.recurring': true
    }).indexFields(['aggregation.coordinates.startPoint.lon', 'aggregation.coordinates.startPoint.lat', 'aggregation.coordinates.endPoint.lon', 'aggregation.coordinates.endPoint.lat']).limitBy(limit)
  };
};

// accounId from buildLastCreatedServiceAccountQuery && buildAccountByToken functions
const buildTimeseriesByDateRange = ({
  firstDate,
  lastDate,
  accountId,
  withRelationships = false,
  limit = 100
}) => {
  const queryDef = Object(cozy_client__WEBPACK_IMPORTED_MODULE_1__["Q"])(src_doctypes__WEBPACK_IMPORTED_MODULE_0__[/* GEOJSON_DOCTYPE */ "g"]).where({
    'cozyMetadata.sourceAccount': accountId,
    startDate: {
      $gte: firstDate,
      $lte: lastDate
    }
  }).indexFields(['cozyMetadata.sourceAccount', 'startDate']).sortBy([{
    'cozyMetadata.sourceAccount': 'desc'
  }, {
    startDate: 'desc'
  }]).limitBy(limit);
  if (withRelationships) {
    // FIXME: .include method appears to do nothing. It should be investigated
    queryDef.includes = ['startPlaceContact', 'endPlaceContact'];
  }
  return {
    definition: queryDef,
    options: {
      as: `${src_doctypes__WEBPACK_IMPORTED_MODULE_0__[/* GEOJSON_DOCTYPE */ "g"]}/dateRange/${firstDate}-${lastDate}/accountId/${accountId}`
    }
  };
};
const buildTimeseriesWithoutAggregation = ({
  limit = 1000
} = {}) => ({
  definition: Object(cozy_client__WEBPACK_IMPORTED_MODULE_1__["Q"])(src_doctypes__WEBPACK_IMPORTED_MODULE_0__[/* GEOJSON_DOCTYPE */ "g"]).include(['startPlaceContact', 'endPlaceContact']).where({
    startDate: {
      $gt: null
    }
  }).partialIndex({
    aggregation: {
      $exists: false
    }
  }).indexFields(['startDate']).sortBy([{
    startDate: 'desc'
  }]).limitBy(limit)
});
const buildAccountByToken = ({
  token
}) => {
  const queryDef = Object(cozy_client__WEBPACK_IMPORTED_MODULE_1__["Q"])(src_doctypes__WEBPACK_IMPORTED_MODULE_0__[/* ACCOUNTS_DOCTYPE */ "a"]).where({
    token: token
  }).partialIndex({
    account_type: 'openpath'
  }).indexFields(['token']).limitBy(1);
  return {
    definition: queryDef,
    options: {
      as: `${src_doctypes__WEBPACK_IMPORTED_MODULE_0__[/* ACCOUNTS_DOCTYPE */ "a"]}/account_type/openpath/token/${token}`,
      fetchPolicy: cozy_client__WEBPACK_IMPORTED_MODULE_1___default.a.fetchPolicies.olderThan(older30s)
    }
  };
};
const queryAccountByDocId = async (client, docId) => {
  const res = await client.query(Object(cozy_client__WEBPACK_IMPORTED_MODULE_1__["Q"])(src_doctypes__WEBPACK_IMPORTED_MODULE_0__[/* ACCOUNTS_DOCTYPE */ "a"]).getById(docId));
  return res === null || res === void 0 ? void 0 : res.data;
};
const buildContactsWithGeoCoordinates = ({
  limit = 1000
} = {}) => {
  return {
    definition: Object(cozy_client__WEBPACK_IMPORTED_MODULE_1__["Q"])(src_doctypes__WEBPACK_IMPORTED_MODULE_0__[/* CONTACTS_DOCTYPE */ "c"]).partialIndex({
      address: {
        $elemMatch: {
          'geo.geo': {
            $exists: true
          }
        }
      }
    }).limitBy(limit),
    options: {
      as: `${src_doctypes__WEBPACK_IMPORTED_MODULE_0__[/* CONTACTS_DOCTYPE */ "c"]}/withGeoCoordinates`
    }
  };
};
const buildAggregateCaptureDeviceTimeseriesQuery = () => ({
  definition: Object(cozy_client__WEBPACK_IMPORTED_MODULE_1__["Q"])(src_doctypes__WEBPACK_IMPORTED_MODULE_0__[/* GEOJSON_DOCTYPE */ "g"]).where({}).partialIndex({
    aggregation: {
      $exists: true
    }
  }).select(['aggregation', 'captureDevice'])
});

/***/ }),
/* 143 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return getTimezoneOffsetInMilliseconds; });
/**
 * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.
 * They usually appear for dates that denote time before the timezones were introduced
 * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891
 * and GMT+01:00:00 after that date)
 *
 * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,
 * which would lead to incorrect calculations.
 *
 * This function returns the timezone offset in milliseconds that takes seconds in account.
 */
function getTimezoneOffsetInMilliseconds(date) {
  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));
  utcDate.setUTCFullYear(date.getFullYear());
  return date.getTime() - utcDate.getTime();
}

/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

var baseFlatten = __webpack_require__(122),
    baseOrderBy = __webpack_require__(296),
    baseRest = __webpack_require__(59),
    isIterateeCall = __webpack_require__(202);

/**
 * Creates an array of elements, sorted in ascending order by the results of
 * running each element in a collection thru each iteratee. This method
 * performs a stable sort, that is, it preserves the original sort order of
 * equal elements. The iteratees are invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {...(Function|Function[])} [iteratees=[_.identity]]
 *  The iteratees to sort by.
 * @returns {Array} Returns the new sorted array.
 * @example
 *
 * var users = [
 *   { 'user': 'fred',   'age': 48 },
 *   { 'user': 'barney', 'age': 36 },
 *   { 'user': 'fred',   'age': 30 },
 *   { 'user': 'barney', 'age': 34 }
 * ];
 *
 * _.sortBy(users, [function(o) { return o.user; }]);
 * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]
 *
 * _.sortBy(users, ['user', 'age']);
 * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]
 */
var sortBy = baseRest(function(collection, iteratees) {
  if (collection == null) {
    return [];
  }
  var length = iteratees.length;
  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
    iteratees = [];
  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
    iteratees = [iteratees[0]];
  }
  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
});

module.exports = sortBy;


/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

var baseForOwn = __webpack_require__(165),
    createBaseEach = __webpack_require__(535);

/**
 * The base implementation of `_.forEach` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array|Object} Returns `collection`.
 */
var baseEach = createBaseEach(baseForOwn);

module.exports = baseEach;


/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

var flatten = __webpack_require__(153),
    overRest = __webpack_require__(227),
    setToString = __webpack_require__(222);

/**
 * A specialized version of `baseRest` which flattens the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @returns {Function} Returns the new function.
 */
function flatRest(func) {
  return setToString(overRest(func, undefined, flatten), func + '');
}

module.exports = flatRest;


/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

var buildDistanceInWordsLocale = __webpack_require__(361)
var buildFormatLocale = __webpack_require__(362)

/**
 * @category Locales
 * @summary English locale.
 */
module.exports = {
  distanceInWords: buildDistanceInWordsLocale(),
  format: buildFormatLocale()
}


/***/ }),
/* 148 */,
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = __webpack_require__(338);

var consoleLogger = __webpack_require__(746); // if we are running inside Electron then use the web version of console.js


var isElectron = typeof window !== 'undefined' && window.process && window.process.type === 'renderer';

if (isElectron) {
  consoleLogger = __webpack_require__(754).minilog;
} // intercept the pipe method and transparently wrap the stringifier, if the
// destination is a Node core stream


module.exports.Stringifier = __webpack_require__(757);
var oldPipe = module.exports.pipe;

module.exports.pipe = function (dest) {
  if (dest instanceof __webpack_require__(17)) {
    return oldPipe.call(module.exports, new module.exports.Stringifier()).pipe(dest);
  } else {
    return oldPipe.call(module.exports, dest);
  }
};

module.exports.defaultBackend = consoleLogger;
module.exports.defaultFormatter = consoleLogger.formatMinilog;
module.exports.backends = {
  redis: __webpack_require__(758),
  nodeConsole: consoleLogger,
  console: consoleLogger
};

/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(61),
    isObject = __webpack_require__(38);

/** `Object#toString` result references. */
var asyncTag = '[object AsyncFunction]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    proxyTag = '[object Proxy]';

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  if (!isObject(value)) {
    return false;
  }
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 9 which returns 'object' for typed arrays and other constructors.
  var tag = baseGetTag(value);
  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}

module.exports = isFunction;


/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

var baseIndexOf = __webpack_require__(221);

/**
 * A specialized version of `_.includes` for arrays without support for
 * specifying an index to search from.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludes(array, value) {
  var length = array == null ? 0 : array.length;
  return !!length && baseIndexOf(array, value, 0) > -1;
}

module.exports = arrayIncludes;


/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

var isPrototype = __webpack_require__(112),
    nativeKeys = __webpack_require__(513);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeys(object) {
  if (!isPrototype(object)) {
    return nativeKeys(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (hasOwnProperty.call(object, key) && key != 'constructor') {
      result.push(key);
    }
  }
  return result;
}

module.exports = baseKeys;


/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

var baseFlatten = __webpack_require__(122);

/**
 * Flattens `array` a single level deep.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to flatten.
 * @returns {Array} Returns the new flattened array.
 * @example
 *
 * _.flatten([1, [2, [3, [4]], 5]]);
 * // => [1, 2, [3, [4]], 5]
 */
function flatten(array) {
  var length = array == null ? 0 : array.length;
  return length ? baseFlatten(array, 1) : [];
}

module.exports = flatten;


/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

var baseAssignValue = __webpack_require__(73),
    eq = __webpack_require__(88);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Assigns `value` to `key` of `object` if the existing value is not equivalent
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignValue(object, key, value) {
  var objValue = object[key];
  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
      (value === undefined && !(key in object))) {
    baseAssignValue(object, key, value);
  }
}

module.exports = assignValue;


/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(38);

/** Built-in value references. */
var objectCreate = Object.create;

/**
 * The base implementation of `_.create` without support for assigning
 * properties to the created object.
 *
 * @private
 * @param {Object} proto The object to inherit from.
 * @returns {Object} Returns the new object.
 */
var baseCreate = (function() {
  function object() {}
  return function(proto) {
    if (!isObject(proto)) {
      return {};
    }
    if (objectCreate) {
      return objectCreate(proto);
    }
    object.prototype = proto;
    var result = new object;
    object.prototype = undefined;
    return result;
  };
}());

module.exports = baseCreate;


/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(61),
    getPrototype = __webpack_require__(174),
    isObjectLike = __webpack_require__(39);

/** `Object#toString` result references. */
var objectTag = '[object Object]';

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to infer the `Object` constructor. */
var objectCtorString = funcToString.call(Object);

/**
 * Checks if `value` is a plain object, that is, an object created by the
 * `Object` constructor or one with a `[[Prototype]]` of `null`.
 *
 * @static
 * @memberOf _
 * @since 0.8.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * _.isPlainObject(new Foo);
 * // => false
 *
 * _.isPlainObject([1, 2, 3]);
 * // => false
 *
 * _.isPlainObject({ 'x': 0, 'y': 0 });
 * // => true
 *
 * _.isPlainObject(Object.create(null));
 * // => true
 */
function isPlainObject(value) {
  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
    return false;
  }
  var proto = getPrototype(value);
  if (proto === null) {
    return true;
  }
  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
  return typeof Ctor == 'function' && Ctor instanceof Ctor &&
    funcToString.call(Ctor) == objectCtorString;
}

module.exports = isPlainObject;


/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

var basePick = __webpack_require__(595),
    flatRest = __webpack_require__(146);

/**
 * Creates an object composed of the picked `object` properties.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The source object.
 * @param {...(string|string[])} [paths] The property paths to pick.
 * @returns {Object} Returns the new object.
 * @example
 *
 * var object = { 'a': 1, 'b': '2', 'c': 3 };
 *
 * _.pick(object, ['a', 'c']);
 * // => { 'a': 1, 'c': 3 }
 */
var pick = flatRest(function(object, paths) {
  return object == null ? {} : basePick(object, paths);
});

module.exports = pick;


/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(61),
    isArray = __webpack_require__(21),
    isObjectLike = __webpack_require__(39);

/** `Object#toString` result references. */
var stringTag = '[object String]';

/**
 * Checks if `value` is classified as a `String` primitive or object.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a string, else `false`.
 * @example
 *
 * _.isString('abc');
 * // => true
 *
 * _.isString(1);
 * // => false
 */
function isString(value) {
  return typeof value == 'string' ||
    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);
}

module.exports = isString;


/***/ }),
/* 159 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return subDays; });
/* harmony import */ var _addDays_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(134);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(5);
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(14);



/**
 * @name subDays
 * @category Day Helpers
 * @summary Subtract the specified number of days from the given date.
 *
 * @description
 * Subtract the specified number of days from the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the days subtracted
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Subtract 10 days from 1 September 2014:
 * const result = subDays(new Date(2014, 8, 1), 10)
 * //=> Fri Aug 22 2014 00:00:00
 */

function subDays(dirtyDate, dirtyAmount) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])(2, arguments);
  var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(dirtyAmount);
  return Object(_addDays_index_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(dirtyDate, -amount);
}

/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

var mapCacheClear = __webpack_require__(473),
    mapCacheDelete = __webpack_require__(491),
    mapCacheGet = __webpack_require__(493),
    mapCacheHas = __webpack_require__(494),
    mapCacheSet = __webpack_require__(495);

/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `MapCache`.
MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;

module.exports = MapCache;


/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(62),
    root = __webpack_require__(43);

/* Built-in method references that are verified to be native. */
var Map = getNative(root, 'Map');

module.exports = Map;


/***/ }),
/* 162 */
/***/ (function(module, exports) {

/**
 * This function is like `arrayIncludes` except that it accepts a comparator.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @param {Function} comparator The comparator invoked per element.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludesWith(array, value, comparator) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (comparator(value, array[index])) {
      return true;
    }
  }
  return false;
}

module.exports = arrayIncludesWith;


/***/ }),
/* 163 */
/***/ (function(module, exports) {

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
function isLength(value) {
  return typeof value == 'number' &&
    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

module.exports = isLength;


/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeToArray = __webpack_require__(232);
function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);
}
module.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

var baseFor = __webpack_require__(235),
    keys = __webpack_require__(66);

/**
 * The base implementation of `_.forOwn` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Object} Returns `object`.
 */
function baseForOwn(object, iteratee) {
  return object && baseFor(object, iteratee, keys);
}

module.exports = baseForOwn;


/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var freeGlobal = __webpack_require__(225);

/** Detect free variable `exports`. */
var freeExports =  true && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Detect free variable `process` from Node.js. */
var freeProcess = moduleExports && freeGlobal.process;

/** Used to access faster Node.js helpers. */
var nodeUtil = (function() {
  try {
    // Use `util.types` for Node.js 10+.
    var types = freeModule && freeModule.require && freeModule.require('util').types;

    if (types) {
      return types;
    }

    // Legacy `process.binding('util')` for Node.js < 10.
    return freeProcess && freeProcess.binding && freeProcess.binding('util');
  } catch (e) {}
}());

module.exports = nodeUtil;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(81)(module)))

/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsEqualDeep = __webpack_require__(521),
    isObjectLike = __webpack_require__(39);

/**
 * The base implementation of `_.isEqual` which supports partial comparisons
 * and tracks traversed objects.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Unordered comparison
 *  2 - Partial comparison
 * @param {Function} [customizer] The function to customize comparisons.
 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 */
function baseIsEqual(value, other, bitmask, customizer, stack) {
  if (value === other) {
    return true;
  }
  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
    return value !== value && other !== other;
  }
  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
}

module.exports = baseIsEqual;


/***/ }),
/* 168 */
/***/ (function(module, exports) {

/**
 * Converts `set` to an array of its values.
 *
 * @private
 * @param {Object} set The set to convert.
 * @returns {Array} Returns the values.
 */
function setToArray(set) {
  var index = -1,
      result = Array(set.size);

  set.forEach(function(value) {
    result[++index] = value;
  });
  return result;
}

module.exports = setToArray;


/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

var arrayFilter = __webpack_require__(215),
    stubArray = __webpack_require__(243);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Built-in value references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols;

/**
 * Creates an array of the own enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
  if (object == null) {
    return [];
  }
  object = Object(object);
  return arrayFilter(nativeGetSymbols(object), function(symbol) {
    return propertyIsEnumerable.call(object, symbol);
  });
};

module.exports = getSymbols;


/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

var isArray = __webpack_require__(21),
    isSymbol = __webpack_require__(86);

/** Used to match property names within property paths. */
var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
    reIsPlainProp = /^\w*$/;

/**
 * Checks if `value` is a property name and not a property path.
 *
 * @private
 * @param {*} value The value to check.
 * @param {Object} [object] The object to query keys on.
 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
 */
function isKey(value, object) {
  if (isArray(value)) {
    return false;
  }
  var type = typeof value;
  if (type == 'number' || type == 'symbol' || type == 'boolean' ||
      value == null || isSymbol(value)) {
    return true;
  }
  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
    (object != null && value in Object(object));
}

module.exports = isKey;


/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(72),
    arrayMap = __webpack_require__(37),
    isArray = __webpack_require__(21),
    isSymbol = __webpack_require__(86);

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolToString = symbolProto ? symbolProto.toString : undefined;

/**
 * The base implementation of `_.toString` which doesn't convert nullish
 * values to empty strings.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 */
function baseToString(value) {
  // Exit early for strings to avoid a performance hit in some environments.
  if (typeof value == 'string') {
    return value;
  }
  if (isArray(value)) {
    // Recursively convert values (susceptible to call stack limits).
    return arrayMap(value, baseToString) + '';
  }
  if (isSymbol(value)) {
    return symbolToString ? symbolToString.call(value) : '';
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

module.exports = baseToString;


/***/ }),
/* 172 */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.property` without support for deep paths.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function baseProperty(key) {
  return function(object) {
    return object == null ? undefined : object[key];
  };
}

module.exports = baseProperty;


/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

var SetCache = __webpack_require__(116),
    arrayIncludes = __webpack_require__(151),
    arrayIncludesWith = __webpack_require__(162),
    cacheHas = __webpack_require__(121),
    createSet = __webpack_require__(533),
    setToArray = __webpack_require__(168);

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/**
 * The base implementation of `_.uniqBy` without support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new duplicate free array.
 */
function baseUniq(array, iteratee, comparator) {
  var index = -1,
      includes = arrayIncludes,
      length = array.length,
      isCommon = true,
      result = [],
      seen = result;

  if (comparator) {
    isCommon = false;
    includes = arrayIncludesWith;
  }
  else if (length >= LARGE_ARRAY_SIZE) {
    var set = iteratee ? null : createSet(array);
    if (set) {
      return setToArray(set);
    }
    isCommon = false;
    includes = cacheHas;
    seen = new SetCache;
  }
  else {
    seen = iteratee ? [] : result;
  }
  outer:
  while (++index < length) {
    var value = array[index],
        computed = iteratee ? iteratee(value) : value;

    value = (comparator || value !== 0) ? value : 0;
    if (isCommon && computed === computed) {
      var seenIndex = seen.length;
      while (seenIndex--) {
        if (seen[seenIndex] === computed) {
          continue outer;
        }
      }
      if (iteratee) {
        seen.push(computed);
      }
      result.push(value);
    }
    else if (!includes(seen, computed, comparator)) {
      if (seen !== result) {
        seen.push(computed);
      }
      result.push(value);
    }
  }
  return result;
}

module.exports = baseUniq;


/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

var overArg = __webpack_require__(238);

/** Built-in value references. */
var getPrototype = overArg(Object.getPrototypeOf, Object);

module.exports = getPrototype;


/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetAllKeys = __webpack_require__(242),
    getSymbolsIn = __webpack_require__(257),
    keysIn = __webpack_require__(87);

/**
 * Creates an array of own and inherited enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeysIn(object) {
  return baseGetAllKeys(object, keysIn, getSymbolsIn);
}

module.exports = getAllKeysIn;


/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

var Uint8Array = __webpack_require__(240);

/**
 * Creates a clone of `arrayBuffer`.
 *
 * @private
 * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
 * @returns {ArrayBuffer} Returns the cloned array buffer.
 */
function cloneArrayBuffer(arrayBuffer) {
  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
  new Uint8Array(result).set(new Uint8Array(arrayBuffer));
  return result;
}

module.exports = cloneArrayBuffer;


/***/ }),
/* 177 */
/***/ (function(module, exports) {

function _setPrototypeOf(o, p) {
  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  return _setPrototypeOf(o, p);
}
module.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var replace = String.prototype.replace;
var percentTwenties = /%20/g;

var Format = {
    RFC1738: 'RFC1738',
    RFC3986: 'RFC3986'
};

module.exports = {
    'default': Format.RFC3986,
    formatters: {
        RFC1738: function (value) {
            return replace.call(value, percentTwenties, '+');
        },
        RFC3986: function (value) {
            return String(value);
        }
    },
    RFC1738: Format.RFC1738,
    RFC3986: Format.RFC3986
};


/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsEqual = __webpack_require__(167);

/**
 * Performs a deep comparison between two values to determine if they are
 * equivalent.
 *
 * **Note:** This method supports comparing arrays, array buffers, booleans,
 * date objects, error objects, maps, numbers, `Object` objects, regexes,
 * sets, strings, symbols, and typed arrays. `Object` objects are compared
 * by their own, not inherited, enumerable properties. Functions and DOM
 * nodes are compared by strict equality, i.e. `===`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.isEqual(object, other);
 * // => true
 *
 * object === other;
 * // => false
 */
function isEqual(value, other) {
  return baseIsEqual(value, other);
}

module.exports = isEqual;


/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.buildURL = exports.encode = void 0;

var _slicedToArray2 = _interopRequireDefault(__webpack_require__(32));

var _pickBy = _interopRequireDefault(__webpack_require__(277));

/**
 * Encode a value of any type into a URI search param compatible string with a specific treatment for arrays which will keep their brackets (they do not with standard `toString()` method).
 *
 * Examples:
 *
 *   encodeValues([['io.cozy.files', 'abcd1234'], '12345'])
 *   // → '[[%22io.cozy.files%22,%22abcd1234%22],%2212345%22]'
 *
 *   encodeValues([['io.cozy.files', 'abcd1234'], '12345'].toString(), true)
 *   // → '%22io.cozy.files%2Cabcd1234%2C12345%22'
 *
 *   encodeValues([['io.cozy.files', 'abcd1234'], '12345'].toString(), false)
 *   // → 'io.cozy.files%2Cabcd1234%2C12345'
 *
 *   encodeValues('[1234]')
 *   // → %5B1234%5D
 *
 * @function
 * @private
 */
var encodeValues = function encodeValues(values) {
  var fromArray = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  if (Array.isArray(values)) {
    return '[' + values.map(function (v) {
      return encodeValues(v, true);
    }).join(',') + ']';
  }

  return fromArray ? encodeURIComponent("\"".concat(values, "\"")) : encodeURIComponent(values);
};
/**
 * Encode an object as querystring, values are encoded as
 * URI components, keys are not.
 *
 * @function
 * @private
 */


var encode = function encode(data) {
  return Object.entries(data).map(function (_ref) {
    var _ref2 = (0, _slicedToArray2.default)(_ref, 2),
        k = _ref2[0],
        v = _ref2[1];

    var encodedValue = encodeValues(v);
    return "".concat(k, "=").concat(encodedValue);
  }).join('&');
};
/**
 * Returns a URL from base url and a query parameter object.
 * Any undefined parameter is removed.
 *
 * @function
 * @private
 */


exports.encode = encode;

var buildURL = function buildURL(url, params) {
  var qs = encode((0, _pickBy.default)(params));

  if (qs) {
    return "".concat(url, "?").concat(qs);
  } else {
    return url;
  }
};

exports.buildURL = buildURL;

/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireWildcard = __webpack_require__(22);

var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.isDirectory = exports.isFile = void 0;

var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(50));

var _taggedTemplateLiteral2 = _interopRequireDefault(__webpack_require__(45));

var _regenerator = _interopRequireDefault(__webpack_require__(6));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(7));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));

var _createClass2 = _interopRequireDefault(__webpack_require__(13));

var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(127));

var _inherits2 = _interopRequireDefault(__webpack_require__(18));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(19));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(16));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(9));

var _lite = _interopRequireDefault(__webpack_require__(591));

var _has = _interopRequireDefault(__webpack_require__(281));

var _get = _interopRequireDefault(__webpack_require__(10));

var _omit = _interopRequireDefault(__webpack_require__(113));

var _pick = _interopRequireDefault(__webpack_require__(157));

var _mangoIndex = __webpack_require__(276);

var _DocumentCollection2 = _interopRequireWildcard(__webpack_require__(26));

var _utils = __webpack_require__(46);

var _errors = __webpack_require__(56);

var _Collection = __webpack_require__(75);

var _getIllegalCharacter = __webpack_require__(282);

var querystring = _interopRequireWildcard(__webpack_require__(180));

var _logger = _interopRequireDefault(__webpack_require__(51));

function _templateObject24() {
  var data = (0, _taggedTemplateLiteral2.default)(["/files/_changes"]);

  _templateObject24 = function _templateObject24() {
    return data;
  };

  return data;
}

function _templateObject23() {
  var data = (0, _taggedTemplateLiteral2.default)(["/data/", "/", "/relationships/not_synchronizing"]);

  _templateObject23 = function _templateObject23() {
    return data;
  };

  return data;
}

function _templateObject22() {
  var data = (0, _taggedTemplateLiteral2.default)(["/data/", "/", "/relationships/not_synchronizing"]);

  _templateObject22 = function _templateObject22() {
    return data;
  };

  return data;
}

function _templateObject21() {
  var data = (0, _taggedTemplateLiteral2.default)(["/data/", "/", "/relationships/not_synchronizing"]);

  _templateObject21 = function _templateObject21() {
    return data;
  };

  return data;
}

function _templateObject20() {
  var data = (0, _taggedTemplateLiteral2.default)(["/files/", "/versions"]);

  _templateObject20 = function _templateObject20() {
    return data;
  };

  return data;
}

function _templateObject19() {
  var data = (0, _taggedTemplateLiteral2.default)(["/files/upload/metadata"]);

  _templateObject19 = function _templateObject19() {
    return data;
  };

  return data;
}

function _templateObject18() {
  var data = (0, _taggedTemplateLiteral2.default)(["/files/", ""]);

  _templateObject18 = function _templateObject18() {
    return data;
  };

  return data;
}

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _templateObject17() {
  var data = (0, _taggedTemplateLiteral2.default)(["/files/", "?Name=", "&Type=directory&MetadataID=", ""]);

  _templateObject17 = function _templateObject17() {
    return data;
  };

  return data;
}

function _templateObject16() {
  var data = (0, _taggedTemplateLiteral2.default)(["/files/metadata?Path=", ""]);

  _templateObject16 = function _templateObject16() {
    return data;
  };

  return data;
}

function _templateObject15() {
  var data = (0, _taggedTemplateLiteral2.default)(["/files/", ""]);

  _templateObject15 = function _templateObject15() {
    return data;
  };

  return data;
}

function _templateObject14() {
  var data = (0, _taggedTemplateLiteral2.default)(["/files/downloads?Path=", ""]);

  _templateObject14 = function _templateObject14() {
    return data;
  };

  return data;
}

function _templateObject13() {
  var data = (0, _taggedTemplateLiteral2.default)(["/files/downloads?VersionId=", "&Filename=", ""]);

  _templateObject13 = function _templateObject13() {
    return data;
  };

  return data;
}

function _templateObject12() {
  var data = (0, _taggedTemplateLiteral2.default)(["/files/downloads?Id=", "&Filename=", ""]);

  _templateObject12 = function _templateObject12() {
    return data;
  };

  return data;
}

function _templateObject11() {
  var data = (0, _taggedTemplateLiteral2.default)(["/files/", "?Name=", "&Type=file&Executable=", "&Encrypted=", ""]);

  _templateObject11 = function _templateObject11() {
    return data;
  };

  return data;
}

function _templateObject10() {
  var data = (0, _taggedTemplateLiteral2.default)(["/files/", "?Name=", "&Type=file&Executable=", "&Encrypted=", "&MetadataID=", "&Size=", "&SourceAccount=", "&SourceAccountIdentifier=", ""]);

  _templateObject10 = function _templateObject10() {
    return data;
  };

  return data;
}

function _templateObject9() {
  var data = (0, _taggedTemplateLiteral2.default)(["/files/", ""]);

  _templateObject9 = function _templateObject9() {
    return data;
  };

  return data;
}

function _templateObject8() {
  var data = (0, _taggedTemplateLiteral2.default)(["/files/", "/copy"]);

  _templateObject8 = function _templateObject8() {
    return data;
  };

  return data;
}

function _templateObject7() {
  var data = (0, _taggedTemplateLiteral2.default)(["/files/trash/", ""]);

  _templateObject7 = function _templateObject7() {
    return data;
  };

  return data;
}

function _templateObject6() {
  var data = (0, _taggedTemplateLiteral2.default)(["/files/", ""]);

  _templateObject6 = function _templateObject6() {
    return data;
  };

  return data;
}

function _templateObject5() {
  var data = (0, _taggedTemplateLiteral2.default)(["/data/", "/", "/relationships/references"]);

  _templateObject5 = function _templateObject5() {
    return data;
  };

  return data;
}

function _templateObject4() {
  var data = (0, _taggedTemplateLiteral2.default)(["/data/", "/", "/relationships/references"]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = (0, _taggedTemplateLiteral2.default)(["/files/", "/relationships/referenced_by"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = (0, _taggedTemplateLiteral2.default)(["/files/", "/relationships/referenced_by"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = (0, _taggedTemplateLiteral2.default)(["/data/", "/", "/relationships/references"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 * @typedef {object} IOCozyFolder Folder
 */

/**
 * @typedef {object} SpecificFileAttributesForKonnector Specific file attributes for creation for konnector
 * @property {string} sourceAccount the id of the source account used by a konnector
 * @property {string} sourceAccountIdentifier the unique identifier of the account targeted by the connector
 */

/**
 * Cursor used for Mango queries pagination
 *
 * @typedef {Array<string>|string} ViewKey
 * @typedef {string} DocId
 * @typedef {Array<*> & {0: ViewKey, 1: DocId}} CouchDBViewCursor
 */

/**
 * Attributes used for directory creation
 *
 * @typedef {object} DirectoryAttributes
 * @property {string} dirId - Id of the parent directory.
 * @property {boolean} name - Name of the created directory.
 * @property {boolean} executable - Indicates whether the file will be executable.
 * @property {object} [metadata] io.cozy.files.metadata to attach to the directory
 */

/**
 * Attributes used for file creation
 *
 * @typedef {object} FileAttributes
 * @property {string} id - Id of the document
 * @property {string} _id - Id of the document
 * @property {string} dirId - Id of the parent directory.
 * @property {string} name - Name of the created file.
 * @property {Date} lastModifiedDate - Can be used to set the last modified date of a file.
 * @property {boolean} executable - Whether or not the file is executable
 * @property {boolean} encrypted - Whether or not the file is client-side encrypted
 * @property {object} metadata io.cozy.files.metadata to attach to the file
 */

/**
 * Document representing a io.cozy.files
 *
 * @typedef {object} FileDocument
 * @property {string} _id - Id of the file
 * @property {FileAttributes} attributes - Attributes of the file
 * @property {object} meta - Meta
 * @property {object} relationships - Relationships
 * @property {object} referenced_by - Referenced by
 */

/**
 * Stream is not defined in a browser, but is on NodeJS environment
 *
 * @typedef {object} Stream
 */

/**
 * Document representing a io.cozy.oauth.clients
 *
 * @typedef {object} OAuthClient
 * @property {string} _id - Id of the client
 * @property {string} _type - Doctype of the client (i.e. io.cozy.oauth.clients)
 */
var ROOT_DIR_ID = 'io.cozy.files.root-dir';
var CONTENT_TYPE_OCTET_STREAM = 'application/octet-stream';
/**
 * Normalize a file, adding document's doctype if needed
 *
 * @param  {FileDocument} file - File to normalize
 * @returns {FileDocument} normalized file
 * @private
 */

var normalizeFile = function normalizeFile(file) {
  var _file$meta;

  return _objectSpread(_objectSpread(_objectSpread({}, (0, _DocumentCollection2.normalizeDoc)(file, 'io.cozy.files')), file.attributes), {}, {
    _rev: file === null || file === void 0 ? void 0 : (_file$meta = file.meta) === null || _file$meta === void 0 ? void 0 : _file$meta.rev // Beware of JSON-API

  });
};
/**
 * Normalize references, expliciting _type and _id — see https://docs.cozy.io/en/cozy-stack/references-docs-in-vfs/
 *
 * @param  {Array<object>} references - The list of files referenced by a document to normalize
 * @returns {Array<object>} the data attribute of the normalized references
 * @private
 */


var normalizeReferences = function normalizeReferences(references) {
  return references ? references.map(function (ref) {
    return {
      _type: ref.type,
      _id: ref.id
    };
  }) : [];
};
/**
 * Sanitize the file name by trimming spaces
 *
 * @param {string} name - The file name to trim
 * @returns {string} the trimmed file name
 * @private
 */


var sanitizeFileName = function sanitizeFileName(name) {
  return name && name.trim();
};
/**
 * Sanitize and validate the file name - throw errors according to case
 *
 * @param {string} name - The file name
 * @returns {string} the trimmed safe file name
 * @throws {Error} - explaining reason why file name is not valid
 * @private
 */


var sanitizeAndValidateFileName = function sanitizeAndValidateFileName(name) {
  var safeName = sanitizeFileName(name);

  if (typeof safeName !== 'string' || safeName === '') {
    throw new Error('Missing name argument');
  }

  if (name === '.' || name === '..') {
    throw new Error("Invalid filename: ".concat(name));
  }

  var illegalCharacters = (0, _getIllegalCharacter.getIllegalCharacters)(safeName);

  if (illegalCharacters.length) {
    throw new Error("Invalid filename containing illegal character(s): ".concat(illegalCharacters));
  }

  return safeName;
};
/**
 * Returns true when parameter has type directory, file or has _type io.cozy.files
 *
 * @param {object} doc - The document whose type is checked
 * @param {string} [doc._type] - The document's doctype
 * @param {'directory'|'file'} [doc.type] - The io.cozy-files document type
 *
 * @returns {boolean} true when objects has type directory, file or has _type io.cozy.files or false
 */


var isFile = function isFile(_ref) {
  var _type = _ref._type,
      type = _ref.type;
  return _type === 'io.cozy.files' || type === 'directory' || type === 'file';
};
/**
 * Returns true when parameters has type directory
 *
 * @param {object} args File
 * @param {string} args.type - The type of the file
 * @returns {boolean} true when parameters has type directory or false
 */


exports.isFile = isFile;

var isDirectory = function isDirectory(_ref2) {
  var type = _ref2.type;
  return type === 'directory';
};

exports.isDirectory = isDirectory;

var raceWithCondition = function raceWithCondition(promises, predicate) {
  return new Promise(function (resolve) {
    promises.forEach(function (p) {
      return p.then(function (res) {
        if (predicate(res)) {
          resolve(true);
        }
      });
    });
    Promise.all(promises).then(function () {
      return resolve(false);
    });
  });
};

var dirName = function dirName(path) {
  var lastIndex = path.lastIndexOf('/');
  return path.substring(0, lastIndex);
};
/**
 * Implements `DocumentCollection` API along with specific methods for
 * `io.cozy.files`.
 *
 * Files are a special type of documents and are handled differently by the stack:
 * special routes are to be used, and there is a notion of referenced files, aka
 * files associated to a specific document
 */


var FileCollection = /*#__PURE__*/function (_DocumentCollection) {
  (0, _inherits2.default)(FileCollection, _DocumentCollection);

  var _super = _createSuper(FileCollection);

  function FileCollection(doctype, stackClient) {
    var _this;

    (0, _classCallCheck2.default)(this, FileCollection);
    _this = _super.call(this, doctype, stackClient);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "extractResponseLinkRelated", function (res) {
      var href = res.links && res.links.related;
      if (!href) throw new Error('No related link in server response');
      return _this.stackClient.fullpath(href);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "forceFileDownload", function (href, filename) {
      var element = document.createElement('a');
      element.setAttribute('href', href);
      element.setAttribute('download', filename);
      element.style.display = 'none';
      document.body.appendChild(element);
      element.click();
      document.body.removeChild(element);
    });
    _this.specialDirectories = {};
    return _this;
  }
  /**
   * Fetches the file's data
   *
   * @param {string} id File id
   * @returns {{data, included}} Information about the file or folder and it's descendents
   */


  (0, _createClass2.default)(FileCollection, [{
    key: "get",
    value: function get(id) {
      return this.statById(id);
    }
  }, {
    key: "fetchFindFiles",
    value: function () {
      var _fetchFindFiles = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(selector, options) {
        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt("return", this.stackClient.fetchJSON('POST', '/files/_find', this.toMangoOptions(selector, options)));

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function fetchFindFiles(_x, _x2) {
        return _fetchFindFiles.apply(this, arguments);
      }

      return fetchFindFiles;
    }()
    /**
     * Returns a filtered list of documents using a Mango selector.
     *
     * The returned documents are paginated by the stack.
     *
     * @param {object}            selector  The Mango selector.
     * @param {MangoQueryOptions} options   The query options
     * @returns {Promise<{data, meta, skip, next, bookmark, execution_stats}>} The JSON API conformant response.
     * @throws {FetchError}
     */

  }, {
    key: "find",
    value: function () {
      var _find = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(selector) {
        var options,
            _options$skip,
            skip,
            resp,
            path,
            nextLink,
            nextLinkURL,
            nextBookmark,
            _args2 = arguments;

        return _regenerator.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                options = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : {};
                _options$skip = options.skip, skip = _options$skip === void 0 ? 0 : _options$skip;
                _context2.prev = 2;
                path = '/files/_find';
                _context2.next = 6;
                return this.findWithMango(path, selector, options);

              case 6:
                resp = _context2.sent;
                _context2.next = 12;
                break;

              case 9:
                _context2.prev = 9;
                _context2.t0 = _context2["catch"](2);
                return _context2.abrupt("return", (0, _Collection.dontThrowNotFoundError)(_context2.t0));

              case 12:
                nextLink = (0, _get.default)(resp, 'links.next', '');
                nextLinkURL = new URL("".concat(this.stackClient.uri).concat(nextLink));
                nextBookmark = nextLinkURL.searchParams.get('page[cursor]');
                return _context2.abrupt("return", {
                  data: resp.data.map(function (f) {
                    return normalizeFile(f);
                  }),
                  meta: resp.meta,
                  next: resp.meta.count > skip + resp.data.length,
                  skip: skip,
                  bookmark: nextBookmark || undefined,
                  execution_stats: resp.meta.execution_stats
                });

              case 16:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this, [[2, 9]]);
      }));

      function find(_x3) {
        return _find.apply(this, arguments);
      }

      return find;
    }()
    /**
     * async findReferencedBy - Returns the list of files referenced by a document — see https://docs.cozy.io/en/cozy-stack/references-docs-in-vfs/
     *
     * @param  {object}       document          A JSON representing a document, with at least a `_type` and `_id` field.
     * @param  {object}       options           Additional options
     * @param  {number|null}  [options.skip]    For skip-based pagination, the number of referenced files to skip.
     * @param  {number|null}  [options.limit]   For pagination, the number of results to return.
     * @param  {CouchDBViewCursor|null}  [options.cursor]  For cursor-based pagination, the index cursor.
     * @returns {Promise<{data, included, meta, skip, next}>} The JSON API conformant response.
     */

  }, {
    key: "findReferencedBy",
    value: function () {
      var _findReferencedBy = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3(document) {
        var _ref3,
            _ref3$skip,
            skip,
            limit,
            cursor,
            params,
            path,
            url,
            resp,
            _args3 = arguments;

        return _regenerator.default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _ref3 = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : {}, _ref3$skip = _ref3.skip, skip = _ref3$skip === void 0 ? 0 : _ref3$skip, limit = _ref3.limit, cursor = _ref3.cursor;
                params = {
                  include: 'files',
                  'page[limit]': limit,
                  'page[cursor]': cursor,
                  sort: 'datetime'
                };
                path = (0, _utils.uri)(_templateObject(), document._type, document._id);
                url = querystring.buildURL(path, params);
                _context3.next = 6;
                return this.stackClient.fetchJSON('GET', url);

              case 6:
                resp = _context3.sent;
                return _context3.abrupt("return", {
                  data: normalizeReferences(resp.data),
                  included: resp.included ? resp.included.map(function (f) {
                    return normalizeFile(f);
                  }) : [],
                  next: (0, _has.default)(resp, 'links.next'),
                  meta: resp.meta,
                  skip: skip
                });

              case 8:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function findReferencedBy(_x4) {
        return _findReferencedBy.apply(this, arguments);
      }

      return findReferencedBy;
    }()
    /**
     *  Add referenced_by documents to a file — see https://docs.cozy.io/en/cozy-stack/references-docs-in-vfs/#post-filesfile-idrelationshipsreferenced_by
     *
     *  For example, to have an album referenced by a file:
     * ```
     * addReferencedBy({_id: 123, _type: "io.cozy.files", name: "cozy.jpg"}, [{_id: 456, _type: "io.cozy.photos.albums", name: "Happy Cloud"}])
     * ```
     *
     * @param  {FileDocument} document  A JSON representing the file
     * @param  {Array}  documents       An array of JSON documents having a `_type` and `_id` field.
     * @returns {Promise<{data, meta}>}          The JSON API conformant response.
     */

  }, {
    key: "addReferencedBy",
    value: function () {
      var _addReferencedBy = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee4(document, documents) {
        var refs, resp;
        return _regenerator.default.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                refs = documents.map(function (d) {
                  return {
                    id: d._id,
                    type: d._type
                  };
                });
                _context4.next = 3;
                return this.stackClient.fetchJSON('POST', (0, _utils.uri)(_templateObject2(), document._id), {
                  data: refs
                });

              case 3:
                resp = _context4.sent;
                return _context4.abrupt("return", {
                  data: normalizeReferences(resp.data),
                  meta: resp.meta
                });

              case 5:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function addReferencedBy(_x5, _x6) {
        return _addReferencedBy.apply(this, arguments);
      }

      return addReferencedBy;
    }()
    /**
     *  Remove referenced_by documents from a file — see https://docs.cozy.io/en/cozy-stack/references-docs-in-vfs/#delete-filesfile-idrelationshipsreferenced_by
     *
     *  For example, to remove an album reference from a file:
     * ```
     *  removeReferencedBy({_id: 123, _type: "io.cozy.files", name: "cozy.jpg"}, [{_id: 456, _type: "io.cozy.photos.albums", name: "Happy Cloud"}])
     * ```
     *
     * @param  {object} document        A JSON representing the file
     * @param  {Array}  documents       An array of JSON documents having a `_type` and `_id` field.
     * @returns {Promise<{data, meta}>}          The JSON API conformant response.
     */

  }, {
    key: "removeReferencedBy",
    value: function () {
      var _removeReferencedBy = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee5(document, documents) {
        var refs, resp;
        return _regenerator.default.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                refs = documents.map(function (d) {
                  return {
                    id: d._id || d.id,
                    type: d._type || d.type
                  };
                });
                _context5.next = 3;
                return this.stackClient.fetchJSON('DELETE', (0, _utils.uri)(_templateObject3(), document._id || document.id), {
                  data: refs
                });

              case 3:
                resp = _context5.sent;
                return _context5.abrupt("return", {
                  data: normalizeReferences(resp.data),
                  meta: resp.meta
                });

              case 5:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function removeReferencedBy(_x7, _x8) {
        return _removeReferencedBy.apply(this, arguments);
      }

      return removeReferencedBy;
    }()
    /**
     *  Add files references to a document — see https://docs.cozy.io/en/cozy-stack/references-docs-in-vfs/#post-datatypedoc-idrelationshipsreferences
     *
     *  For example, to add a photo to an album:
     * ```
     *  addReferencesTo({_id: 456, _type: "io.cozy.photos.albums", name: "Happy Cloud"}, [{_id: 123, _type: "io.cozy.files", name: "cozy.jpg"}])
     * ```
     *
     * @param  {object} document        A JSON representing a document, with at least a `_type` and `_id` field.
     * @param  {Array}  documents       An array of JSON files having an `_id` field.
     *
     * Returns 204 No Content
     */

  }, {
    key: "addReferencesTo",
    value: function () {
      var _addReferencesTo = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee6(document, documents) {
        var refs;
        return _regenerator.default.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                refs = documents.map(function (d) {
                  return {
                    id: d._id,
                    type: 'io.cozy.files'
                  };
                });
                return _context6.abrupt("return", this.stackClient.fetchJSON('POST', (0, _utils.uri)(_templateObject4(), document._type, document._id), {
                  data: refs
                }));

              case 2:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));

      function addReferencesTo(_x9, _x10) {
        return _addReferencesTo.apply(this, arguments);
      }

      return addReferencesTo;
    }()
    /**
     *  Remove files references to a document — see https://docs.cozy.io/en/cozy-stack/references-docs-in-vfs/#delete-datatypedoc-idrelationshipsreferences
     *
     *  For example, to remove a photo from an album:
     * ```
     *  removeReferencesTo({_id: 456, _type: "io.cozy.photos.albums", name: "Happy Cloud"}, [{_id: 123, _type: "io.cozy.files", name: "cozy.jpg"}])
     * ```
     *
     * @param  {object} document        A JSON representing a document, with at least a `_type` and `_id` field.
     * @param  {Array}  documents       An array of JSON files having an `_id` field.
     *
     * Returns 204 No Content
     */

  }, {
    key: "removeReferencesTo",
    value: function () {
      var _removeReferencesTo = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee7(document, documents) {
        var refs;
        return _regenerator.default.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                refs = documents.map(function (d) {
                  return {
                    id: d._id,
                    type: 'io.cozy.files'
                  };
                });
                return _context7.abrupt("return", this.stackClient.fetchJSON('DELETE', (0, _utils.uri)(_templateObject5(), document._type, document._id), {
                  data: refs
                }));

              case 2:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7, this);
      }));

      function removeReferencesTo(_x11, _x12) {
        return _removeReferencesTo.apply(this, arguments);
      }

      return removeReferencesTo;
    }()
    /**
     * Sends file to trash and removes references to it
     *
     * @param  {FileDocument} file - File that will be sent to trash
     * @returns {Promise} - Resolves when references have been removed
     * and file has been sent to trash
     */

  }, {
    key: "destroy",
    value: function () {
      var _destroy = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee8(file) {
        var _ref4,
            _ref4$ifMatch,
            ifMatch,
            _id,
            relationships,
            resp,
            references,
            _args8 = arguments;

        return _regenerator.default.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                _ref4 = _args8.length > 1 && _args8[1] !== undefined ? _args8[1] : {}, _ref4$ifMatch = _ref4.ifMatch, ifMatch = _ref4$ifMatch === void 0 ? '' : _ref4$ifMatch;
                _id = file._id, relationships = file.relationships;
                _context8.next = 4;
                return this.stackClient.fetchJSON('DELETE', (0, _utils.uri)(_templateObject6(), _id), undefined, {
                  headers: {
                    'If-Match': ifMatch
                  }
                });

              case 4:
                resp = _context8.sent;
                // needed because we had a bug in cozy-stack https://github.com/cozy/cozy-stack/pull/3566
                // to remove once the code is deployed everywhere
                references = (0, _get.default)(relationships, 'referenced_by.data', file.referenced_by);

                if (!Array.isArray(references)) {
                  _context8.next = 9;
                  break;
                }

                _context8.next = 9;
                return this.removeReferencedBy(file, references);

              case 9:
                return _context8.abrupt("return", {
                  data: normalizeFile(resp.data)
                });

              case 10:
              case "end":
                return _context8.stop();
            }
          }
        }, _callee8, this);
      }));

      function destroy(_x13) {
        return _destroy.apply(this, arguments);
      }

      return destroy;
    }()
    /**
     * Empty the Trash
     */

  }, {
    key: "emptyTrash",
    value: function emptyTrash() {
      return this.stackClient.fetchJSON('DELETE', '/files/trash');
    }
    /**
     * Restores a trashed file.
     *
     * @param {string} id   - The file's id
     * @returns {Promise}   - A promise that returns the restored file if resolved.
     * @throws {FetchError}
     *
     */

  }, {
    key: "restore",
    value: function restore(id) {
      return this.stackClient.fetchJSON('POST', (0, _utils.uri)(_templateObject7(), id));
    }
    /**
     * Copy a file.
     *
     * @param {string} id   - The file's id
     * @param {string} [name]   - The file copy name
     * @param {string} [dirId]   - The destination directory id
     * @returns {Promise<object>}   - A promise that returns the copied file if resolved.
     * @throws {FetchError}
     *
     */

  }, {
    key: "copy",
    value: function () {
      var _copy = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee9(id, name, dirId) {
        var params, path, url, resp;
        return _regenerator.default.wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                params = {
                  name: name === undefined ? undefined : sanitizeAndValidateFileName(name),
                  dirId: dirId
                };
                path = (0, _utils.uri)(_templateObject8(), id);
                url = querystring.buildURL(path, params);
                _context9.next = 5;
                return this.stackClient.fetchJSON('POST', url);

              case 5:
                resp = _context9.sent;
                return _context9.abrupt("return", {
                  data: normalizeFile(resp.data)
                });

              case 7:
              case "end":
                return _context9.stop();
            }
          }
        }, _callee9, this);
      }));

      function copy(_x14, _x15, _x16) {
        return _copy.apply(this, arguments);
      }

      return copy;
    }()
    /**
     * async deleteFilePermanently - Definitely delete a file
     *
     * @param  {string} id - The id of the file to delete
     * @returns {Promise<object>} The deleted file object
     */

  }, {
    key: "deleteFilePermanently",
    value: function () {
      var _deleteFilePermanently = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee10(id) {
        var resp;
        return _regenerator.default.wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                _context10.next = 2;
                return this.stackClient.fetchJSON('PATCH', (0, _utils.uri)(_templateObject9(), id), {
                  data: {
                    type: 'io.cozy.files',
                    id: id,
                    attributes: {
                      permanent_delete: true
                    }
                  }
                });

              case 2:
                resp = _context10.sent;
                return _context10.abrupt("return", resp.data);

              case 4:
              case "end":
                return _context10.stop();
            }
          }
        }, _callee10, this);
      }));

      function deleteFilePermanently(_x17) {
        return _deleteFilePermanently.apply(this, arguments);
      }

      return deleteFilePermanently;
    }()
    /**
     * @param {File|Blob|Stream|string|ArrayBuffer} data file to be uploaded
     * @param {string} dirPath Path to upload the file to. ie : /Administative/XXX/
     * @returns {Promise<object>} Created io.cozy.files
     */

  }, {
    key: "upload",
    value: function () {
      var _upload = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee11(data, dirPath) {
        var dirId;
        return _regenerator.default.wrap(function _callee11$(_context11) {
          while (1) {
            switch (_context11.prev = _context11.next) {
              case 0:
                _context11.next = 2;
                return this.ensureDirectoryExists(dirPath);

              case 2:
                dirId = _context11.sent;
                return _context11.abrupt("return", this.createFile(data, {
                  dirId: dirId
                }));

              case 4:
              case "end":
                return _context11.stop();
            }
          }
        }, _callee11, this);
      }));

      function upload(_x18, _x19) {
        return _upload.apply(this, arguments);
      }

      return upload;
    }()
    /**
     * Creates directory or file.
     * - Used by StackLink to support CozyClient.create('io.cozy.files', options)
     *
     * @param {FileAttributes|DirectoryAttributes} attributes - Attributes of the created file/directory
     * @param {File|Blob|string|ArrayBuffer} attributes.data Will be used as content of the created file
     * @throws {Error} - explaining reason why creation failed
     */

  }, {
    key: "create",
    value: function () {
      var _create = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee12(attributes) {
        var data, createFileOptions;
        return _regenerator.default.wrap(function _callee12$(_context12) {
          while (1) {
            switch (_context12.prev = _context12.next) {
              case 0:
                if (!(attributes.type === 'directory')) {
                  _context12.next = 4;
                  break;
                }

                return _context12.abrupt("return", this.createDirectory(attributes));

              case 4:
                data = attributes.data, createFileOptions = (0, _objectWithoutProperties2.default)(attributes, ["data"]);
                return _context12.abrupt("return", this.createFile(data, createFileOptions));

              case 6:
              case "end":
                return _context12.stop();
            }
          }
        }, _callee12, this);
      }));

      function create(_x20) {
        return _create.apply(this, arguments);
      }

      return create;
    }()
    /***
     * Updates an existing file or directory
     *
     * Used by StackLink to support CozyClient.save({file}).
     * Update the binary file if a `data` param is passed. Only updates
     * attributes otherwise.
     * @param {object} attributes
     * @param {FileAttributes} attributes.file - The file with its new content
     * @param {File|Blob|string|ArrayBuffer} attributes.data Will be used as content of the updated file
     * @returns {Promise<FileAttributes>} Updated document
     * @throws {Error} - explaining reason why update failed
     */

  }, {
    key: "update",
    value: function () {
      var _update = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee13(attributes) {
        var data, updateFileOptions, fileId;
        return _regenerator.default.wrap(function _callee13$(_context13) {
          while (1) {
            switch (_context13.prev = _context13.next) {
              case 0:
                data = attributes.data, updateFileOptions = (0, _objectWithoutProperties2.default)(attributes, ["data"]);
                fileId = attributes.id || attributes._id;

                if (!data) {
                  _context13.next = 7;
                  break;
                }

                if (!(attributes.type === 'directory')) {
                  _context13.next = 5;
                  break;
                }

                throw new Error('You cannot pass a data object for a directory');

              case 5:
                updateFileOptions.fileId = fileId;
                return _context13.abrupt("return", this.updateFile(data, updateFileOptions));

              case 7:
                return _context13.abrupt("return", this.updateAttributes(fileId, attributes));

              case 8:
              case "end":
                return _context13.stop();
            }
          }
        }, _callee13, this);
      }));

      function update(_x21) {
        return _update.apply(this, arguments);
      }

      return update;
    }()
    /**
     * Creates a file
     *
     *
     * @private
     * @param {File|Blob|Stream|string|ArrayBuffer} data file to be uploaded
     * @param {FileAttributes & SpecificFileAttributesForKonnector} params Additional parameters
     * @param  {object}  params.options     Options to pass to doUpload method (additional headers)
     * @throws {Error} - explaining reason why creation failed
     */

  }, {
    key: "createFile",
    value: function () {
      var _createFile = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee14(data) {
        var _ref5,
            nameOption,
            _ref5$dirId,
            dirId,
            _ref5$executable,
            executable,
            _ref5$encrypted,
            encrypted,
            metadata,
            _ref5$sourceAccount,
            sourceAccount,
            _ref5$sourceAccountId,
            sourceAccountIdentifier,
            options,
            name,
            metadataId,
            meta,
            size,
            path,
            _args14 = arguments;

        return _regenerator.default.wrap(function _callee14$(_context14) {
          while (1) {
            switch (_context14.prev = _context14.next) {
              case 0:
                _ref5 = _args14.length > 1 && _args14[1] !== undefined ? _args14[1] : {};
                nameOption = _ref5.name, _ref5$dirId = _ref5.dirId, dirId = _ref5$dirId === void 0 ? '' : _ref5$dirId, _ref5$executable = _ref5.executable, executable = _ref5$executable === void 0 ? false : _ref5$executable, _ref5$encrypted = _ref5.encrypted, encrypted = _ref5$encrypted === void 0 ? false : _ref5$encrypted, metadata = _ref5.metadata, _ref5$sourceAccount = _ref5.sourceAccount, sourceAccount = _ref5$sourceAccount === void 0 ? '' : _ref5$sourceAccount, _ref5$sourceAccountId = _ref5.sourceAccountIdentifier, sourceAccountIdentifier = _ref5$sourceAccountId === void 0 ? '' : _ref5$sourceAccountId, options = (0, _objectWithoutProperties2.default)(_ref5, ["name", "dirId", "executable", "encrypted", "metadata", "sourceAccount", "sourceAccountIdentifier"]);
                name = nameOption; // handle case where data is a file and contains the name

                if (!name && typeof data.name === 'string') {
                  name = data.name;
                }

                name = sanitizeAndValidateFileName(name);
                metadataId = '';

                if (!metadata) {
                  _context14.next = 11;
                  break;
                }

                _context14.next = 9;
                return this.createFileMetadata(metadata);

              case 9:
                meta = _context14.sent;
                metadataId = meta.data.id;

              case 11:
                size = '';

                if (options.contentLength) {
                  size = String(options.contentLength);
                }

                path = (0, _utils.uri)(_templateObject10(), dirId, name, executable, encrypted, metadataId, size, sourceAccount, sourceAccountIdentifier);
                return _context14.abrupt("return", this.doUpload(data, path, options));

              case 15:
              case "end":
                return _context14.stop();
            }
          }
        }, _callee14, this);
      }));

      function createFile(_x22) {
        return _createFile.apply(this, arguments);
      }

      return createFile;
    }()
    /**
     * updateFile - Updates a file's data
     *
     * @param {File|Blob|Stream|string|ArrayBuffer} data file to be uploaded
     * @param {FileAttributes} params       Additional parameters
     * @param  {object}  params.options     Options to pass to doUpload method (additional headers)
     * @returns {object}                    Updated document
     * @throws {Error} - explaining reason why update failed
     */

  }, {
    key: "updateFile",
    value: function () {
      var _updateFile = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee15(data) {
        var _ref6,
            _ref6$executable,
            executable,
            _ref6$encrypted,
            encrypted,
            fileId,
            _ref6$name,
            name,
            metadata,
            options,
            fileName,
            sanitizedName,
            metadataId,
            path,
            meta,
            size,
            _args15 = arguments;

        return _regenerator.default.wrap(function _callee15$(_context15) {
          while (1) {
            switch (_context15.prev = _context15.next) {
              case 0:
                _ref6 = _args15.length > 1 && _args15[1] !== undefined ? _args15[1] : {};
                _ref6$executable = _ref6.executable, executable = _ref6$executable === void 0 ? false : _ref6$executable, _ref6$encrypted = _ref6.encrypted, encrypted = _ref6$encrypted === void 0 ? false : _ref6$encrypted, fileId = _ref6.fileId, _ref6$name = _ref6.name, name = _ref6$name === void 0 ? '' : _ref6$name, metadata = _ref6.metadata, options = (0, _objectWithoutProperties2.default)(_ref6, ["executable", "encrypted", "fileId", "name", "metadata"]);

                if (!(!fileId || typeof fileId !== 'string')) {
                  _context15.next = 4;
                  break;
                }

                throw new Error('missing fileId argument');

              case 4:
                // name might be set in a File object
                fileName = name || data.name;

                if (!(!fileName || typeof fileName !== 'string')) {
                  _context15.next = 7;
                  break;
                }

                throw new Error('missing name in data argument');

              case 7:
                sanitizedName = sanitizeAndValidateFileName(fileName);
                /**
                 * We already use the body to send the content of the file. So we have 2 choices :
                 * Use an object in a query string to send the metadata
                 * create a new header http
                 * In both case, we have a size limitation depending of the browser.
                 *
                 * So we had this current workaround where we create the metadata before
                 * (no size limit since we can use the body for that) and after we use the ID.
                 */

                path = (0, _utils.uri)(_templateObject11(), fileId, sanitizedName, executable, encrypted);

                if (!metadata) {
                  _context15.next = 15;
                  break;
                }

                _context15.next = 12;
                return this.createFileMetadata(metadata);

              case 12:
                meta = _context15.sent;
                metadataId = meta.data.id;
                path = path + "&MetadataID=".concat(metadataId);

              case 15:
                size = '';

                if (options.contentLength) {
                  size = String(options.contentLength);
                  path = path + "&Size=".concat(size);
                }

                return _context15.abrupt("return", this.doUpload(data, path, options, 'PUT'));

              case 18:
              case "end":
                return _context15.stop();
            }
          }
        }, _callee15, this);
      }));

      function updateFile(_x23) {
        return _updateFile.apply(this, arguments);
      }

      return updateFile;
    }()
  }, {
    key: "getDownloadLinkById",
    value: function getDownloadLinkById(id, filename) {
      return this.stackClient.fetchJSON('POST', (0, _utils.uri)(_templateObject12(), id, encodeURIComponent(filename))).then(this.extractResponseLinkRelated);
    }
  }, {
    key: "getDownloadLinkByRevision",
    value: function getDownloadLinkByRevision(versionId, filename) {
      return this.stackClient.fetchJSON('POST', (0, _utils.uri)(_templateObject13(), versionId, encodeURIComponent(filename))).then(this.extractResponseLinkRelated);
    }
  }, {
    key: "getDownloadLinkByPath",
    value: function getDownloadLinkByPath(path) {
      return this.stackClient.fetchJSON('POST', (0, _utils.uri)(_templateObject14(), path)).then(this.extractResponseLinkRelated);
    }
  }, {
    key: "download",

    /**
     * Download a file or a specific version of the file
     *
     * @param {object} file io.cozy.files object
     * @param {string} versionId Id of the io.cozy.files.version
     * @param {string} filename The name you want for the downloaded file
     *                            (by default the same as the file)
     */
    value: function () {
      var _download = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee16(file) {
        var versionId,
            filename,
            href,
            filenameToUse,
            _args16 = arguments;
        return _regenerator.default.wrap(function _callee16$(_context16) {
          while (1) {
            switch (_context16.prev = _context16.next) {
              case 0:
                versionId = _args16.length > 1 && _args16[1] !== undefined ? _args16[1] : null;
                filename = _args16.length > 2 && _args16[2] !== undefined ? _args16[2] : undefined;
                filenameToUse = filename ? filename : file.name;
                /**
                 * Passing a filename to forceFileDownload is not enough
                 * for a few browsers since the stack's response header will
                 * not contain that name. Passing the filename to
                 * getDownloadLinkBy{Id,Revision} will ask the stack to
                 * return this filename in its content-disposition
                 * header response
                 */

                if (versionId) {
                  _context16.next = 9;
                  break;
                }

                _context16.next = 6;
                return this.getDownloadLinkById(file._id, filenameToUse);

              case 6:
                href = _context16.sent;
                _context16.next = 12;
                break;

              case 9:
                _context16.next = 11;
                return this.getDownloadLinkByRevision(versionId, filenameToUse);

              case 11:
                href = _context16.sent;

              case 12:
                this.forceFileDownload("".concat(href, "?Dl=1"), filenameToUse);

              case 13:
              case "end":
                return _context16.stop();
            }
          }
        }, _callee16, this);
      }));

      function download(_x24) {
        return _download.apply(this, arguments);
      }

      return download;
    }()
  }, {
    key: "fetchFileContent",
    value: function () {
      var _fetchFileContent = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee17(id) {
        return _regenerator.default.wrap(function _callee17$(_context17) {
          while (1) {
            switch (_context17.prev = _context17.next) {
              case 0:
                _logger.default.warn('FileCollection.fetchFileContent() is deprecated. Use FileCollection.fetchFileContentById() instead');

                return _context17.abrupt("return", this.fetchFileContentById(id));

              case 2:
              case "end":
                return _context17.stop();
            }
          }
        }, _callee17, this);
      }));

      function fetchFileContent(_x25) {
        return _fetchFileContent.apply(this, arguments);
      }

      return fetchFileContent;
    }()
    /**
     * Fetch the binary of a file or a specific version of a file
     * Useful for instance when you can't download the file directly
     * (via a content-disposition attachement header) and need to store
     * it before doing an operation.
     *
     * @param {string} id Id of the io.cozy.files or io.cozy.files.version
     *
     */

  }, {
    key: "fetchFileContentById",
    value: function () {
      var _fetchFileContentById = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee18(id) {
        return _regenerator.default.wrap(function _callee18$(_context18) {
          while (1) {
            switch (_context18.prev = _context18.next) {
              case 0:
                return _context18.abrupt("return", this.stackClient.fetch('GET', "/files/download/".concat(id)));

              case 1:
              case "end":
                return _context18.stop();
            }
          }
        }, _callee18, this);
      }));

      function fetchFileContentById(_x26) {
        return _fetchFileContentById.apply(this, arguments);
      }

      return fetchFileContentById;
    }()
    /**
     * Get a beautified size for a given file
     * 1024B => 1KB
     * 102404500404B => 95.37 GB
     *
     * @param {object} file io.cozy.files object
     * @param {number} decimal number of decimal
     */

  }, {
    key: "getBeautifulSize",
    value: function getBeautifulSize(file, decimal) {
      return (0, _utils.formatBytes)(parseInt(file.size), decimal);
    }
  }, {
    key: "downloadArchive",
    value: function () {
      var _downloadArchive = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee19(fileIds) {
        var notSecureFilename,
            filename,
            href,
            fullpath,
            _args19 = arguments;
        return _regenerator.default.wrap(function _callee19$(_context19) {
          while (1) {
            switch (_context19.prev = _context19.next) {
              case 0:
                notSecureFilename = _args19.length > 1 && _args19[1] !== undefined ? _args19[1] : 'files';
                filename = (0, _utils.slugify)(notSecureFilename);
                _context19.next = 4;
                return this.getArchiveLinkByIds(fileIds, filename);

              case 4:
                href = _context19.sent;
                fullpath = this.stackClient.fullpath(href);
                this.forceFileDownload(fullpath, filename + '.zip');

              case 7:
              case "end":
                return _context19.stop();
            }
          }
        }, _callee19, this);
      }));

      function downloadArchive(_x27) {
        return _downloadArchive.apply(this, arguments);
      }

      return downloadArchive;
    }()
  }, {
    key: "getArchiveLinkByIds",
    value: function () {
      var _getArchiveLinkByIds = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee20(ids) {
        var name,
            resp,
            _args20 = arguments;
        return _regenerator.default.wrap(function _callee20$(_context20) {
          while (1) {
            switch (_context20.prev = _context20.next) {
              case 0:
                name = _args20.length > 1 && _args20[1] !== undefined ? _args20[1] : 'files';
                _context20.next = 3;
                return this.stackClient.fetchJSON('POST', '/files/archive', {
                  data: {
                    type: 'io.cozy.archives',
                    attributes: {
                      name: name,
                      ids: ids
                    }
                  }
                });

              case 3:
                resp = _context20.sent;
                return _context20.abrupt("return", resp.links.related);

              case 5:
              case "end":
                return _context20.stop();
            }
          }
        }, _callee20, this);
      }));

      function getArchiveLinkByIds(_x28) {
        return _getArchiveLinkByIds.apply(this, arguments);
      }

      return getArchiveLinkByIds;
    }()
    /**
     * Checks if the file belongs to the parent's hierarchy.
     *
     * @param  {string|object}  child    The file which can either be an id or an object
     * @param  {string|object}  parent   The parent target which can either be an id or an object
     * @returns {boolean}                 Whether the file is a parent's child
     */

  }, {
    key: "isChildOf",
    value: function () {
      var _isChildOf = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee21(child, parent) {
        var _this2 = this;

        var _ref7, childID, childDirID, childPath, _ref8, parentID, childDoc, currPath, targetsPath, newPath;

        return _regenerator.default.wrap(function _callee21$(_context21) {
          while (1) {
            switch (_context21.prev = _context21.next) {
              case 0:
                _ref7 = typeof child === 'object' ? child : {
                  _id: child
                }, childID = _ref7._id, childDirID = _ref7.dirID, childPath = _ref7.path;
                _ref8 = typeof parent === 'object' ? parent : {
                  _id: parent
                }, parentID = _ref8._id;

                if (!(childID === parentID || childDirID === parentID)) {
                  _context21.next = 4;
                  break;
                }

                return _context21.abrupt("return", true);

              case 4:
                if (childPath) {
                  _context21.next = 10;
                  break;
                }

                _context21.next = 7;
                return this.statById(childID);

              case 7:
                childDoc = _context21.sent;
                childPath = childDoc.data.path;
                childDirID = childDoc.data.dirID;

              case 10:
                // Build hierarchy paths
                currPath = childPath;
                targetsPath = [childPath];

                while (currPath != '') {
                  newPath = dirName(currPath);

                  if (newPath != '') {
                    targetsPath.push(newPath);
                  }

                  currPath = newPath;
                }

                targetsPath.reverse(); // Look for all hierarchy in parallel and return true as soon as a dir is the searched parent

                return _context21.abrupt("return", raceWithCondition(targetsPath.map(function (path) {
                  return _this2.statByPath(path);
                }), function (stat) {
                  return stat.data._id == parentID;
                }));

              case 15:
              case "end":
                return _context21.stop();
            }
          }
        }, _callee21, this);
      }));

      function isChildOf(_x29, _x30) {
        return _isChildOf.apply(this, arguments);
      }

      return isChildOf;
    }()
    /**
     * statById - Fetches the metadata about a document. For folders, the results include the list of child files and folders.
     *
     * @param {string}      id                      ID of the document
     * @param {object|null} options                 Pagination options
     * @param {number|null} [options.page[limit]]   For pagination, the number of results to return.
     * @param {number|null} [options.page[skip]]    For skip-based pagination, the number of referenced files to skip.
     * @param {CouchDBViewCursor|null} [options.page[cursor]]  For cursor-based pagination, the index cursor.
     *
     * @returns {object} A promise resolving to an object containing "data" (the document metadata), "included" (the child documents) and "links" (pagination informations)
     */

  }, {
    key: "statById",
    value: function () {
      var _statById = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee22(id) {
        var options,
            params,
            path,
            url,
            resp,
            _args22 = arguments;
        return _regenerator.default.wrap(function _callee22$(_context22) {
          while (1) {
            switch (_context22.prev = _context22.next) {
              case 0:
                options = _args22.length > 1 && _args22[1] !== undefined ? _args22[1] : {};
                params = (0, _pick.default)(options, ['page[limit]', 'page[skip]', 'page[cursor]']);
                path = (0, _utils.uri)(_templateObject15(), id);
                url = querystring.buildURL(path, params);
                _context22.next = 6;
                return this.stackClient.fetchJSON('GET', url);

              case 6:
                resp = _context22.sent;
                return _context22.abrupt("return", {
                  data: normalizeFile(resp.data),
                  included: resp.included && resp.included.map(function (f) {
                    return normalizeFile(f);
                  }),
                  links: resp.links
                });

              case 8:
              case "end":
                return _context22.stop();
            }
          }
        }, _callee22, this);
      }));

      function statById(_x31) {
        return _statById.apply(this, arguments);
      }

      return statById;
    }()
  }, {
    key: "statByPath",
    value: function () {
      var _statByPath = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee23(path) {
        var resp;
        return _regenerator.default.wrap(function _callee23$(_context23) {
          while (1) {
            switch (_context23.prev = _context23.next) {
              case 0:
                _context23.next = 2;
                return this.stackClient.fetchJSON('GET', (0, _utils.uri)(_templateObject16(), path));

              case 2:
                resp = _context23.sent;
                return _context23.abrupt("return", {
                  data: normalizeFile(resp.data),
                  included: resp.included && resp.included.map(function (f) {
                    return normalizeFile(f);
                  })
                });

              case 4:
              case "end":
                return _context23.stop();
            }
          }
        }, _callee23, this);
      }));

      function statByPath(_x32) {
        return _statByPath.apply(this, arguments);
      }

      return statByPath;
    }()
    /**
     * Create directory
     *
     * @private
     * @param  {DirectoryAttributes} attributes - Attributes of the directory
     * @returns {Promise}
     * @throws {Error} - explaining reason why creation failed
     */

  }, {
    key: "createDirectory",
    value: function () {
      var _createDirectory = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee24() {
        var attributes,
            name,
            dirId,
            lastModifiedDate,
            metadata,
            metadataId,
            meta,
            safeName,
            lastModified,
            resp,
            _args24 = arguments;
        return _regenerator.default.wrap(function _callee24$(_context24) {
          while (1) {
            switch (_context24.prev = _context24.next) {
              case 0:
                attributes = _args24.length > 0 && _args24[0] !== undefined ? _args24[0] : {};
                name = attributes.name, dirId = attributes.dirId, lastModifiedDate = attributes.lastModifiedDate, metadata = attributes.metadata;
                metadataId = '';

                if (!metadata) {
                  _context24.next = 8;
                  break;
                }

                _context24.next = 6;
                return this.createFileMetadata(metadata);

              case 6:
                meta = _context24.sent;
                metadataId = meta.data.id;

              case 8:
                safeName = sanitizeAndValidateFileName(name);
                lastModified = lastModifiedDate && (typeof lastModifiedDate === 'string' ? new Date(lastModifiedDate) : lastModifiedDate);
                _context24.next = 12;
                return this.stackClient.fetchJSON('POST', (0, _utils.uri)(_templateObject17(), dirId, safeName, metadataId), undefined, {
                  headers: {
                    Date: lastModified ? lastModified.toGMTString() : ''
                  }
                });

              case 12:
                resp = _context24.sent;
                return _context24.abrupt("return", {
                  data: normalizeFile(resp.data)
                });

              case 14:
              case "end":
                return _context24.stop();
            }
          }
        }, _callee24, this);
      }));

      function createDirectory() {
        return _createDirectory.apply(this, arguments);
      }

      return createDirectory;
    }()
  }, {
    key: "ensureDirectoryExists",
    value: function () {
      var _ensureDirectoryExists = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee25(path) {
        var resp;
        return _regenerator.default.wrap(function _callee25$(_context25) {
          while (1) {
            switch (_context25.prev = _context25.next) {
              case 0:
                if (this.specialDirectories[path]) {
                  _context25.next = 5;
                  break;
                }

                _context25.next = 3;
                return this.createDirectoryByPath(path);

              case 3:
                resp = _context25.sent;
                this.specialDirectories[path] = resp.data._id;

              case 5:
                return _context25.abrupt("return", this.specialDirectories[path]);

              case 6:
              case "end":
                return _context25.stop();
            }
          }
        }, _callee25, this);
      }));

      function ensureDirectoryExists(_x33) {
        return _ensureDirectoryExists.apply(this, arguments);
      }

      return ensureDirectoryExists;
    }()
    /**
     * Get a directory or create it
     *
     * @private
     * @param  {string} name - Name of the directory we want to get or create
     * @param  {FileDocument} parentDirectory - Parent directory of the directory we want to get or create
     * @returns {Promise}
     * @throws {Error} - explaining reason why creation failed
     */

  }, {
    key: "getDirectoryOrCreate",
    value: function () {
      var _getDirectoryOrCreate = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee26(name, parentDirectory) {
        var safeName, path, stat, parsedError, errors;
        return _regenerator.default.wrap(function _callee26$(_context26) {
          while (1) {
            switch (_context26.prev = _context26.next) {
              case 0:
                if (!(parentDirectory && !parentDirectory.attributes)) {
                  _context26.next = 2;
                  break;
                }

                throw new Error('Malformed parent directory');

              case 2:
                safeName = sanitizeFileName(name);
                path = "".concat(parentDirectory._id === ROOT_DIR_ID ? '' : parentDirectory.attributes.path, "/").concat(safeName);
                _context26.prev = 4;
                _context26.next = 7;
                return this.statByPath(path || '/');

              case 7:
                stat = _context26.sent;
                return _context26.abrupt("return", stat);

              case 11:
                _context26.prev = 11;
                _context26.t0 = _context26["catch"](4);
                parsedError = JSON.parse(_context26.t0.message);
                errors = parsedError.errors;

                if (!(errors && errors.length && errors[0].status === '404')) {
                  _context26.next = 17;
                  break;
                }

                return _context26.abrupt("return", this.createDirectory({
                  name: safeName,
                  dirId: parentDirectory && parentDirectory._id
                }));

              case 17:
                throw errors;

              case 18:
              case "end":
                return _context26.stop();
            }
          }
        }, _callee26, this, [[4, 11]]);
      }));

      function getDirectoryOrCreate(_x34, _x35) {
        return _getDirectoryOrCreate.apply(this, arguments);
      }

      return getDirectoryOrCreate;
    }()
    /**
     * async createDirectoryByPath - Creates one or more folders until the given path exists
     *
     * @param  {string} path - Path of the created directory
     * @returns {object} The document corresponding to the last segment of the path
     */

  }, {
    key: "createDirectoryByPath",
    value: function () {
      var _createDirectoryByPath = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee27(path) {
        var parts, root, parentDir, _iterator, _step, part;

        return _regenerator.default.wrap(function _callee27$(_context27) {
          while (1) {
            switch (_context27.prev = _context27.next) {
              case 0:
                parts = path.split('/').filter(function (part) {
                  return part !== '';
                });
                _context27.next = 3;
                return this.statById(ROOT_DIR_ID);

              case 3:
                root = _context27.sent;

                if (parts.length) {
                  _context27.next = 6;
                  break;
                }

                return _context27.abrupt("return", root);

              case 6:
                parentDir = root;
                _iterator = _createForOfIteratorHelper(parts);
                _context27.prev = 8;

                _iterator.s();

              case 10:
                if ((_step = _iterator.n()).done) {
                  _context27.next = 17;
                  break;
                }

                part = _step.value;
                _context27.next = 14;
                return this.getDirectoryOrCreate(part, parentDir.data);

              case 14:
                parentDir = _context27.sent;

              case 15:
                _context27.next = 10;
                break;

              case 17:
                _context27.next = 22;
                break;

              case 19:
                _context27.prev = 19;
                _context27.t0 = _context27["catch"](8);

                _iterator.e(_context27.t0);

              case 22:
                _context27.prev = 22;

                _iterator.f();

                return _context27.finish(22);

              case 25:
                return _context27.abrupt("return", parentDir);

              case 26:
              case "end":
                return _context27.stop();
            }
          }
        }, _callee27, this, [[8, 19, 22, 25]]);
      }));

      function createDirectoryByPath(_x36) {
        return _createDirectoryByPath.apply(this, arguments);
      }

      return createDirectoryByPath;
    }()
    /**
     *
     * async updateAttributes - Updates a file / folder's attributes except
     * the metadata attribute. If you want to update its metadata attribute,
     * then use `updateFileMetadataAttribute` since `metadata` is a specific
     * doctype.
     *
     * For instance, if you want to update the name of a file, you can pass
     * attributes = { name: 'newName'}
     *
     * You can see the attributes for both Folder and File (as they share the
     * same doctype they have a few in common) here :
     * https://docs.cozy.io/en/cozy-doctypes/docs/io.cozy.files/#iocozyfiles
     *
     * @private You shoud use update() directly.
     * @param  {string} id         File id
     * @param  {object} attributes New file attributes
     * @returns {object}            Updated document
     * @throws {Error} - explaining reason why update failed
     */

  }, {
    key: "updateAttributes",
    value: function () {
      var _updateAttributes = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee28(id, attributes) {
        var sanitizedAttributes, resp;
        return _regenerator.default.wrap(function _callee28$(_context28) {
          while (1) {
            switch (_context28.prev = _context28.next) {
              case 0:
                sanitizedAttributes = _objectSpread({}, attributes);

                if (attributes.name) {
                  sanitizedAttributes.name = sanitizeAndValidateFileName(attributes.name);
                }

                _context28.next = 4;
                return this.stackClient.fetchJSON('PATCH', (0, _utils.uri)(_templateObject18(), id), {
                  data: {
                    type: 'io.cozy.files',
                    id: id,
                    attributes: sanitizedAttributes
                  }
                });

              case 4:
                resp = _context28.sent;
                return _context28.abrupt("return", {
                  data: normalizeFile(resp.data)
                });

              case 6:
              case "end":
                return _context28.stop();
            }
          }
        }, _callee28, this);
      }));

      function updateAttributes(_x37, _x38) {
        return _updateAttributes.apply(this, arguments);
      }

      return updateAttributes;
    }()
  }, {
    key: "updateFileMetadata",
    value: function () {
      var _updateFileMetadata = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee29(id, attributes) {
        return _regenerator.default.wrap(function _callee29$(_context29) {
          while (1) {
            switch (_context29.prev = _context29.next) {
              case 0:
                _logger.default.warn('CozyClient FileCollection updateFileMetadata method is deprecated. Use updateAttributes instead');

                return _context29.abrupt("return", this.updateAttributes(id, attributes));

              case 2:
              case "end":
                return _context29.stop();
            }
          }
        }, _callee29, this);
      }));

      function updateFileMetadata(_x39, _x40) {
        return _updateFileMetadata.apply(this, arguments);
      }

      return updateFileMetadata;
    }()
    /**
     * Send a metadata object that can be associated to a file uploaded after that,
     * via the MetadataID query parameter.
     * See https://github.com/cozy/cozy-stack/blob/master/docs/files.md#post-filesuploadmetadata
     *
     * @param {object} attributes The file's metadata
     * @returns {Promise<object>}          The Metadata object
     */

  }, {
    key: "createFileMetadata",
    value: function () {
      var _createFileMetadata = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee30(attributes) {
        var resp;
        return _regenerator.default.wrap(function _callee30$(_context30) {
          while (1) {
            switch (_context30.prev = _context30.next) {
              case 0:
                _context30.next = 2;
                return this.stackClient.fetchJSON('POST', (0, _utils.uri)(_templateObject19()), {
                  data: {
                    type: 'io.cozy.files.metadata',
                    attributes: attributes
                  }
                });

              case 2:
                resp = _context30.sent;
                return _context30.abrupt("return", {
                  data: resp.data
                });

              case 4:
              case "end":
                return _context30.stop();
            }
          }
        }, _callee30, this);
      }));

      function createFileMetadata(_x41) {
        return _createFileMetadata.apply(this, arguments);
      }

      return createFileMetadata;
    }()
    /**
     *
     * Updates the metadata attribute of a io.cozy.files
     * Creates a new version of the file without having
     * to upload again the file's content
     *
     * To see available content of the metadata attribute
     * see : https://docs.cozy.io/en/cozy-doctypes/docs/io.cozy.files_metadata/
     *
     * @param {string} id File id
     * @param {object} metadata io.cozy.files.metadata attributes
     * @returns {Promise<object>} io.cozy.files updated
     */

  }, {
    key: "updateMetadataAttribute",
    value: function () {
      var _updateMetadataAttribute = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee31(id, metadata) {
        var resp;
        return _regenerator.default.wrap(function _callee31$(_context31) {
          while (1) {
            switch (_context31.prev = _context31.next) {
              case 0:
                _context31.next = 2;
                return this.stackClient.fetchJSON('POST', (0, _utils.uri)(_templateObject20(), id), {
                  data: {
                    type: 'io.cozy.files.metadata',
                    attributes: metadata
                  }
                });

              case 2:
                resp = _context31.sent;
                return _context31.abrupt("return", {
                  data: resp.data
                });

              case 4:
              case "end":
                return _context31.stop();
            }
          }
        }, _callee31, this);
      }));

      function updateMetadataAttribute(_x42, _x43) {
        return _updateMetadataAttribute.apply(this, arguments);
      }

      return updateMetadataAttribute;
    }()
    /**
     * Get the file mime-type based on its name
     *
     * @param {string} name - The file name
     * @returns {string} the inferred file mime-type
     */

  }, {
    key: "getFileTypeFromName",
    value: function getFileTypeFromName(name) {
      return _lite.default.getType(name) || CONTENT_TYPE_OCTET_STREAM;
    }
    /**
     *
     * This method should not be called directly to upload a file.
     * You should use `createFile`
     *
     * @param {File|Blob|Stream|string|ArrayBuffer} dataArg file to be uploaded
     * @param {string} path Uri to call the stack from. Something like
     * `/files/${dirId}?Name=${name}&Type=file&Executable=${executable}&MetadataID=${metadataId}`
     * @param {object} options Additional headers
     * @param {string} method POST / PUT / PATCH
     */

  }, {
    key: "doUpload",
    value: function () {
      var _doUpload = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee32(dataArg, path, options) {
        var method,
            correctPath,
            data,
            isBuffer,
            isFile,
            isBlob,
            isStream,
            isString,
            _ref9,
            contentType,
            contentLength,
            checksum,
            lastModifiedDate,
            ifMatch,
            sPath,
            params,
            name,
            headers,
            date,
            resp,
            _args32 = arguments;

        return _regenerator.default.wrap(function _callee32$(_context32) {
          while (1) {
            switch (_context32.prev = _context32.next) {
              case 0:
                method = _args32.length > 3 && _args32[3] !== undefined ? _args32[3] : 'POST';
                correctPath = path;
                data = dataArg;

                if (data) {
                  _context32.next = 5;
                  break;
                }

                throw new Error('missing data argument');

              case 5:
                // transform any ArrayBufferView to ArrayBuffer
                if (data.buffer && data.buffer instanceof ArrayBuffer) {
                  data = data.buffer;
                }

                isBuffer = typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer;
                isFile = typeof File !== 'undefined' && data instanceof File;
                isBlob = typeof Blob !== 'undefined' && data instanceof Blob;
                isStream = data.readable === true && typeof data.pipe === 'function';
                isString = typeof data === 'string';

                if (!(!isBuffer && !isFile && !isBlob && !isStream && !isString)) {
                  _context32.next = 13;
                  break;
                }

                throw new Error('invalid data type');

              case 13:
                _ref9 = options || {}, contentType = _ref9.contentType, contentLength = _ref9.contentLength, checksum = _ref9.checksum, lastModifiedDate = _ref9.lastModifiedDate, ifMatch = _ref9.ifMatch;

                if (!contentType) {
                  if (typeof data === 'string') {
                    contentType = 'text/plain';
                  } else {
                    if (data.type) {
                      // The type is specified in the file object
                      contentType = data.type;
                    } else {
                      // Extract the name from the correctPath and infer the type
                      sPath = correctPath.split('?');
                      params = sPath.length > 1 ? sPath[1] : '';
                      name = new URLSearchParams(params).get('Name');
                      contentType = this.getFileTypeFromName(name.toLowerCase());
                    }
                  }
                }

                lastModifiedDate = lastModifiedDate || data.lastModified;

                if (lastModifiedDate) {
                  lastModifiedDate = new Date(lastModifiedDate);
                }

                headers = {
                  'Content-Type': contentType
                };
                if (contentLength) headers['Content-Length'] = String(contentLength);
                if (checksum) headers['Content-MD5'] = checksum;

                if (lastModifiedDate) {
                  date = lastModifiedDate.toISOString();
                  correctPath = "".concat(correctPath, "&UpdatedAt=").concat(date, "&CreatedAt=").concat(date);
                }

                if (ifMatch) headers['If-Match'] = ifMatch;
                _context32.next = 24;
                return this.stackClient.fetchJSON(method, correctPath, data, {
                  headers: headers,
                  onUploadProgress: options.onUploadProgress
                });

              case 24:
                resp = _context32.sent;
                return _context32.abrupt("return", {
                  data: normalizeFile(resp.data)
                });

              case 26:
              case "end":
                return _context32.stop();
            }
          }
        }, _callee32, this);
      }));

      function doUpload(_x44, _x45, _x46) {
        return _doUpload.apply(this, arguments);
      }

      return doUpload;
    }()
    /**
     * async findNotSynchronizedDirectories - Returns the list of directories not synchronized on the given OAuth client (mainly Cozy Desktop clients) — see https://docs.cozy.io/en/cozy-stack/not-synchronized-vfs/#get-datatypedoc-idrelationshipsnot_synchronizing
     *
     * @param  {OAuthClient}  oauthClient           A JSON representing an OAuth client, with at least a `_type` and `_id` field.
     * @param  {object|null}  options               Pagination options
     * @param  {number|null}  options.skip          For skip-based pagination, the number of referenced files to skip.
     * @param  {number|null}  options.limit         For pagination, the number of results to return.
     * @param  {CouchDBViewCursor|null}  options.cursor        For cursor-based pagination, the index cursor.
     * @param  {boolean}      options.includeFiles  Include the whole file documents in the results list
     *
     * @returns {Array<object|IOCozyFolder>}    The JSON API conformant response.
     */

  }, {
    key: "findNotSynchronizedDirectories",
    value: function () {
      var _findNotSynchronizedDirectories = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee33(oauthClient) {
        var _ref10,
            _ref10$skip,
            skip,
            limit,
            cursor,
            _ref10$includeFiles,
            includeFiles,
            params,
            path,
            url,
            resp,
            _args33 = arguments;

        return _regenerator.default.wrap(function _callee33$(_context33) {
          while (1) {
            switch (_context33.prev = _context33.next) {
              case 0:
                _ref10 = _args33.length > 1 && _args33[1] !== undefined ? _args33[1] : {}, _ref10$skip = _ref10.skip, skip = _ref10$skip === void 0 ? 0 : _ref10$skip, limit = _ref10.limit, cursor = _ref10.cursor, _ref10$includeFiles = _ref10.includeFiles, includeFiles = _ref10$includeFiles === void 0 ? false : _ref10$includeFiles;
                params = {
                  include: includeFiles ? 'files' : undefined,
                  'page[limit]': limit,
                  'page[cursor]': cursor,
                  sort: 'id'
                };
                path = (0, _utils.uri)(_templateObject21(), oauthClient._type, oauthClient._id);
                url = querystring.buildURL(path, params);
                _context33.next = 6;
                return this.stackClient.fetchJSON('GET', url);

              case 6:
                resp = _context33.sent;
                return _context33.abrupt("return", {
                  data: resp.data.map(function (f) {
                    return normalizeFile(f);
                  }),
                  included: resp.included ? resp.included.map(function (f) {
                    return normalizeFile(f);
                  }) : [],
                  next: (0, _has.default)(resp, 'links.next'),
                  meta: resp.meta,
                  skip: skip
                });

              case 8:
              case "end":
                return _context33.stop();
            }
          }
        }, _callee33, this);
      }));

      function findNotSynchronizedDirectories(_x47) {
        return _findNotSynchronizedDirectories.apply(this, arguments);
      }

      return findNotSynchronizedDirectories;
    }()
    /**
     *  Add directory synchronization exclusions to an OAuth client — see https://docs.cozy.io/en/cozy-stack/not-synchronized-vfs/#post-datatypedoc-idrelationshipsnot_synchronizing
     *
     *  For example, to exclude directory `/Photos` from `My Computer`'s desktop synchronization:
     * ```
     * addNotSynchronizedDirectories({_id: 123, _type: "io.cozy.oauth.clients", clientName: "Cozy Drive (My Computer)", clientKind: "desktop"}, [{_id: 456, _type: "io.cozy.files", name: "Photos", path: "/Photos"}])
     * ```
     *
     * @param  {OAuthClient} oauthClient  A JSON representing the OAuth client
     * @param  {Array}  directories       An array of JSON documents having a `_type` and `_id` fields and representing directories.
     *
     * Returns 204 No Content
     */

  }, {
    key: "addNotSynchronizedDirectories",
    value: function addNotSynchronizedDirectories(oauthClient, directories) {
      var refs = directories.map(function (d) {
        return {
          id: d._id,
          type: d._type
        };
      });
      return this.stackClient.fetchJSON('POST', (0, _utils.uri)(_templateObject22(), oauthClient._type, oauthClient._id), {
        data: refs
      });
    }
    /**
     *  Remove directory synchronization exclusions from an OAuth client — see https://docs.cozy.io/en/cozy-stack/not-synchronized-vfs/#delete-datatypedoc-idrelationshipsnot_synchronizing
     *
     *  For example, to re-include directory `/Photos` into `My Computer`'s desktop synchronization:
     * ```
     *  removeNotSynchronizedDirectories({_id: 123, _type: "io.cozy.oauth.clients", clientName: "Cozy Drive (My Computer)", clientKind: "desktop"}, [{_id: 456, _type: "io.cozy.files", name: "Photos", path: "/Photos"}])
     * ```
     *
     * @param  {OAuthClient} oauthClient  A JSON representing the OAuth client
     * @param  {Array}  directories       An array of JSON documents having a `_type` and `_id` field and representing directories.
     *
     * Returns 204 No Content
     */

  }, {
    key: "removeNotSynchronizedDirectories",
    value: function removeNotSynchronizedDirectories(oauthClient, directories) {
      var refs = directories.map(function (d) {
        return {
          id: d._id,
          type: d._type
        };
      });
      return this.stackClient.fetchJSON('DELETE', (0, _utils.uri)(_templateObject23(), oauthClient._type, oauthClient._id), {
        data: refs
      });
    }
    /**
     * Use cozy-stack's _changes API for io.cozy.files
     * Design docs are filtered by default, thus documents are retrieved in the
     * response (includeDocs is set to true in the parameters of _changes).
     * Deleted and trashed documents can be filtered on demand and files' paths
     * can be requested as well.
     *
     * Since deleted and trashed documents are skipped by cozy-stack rather than
     * CouchDB, when either option is set to true, the response can contain less
     * documents than the defined limit. Thus one should rely solely on the
     * `pending` result attribute to determine if more documents can be fetched or
     * not.
     *
     * You should use fetchChangesRaw to call CouchDB's _changes API.
     *
     * @typedef {object} CouchOptions
     * @property {string} since - Bookmark telling CouchDB from which point in time should changes be returned
     * @property {number} limit - The maximum number of returned documents for one call
     * @property {boolean} includeDocs - Whether or not complete documents should be returned
     *
     * @typedef {object} FetchChangesOptions
     * @property {Array<string>} fields - The list of fields that should be returned for each document
     * @property {boolean} includeFilePath - Whether to include the path of file changes (needs includeDocs to be true)
     * @property {boolean} skipDeleted - Whether to skip changes for deleted documents
     * @property {boolean} skipTrashed - Whether to skip changes for trashed documents (needs includeDocs to be true)
     *
     * @param  {CouchOptions} couchOptions - Couch options for changes
     * @param  {FetchChangesOptions} options - Further options on the returned documents. By default, it is set to
     *                                        { includeFilePath: false, skipDeleted: false, skipTrashed: false }
     *
     * @typedef {object} FetchChangesReturnValue
     * @property {string} newLastSeq
     * @property {boolean} pending
     * @property {Array<object>} documents
     * @returns {FetchChangesReturnValue}
     */

  }, {
    key: "fetchChanges",
    value: function () {
      var _fetchChanges = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee34() {
        var couchOptions,
            options,
            opts,
            params,
            path,
            url,
            _yield$this$stackClie,
            newLastSeq,
            pending,
            results,
            _args34 = arguments;

        return _regenerator.default.wrap(function _callee34$(_context34) {
          while (1) {
            switch (_context34.prev = _context34.next) {
              case 0:
                couchOptions = _args34.length > 0 && _args34[0] !== undefined ? _args34[0] : {};
                options = _args34.length > 1 && _args34[1] !== undefined ? _args34[1] : {};
                opts = {};

                if (typeof couchOptions !== 'object') {
                  opts.since = couchOptions;

                  _logger.default.warn("fetchChanges use couchOptions as Object not a string, since is deprecated, please use fetchChanges({since: \"".concat(couchOptions, "\"})."));
                } else if (Object.keys(couchOptions).length > 0) {
                  Object.assign(opts, couchOptions);
                }

                if (Object.keys(options).length > 0) {
                  Object.assign(opts, options);

                  if (options.skipTrashed || options.includeFilePath) {
                    opts.includeDocs = true;
                  }
                }

                params = _objectSpread(_objectSpread({}, (0, _omit.default)(opts, ['fields', 'includeDocs', 'includeFilePath', 'skipDeleted', 'skipTrashed'])), {}, {
                  fields: opts.fields ? opts.fields.join(',') : null,
                  include_docs: opts.includeDocs,
                  include_file_path: opts.includeFilePath,
                  skip_deleted: opts.skipDeleted,
                  skip_trashed: opts.skipTrashed
                });
                path = (0, _utils.uri)(_templateObject24());
                url = querystring.buildURL(path, params);
                _context34.next = 10;
                return this.stackClient.fetchJSON('GET', url);

              case 10:
                _yield$this$stackClie = _context34.sent;
                newLastSeq = _yield$this$stackClie.last_seq;
                pending = _yield$this$stackClie.pending;
                results = _yield$this$stackClie.results;
                return _context34.abrupt("return", {
                  newLastSeq: newLastSeq,
                  pending: pending,
                  results: results
                });

              case 15:
              case "end":
                return _context34.stop();
            }
          }
        }, _callee34, this);
      }));

      function fetchChanges() {
        return _fetchChanges.apply(this, arguments);
      }

      return fetchChanges;
    }()
  }]);
  return FileCollection;
}(_DocumentCollection2.default);

var _default = FileCollection;
exports.default = _default;

/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.chain = exports.default = void 0;

var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(41));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));

var _createClass2 = _interopRequireDefault(__webpack_require__(13));

var CozyLink = /*#__PURE__*/function () {
  function CozyLink(requestHandler) {
    (0, _classCallCheck2.default)(this, CozyLink);

    if (typeof requestHandler === 'function') {
      this.request = requestHandler;
    }
  }

  (0, _createClass2.default)(CozyLink, [{
    key: "request",
    value: function request(operation, result, forward) {
      throw new Error('request is not implemented');
    }
  }]);
  return CozyLink;
}();

exports.default = CozyLink;

var toLink = function toLink(handler) {
  return typeof handler === 'function' ? new CozyLink(handler) : handler;
};

var defaultLinkHandler = function defaultLinkHandler(operation, result) {
  if (result) return result;else if (operation.execute) return operation.execute();else throw new Error("No link could handle operation ".concat(JSON.stringify(operation)));
};

var chain = function chain(links) {
  return [].concat((0, _toConsumableArray2.default)(links), [defaultLinkHandler]).map(toLink).reduce(concat);
};

exports.chain = chain;

var concat = function concat(firstLink, nextLink) {
  return new CozyLink(function (operation, result, forward) {
    var nextForward = function nextForward(op, res) {
      return nextLink.request(op, res, forward);
    };

    return firstLink.request(operation, result, nextForward);
  });
};

/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.QueryIDGenerator = exports.getQueryFromSlice = exports.receiveQueryError = exports.receiveQueryResult = exports.loadQuery = exports.initQuery = exports.default = exports.updateData = exports.makeSorterFromDefinition = exports.mergeSelectorAndPartialIndex = exports.convert$gtNullSelectors = exports.sortAndLimitDocsIds = exports.isReceivingData = exports.isQueryAction = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));

var _createClass2 = _interopRequireDefault(__webpack_require__(13));

var _slicedToArray2 = _interopRequireDefault(__webpack_require__(32));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(9));

var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(41));

var _mapValues = _interopRequireDefault(__webpack_require__(109));

var _groupBy = _interopRequireDefault(__webpack_require__(292));

var _difference = _interopRequireDefault(__webpack_require__(219));

var _intersection = _interopRequireDefault(__webpack_require__(293));

var _concat = _interopRequireDefault(__webpack_require__(459));

var _isPlainObject = _interopRequireDefault(__webpack_require__(156));

var _uniq = _interopRequireDefault(__webpack_require__(84));

var _orderBy = _interopRequireDefault(__webpack_require__(617));

var _isString = _interopRequireDefault(__webpack_require__(158));

var _get = _interopRequireDefault(__webpack_require__(10));

var _sift = _interopRequireDefault(__webpack_require__(621));

var _cozyFlags = _interopRequireDefault(__webpack_require__(48));

var _documents = __webpack_require__(290);

var _mutations = __webpack_require__(184);

var _helpers = __webpack_require__(297);

var _dsl = __webpack_require__(20);

var _logger = _interopRequireDefault(__webpack_require__(27));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var INIT_QUERY = 'INIT_QUERY';
var LOAD_QUERY = 'LOAD_QUERY';
var RECEIVE_QUERY_RESULT = 'RECEIVE_QUERY_RESULT';
var RECEIVE_QUERY_ERROR = 'RECEIVE_QUERY_ERROR'; // Read if the devtools are open to store the execution time
// This is done at runtime to not read the value everytime
// we receive a result. So you have to refresh your page
// in order to get the stats

var executionStatsEnabled = (0, _cozyFlags.default)('debug');

var isQueryAction = function isQueryAction(action) {
  return [INIT_QUERY, LOAD_QUERY, RECEIVE_QUERY_RESULT, RECEIVE_QUERY_ERROR].indexOf(action.type) !== -1;
};

exports.isQueryAction = isQueryAction;

var isReceivingData = function isReceivingData(action) {
  return action.type === RECEIVE_QUERY_RESULT;
};
/** @type {import("../types").QueryState} */


exports.isReceivingData = isReceivingData;
var queryInitialState = {
  id: null,
  definition: null,
  fetchStatus: 'pending',
  isFetching: null,
  lastFetch: null,
  lastUpdate: null,
  lastErrorUpdate: null,
  lastError: null,
  hasMore: false,
  count: 0,
  fetchedPagesCount: 0,
  data: [],
  bookmark: null
};
/**
 * Return the docs ids accordingly to the given sort and fetched docs
 *
 * @param {import("../types").QueryState} queryState - Current state
 * @param {import("../types").DocumentsStateSlice} documents - Reference to the documents slice
 * @param {Array<string>} ids - The updated ids after query
 * @param {object} params - The additional params
 * @param {number} params.count - The count of retrieved docs
 * @param {number} params.fetchedPagesCount - The number of pages already fetched
 * @returns {Array<string>} The list of sorted ids
 */

var sortAndLimitDocsIds = function sortAndLimitDocsIds(queryState, documents, ids, _ref) {
  var count = _ref.count,
      fetchedPagesCount = _ref.fetchedPagesCount;
  var evaluatedIds = (0, _toConsumableArray2.default)(ids);

  if (queryState.definition.sort && documents) {
    var sorter = makeSorterFromDefinition(queryState.definition);
    var allDocs = documents[queryState.definition.doctype];
    var docs = allDocs ? evaluatedIds.map(function (_id) {
      return allDocs[_id];
    }).filter(Boolean) : [];
    evaluatedIds = sorter(docs).map(_helpers.properId);
  }

  var limit = queryState.definition.limit;

  if (limit) {
    var sliceCount;

    if (count < limit) {
      // When there are less results than the limit, this is either the first
      // or last paginated query.
      sliceCount = fetchedPagesCount > 1 ? limit * (fetchedPagesCount - 1) + count : count;
    } else {
      sliceCount = limit * fetchedPagesCount;
    }

    evaluatedIds = evaluatedIds.slice(0, sliceCount);
  }

  return evaluatedIds;
};
/**
 * Return the query docs ids, taken from the action response and the documents' slice
 *
 * @param {import("../types").QueryState} queryState - Current state
 * @param {object} response - The action response
 * @param {import("../types").DocumentsStateSlice} documents - Reference to the documents slice
 * @param {object} params - The additional params
 * @param {number} params.count - The count of retrieved docs
 * @param {number} params.fetchedPagesCount - The number of pages already fetched
 * @returns {Array<string>} The list of sorted ids
 */


exports.sortAndLimitDocsIds = sortAndLimitDocsIds;

var updateQueryDataFromResponse = function updateQueryDataFromResponse(queryState, response, documents, _ref2) {
  var count = _ref2.count,
      fetchedPagesCount = _ref2.fetchedPagesCount;
  var updatedIds = (0, _uniq.default)([].concat((0, _toConsumableArray2.default)(queryState.data), (0, _toConsumableArray2.default)(response.data.map(_helpers.properId))));
  return sortAndLimitDocsIds(queryState, documents, updatedIds, {
    count: count,
    fetchedPagesCount: fetchedPagesCount
  });
};
/**
 * Reducer for a query slice
 *
 * @param  {import("../types").QueryState} state - Current state
 * @param  {any} action - Redux action
 * @param  {import("../types").DocumentsStateSlice} documents - Reference to the next documents slice
 * @returns {import("../types").QueryState} - Next state
 */


var query = function query() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : queryInitialState;
  var action = arguments.length > 1 ? arguments[1] : undefined;
  var documents = arguments.length > 2 ? arguments[2] : undefined;

  switch (action.type) {
    case INIT_QUERY:
      if (state.lastUpdate && state.id === action.queryId && state.definition === action.queryDefinition) {
        return state;
      }

      return _objectSpread(_objectSpread({}, state), {}, {
        id: action.queryId,
        definition: action.queryDefinition,
        options: action.options,
        fetchStatus: state.lastUpdate ? state.fetchStatus : 'pending'
      });

    case LOAD_QUERY:
      if (state.fetchStatus === 'loading') {
        return state;
      }

      if (state.fetchStatus === 'loaded' && action.backgroundFetching) {
        return _objectSpread(_objectSpread({}, state), {}, {
          fetchStatus: 'loaded',
          isFetching: true
        });
      }

      return _objectSpread(_objectSpread({}, state), {}, {
        fetchStatus: 'loading'
      });

    case RECEIVE_QUERY_RESULT:
      {
        var response = action.response; // Data can be null when we get a 404 not found
        // see Collection.get()
        // but we still need to update the fetchStatus.

        if (!response.data) {
          return _objectSpread(_objectSpread({}, state), {}, {
            fetchStatus: 'loaded',
            isFetching: action.backgroundFetching ? false : null,
            lastFetch: Date.now(),
            lastUpdate: Date.now()
          });
        }
        /** @type {Partial<import("../types").QueryState>} */


        var common = _objectSpread({
          fetchStatus: 'loaded',
          isFetching: action.backgroundFetching ? false : null,
          lastFetch: Date.now(),
          lastUpdate: Date.now()
        }, executionStatsEnabled && {
          execution_stats: response.execution_stats
        });

        if (!Array.isArray(response.data)) {
          return _objectSpread(_objectSpread(_objectSpread({}, state), common), {}, {
            hasMore: false,
            count: 1,
            data: [(0, _helpers.properId)(response.data)]
          });
        }

        var count = response.meta && response.meta.count ? response.meta.count : response.data.length;

        if (action.backgroundFetching) {
          return _objectSpread(_objectSpread(_objectSpread({}, state), common), {}, {
            bookmark: response.bookmark || null,
            hasMore: response.next !== undefined ? response.next : state.hasMore,
            count: count,
            data: response.data.map(_helpers.properId)
          });
        }

        var fetchedPagesCount = state.fetchedPagesCount + 1;
        var data = updateQueryDataFromResponse(state, response, documents, {
          count: count,
          fetchedPagesCount: fetchedPagesCount
        });
        return _objectSpread(_objectSpread(_objectSpread({}, state), common), {}, {
          bookmark: response.bookmark || null,
          hasMore: response.next !== undefined ? response.next : state.hasMore,
          count: count,
          fetchedPagesCount: fetchedPagesCount,
          data: data
        });
      }

    case RECEIVE_QUERY_ERROR:
      return _objectSpread(_objectSpread({}, state), {}, {
        id: action.queryId,
        fetchStatus: 'failed',
        isFetching: action.backgroundFetching ? false : null,
        lastError: action.error,
        lastErrorUpdate: Date.now()
      });

    default:
      return state;
  }
};
/**
 * Normalize sift selector
 *
 * @returns {object}
 */


var convert$gtNullSelectors = function convert$gtNullSelectors(selector) {
  var result = {};

  for (var _i = 0, _Object$entries = Object.entries(selector); _i < _Object$entries.length; _i++) {
    var _Object$entries$_i = (0, _slicedToArray2.default)(_Object$entries[_i], 2),
        key = _Object$entries$_i[0],
        value = _Object$entries$_i[1];

    var convertedValue = (0, _isPlainObject.default)(value) ? convert$gtNullSelectors(value) : value;
    var convertedKey = key === '$gt' && convertedValue === null ? '$gtnull' : key;
    result[convertedKey] = convertedValue;
  }

  return result;
};
/**
 * Merges query selectors with query partial indexes
 *
 * @param {object} queryDefinition - A query definition
 * @returns {object} A query definition selector
 */


exports.convert$gtNullSelectors = convert$gtNullSelectors;

var mergeSelectorAndPartialIndex = function mergeSelectorAndPartialIndex(queryDefinition) {
  return _objectSpread(_objectSpread({}, (0, _get.default)(queryDefinition, 'selector')), (0, _get.default)(queryDefinition, 'partialFilter'));
};
/**
 * @param  {QueryDefinition} queryDefinition - A query definition
 * @returns {function(import("../types").CozyClientDocument): boolean}
 */


exports.mergeSelectorAndPartialIndex = mergeSelectorAndPartialIndex;

var getSelectorFilterFn = function getSelectorFilterFn(queryDefinition) {
  if (queryDefinition.selector || queryDefinition.partialFilter) {
    var selectors = mergeSelectorAndPartialIndex(queryDefinition); // sift does not work like couchdb when using { $gt: null } as a selector, so we use a custom operator

    _sift.default.use({
      $gtnull: function $gtnull(_selectorValue, actualValue) {
        return !!actualValue;
      }
    });

    return (0, _sift.default)(convert$gtNullSelectors(selectors));
  } else if (queryDefinition.id) {
    /** @type {object} */
    var siftQuery = {
      _id: queryDefinition.id
    };
    return (0, _sift.default)(siftQuery);
  } else if (queryDefinition.ids) {
    /** @type {object} */
    var _siftQuery = {
      _id: {
        $in: queryDefinition.ids
      }
    };
    return (0, _sift.default)(_siftQuery);
  } else {
    return null;
  }
};
/**
 *
 * Returns a predicate function that checks if a document should be
 * included in the result of the query.
 *
 * @param  {import("../types").QueryState} query - Definition of the query
 * @returns {function(import("../types").CozyClientDocument): boolean} Predicate function
 */


var getQueryDocumentsChecker = function getQueryDocumentsChecker(query) {
  var qdoctype = query.definition.doctype;
  var selectorFilterFn = getSelectorFilterFn(query.definition);
  return function (datum) {
    var ddoctype = datum._type;
    if (ddoctype !== qdoctype) return false;
    if (datum._deleted) return false;
    if (!selectorFilterFn) return true;
    return !!selectorFilterFn(datum);
  };
};

var makeCaseInsensitiveStringSorter = function makeCaseInsensitiveStringSorter(attrName) {
  return function (item) {
    var attrValue = (0, _get.default)(item, attrName);
    return (0, _isString.default)(attrValue) ? attrValue.toLowerCase() : attrValue;
  };
};
/**
 * Creates a sort function from a definition.
 *
 * Used to sort query results inside the store when creating a file or
 * receiving updates.
 *
 * @param {QueryDefinition} definition - A query definition
 * @returns {function(Array<import("../types").CozyClientDocument>): Array<import("../types").CozyClientDocument>}
 *
 * @private
 */


var makeSorterFromDefinition = function makeSorterFromDefinition(definition) {
  var sort = definition.sort;

  if (!sort) {
    return function (docs) {
      return docs;
    };
  } else if (!Array.isArray(definition.sort)) {
    _logger.default.warn('Correct update of queries with a sort that is not an array is not supported. Use an array as argument of QueryDefinition::sort');

    return function (docs) {
      return docs;
    };
  } else {
    var attributeOrders = sort.map(function (x) {
      return Object.entries(x)[0];
    });
    var attrs = attributeOrders.map(function (x) {
      return x[0];
    }).map(makeCaseInsensitiveStringSorter);
    var orders = attributeOrders.map(function (x) {
      return x[1];
    });
    return function (docs) {
      return (0, _orderBy.default)(docs, attrs, orders);
    };
  }
};
/**
 * Updates query state when new data comes in
 *
 * @param  {import("../types").QueryState} query - Current query state
 * @param  {Array<import("../types").CozyClientDocument>} newData - New documents (in most case from the server)
 * @param  {import("../types").DocumentsStateSlice} documents - A reference to the documents slice
 * @returns {import("../types").QueryState} - Updated query state
 */


exports.makeSorterFromDefinition = makeSorterFromDefinition;

var updateData = function updateData(query, newData, documents) {
  var belongsToQuery = getQueryDocumentsChecker(query);
  var res = (0, _mapValues.default)((0, _groupBy.default)(newData, belongsToQuery), function (docs) {
    return docs.map(_helpers.properId);
  });
  var _res$true = res.true,
      matchedIds = _res$true === void 0 ? [] : _res$true,
      _res$false = res.false,
      unmatchedIds = _res$false === void 0 ? [] : _res$false;
  var originalIds = query.data;
  var autoUpdate = query.options && query.options.autoUpdate;
  var shouldRemove = !autoUpdate || autoUpdate.remove !== false;
  var shouldAdd = !autoUpdate || autoUpdate.add !== false;
  var shouldUpdate = !autoUpdate || autoUpdate.update !== false;
  var toRemove = shouldRemove ? (0, _intersection.default)(originalIds, unmatchedIds) : [];
  var toAdd = shouldAdd ? (0, _difference.default)(matchedIds, originalIds) : [];
  var toUpdate = shouldUpdate ? (0, _intersection.default)(originalIds, matchedIds) : [];
  var changed = toRemove.length || toAdd.length || toUpdate.length; // concat doesn't check duplicates (contrarily to union), which is ok as
  // toAdd does not contain any id present in originalIds, by construction.
  // It is also faster than union.

  var updatedData = (0, _difference.default)((0, _concat.default)(originalIds, toAdd), toRemove);
  var fetchedPagesCount = query.fetchedPagesCount;
  var docsIds = sortAndLimitDocsIds(query, documents, updatedData, {
    count: updatedData.length,
    fetchedPagesCount: fetchedPagesCount
  });
  return _objectSpread(_objectSpread({}, query), {}, {
    data: docsIds,
    count: docsIds.length,
    fetchedPagesCount: fetchedPagesCount,
    lastUpdate: changed ? Date.now() : query.lastUpdate
  });
};
/**
 * Creates a function that returns an updated query state
 * from an action
 *
 * @param  {object} action - A redux action
 * @param  {import("../types").DocumentsStateSlice} documents - Reference to documents slice
 * @returns {function(import("../types").QueryState): import("../types").QueryState} - Updater query state
 */


exports.updateData = updateData;

var autoQueryUpdater = function autoQueryUpdater(action, documents) {
  return function (query) {
    var data = (0, _get.default)(action, 'response.data') || (0, _get.default)(action, 'definition.document');
    if (!data) return query;

    if (!Array.isArray(data)) {
      data = [data];
    }

    if (!data.length) {
      return query;
    }

    if (query.definition.doctype !== data[0]._type) {
      return query;
    }

    return updateData(query, data, documents);
  };
};
/**
 * Creates a function that returns an updated query state
 * from an action
 *
 * @param  {object} action - A redux action
 * @param  {import("../types").DocumentsStateSlice} documents - Reference to documents slice
 * @returns {function(import("../types").QueryState): import("../types").QueryState} - Updater query state
 */


var manualQueryUpdater = function manualQueryUpdater(action, documents) {
  return function (query) {
    var updateQueries = action.updateQueries;
    var response = action.response;
    var updater = updateQueries[query.id];

    if (!updater) {
      return query;
    }

    var doctype = query.definition.doctype;
    var oldData = query.data;
    var oldDocs = mapIdsToDocuments(documents, doctype, oldData);
    var newData = updater(oldDocs, response);
    var newDataIds = newData.map(_helpers.properId);
    return _objectSpread(_objectSpread({}, query), {}, {
      data: newDataIds,
      count: newDataIds.length,
      lastUpdate: Date.now()
    });
  };
};
/**
 * @param  {import("../types").QueriesStateSlice}  state - Redux slice containing all the query states indexed by name
 * @param  {object}  action - Income redux action
 * @param  {import("../types").DocumentsStateSlice}  documents - Reference to documents slice
 * @param  {boolean} haveDocumentsChanged - Has the document slice changed with current action
 * @returns {import("../types").QueriesStateSlice}
 */


var queries = function queries() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var action = arguments.length > 1 ? arguments[1] : undefined;
  var documents = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var haveDocumentsChanged = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;

  if (action.type == INIT_QUERY) {
    var newQueryState = query(state[action.queryId], action, documents); // Do not create new object unnecessarily

    if (newQueryState === state[action.queryId]) {
      return state;
    }

    return _objectSpread(_objectSpread({}, state), {}, (0, _defineProperty2.default)({}, action.queryId, newQueryState));
  }

  if (isQueryAction(action)) {
    var updater = autoQueryUpdater(action, documents);
    return (0, _mapValues.default)(state, function (queryState) {
      if (queryState.id == action.queryId) {
        return query(queryState, action, documents);
      } else if (haveDocumentsChanged) {
        return updater(queryState);
      } else {
        return queryState;
      }
    });
  }

  if ((0, _mutations.isReceivingMutationResult)(action)) {
    var _updater = action.updateQueries ? manualQueryUpdater(action, documents) : autoQueryUpdater(action, documents);

    return (0, _mapValues.default)(state, _updater);
  }

  return state;
};

var _default = queries;
/**
 * Create the query states in the store. Queries are indexed
 * in the store by queryId
 *
 * @param  {string} queryId  Name/id of the query
 * @param  {QueryDefinition} queryDefinition - Definition of the created query
 * @param  {import("../types").QueryOptions} [options] - Options for the created query
 * @returns {object} Redux action to dispatch
 */

exports.default = _default;

var initQuery = function initQuery(queryId, queryDefinition) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

  if (!queryDefinition.doctype) {
    throw new Error('Cannot init query with no doctype');
  }

  return {
    type: INIT_QUERY,
    queryId: queryId,
    queryDefinition: queryDefinition,
    options: options
  };
};
/**
 * Update the fetchStatus when the query is loading
 *
 * @param  {string} queryId - id of the query
 * @param  {import("../types").QueryOptions} [options] - Options for the created query
 * @returns {object} Redux action to dispatch
 */


exports.initQuery = initQuery;

var loadQuery = function loadQuery(queryId, options) {
  return _objectSpread({
    type: LOAD_QUERY,
    queryId: queryId
  }, options);
};
/**
 * Update the fetchStatus when the query is loading
 *
 * @param  {string} queryId - id of the query
 * @param {object} response - The action response
 * @param  {import("../types").QueryOptions} [options] - Options for the created query
 * @returns {object} Redux action to dispatch
 */


exports.loadQuery = loadQuery;

var receiveQueryResult = function receiveQueryResult(queryId, response) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  return _objectSpread({
    type: RECEIVE_QUERY_RESULT,
    queryId: queryId,
    response: response
  }, options);
};
/**
 * Update the fetchStatus when the query is loading
 *
 * @param  {string} queryId - id of the query
 * @param {object} error - The action error
 * @param  {import("../types").QueryOptions} [options] - Options for the created query
 * @returns {object} Redux action to dispatch
 */


exports.receiveQueryResult = receiveQueryResult;

var receiveQueryError = function receiveQueryError(queryId, error) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  return _objectSpread({
    type: RECEIVE_QUERY_ERROR,
    queryId: queryId,
    error: error
  }, options);
}; // selectors


exports.receiveQueryError = receiveQueryError;

var mapIdsToDocuments = function mapIdsToDocuments(documents, doctype, ids) {
  return ids.map(function (id) {
    return (0, _documents.getDocumentFromSlice)(documents, doctype, id);
  });
};

var getQueryFromSlice = function getQueryFromSlice(state, queryId, documents) {
  if (!state || !state[queryId]) {
    return _objectSpread(_objectSpread({}, queryInitialState), {}, {
      id: queryId,
      data: null
    });
  }

  var query = state[queryId];
  return documents ? _objectSpread(_objectSpread({}, query), {}, {
    data: mapIdsToDocuments(documents, query.definition.doctype, query.data)
  }) : query;
};

exports.getQueryFromSlice = getQueryFromSlice;

var QueryIDGenerator = /*#__PURE__*/function () {
  function QueryIDGenerator() {
    (0, _classCallCheck2.default)(this, QueryIDGenerator);
    this.idCounter = 1;
  }
  /**
   * Generates a random id for unamed queries
   */


  (0, _createClass2.default)(QueryIDGenerator, [{
    key: "generateRandomId",
    value: function generateRandomId() {
      var id = this.idCounter;
      this.idCounter++;
      return id.toString();
    }
    /**
     * Generates an id for queries
     * If the query is a getById only query,
     * we can generate a name for it.
     *
     * If not, let's generate a random id
     *
     * @param {QueryDefinition} queryDefinition The query definition
     * @returns {string}
     */

  }, {
    key: "generateId",
    value: function generateId(queryDefinition) {
      if (!(0, _dsl.isAGetByIdQuery)(queryDefinition)) {
        return this.generateRandomId();
      } else {
        var id = queryDefinition.id,
            doctype = queryDefinition.doctype;
        return "".concat(doctype, "/").concat(id);
      }
    }
  }]);
  return QueryIDGenerator;
}();

exports.QueryIDGenerator = QueryIDGenerator;
QueryIDGenerator.UNNAMED = 'unnamed';

/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.receiveMutationError = exports.receiveMutationResult = exports.initMutation = exports.isReceivingMutationResult = exports.isMutationAction = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(9));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var INIT_MUTATION = 'INIT_MUTATION';
var RECEIVE_MUTATION_RESULT = 'RECEIVE_MUTATION_RESULT';
var RECEIVE_MUTATION_ERROR = 'RECEIVE_MUTATION_ERROR';

var isMutationAction = function isMutationAction(action) {
  return [INIT_MUTATION, RECEIVE_MUTATION_RESULT, RECEIVE_MUTATION_ERROR].indexOf(action.type) !== -1;
};

exports.isMutationAction = isMutationAction;

var isReceivingMutationResult = function isReceivingMutationResult(action) {
  return action.type === RECEIVE_MUTATION_RESULT;
}; // actions


exports.isReceivingMutationResult = isReceivingMutationResult;

var initMutation = function initMutation(mutationId, definition) {
  return {
    type: INIT_MUTATION,
    mutationId: mutationId,
    definition: definition
  };
};

exports.initMutation = initMutation;

var receiveMutationResult = function receiveMutationResult(mutationId, response) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var definition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
  return _objectSpread(_objectSpread({
    type: RECEIVE_MUTATION_RESULT,
    mutationId: mutationId,
    response: response
  }, options), {}, {
    definition: definition
  });
};

exports.receiveMutationResult = receiveMutationResult;

var receiveMutationError = function receiveMutationError(mutationId, error) {
  var definition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  return {
    type: RECEIVE_MUTATION_ERROR,
    mutationId: mutationId,
    error: error,
    definition: definition
  };
};

exports.receiveMutationError = receiveMutationError;

/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getReferencedById = exports.getReferencedBy = exports.isReferencedById = exports.isReferencedBy = exports.create = exports.resolveClass = exports.attachRelationships = exports.responseToRelationship = exports.pickTypeAndId = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(9));

var _pick = _interopRequireDefault(__webpack_require__(157));

var _pickBy = _interopRequireDefault(__webpack_require__(277));

var _Association = _interopRequireDefault(__webpack_require__(64));

var _HasOne = _interopRequireDefault(__webpack_require__(298));

var _HasOneInPlace = _interopRequireDefault(__webpack_require__(299));

var _HasMany = _interopRequireDefault(__webpack_require__(94));

var _HasManyInPlace = _interopRequireDefault(__webpack_require__(300));

var _HasManyFiles = _interopRequireDefault(__webpack_require__(289));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var pickTypeAndId = function pickTypeAndId(x) {
  return (0, _pick.default)(x, '_type', '_id');
};

exports.pickTypeAndId = pickTypeAndId;

var applyHelper = function applyHelper(fn, objOrArr) {
  return Array.isArray(objOrArr) ? objOrArr.map(fn) : fn(objOrArr);
};

var responseToRelationship = function responseToRelationship(response) {
  return (0, _pickBy.default)({
    data: applyHelper(pickTypeAndId, response.data),
    meta: response.meta,
    next: response.next,
    skip: response.skip,
    bookmark: response.bookmark
  });
};

exports.responseToRelationship = responseToRelationship;

var attachRelationship = function attachRelationship(doc, relationships) {
  return _objectSpread(_objectSpread({}, doc), {}, {
    relationships: _objectSpread(_objectSpread({}, doc.relationships), relationships)
  });
};

var attachRelationships = function attachRelationships(response, relationshipsByDocId) {
  if (Array.isArray(response.data)) {
    return _objectSpread(_objectSpread({}, response), {}, {
      data: response.data.map(function (doc) {
        return attachRelationship(doc, relationshipsByDocId[doc._id]);
      })
    });
  } else {
    var doc = response.data;
    return _objectSpread(_objectSpread({}, response), {}, {
      data: attachRelationship(doc, relationshipsByDocId[doc._id])
    });
  }
};

exports.attachRelationships = attachRelationships;
var aliases = {
  'io.cozy.files:has-many': _HasManyFiles.default,
  'has-many': _HasMany.default,
  'belongs-to-in-place': _HasOneInPlace.default,
  'has-one': _HasOne.default,
  'has-one-in-place': _HasOneInPlace.default,
  'has-many-in-place': _HasManyInPlace.default
};
/**
 * Returns the relationship class for a given doctype/type.
 *
 * In the schema definition, some classes have string aliases
 * so you do not have to import directly the association.
 *
 * Some doctypes can have built-in overriden relationships.
 *
 * @private
 */

var resolveClass = function resolveClass(doctype, type) {
  if (type === undefined) {
    throw new Error('Undefined type for ' + doctype);
  }

  if (typeof type !== 'string') {
    return type;
  } else {
    var qualified = "".concat(doctype, ":").concat(type);
    var cls = aliases[qualified] || aliases[type];

    if (!cls) {
      throw new Error("Unknown association '".concat(type, "'"));
    } else {
      return cls;
    }
  }
};

exports.resolveClass = resolveClass;

var create = function create(target, _ref, accessors) {
  var name = _ref.name,
      type = _ref.type,
      doctype = _ref.doctype;

  if (target[name] instanceof _Association.default) {
    throw new Error("Association ".concat(name, " already exists"));
  }

  return new type(target, name, doctype, accessors);
};
/**
 * Checks if the file is referenced by a specific doctype
 *
 * @param {import("../types").IOCozyFile} file - io.cozy.files document
 * @param {import("../types").Doctype} referencedBy - Doctype where document is referenced
 * @returns {boolean} If a reference is found
 */


exports.create = create;

var isReferencedBy = function isReferencedBy(file, referencedBy) {
  var _file$relationships, _file$relationships$r;

  var references = (file === null || file === void 0 ? void 0 : (_file$relationships = file.relationships) === null || _file$relationships === void 0 ? void 0 : (_file$relationships$r = _file$relationships.referenced_by) === null || _file$relationships$r === void 0 ? void 0 : _file$relationships$r.data) || (file === null || file === void 0 ? void 0 : file.referenced_by) || [];
  return references.some(function (reference) {
    return reference.type === referencedBy;
  });
};
/**
 * Checks if the file is referenced by a specific doctype and a specific Id of that reference
 *
 * @param {import("../types").IOCozyFile} file - io.cozy.files document
 * @param {import("../types").Doctype} referencedBy - Doctype where document is referenced
 * @param {string} referencedId - Id of the referenced document
 * @returns {boolean} If a reference is found
 */


exports.isReferencedBy = isReferencedBy;

var isReferencedById = function isReferencedById(file, referencedBy, referencedId) {
  var _file$relationships2, _file$relationships2$;

  var references = (file === null || file === void 0 ? void 0 : (_file$relationships2 = file.relationships) === null || _file$relationships2 === void 0 ? void 0 : (_file$relationships2$ = _file$relationships2.referenced_by) === null || _file$relationships2$ === void 0 ? void 0 : _file$relationships2$.data) || (file === null || file === void 0 ? void 0 : file.referenced_by) || [];
  return references.some(function (reference) {
    return reference.type === referencedBy && reference.id === referencedId;
  });
};
/**
 * Get array of reference by an specific doctype
 *
 * @param {import("../types").IOCozyFile} file - io.cozy.files document
 * @param {import("../types").Doctype} referencedBy - Doctype where document is referenced
 * @returns {import("../types").Reference[]} Array of references found
 */


exports.isReferencedById = isReferencedById;

var getReferencedBy = function getReferencedBy(file, referencedBy) {
  var _file$relationships3, _file$relationships3$;

  var references = (file === null || file === void 0 ? void 0 : (_file$relationships3 = file.relationships) === null || _file$relationships3 === void 0 ? void 0 : (_file$relationships3$ = _file$relationships3.referenced_by) === null || _file$relationships3$ === void 0 ? void 0 : _file$relationships3$.data) || (file === null || file === void 0 ? void 0 : file.referenced_by) || [];
  return references.filter(function (reference) {
    return reference.type === referencedBy;
  });
};
/**
 * Get array of reference by an specific doctype and a specific Id of that reference
 *
 * @param {import("../types").IOCozyFile} file - io.cozy.files document
 * @param {import("../types").Doctype} referencedBy - Doctype where document is referenced
 * @param {string} referencedId - Id of the referenced document
 * @returns {import("../types").Reference[]} Array of the reference found
 */


exports.getReferencedBy = getReferencedBy;

var getReferencedById = function getReferencedById(file, referencedBy, referencedId) {
  var _file$relationships4, _file$relationships4$;

  var references = (file === null || file === void 0 ? void 0 : (_file$relationships4 = file.relationships) === null || _file$relationships4 === void 0 ? void 0 : (_file$relationships4$ = _file$relationships4.referenced_by) === null || _file$relationships4$ === void 0 ? void 0 : _file$relationships4$.data) || (file === null || file === void 0 ? void 0 : file.referenced_by) || [];
  return references.filter(function (reference) {
    return reference.type === referencedBy && reference.id === referencedId;
  });
};

exports.getReferencedById = getReferencedById;

/***/ }),
/* 186 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * Use those fetch policies with `<Query />` to limit the number of re-fetch.
 *
 * @example
 * ```
 * import { fetchPolicies } from 'cozy-client'
 * const olderThan30s = fetchPolicies.olderThan(30 * 1000)
 * <Query fetchPolicy={olderThan30s} />
 * ```
 */
var fetchPolicies = {
  /**
   * Returns a fetchPolicy that will only re-fetch queries that are older
   * than `<delay>` ms.
   *
   * @param  {number} delay - Milliseconds since the query has been fetched
   * @returns {Function} Fetch policy to be used with `<Query />`
   */
  olderThan: function olderThan(delay) {
    return function (queryState) {
      if (!queryState || !queryState.lastUpdate) {
        return true;
      } else {
        var elapsed = Date.now() - queryState.lastUpdate;
        return elapsed > delay;
      }
    };
  },

  /**
   * Fetch policy that deactivates any fetching.
   */
  noFetch: function noFetch() {
    return false;
  }
};
var _default = fetchPolicies;
exports.default = _default;

/***/ }),
/* 187 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isWebApp = exports.isMobileApp = exports.isMobile = exports.isIOSApp = exports.isIOS = exports.isAndroidApp = exports.isAndroid = exports.getPlatform = void 0;

var _cordova = __webpack_require__(131);

var ANDROID_PLATFORM = 'android';
var IOS_PLATFORM = 'ios';
var WEB_PLATFORM = 'web';

var getPlatform = function getPlatform() {
  return (0, _cordova.isCordova)() ? window.cordova.platformId : WEB_PLATFORM;
};

exports.getPlatform = getPlatform;

var isPlatform = function isPlatform(platform) {
  return getPlatform() === platform;
};

var isIOSApp = function isIOSApp() {
  return isPlatform(IOS_PLATFORM);
};

exports.isIOSApp = isIOSApp;

var isAndroidApp = function isAndroidApp() {
  return isPlatform(ANDROID_PLATFORM);
};

exports.isAndroidApp = isAndroidApp;

var isWebApp = function isWebApp() {
  return isPlatform(WEB_PLATFORM);
};

exports.isWebApp = isWebApp;

var isMobileApp = function isMobileApp() {
  return (0, _cordova.isCordova)();
}; // return if is on an Android Device (native or browser)


exports.isMobileApp = isMobileApp;

var isAndroid = function isAndroid() {
  return window.navigator.userAgent && window.navigator.userAgent.indexOf('Android') >= 0;
}; // return if is on an iOS Device (native or browser)


exports.isAndroid = isAndroid;

var isIOS = function isIOS() {
  return window.navigator.userAgent && /iPad|iPhone|iPod/.test(window.navigator.userAgent);
}; // isMobile checks if the user is on a smartphone : native app or browser


exports.isIOS = isIOS;

var isMobile = function isMobile() {
  return isAndroid() || isIOS();
};

exports.isMobile = isMobile;

/***/ }),
/* 188 */
/***/ (function(module, exports) {

/** Used to compose unicode character classes. */
var rsAstralRange = '\\ud800-\\udfff',
    rsComboMarksRange = '\\u0300-\\u036f',
    reComboHalfMarksRange = '\\ufe20-\\ufe2f',
    rsComboSymbolsRange = '\\u20d0-\\u20ff',
    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
    rsVarRange = '\\ufe0e\\ufe0f';

/** Used to compose unicode capture groups. */
var rsZWJ = '\\u200d';

/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');

/**
 * Checks if `string` contains Unicode symbols.
 *
 * @private
 * @param {string} string The string to inspect.
 * @returns {boolean} Returns `true` if a symbol is found, else `false`.
 */
function hasUnicode(string) {
  return reHasUnicode.test(string);
}

module.exports = hasUnicode;


/***/ }),
/* 189 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hasSafariPlugin = exports.hasNetworkInformationPlugin = exports.hasInAppBrowserPlugin = exports.hasDevicePlugin = void 0;

var _cordova = __webpack_require__(131);

var hasDevicePlugin = function hasDevicePlugin() {
  return (0, _cordova.isCordova)() && window.device !== undefined;
};

exports.hasDevicePlugin = hasDevicePlugin;

var hasInAppBrowserPlugin = function hasInAppBrowserPlugin() {
  return (0, _cordova.isCordova)() && window.cordova.InAppBrowser !== undefined;
};

exports.hasInAppBrowserPlugin = hasInAppBrowserPlugin;

var hasSafariPlugin = function hasSafariPlugin() {
  return new Promise(function (resolve) {
    if (!(0, _cordova.isCordova)() || window.SafariViewController === undefined) {
      resolve(false);
      return;
    }

    window.SafariViewController.isAvailable(function (available) {
      return resolve(available);
    });
  });
};
/**
 * Check if the Cordova's cordova-plugin-network-information plugin is installed
 * @see https://cordova.apache.org/docs/en/latest/reference/cordova-plugin-network-information/
 * @returns {boolean}
 */


exports.hasSafariPlugin = hasSafariPlugin;

var hasNetworkInformationPlugin = function hasNetworkInformationPlugin() {
  return (0, _cordova.isCordova)() && window.navigator.connection !== undefined;
};

exports.hasNetworkInformationPlugin = hasNetworkInformationPlugin;

/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

var baseCreate = __webpack_require__(155),
    baseLodash = __webpack_require__(191);

/**
 * The base constructor for creating `lodash` wrapper objects.
 *
 * @private
 * @param {*} value The value to wrap.
 * @param {boolean} [chainAll] Enable explicit method chain sequences.
 */
function LodashWrapper(value, chainAll) {
  this.__wrapped__ = value;
  this.__actions__ = [];
  this.__chain__ = !!chainAll;
  this.__index__ = 0;
  this.__values__ = undefined;
}

LodashWrapper.prototype = baseCreate(baseLodash.prototype);
LodashWrapper.prototype.constructor = LodashWrapper;

module.exports = LodashWrapper;


/***/ }),
/* 191 */
/***/ (function(module, exports) {

/**
 * The function whose prototype chain sequence wrappers inherit from.
 *
 * @private
 */
function baseLodash() {
  // No operation performed.
}

module.exports = baseLodash;


/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

var baseCreate = __webpack_require__(155),
    baseLodash = __webpack_require__(191);

/** Used as references for the maximum length and index of an array. */
var MAX_ARRAY_LENGTH = 4294967295;

/**
 * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
 *
 * @private
 * @constructor
 * @param {*} value The value to wrap.
 */
function LazyWrapper(value) {
  this.__wrapped__ = value;
  this.__actions__ = [];
  this.__dir__ = 1;
  this.__filtered__ = false;
  this.__iteratees__ = [];
  this.__takeCount__ = MAX_ARRAY_LENGTH;
  this.__views__ = [];
}

// Ensure `LazyWrapper` is an instance of `baseLodash`.
LazyWrapper.prototype = baseCreate(baseLodash.prototype);
LazyWrapper.prototype.constructor = LazyWrapper;

module.exports = LazyWrapper;


/***/ }),
/* 193 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isAccountWithTrigger = exports.buildAccount = exports.getAccountName = exports.getAccountLogin = exports.setContractSyncStatusInAccount = exports.getContractSyncStatusFromAccount = exports.muteError = exports.getMutedErrors = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(6));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(7));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(9));

var _merge = _interopRequireDefault(__webpack_require__(52));

var _dsl = __webpack_require__(20);

var _HasMany = __webpack_require__(94);

var _manifest = __webpack_require__(307);

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 * getMutedErrors - Returns the list of errors that have been muted for the given account
 *
 * @param {import('../types').IOCozyAccount} account io.cozy.accounts
 *
 * @returns {Array} An array of errors with a `type` and `mutedAt` field
 */
var getMutedErrors = function getMutedErrors(account) {
  return (account === null || account === void 0 ? void 0 : account.mutedErrors) || [];
};
/**
 * muteError - Adds an error to the list of muted errors for the given account
 *
 * @param {import('../types').IOCozyAccount} account   io.cozy.accounts
 * @param {string} errorType The type of the error to mute
 *
 * @returns {import('../types').IOCozyAccount} An updated io.cozy.accounts
 */


exports.getMutedErrors = getMutedErrors;

var muteError = function muteError(account, errorType) {
  var mutedErrors = getMutedErrors(account);
  mutedErrors.push({
    type: errorType,
    mutedAt: new Date().toISOString()
  });
  return _objectSpread(_objectSpread({}, account), {}, {
    mutedErrors: mutedErrors
  });
};

exports.muteError = muteError;
var DEFAULT_CONTRACT_SYNC_STATUS = true;
/**
 * Returns whether a contract is synced from account relationship
 *
 * @param  {import('../types').IOCozyAccount} account - Cozy account
 * @param  {String} contractId - contract identifier
 * @returns  {Boolean} synchronisation status
 */

var getContractSyncStatusFromAccount = function getContractSyncStatusFromAccount(account, contractId) {
  var _relItem$metadata$imp, _relItem$metadata;

  var relItem = (0, _HasMany.getHasManyItem)(account, 'contracts', contractId);

  if (!relItem) {
    throw new Error("Cannot find contrat ".concat(contractId, " in account"));
  }

  return (_relItem$metadata$imp = relItem === null || relItem === void 0 ? void 0 : (_relItem$metadata = relItem.metadata) === null || _relItem$metadata === void 0 ? void 0 : _relItem$metadata.imported) !== null && _relItem$metadata$imp !== void 0 ? _relItem$metadata$imp : DEFAULT_CONTRACT_SYNC_STATUS;
};
/**
 * Sets contract sync status into account relationship
 *
 * @param  {import('../types').IOCozyAccount} account - Cozy account
 * @param  {String} contractId - contract identifier
 * @param  {String} syncStatus - synchronisation status
 * @returns {import('../types').IOCozyAccount}
 */


exports.getContractSyncStatusFromAccount = getContractSyncStatusFromAccount;

var setContractSyncStatusInAccount = function setContractSyncStatusInAccount(account, contractId, syncStatus) {
  return (0, _HasMany.updateHasManyItem)(account, 'contracts', contractId, function (contractRel) {
    if (contractRel === undefined) {
      throw new Error("Cannot find contrat ".concat(contractId, " in account"));
    }

    return (0, _merge.default)({}, contractRel, {
      metadata: {
        imported: syncStatus
      }
    });
  });
};
/**
 * Get the account login field value from a given account
 *
 * @param {import('../types').IOCozyAccount} account - the given cozy account
 * @returns {String|null} - Account login
 */


exports.setContractSyncStatusInAccount = setContractSyncStatusInAccount;

var getAccountLogin = function getAccountLogin(account) {
  if (account.identifier) {
    return account.auth[account.identifier];
  }

  if (account && account.auth) {
    var _iterator = _createForOfIteratorHelper(_manifest.legacyLoginFields),
        _step;

    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var fieldName = _step.value;
        if (account.auth[fieldName]) return account.auth[fieldName];
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
  }

  return null;
};
/**
 * Get the account name from a given account
 *
 * @param {import('../types').IOCozyAccount} account - the given cozy account
 * @returns {String|null} - Account name
 */


exports.getAccountLogin = getAccountLogin;

var getAccountName = function getAccountName(account) {
  if (!account) return null;

  if (account.auth) {
    return account.auth.accountName || getAccountLogin(account) || account._id;
  } else {
    return account._id;
  }
};
/**
 * Transforms account auth data to io.cozy.accounts document
 *
 * @param  {import('../types').IOCozyKonnector} konnector Konnector related to account
 * @param  {object} authData  Authentication data
 * @returns {import('../types').IOCozyAccount}          io.cozy.accounts attributes
 */


exports.getAccountName = getAccountName;

var buildAccount = function buildAccount(konnector, authData) {
  return {
    auth: authData,
    account_type: konnector.slug,
    identifier: (0, _manifest.getIdentifier)(konnector.fields),
    state: null
  };
};
/**
 * Look if the given account has an associated trigger or not.
 *
 * @param {import('../CozyClient').default} client - CozyClient instance
 * @param {import('../types').IOCozyAccount} account - account document
 * @returns {Promise<Boolean>}
 */


exports.buildAccount = buildAccount;

var isAccountWithTrigger = /*#__PURE__*/function () {
  var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(client, account) {
    var result;
    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return client.query((0, _dsl.Q)('io.cozy.triggers').where({
              'message.account': account._id
            }).indexFields(['message.account']).limitBy(1));

          case 2:
            result = _context.sent;
            return _context.abrupt("return", result.data.length > 0);

          case 4:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function isAccountWithTrigger(_x, _x2) {
    return _ref.apply(this, arguments);
  };
}();

exports.isAccountWithTrigger = isAccountWithTrigger;

/***/ }),
/* 194 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireWildcard = __webpack_require__(22);

var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getIconByLabel = exports.getQualification = exports.setQualification = exports.Qualification = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(9));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));

var _createClass2 = _interopRequireDefault(__webpack_require__(13));

var _set = _interopRequireDefault(__webpack_require__(33));

var _difference = _interopRequireDefault(__webpack_require__(219));

var qualificationModel = _interopRequireWildcard(__webpack_require__(684));

var _logger = _interopRequireDefault(__webpack_require__(27));

var _constants = __webpack_require__(311);

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 * @typedef {object} QualificationAttributes
 * @property {string} [icon] - The qualification icon.
 * @property {string} [label] - The qualification label.
 * @property {string} [purpose] - The document purpose.
 * @property {string} [sourceCategory] - The activity field of the document source.
 * @property {string} [sourceSubCategory] - The sub-activity field of the document source.
 * @property {Array<string>} [subjects] - On what is about the document.
 */

/**
 * This class is used to create document Qualification, i.e. metadata
 * attributes used to describe the document.
 * The qualifications model is stored in the assets, associating
 * labels to attributes, namely: purpose, sourceCategory, sourceSubCategory
 * and subjects.
 * A qualification can be customized accordingly to rules detailed in
 * the checkValueAttributes method.
 */
var Qualification = /*#__PURE__*/function () {
  /**
   * @param {string} label - The qualification label
   * @param {QualificationAttributes} attributes - Qualification's attributes
   */
  function Qualification(label) {
    var attributes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    (0, _classCallCheck2.default)(this, Qualification);
    var qualification = qualificationModel.qualifications.find(function (qualif) {
      return qualif.label === label;
    });

    if (qualification) {
      /**
       * @type {string}
       */
      this.icon = attributes.icon || getIconByLabel(label);
      /**
       * @type {string?}
       */

      this.label = qualification.label;
      var purpose = attributes.purpose || qualification.purpose;

      if (purpose) {
        /**
         * @type {string?}
         */
        this.purpose = purpose;
      }

      var sourceCategory = attributes.sourceCategory || qualification.sourceCategory;

      if (sourceCategory) {
        /**
         * @type {string?}
         */
        this.sourceCategory = sourceCategory;
      }

      var sourceSubCategory = attributes.sourceSubCategory || qualification.sourceSubCategory;

      if (sourceSubCategory) {
        /**
         * @type {string?}
         */
        this.sourceSubCategory = sourceSubCategory;
      }

      var subjects = attributes.subjects || qualification.subjects;

      if (subjects) {
        /**
         * @type {Array<string>?}
         */
        this.subjects = subjects;
      }
    } else {
      throw new Error("No qualification found for the label ".concat(label));
    }
  }
  /**
   * Check the given qualification attributes respects the following rules:
   *   - For the given label, if a purpose, sourceCategory or sourceSubCategory
   *     attribute is defined in the model, it must match the given qualification.
   *   - If not defined in the model for the label, a custom purpose, sourceCategory or
   *     sourceSubCategory value can be defined, if it exist in their respective
   *     known values list.
   *   - For the given label, if subjects are defined in the model, they must be included
   *     in the given qualification.
   *   - If extra subjects are set, they should exist in the known values.
   *
   * @param {object} attributes - The qualification attributes to check
   */


  (0, _createClass2.default)(Qualification, [{
    key: "checkAttributes",
    value: function checkAttributes(attributes) {
      if (this.purpose !== attributes.purpose) {
        if (!this.purpose) {
          var isKnownValue = qualificationModel.purposeKnownValues.includes(attributes.purpose);

          if (!isKnownValue) {
            _logger.default.info("This purpose is not listed among the known values: ".concat(attributes.purpose, ". ") + "Please open an issue on https://github.com/cozy/cozy-client/issues");
          }
        } else {
          throw new Error("The purpose for the label ".concat(this.label, " should be ").concat(this.purpose, ". ") + "Please use this or open an issue on https://github.com/cozy/cozy-client/issues");
        }
      }

      if (this.sourceCategory !== attributes.sourceCategory) {
        if (!this.sourceCategory) {
          var _isKnownValue = qualificationModel.sourceCategoryKnownValues.includes(attributes.sourceCategory);

          if (!_isKnownValue) {
            _logger.default.info("This sourceCategory is not listed among the known values: ".concat(attributes.sourceCategory, ". ") + "Please open an issue on https://github.com/cozy/cozy-client/issues");
          }
        } else {
          throw new Error("The sourceCategory for the label ".concat(this.label, " should be ").concat(this.sourceCategory, ". ") + "Please use this or open an issue on https://github.com/cozy/cozy-client/issues");
        }
      }

      if (this.sourceSubCategory !== attributes.sourceSubCategory) {
        if (!this.sourceSubCategory) {
          var _isKnownValue2 = qualificationModel.sourceSubCategoryKnownValues.includes(attributes.sourceSubCategory);

          if (!_isKnownValue2) {
            _logger.default.info("This sourceSubCategory is not listed among the known values: ".concat(attributes.sourceSubCategory, ". ") + "Please open an issue on https://github.com/cozy/cozy-client/issues");
          }
        } else {
          throw new Error("The sourceSubCategory for the label ".concat(this.label, " should be ").concat(this.sourceSubCategory, ". ") + "Please use this or open an issue on https://github.com/cozy/cozy-client/issues");
        }
      }

      var missingSubjects = (0, _difference.default)(this.subjects, attributes.subjects);

      if (missingSubjects.length > 0) {
        throw new Error("The subjects for the label ".concat(this.label, " should include ").concat(this.subjects, ". ") + "Please use this or open an issue on https://github.com/cozy/cozy-client/issues");
      }

      var extraSubjects = (0, _difference.default)(attributes.subjects, this.subjects);

      if (extraSubjects.length > 0) {
        var unknownSubjects = (0, _difference.default)(extraSubjects, qualificationModel.subjectsKnownValues);
        if (unknownSubjects.length > 0) _logger.default.info("These subjects are not listed among the known values: ".concat(unknownSubjects, ". ") + "Please open an issue on https://github.com/cozy/cozy-client/issues");
      }
    }
    /**
     * Set purpose to the qualification.
     *
     * @param {Array} purpose - The purpose to set.
     * @returns {Qualification} The Qualification object.
     */

  }, {
    key: "setPurpose",
    value: function setPurpose(purpose) {
      return new Qualification(this.label, _objectSpread(_objectSpread({}, this.toQualification()), {}, {
        purpose: purpose
      }));
    }
    /**
     * Set sourceCategory to the qualification.
     *
     * @param {Array} sourceCategory - The sourceCategory to set.
     * @returns {Qualification} The Qualification object.
     */

  }, {
    key: "setSourceCategory",
    value: function setSourceCategory(sourceCategory) {
      return new Qualification(this.label, _objectSpread(_objectSpread({}, this.toQualification()), {}, {
        sourceCategory: sourceCategory
      }));
    }
    /**
     * Set sourceSubCategory to the qualification.
     *
     * @param {Array} sourceSubCategory - The sourceSubCategory to set.
     * @returns {Qualification} The Qualification object.
     */

  }, {
    key: "setSourceSubCategory",
    value: function setSourceSubCategory(sourceSubCategory) {
      return new Qualification(this.label, _objectSpread(_objectSpread({}, this.toQualification()), {}, {
        sourceSubCategory: sourceSubCategory
      }));
    }
    /**
     * Set subjects to the qualification.
     *
     * @param {Array} subjects - The subjects to set.
     * @returns {Qualification} The Qualification object.
     */

  }, {
    key: "setSubjects",
    value: function setSubjects(subjects) {
      return new Qualification(this.label, _objectSpread(_objectSpread({}, this.toQualification()), {}, {
        subjects: subjects
      }));
    }
    /**
     * Set icon to the qualification.
     *
     * @param {string} icon - The icon to set.
     * @returns {Qualification} The Qualification object.
     */

  }, {
    key: "setIcon",
    value: function setIcon(icon) {
      return new Qualification(this.label, _objectSpread(_objectSpread({}, this.toQualification()), {}, {
        icon: icon
      }));
    }
    /**
     * Returns the qualification attributes
     *
     * @returns {object} The qualification attributes
     */

  }, {
    key: "toQualification",
    value: function toQualification() {
      return {
        icon: this.icon,
        label: this.label,
        purpose: this.purpose,
        sourceCategory: this.sourceCategory,
        sourceSubCategory: this.sourceSubCategory,
        subjects: this.subjects
      };
    }
  }]);
  return Qualification;
}();
/**
 * Returns the qualification associated to a label.
 *
 * @param {string} label - The label to qualify
 * @returns {Qualification} - The qualification
 */


exports.Qualification = Qualification;

Qualification.getByLabel = function (label) {
  return new Qualification(label);
};
/**
 * Set the qualification to the document metadata
 *
 * @param {object} document - The document to set the qualification
 * @param {Qualification} qualification - The qualification to set
 * @returns {object} - The qualified document
 */


var setQualification = function setQualification(document, qualification) {
  if (qualification.label) {
    var result = qualification; // Throw an error if one of the attributes does not conform

    new Qualification(qualification.label).checkAttributes(qualification);

    if (!qualification.icon) {
      result = new Qualification(qualification.label, qualification).setIcon(getIconByLabel(qualification.label));
    }

    return (0, _set.default)(document, 'metadata.qualification', result);
  } else {
    throw new Error('You must set a label to qualify');
  }
};
/**
 * Helper to get the qualification from a document
 *
 * @param {object} document - The document
 * @returns {Qualification|null} - The document qualification
 */


exports.setQualification = setQualification;

var getQualification = function getQualification(document) {
  var _document$metadata;

  var docQualification = document === null || document === void 0 ? void 0 : (_document$metadata = document.metadata) === null || _document$metadata === void 0 ? void 0 : _document$metadata.qualification;

  if (docQualification) {
    var qualification = new Qualification(docQualification.label, docQualification.qualification);
    return qualification.toQualification();
  }

  return null;
};
/**
 * Helper to get the icon name from a qualification label
 *
 * @param {string} label - The qualification label
 * @returns {import('../../types').IconQualificationLabels|string} - The icon name
 */


exports.getQualification = getQualification;

var getIconByLabel = function getIconByLabel(label) {
  var _iterator = _createForOfIteratorHelper(_constants.iconLabelPairs),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var pair = _step.value;

      if (pair.labels.includes(label)) {
        return pair.icon;
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  _logger.default.info("The ".concat(label, " qualification does not seem to have an icon.\n    Please open an issue on https://github.com/cozy/cozy-client/issues"));

  return '';
};

exports.getIconByLabel = getIconByLabel;

/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getLocalizer = exports.getBoundT = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(9));

var _nodePolyglot = _interopRequireDefault(__webpack_require__(465));

var _emojiCountry = __webpack_require__(718);

var _en = _interopRequireDefault(__webpack_require__(719));

var _fr = _interopRequireDefault(__webpack_require__(720));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var locales = {
  en: _en.default,
  fr: _fr.default
};
var polyglots = {};
var langs = ['fr', 'en'];

for (var _i = 0, _langs = langs; _i < _langs.length; _i++) {
  var lang = _langs[_i];
  var polyglot = new _nodePolyglot.default();
  polyglot.extend(locales[lang]);
  polyglots[lang] = polyglot;
}
/**
 * @param {string} lang - fr, en, etc
 * @returns {(label: string, opts?: {country?: string, smart_count?: number}) => string}
 */


var getBoundT = function getBoundT(lang) {
  var t = getLocalizer(lang);
  return function (label) {
    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    var newOpts = _objectSpread(_objectSpread({}, opts), {}, {
      smart_count: (opts === null || opts === void 0 ? void 0 : opts.smart_count) || 1
    });

    var emojiCountry = (0, _emojiCountry.getEmojiByCountry)(opts === null || opts === void 0 ? void 0 : opts.country, t);
    return emojiCountry ? "".concat(t(label, newOpts), " ").concat(emojiCountry) : t(label, newOpts);
  };
};
/**
 * @param {string} lang - fr, en, etc
 * @returns {Function} - localization function
 */


exports.getBoundT = getBoundT;

var getLocalizer = function getLocalizer(lang) {
  var polyglot = polyglots[lang] || polyglots['en'];
  var t = polyglot.t.bind(polyglot);
  return t;
};

exports.getLocalizer = getLocalizer;

/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var hasSymbols = __webpack_require__(273);

module.exports = function hasToStringTagShams() {
	return hasSymbols() && !!Symbol.toStringTag;
};


/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var fnToStr = Function.prototype.toString;
var reflectApply = typeof Reflect === 'object' && Reflect !== null && Reflect.apply;
var badArrayLike;
var isCallableMarker;
if (typeof reflectApply === 'function' && typeof Object.defineProperty === 'function') {
	try {
		badArrayLike = Object.defineProperty({}, 'length', {
			get: function () {
				throw isCallableMarker;
			}
		});
		isCallableMarker = {};
		// eslint-disable-next-line no-throw-literal
		reflectApply(function () { throw 42; }, null, badArrayLike);
	} catch (_) {
		if (_ !== isCallableMarker) {
			reflectApply = null;
		}
	}
} else {
	reflectApply = null;
}

var constructorRegex = /^\s*class\b/;
var isES6ClassFn = function isES6ClassFunction(value) {
	try {
		var fnStr = fnToStr.call(value);
		return constructorRegex.test(fnStr);
	} catch (e) {
		return false; // not a function
	}
};

var tryFunctionObject = function tryFunctionToStr(value) {
	try {
		if (isES6ClassFn(value)) { return false; }
		fnToStr.call(value);
		return true;
	} catch (e) {
		return false;
	}
};
var toStr = Object.prototype.toString;
var objectClass = '[object Object]';
var fnClass = '[object Function]';
var genClass = '[object GeneratorFunction]';
var ddaClass = '[object HTMLAllCollection]'; // IE 11
var ddaClass2 = '[object HTML document.all class]';
var ddaClass3 = '[object HTMLCollection]'; // IE 9-10
var hasToStringTag = typeof Symbol === 'function' && !!Symbol.toStringTag; // better: use `has-tostringtag`

var isIE68 = !(0 in [,]); // eslint-disable-line no-sparse-arrays, comma-spacing

var isDDA = function isDocumentDotAll() { return false; };
if (typeof document === 'object') {
	// Firefox 3 canonicalizes DDA to undefined when it's not accessed directly
	var all = document.all;
	if (toStr.call(all) === toStr.call(document.all)) {
		isDDA = function isDocumentDotAll(value) {
			/* globals document: false */
			// in IE 6-8, typeof document.all is "object" and it's truthy
			if ((isIE68 || !value) && (typeof value === 'undefined' || typeof value === 'object')) {
				try {
					var str = toStr.call(value);
					return (
						str === ddaClass
						|| str === ddaClass2
						|| str === ddaClass3 // opera 12.16
						|| str === objectClass // IE 6-8
					) && value('') == null; // eslint-disable-line eqeqeq
				} catch (e) { /**/ }
			}
			return false;
		};
	}
}

module.exports = reflectApply
	? function isCallable(value) {
		if (isDDA(value)) { return true; }
		if (!value) { return false; }
		if (typeof value !== 'function' && typeof value !== 'object') { return false; }
		try {
			reflectApply(value, null, badArrayLike);
		} catch (e) {
			if (e !== isCallableMarker) { return false; }
		}
		return !isES6ClassFn(value) && tryFunctionObject(value);
	}
	: function isCallable(value) {
		if (isDDA(value)) { return true; }
		if (!value) { return false; }
		if (typeof value !== 'function' && typeof value !== 'object') { return false; }
		if (hasToStringTag) { return tryFunctionObject(value); }
		if (isES6ClassFn(value)) { return false; }
		var strClass = toStr.call(value);
		if (strClass !== fnClass && strClass !== genClass && !(/^\[object HTML/).test(strClass)) { return false; }
		return tryFunctionObject(value);
	};


/***/ }),
/* 198 */,
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var slice = Array.prototype.slice;
var isArgs = __webpack_require__(313);

var origKeys = Object.keys;
var keysShim = origKeys ? function keys(o) { return origKeys(o); } : __webpack_require__(687);

var originalKeys = Object.keys;

keysShim.shim = function shimObjectKeys() {
	if (Object.keys) {
		var keysWorksWithArguments = (function () {
			// Safari 5.0 bug
			var args = Object.keys(arguments);
			return args && args.length === arguments.length;
		}(1, 2));
		if (!keysWorksWithArguments) {
			Object.keys = function keys(object) { // eslint-disable-line func-name-matching
				if (isArgs(object)) {
					return originalKeys(slice.call(object));
				}
				return originalKeys(object);
			};
		}
	} else {
		Object.keys = keysShim;
	}
	return Object.keys || keysShim;
};

module.exports = keysShim;


/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var GetIntrinsic = __webpack_require__(23);

var $defineProperty = GetIntrinsic('%Object.defineProperty%', true);

var hasPropertyDescriptors = function hasPropertyDescriptors() {
	if ($defineProperty) {
		try {
			$defineProperty({}, 'a', { value: 1 });
			return true;
		} catch (e) {
			// IE 8 has a broken defineProperty
			return false;
		}
	}
	return false;
};

hasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {
	// node v0.6 has a bug where array lengths can be Set but not Defined
	if (!hasPropertyDescriptors()) {
		return null;
	}
	try {
		return $defineProperty([], 'length', { value: 1 }).length !== 1;
	} catch (e) {
		// In Firefox 4-22, defining length on an array throws an exception.
		return true;
	}
};

module.exports = hasPropertyDescriptors;


/***/ }),
/* 201 */,
/* 202 */
/***/ (function(module, exports, __webpack_require__) {

var eq = __webpack_require__(88),
    isArrayLike = __webpack_require__(53),
    isIndex = __webpack_require__(111),
    isObject = __webpack_require__(38);

/**
 * Checks if the given arguments are from an iteratee call.
 *
 * @private
 * @param {*} value The potential iteratee value argument.
 * @param {*} index The potential iteratee index or key argument.
 * @param {*} object The potential iteratee object argument.
 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
 *  else `false`.
 */
function isIterateeCall(value, index, object) {
  if (!isObject(object)) {
    return false;
  }
  var type = typeof index;
  if (type == 'number'
        ? (isArrayLike(object) && isIndex(index, object.length))
        : (type == 'string' && index in object)
      ) {
    return eq(object[index], value);
  }
  return false;
}

module.exports = isIterateeCall;


/***/ }),
/* 203 */,
/* 204 */
/***/ (function(module, exports) {

/**
 * A faster alternative to `Function#apply`, this function invokes `func`
 * with the `this` binding of `thisArg` and the arguments of `args`.
 *
 * @private
 * @param {Function} func The function to invoke.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {Array} args The arguments to invoke `func` with.
 * @returns {*} Returns the result of `func`.
 */
function apply(func, thisArg, args) {
  switch (args.length) {
    case 0: return func.call(thisArg);
    case 1: return func.call(thisArg, args[0]);
    case 2: return func.call(thisArg, args[0], args[1]);
    case 3: return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}

module.exports = apply;


/***/ }),
/* 205 */
/***/ (function(module, exports) {

function _typeof(obj) {
  "@babel/helpers - typeof";

  return (module.exports = _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports), _typeof(obj);
}
module.exports = _typeof, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {

var startOfWeek = __webpack_require__(799)

/**
 * @category ISO Week Helpers
 * @summary Return the start of an ISO week for the given date.
 *
 * @description
 * Return the start of an ISO week for the given date.
 * The result will be in the local timezone.
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * @param {Date|String|Number} date - the original date
 * @returns {Date} the start of an ISO week
 *
 * @example
 * // The start of an ISO week for 2 September 2014 11:55:00:
 * var result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Mon Sep 01 2014 00:00:00
 */
function startOfISOWeek (dirtyDate) {
  return startOfWeek(dirtyDate, {weekStartsOn: 1})
}

module.exports = startOfISOWeek


/***/ }),
/* 207 */,
/* 208 */
/***/ (function(module, exports) {

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
module.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 209 */
/***/ (function(module, exports, __webpack_require__) {

var startOfDay = __webpack_require__(797)

var MILLISECONDS_IN_MINUTE = 60000
var MILLISECONDS_IN_DAY = 86400000

/**
 * @category Day Helpers
 * @summary Get the number of calendar days between the given dates.
 *
 * @description
 * Get the number of calendar days between the given dates.
 *
 * @param {Date|String|Number} dateLeft - the later date
 * @param {Date|String|Number} dateRight - the earlier date
 * @returns {Number} the number of calendar days
 *
 * @example
 * // How many calendar days are between
 * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?
 * var result = differenceInCalendarDays(
 *   new Date(2012, 6, 2, 0, 0),
 *   new Date(2011, 6, 2, 23, 0)
 * )
 * //=> 366
 */
function differenceInCalendarDays (dirtyDateLeft, dirtyDateRight) {
  var startOfDayLeft = startOfDay(dirtyDateLeft)
  var startOfDayRight = startOfDay(dirtyDateRight)

  var timestampLeft = startOfDayLeft.getTime() -
    startOfDayLeft.getTimezoneOffset() * MILLISECONDS_IN_MINUTE
  var timestampRight = startOfDayRight.getTime() -
    startOfDayRight.getTimezoneOffset() * MILLISECONDS_IN_MINUTE

  // Round the number of days to the nearest integer
  // because the number of milliseconds in a day is not constant
  // (e.g. it's different in the day of the daylight saving time clock shift)
  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY)
}

module.exports = differenceInCalendarDays


/***/ }),
/* 210 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return addMilliseconds; });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(14);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(11);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(5);



/**
 * @name addMilliseconds
 * @category Millisecond Helpers
 * @summary Add the specified number of milliseconds to the given date.
 *
 * @description
 * Add the specified number of milliseconds to the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the milliseconds added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add 750 milliseconds to 10 July 2014 12:45:30.000:
 * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)
 * //=> Thu Jul 10 2014 12:45:30.750
 */

function addMilliseconds(dirtyDate, dirtyAmount) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(2, arguments);
  var timestamp = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])(dirtyDate).getTime();
  var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(dirtyAmount);
  return new Date(timestamp + amount);
}

/***/ }),
/* 211 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js
var formatDistanceLocale = {
  lessThanXSeconds: {
    one: 'less than a second',
    other: 'less than {{count}} seconds'
  },
  xSeconds: {
    one: '1 second',
    other: '{{count}} seconds'
  },
  halfAMinute: 'half a minute',
  lessThanXMinutes: {
    one: 'less than a minute',
    other: 'less than {{count}} minutes'
  },
  xMinutes: {
    one: '1 minute',
    other: '{{count}} minutes'
  },
  aboutXHours: {
    one: 'about 1 hour',
    other: 'about {{count}} hours'
  },
  xHours: {
    one: '1 hour',
    other: '{{count}} hours'
  },
  xDays: {
    one: '1 day',
    other: '{{count}} days'
  },
  aboutXWeeks: {
    one: 'about 1 week',
    other: 'about {{count}} weeks'
  },
  xWeeks: {
    one: '1 week',
    other: '{{count}} weeks'
  },
  aboutXMonths: {
    one: 'about 1 month',
    other: 'about {{count}} months'
  },
  xMonths: {
    one: '1 month',
    other: '{{count}} months'
  },
  aboutXYears: {
    one: 'about 1 year',
    other: 'about {{count}} years'
  },
  xYears: {
    one: '1 year',
    other: '{{count}} years'
  },
  overXYears: {
    one: 'over 1 year',
    other: 'over {{count}} years'
  },
  almostXYears: {
    one: 'almost 1 year',
    other: 'almost {{count}} years'
  }
};

var formatDistance = function formatDistance(token, count, options) {
  var result;
  var tokenValue = formatDistanceLocale[token];

  if (typeof tokenValue === 'string') {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace('{{count}}', count.toString());
  }

  if (options !== null && options !== void 0 && options.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return 'in ' + result;
    } else {
      return result + ' ago';
    }
  }

  return result;
};

/* harmony default export */ var _lib_formatDistance = (formatDistance);
// CONCATENATED MODULE: ./node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js
function buildFormatLongFn(args) {
  return function () {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    // TODO: Remove String()
    var width = options.width ? String(options.width) : args.defaultWidth;
    var format = args.formats[width] || args.formats[args.defaultWidth];
    return format;
  };
}
// CONCATENATED MODULE: ./node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js

var dateFormats = {
  full: 'EEEE, MMMM do, y',
  long: 'MMMM do, y',
  medium: 'MMM d, y',
  short: 'MM/dd/yyyy'
};
var timeFormats = {
  full: 'h:mm:ss a zzzz',
  long: 'h:mm:ss a z',
  medium: 'h:mm:ss a',
  short: 'h:mm a'
};
var dateTimeFormats = {
  full: "{{date}} 'at' {{time}}",
  long: "{{date}} 'at' {{time}}",
  medium: '{{date}}, {{time}}',
  short: '{{date}}, {{time}}'
};
var formatLong = {
  date: buildFormatLongFn({
    formats: dateFormats,
    defaultWidth: 'full'
  }),
  time: buildFormatLongFn({
    formats: timeFormats,
    defaultWidth: 'full'
  }),
  dateTime: buildFormatLongFn({
    formats: dateTimeFormats,
    defaultWidth: 'full'
  })
};
/* harmony default export */ var _lib_formatLong = (formatLong);
// CONCATENATED MODULE: ./node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js
var formatRelativeLocale = {
  lastWeek: "'last' eeee 'at' p",
  yesterday: "'yesterday at' p",
  today: "'today at' p",
  tomorrow: "'tomorrow at' p",
  nextWeek: "eeee 'at' p",
  other: 'P'
};

var formatRelative = function formatRelative(token, _date, _baseDate, _options) {
  return formatRelativeLocale[token];
};

/* harmony default export */ var _lib_formatRelative = (formatRelative);
// CONCATENATED MODULE: ./node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js
function buildLocalizeFn(args) {
  return function (dirtyIndex, options) {
    var context = options !== null && options !== void 0 && options.context ? String(options.context) : 'standalone';
    var valuesArray;

    if (context === 'formatting' && args.formattingValues) {
      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;
      var width = options !== null && options !== void 0 && options.width ? String(options.width) : defaultWidth;
      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];
    } else {
      var _defaultWidth = args.defaultWidth;

      var _width = options !== null && options !== void 0 && options.width ? String(options.width) : args.defaultWidth;

      valuesArray = args.values[_width] || args.values[_defaultWidth];
    }

    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex; // @ts-ignore: For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!

    return valuesArray[index];
  };
}
// CONCATENATED MODULE: ./node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js

var eraValues = {
  narrow: ['B', 'A'],
  abbreviated: ['BC', 'AD'],
  wide: ['Before Christ', 'Anno Domini']
};
var quarterValues = {
  narrow: ['1', '2', '3', '4'],
  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],
  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter']
}; // Note: in English, the names of days of the week and months are capitalized.
// If you are making a new locale based on this one, check if the same is true for the language you're working on.
// Generally, formatted dates should look like they are in the middle of a sentence,
// e.g. in Spanish language the weekdays and months should be in the lowercase.

var monthValues = {
  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],
  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']
};
var dayValues = {
  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],
  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']
};
var dayPeriodValues = {
  narrow: {
    am: 'a',
    pm: 'p',
    midnight: 'mi',
    noon: 'n',
    morning: 'morning',
    afternoon: 'afternoon',
    evening: 'evening',
    night: 'night'
  },
  abbreviated: {
    am: 'AM',
    pm: 'PM',
    midnight: 'midnight',
    noon: 'noon',
    morning: 'morning',
    afternoon: 'afternoon',
    evening: 'evening',
    night: 'night'
  },
  wide: {
    am: 'a.m.',
    pm: 'p.m.',
    midnight: 'midnight',
    noon: 'noon',
    morning: 'morning',
    afternoon: 'afternoon',
    evening: 'evening',
    night: 'night'
  }
};
var formattingDayPeriodValues = {
  narrow: {
    am: 'a',
    pm: 'p',
    midnight: 'mi',
    noon: 'n',
    morning: 'in the morning',
    afternoon: 'in the afternoon',
    evening: 'in the evening',
    night: 'at night'
  },
  abbreviated: {
    am: 'AM',
    pm: 'PM',
    midnight: 'midnight',
    noon: 'noon',
    morning: 'in the morning',
    afternoon: 'in the afternoon',
    evening: 'in the evening',
    night: 'at night'
  },
  wide: {
    am: 'a.m.',
    pm: 'p.m.',
    midnight: 'midnight',
    noon: 'noon',
    morning: 'in the morning',
    afternoon: 'in the afternoon',
    evening: 'in the evening',
    night: 'at night'
  }
};

var ordinalNumber = function ordinalNumber(dirtyNumber, _options) {
  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,
  // if they are different for different grammatical genders,
  // use `options.unit`.
  //
  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',
  // 'day', 'hour', 'minute', 'second'.

  var rem100 = number % 100;

  if (rem100 > 20 || rem100 < 10) {
    switch (rem100 % 10) {
      case 1:
        return number + 'st';

      case 2:
        return number + 'nd';

      case 3:
        return number + 'rd';
    }
  }

  return number + 'th';
};

var localize = {
  ordinalNumber: ordinalNumber,
  era: buildLocalizeFn({
    values: eraValues,
    defaultWidth: 'wide'
  }),
  quarter: buildLocalizeFn({
    values: quarterValues,
    defaultWidth: 'wide',
    argumentCallback: function argumentCallback(quarter) {
      return quarter - 1;
    }
  }),
  month: buildLocalizeFn({
    values: monthValues,
    defaultWidth: 'wide'
  }),
  day: buildLocalizeFn({
    values: dayValues,
    defaultWidth: 'wide'
  }),
  dayPeriod: buildLocalizeFn({
    values: dayPeriodValues,
    defaultWidth: 'wide',
    formattingValues: formattingDayPeriodValues,
    defaultFormattingWidth: 'wide'
  })
};
/* harmony default export */ var _lib_localize = (localize);
// CONCATENATED MODULE: ./node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js
function buildMatchFn(args) {
  return function (string) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var width = options.width;
    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];
    var matchResult = string.match(matchPattern);

    if (!matchResult) {
      return null;
    }

    var matchedString = matchResult[0];
    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];
    var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function (pattern) {
      return pattern.test(matchedString);
    }) : findKey(parsePatterns, function (pattern) {
      return pattern.test(matchedString);
    });
    var value;
    value = args.valueCallback ? args.valueCallback(key) : key;
    value = options.valueCallback ? options.valueCallback(value) : value;
    var rest = string.slice(matchedString.length);
    return {
      value: value,
      rest: rest
    };
  };
}

function findKey(object, predicate) {
  for (var key in object) {
    if (object.hasOwnProperty(key) && predicate(object[key])) {
      return key;
    }
  }

  return undefined;
}

function findIndex(array, predicate) {
  for (var key = 0; key < array.length; key++) {
    if (predicate(array[key])) {
      return key;
    }
  }

  return undefined;
}
// CONCATENATED MODULE: ./node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js
function buildMatchPatternFn(args) {
  return function (string) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var matchResult = string.match(args.matchPattern);
    if (!matchResult) return null;
    var matchedString = matchResult[0];
    var parseResult = string.match(args.parsePattern);
    if (!parseResult) return null;
    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];
    value = options.valueCallback ? options.valueCallback(value) : value;
    var rest = string.slice(matchedString.length);
    return {
      value: value,
      rest: rest
    };
  };
}
// CONCATENATED MODULE: ./node_modules/date-fns/esm/locale/en-US/_lib/match/index.js


var matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
var parseOrdinalNumberPattern = /\d+/i;
var matchEraPatterns = {
  narrow: /^(b|a)/i,
  abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
  wide: /^(before christ|before common era|anno domini|common era)/i
};
var parseEraPatterns = {
  any: [/^b/i, /^(a|c)/i]
};
var matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^q[1234]/i,
  wide: /^[1234](th|st|nd|rd)? quarter/i
};
var parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i]
};
var matchMonthPatterns = {
  narrow: /^[jfmasond]/i,
  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i
};
var parseMonthPatterns = {
  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]
};
var matchDayPatterns = {
  narrow: /^[smtwf]/i,
  short: /^(su|mo|tu|we|th|fr|sa)/i,
  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i
};
var parseDayPatterns = {
  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]
};
var matchDayPeriodPatterns = {
  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
  any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i
};
var parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^mi/i,
    noon: /^no/i,
    morning: /morning/i,
    afternoon: /afternoon/i,
    evening: /evening/i,
    night: /night/i
  }
};
var match = {
  ordinalNumber: buildMatchPatternFn({
    matchPattern: matchOrdinalNumberPattern,
    parsePattern: parseOrdinalNumberPattern,
    valueCallback: function valueCallback(value) {
      return parseInt(value, 10);
    }
  }),
  era: buildMatchFn({
    matchPatterns: matchEraPatterns,
    defaultMatchWidth: 'wide',
    parsePatterns: parseEraPatterns,
    defaultParseWidth: 'any'
  }),
  quarter: buildMatchFn({
    matchPatterns: matchQuarterPatterns,
    defaultMatchWidth: 'wide',
    parsePatterns: parseQuarterPatterns,
    defaultParseWidth: 'any',
    valueCallback: function valueCallback(index) {
      return index + 1;
    }
  }),
  month: buildMatchFn({
    matchPatterns: matchMonthPatterns,
    defaultMatchWidth: 'wide',
    parsePatterns: parseMonthPatterns,
    defaultParseWidth: 'any'
  }),
  day: buildMatchFn({
    matchPatterns: matchDayPatterns,
    defaultMatchWidth: 'wide',
    parsePatterns: parseDayPatterns,
    defaultParseWidth: 'any'
  }),
  dayPeriod: buildMatchFn({
    matchPatterns: matchDayPeriodPatterns,
    defaultMatchWidth: 'any',
    parsePatterns: parseDayPeriodPatterns,
    defaultParseWidth: 'any'
  })
};
/* harmony default export */ var _lib_match = (match);
// CONCATENATED MODULE: ./node_modules/date-fns/esm/locale/en-US/index.js






/**
 * @type {Locale}
 * @category Locales
 * @summary English locale (United States).
 * @language English
 * @iso-639-2 eng
 * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}
 * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}
 */
var locale = {
  code: 'en-US',
  formatDistance: _lib_formatDistance,
  formatLong: _lib_formatLong,
  formatRelative: _lib_formatRelative,
  localize: _lib_localize,
  match: _lib_match,
  options: {
    weekStartsOn: 0
    /* Sunday */
    ,
    firstWeekContainsDate: 1
  }
};
/* harmony default export */ var en_US = (locale);
// CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/defaultLocale/index.js

/* harmony default export */ var defaultLocale = __webpack_exports__["a"] = (en_US);

/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
//     (c) 2012-2018 Airbnb, Inc.
//
//     polyglot.js may be freely distributed under the terms of the BSD
//     license. For all licensing information, details, and documentation:
//     http://airbnb.github.com/polyglot.js
//
//
// Polyglot.js is an I18n helper library written in JavaScript, made to
// work both in the browser and in Node. It provides a simple solution for
// interpolation and pluralization, based off of Airbnb's
// experience adding I18n functionality to its Backbone.js and Node apps.
//
// Polylglot is agnostic to your translation backend. It doesn't perform any
// translation; it simply gives you a way to manage translated phrases from
// your client- or server-side JavaScript application.
//



var forEach = __webpack_require__(760);
var entries = __webpack_require__(788);
var warning = __webpack_require__(333);
var has = __webpack_require__(105);
var trim = __webpack_require__(790);

var warn = function warn(message) {
  warning(false, message);
};

var defaultReplace = String.prototype.replace;
var split = String.prototype.split;

// #### Pluralization methods
// The string that separates the different phrase possibilities.
var delimiter = '||||';

var russianPluralGroups = function (n) {
  var lastTwo = n % 100;
  var end = lastTwo % 10;
  if (lastTwo !== 11 && end === 1) {
    return 0;
  }
  if (2 <= end && end <= 4 && !(lastTwo >= 12 && lastTwo <= 14)) {
    return 1;
  }
  return 2;
};

var defaultPluralRules = {
  // Mapping from pluralization group plural logic.
  pluralTypes: {
    arabic: function (n) {
      // http://www.arabeyes.org/Plural_Forms
      if (n < 3) { return n; }
      var lastTwo = n % 100;
      if (lastTwo >= 3 && lastTwo <= 10) return 3;
      return lastTwo >= 11 ? 4 : 5;
    },
    bosnian_serbian: russianPluralGroups,
    chinese: function () { return 0; },
    croatian: russianPluralGroups,
    french: function (n) { return n >= 2 ? 1 : 0; },
    german: function (n) { return n !== 1 ? 1 : 0; },
    russian: russianPluralGroups,
    lithuanian: function (n) {
      if (n % 10 === 1 && n % 100 !== 11) { return 0; }
      return n % 10 >= 2 && n % 10 <= 9 && (n % 100 < 11 || n % 100 > 19) ? 1 : 2;
    },
    czech: function (n) {
      if (n === 1) { return 0; }
      return (n >= 2 && n <= 4) ? 1 : 2;
    },
    polish: function (n) {
      if (n === 1) { return 0; }
      var end = n % 10;
      return 2 <= end && end <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2;
    },
    icelandic: function (n) { return (n % 10 !== 1 || n % 100 === 11) ? 1 : 0; },
    slovenian: function (n) {
      var lastTwo = n % 100;
      if (lastTwo === 1) {
        return 0;
      }
      if (lastTwo === 2) {
        return 1;
      }
      if (lastTwo === 3 || lastTwo === 4) {
        return 2;
      }
      return 3;
    },
    romanian: function (n) {
      if (n === 1) { return 0; }
      var lastTwo = n % 100;
      if (n === 0 || (lastTwo >= 2 && lastTwo <= 19)) { return 1; }
      return 2;
    }
  },

  // Mapping from pluralization group to individual language codes/locales.
  // Will look up based on exact match, if not found and it's a locale will parse the locale
  // for language code, and if that does not exist will default to 'en'
  pluralTypeToLanguages: {
    arabic: ['ar'],
    bosnian_serbian: ['bs-Latn-BA', 'bs-Cyrl-BA', 'srl-RS', 'sr-RS'],
    chinese: ['id', 'id-ID', 'ja', 'ko', 'ko-KR', 'lo', 'ms', 'th', 'th-TH', 'zh'],
    croatian: ['hr', 'hr-HR'],
    german: ['fa', 'da', 'de', 'en', 'es', 'fi', 'el', 'he', 'hi-IN', 'hu', 'hu-HU', 'it', 'nl', 'no', 'pt', 'sv', 'tr'],
    french: ['fr', 'tl', 'pt-br'],
    russian: ['ru', 'ru-RU'],
    lithuanian: ['lt'],
    czech: ['cs', 'cs-CZ', 'sk'],
    polish: ['pl'],
    icelandic: ['is', 'mk'],
    slovenian: ['sl-SL'],
    romanian: ['ro']
  }
};

function langToTypeMap(mapping) {
  var ret = {};
  forEach(entries(mapping), function (entry) {
    var type = entry[0];
    var langs = entry[1];
    forEach(langs, function (lang) {
      ret[lang] = type;
    });
  });
  return ret;
}

function pluralTypeName(pluralRules, locale) {
  var langToPluralType = langToTypeMap(pluralRules.pluralTypeToLanguages);
  return langToPluralType[locale]
    || langToPluralType[split.call(locale, /-/, 1)[0]]
    || langToPluralType.en;
}

function pluralTypeIndex(pluralRules, pluralType, count) {
  return pluralRules.pluralTypes[pluralType](count);
}

function createMemoizedPluralTypeNameSelector() {
  var localePluralTypeStorage = {};

  return function (pluralRules, locale) {
    var pluralType = localePluralTypeStorage[locale];

    if (pluralType && !pluralRules.pluralTypes[pluralType]) {
      pluralType = null;
      localePluralTypeStorage[locale] = pluralType;
    }

    if (!pluralType) {
      pluralType = pluralTypeName(pluralRules, locale);

      if (pluralType) {
        localePluralTypeStorage[locale] = pluralType;
      }
    }

    return pluralType;
  };
}

function escape(token) {
  return token.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
}

function constructTokenRegex(opts) {
  var prefix = (opts && opts.prefix) || '%{';
  var suffix = (opts && opts.suffix) || '}';

  if (prefix === delimiter || suffix === delimiter) {
    throw new RangeError('"' + delimiter + '" token is reserved for pluralization');
  }

  return new RegExp(escape(prefix) + '(.*?)' + escape(suffix), 'g');
}

var memoizedPluralTypeName = createMemoizedPluralTypeNameSelector();

var defaultTokenRegex = /%\{(.*?)\}/g;

// ### transformPhrase(phrase, substitutions, locale)
//
// Takes a phrase string and transforms it by choosing the correct
// plural form and interpolating it.
//
//     transformPhrase('Hello, %{name}!', {name: 'Spike'});
//     // "Hello, Spike!"
//
// The correct plural form is selected if substitutions.smart_count
// is set. You can pass in a number instead of an Object as `substitutions`
// as a shortcut for `smart_count`.
//
//     transformPhrase('%{smart_count} new messages |||| 1 new message', {smart_count: 1}, 'en');
//     // "1 new message"
//
//     transformPhrase('%{smart_count} new messages |||| 1 new message', {smart_count: 2}, 'en');
//     // "2 new messages"
//
//     transformPhrase('%{smart_count} new messages |||| 1 new message', 5, 'en');
//     // "5 new messages"
//
// You should pass in a third argument, the locale, to specify the correct plural type.
// It defaults to `'en'` with 2 plural forms.
function transformPhrase(
  phrase,
  substitutions,
  locale,
  tokenRegex,
  pluralRules,
  replaceImplementation
) {
  if (typeof phrase !== 'string') {
    throw new TypeError('Polyglot.transformPhrase expects argument #1 to be string');
  }

  if (substitutions == null) {
    return phrase;
  }

  var result = phrase;
  var interpolationRegex = tokenRegex || defaultTokenRegex;
  var replace = replaceImplementation || defaultReplace;

  // allow number as a pluralization shortcut
  var options = typeof substitutions === 'number' ? { smart_count: substitutions } : substitutions;

  // Select plural form: based on a phrase text that contains `n`
  // plural forms separated by `delimiter`, a `locale`, and a `substitutions.smart_count`,
  // choose the correct plural form. This is only done if `count` is set.
  if (options.smart_count != null && phrase) {
    var pluralRulesOrDefault = pluralRules || defaultPluralRules;
    var texts = split.call(phrase, delimiter);
    var bestLocale = locale || 'en';
    var pluralType = memoizedPluralTypeName(pluralRulesOrDefault, bestLocale);
    var pluralTypeWithCount = pluralTypeIndex(
      pluralRulesOrDefault,
      pluralType,
      options.smart_count
    );

    result = trim(texts[pluralTypeWithCount] || texts[0]);
  }

  // Interpolate: Creates a `RegExp` object for each interpolation placeholder.
  result = replace.call(result, interpolationRegex, function (expression, argument) {
    if (!has(options, argument) || options[argument] == null) { return expression; }
    return options[argument];
  });

  return result;
}

// ### Polyglot class constructor
function Polyglot(options) {
  var opts = options || {};
  this.phrases = {};
  this.extend(opts.phrases || {});
  this.currentLocale = opts.locale || 'en';
  var allowMissing = opts.allowMissing ? transformPhrase : null;
  this.onMissingKey = typeof opts.onMissingKey === 'function' ? opts.onMissingKey : allowMissing;
  this.warn = opts.warn || warn;
  this.replaceImplementation = opts.replace || defaultReplace;
  this.tokenRegex = constructTokenRegex(opts.interpolation);
  this.pluralRules = opts.pluralRules || defaultPluralRules;
}

// ### polyglot.locale([locale])
//
// Get or set locale. Internally, Polyglot only uses locale for pluralization.
Polyglot.prototype.locale = function (newLocale) {
  if (newLocale) this.currentLocale = newLocale;
  return this.currentLocale;
};

// ### polyglot.extend(phrases)
//
// Use `extend` to tell Polyglot how to translate a given key.
//
//     polyglot.extend({
//       "hello": "Hello",
//       "hello_name": "Hello, %{name}"
//     });
//
// The key can be any string.  Feel free to call `extend` multiple times;
// it will override any phrases with the same key, but leave existing phrases
// untouched.
//
// It is also possible to pass nested phrase objects, which get flattened
// into an object with the nested keys concatenated using dot notation.
//
//     polyglot.extend({
//       "nav": {
//         "hello": "Hello",
//         "hello_name": "Hello, %{name}",
//         "sidebar": {
//           "welcome": "Welcome"
//         }
//       }
//     });
//
//     console.log(polyglot.phrases);
//     // {
//     //   'nav.hello': 'Hello',
//     //   'nav.hello_name': 'Hello, %{name}',
//     //   'nav.sidebar.welcome': 'Welcome'
//     // }
//
// `extend` accepts an optional second argument, `prefix`, which can be used
// to prefix every key in the phrases object with some string, using dot
// notation.
//
//     polyglot.extend({
//       "hello": "Hello",
//       "hello_name": "Hello, %{name}"
//     }, "nav");
//
//     console.log(polyglot.phrases);
//     // {
//     //   'nav.hello': 'Hello',
//     //   'nav.hello_name': 'Hello, %{name}'
//     // }
//
// This feature is used internally to support nested phrase objects.
Polyglot.prototype.extend = function (morePhrases, prefix) {
  forEach(entries(morePhrases || {}), function (entry) {
    var key = entry[0];
    var phrase = entry[1];
    var prefixedKey = prefix ? prefix + '.' + key : key;
    if (typeof phrase === 'object') {
      this.extend(phrase, prefixedKey);
    } else {
      this.phrases[prefixedKey] = phrase;
    }
  }, this);
};

// ### polyglot.unset(phrases)
// Use `unset` to selectively remove keys from a polyglot instance.
//
//     polyglot.unset("some_key");
//     polyglot.unset({
//       "hello": "Hello",
//       "hello_name": "Hello, %{name}"
//     });
//
// The unset method can take either a string (for the key), or an object hash with
// the keys that you would like to unset.
Polyglot.prototype.unset = function (morePhrases, prefix) {
  if (typeof morePhrases === 'string') {
    delete this.phrases[morePhrases];
  } else {
    forEach(entries(morePhrases || {}), function (entry) {
      var key = entry[0];
      var phrase = entry[1];
      var prefixedKey = prefix ? prefix + '.' + key : key;
      if (typeof phrase === 'object') {
        this.unset(phrase, prefixedKey);
      } else {
        delete this.phrases[prefixedKey];
      }
    }, this);
  }
};

// ### polyglot.clear()
//
// Clears all phrases. Useful for special cases, such as freeing
// up memory if you have lots of phrases but no longer need to
// perform any translation. Also used internally by `replace`.
Polyglot.prototype.clear = function () {
  this.phrases = {};
};

// ### polyglot.replace(phrases)
//
// Completely replace the existing phrases with a new set of phrases.
// Normally, just use `extend` to add more phrases, but under certain
// circumstances, you may want to make sure no old phrases are lying around.
Polyglot.prototype.replace = function (newPhrases) {
  this.clear();
  this.extend(newPhrases);
};

// ### polyglot.t(key, options)
//
// The most-used method. Provide a key, and `t` will return the
// phrase.
//
//     polyglot.t("hello");
//     => "Hello"
//
// The phrase value is provided first by a call to `polyglot.extend()` or
// `polyglot.replace()`.
//
// Pass in an object as the second argument to perform interpolation.
//
//     polyglot.t("hello_name", {name: "Spike"});
//     => "Hello, Spike"
//
// If you like, you can provide a default value in case the phrase is missing.
// Use the special option key "_" to specify a default.
//
//     polyglot.t("i_like_to_write_in_language", {
//       _: "I like to write in %{language}.",
//       language: "JavaScript"
//     });
//     => "I like to write in JavaScript."
//
Polyglot.prototype.t = function (key, options) {
  var phrase, result;
  var opts = options == null ? {} : options;
  if (typeof this.phrases[key] === 'string') {
    phrase = this.phrases[key];
  } else if (typeof opts._ === 'string') {
    phrase = opts._;
  } else if (this.onMissingKey) {
    var onMissingKey = this.onMissingKey;
    result = onMissingKey(
      key,
      opts,
      this.currentLocale,
      this.tokenRegex,
      this.pluralRules,
      this.replaceImplementation
    );
  } else {
    this.warn('Missing translation for key: "' + key + '"');
    result = key;
  }
  if (typeof phrase === 'string') {
    result = transformPhrase(
      phrase,
      opts,
      this.currentLocale,
      this.tokenRegex,
      this.pluralRules,
      this.replaceImplementation
    );
  }
  return result;
};

// ### polyglot.has(key)
//
// Check if polyglot has a translation for given key
Polyglot.prototype.has = function (key) {
  return has(this.phrases, key);
};

// export transformPhrase
Polyglot.transformPhrase = function transform(phrase, substitutions, locale) {
  return transformPhrase(phrase, substitutions, locale);
};

module.exports = Polyglot;


/***/ }),
/* 213 */
/***/ (function(module, exports) {

function _getPrototypeOf(o) {
  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  return _getPrototypeOf(o);
}
module.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 214 */
/***/ (function(module, exports) {

module.exports = require("punycode");

/***/ }),
/* 215 */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.filter` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 */
function arrayFilter(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length,
      resIndex = 0,
      result = [];

  while (++index < length) {
    var value = array[index];
    if (predicate(value, index, array)) {
      result[resIndex++] = value;
    }
  }
  return result;
}

module.exports = arrayFilter;


/***/ }),
/* 216 */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.forEach` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns `array`.
 */
function arrayEach(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (iteratee(array[index], index, array) === false) {
      break;
    }
  }
  return array;
}

module.exports = arrayEach;


/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {

var Stack = __webpack_require__(126),
    arrayEach = __webpack_require__(216),
    assignValue = __webpack_require__(154),
    baseAssign = __webpack_require__(457),
    baseAssignIn = __webpack_require__(537),
    cloneBuffer = __webpack_require__(256),
    copyArray = __webpack_require__(110),
    copySymbols = __webpack_require__(540),
    copySymbolsIn = __webpack_require__(541),
    getAllKeys = __webpack_require__(241),
    getAllKeysIn = __webpack_require__(175),
    getTag = __webpack_require__(63),
    initCloneArray = __webpack_require__(542),
    initCloneByTag = __webpack_require__(543),
    initCloneObject = __webpack_require__(259),
    isArray = __webpack_require__(21),
    isBuffer = __webpack_require__(91),
    isMap = __webpack_require__(547),
    isObject = __webpack_require__(38),
    isSet = __webpack_require__(549),
    keys = __webpack_require__(66),
    keysIn = __webpack_require__(87);

/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1,
    CLONE_FLAT_FLAG = 2,
    CLONE_SYMBOLS_FLAG = 4;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values supported by `_.clone`. */
var cloneableTags = {};
cloneableTags[argsTag] = cloneableTags[arrayTag] =
cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
cloneableTags[boolTag] = cloneableTags[dateTag] =
cloneableTags[float32Tag] = cloneableTags[float64Tag] =
cloneableTags[int8Tag] = cloneableTags[int16Tag] =
cloneableTags[int32Tag] = cloneableTags[mapTag] =
cloneableTags[numberTag] = cloneableTags[objectTag] =
cloneableTags[regexpTag] = cloneableTags[setTag] =
cloneableTags[stringTag] = cloneableTags[symbolTag] =
cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
cloneableTags[errorTag] = cloneableTags[funcTag] =
cloneableTags[weakMapTag] = false;

/**
 * The base implementation of `_.clone` and `_.cloneDeep` which tracks
 * traversed objects.
 *
 * @private
 * @param {*} value The value to clone.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Deep clone
 *  2 - Flatten inherited properties
 *  4 - Clone symbols
 * @param {Function} [customizer] The function to customize cloning.
 * @param {string} [key] The key of `value`.
 * @param {Object} [object] The parent object of `value`.
 * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
 * @returns {*} Returns the cloned value.
 */
function baseClone(value, bitmask, customizer, key, object, stack) {
  var result,
      isDeep = bitmask & CLONE_DEEP_FLAG,
      isFlat = bitmask & CLONE_FLAT_FLAG,
      isFull = bitmask & CLONE_SYMBOLS_FLAG;

  if (customizer) {
    result = object ? customizer(value, key, object, stack) : customizer(value);
  }
  if (result !== undefined) {
    return result;
  }
  if (!isObject(value)) {
    return value;
  }
  var isArr = isArray(value);
  if (isArr) {
    result = initCloneArray(value);
    if (!isDeep) {
      return copyArray(value, result);
    }
  } else {
    var tag = getTag(value),
        isFunc = tag == funcTag || tag == genTag;

    if (isBuffer(value)) {
      return cloneBuffer(value, isDeep);
    }
    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
      result = (isFlat || isFunc) ? {} : initCloneObject(value);
      if (!isDeep) {
        return isFlat
          ? copySymbolsIn(value, baseAssignIn(result, value))
          : copySymbols(value, baseAssign(result, value));
      }
    } else {
      if (!cloneableTags[tag]) {
        return object ? value : {};
      }
      result = initCloneByTag(value, tag, isDeep);
    }
  }
  // Check for circular references and return its corresponding clone.
  stack || (stack = new Stack);
  var stacked = stack.get(value);
  if (stacked) {
    return stacked;
  }
  stack.set(value, result);

  if (isSet(value)) {
    value.forEach(function(subValue) {
      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
    });
  } else if (isMap(value)) {
    value.forEach(function(subValue, key) {
      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
    });
  }

  var keysFunc = isFull
    ? (isFlat ? getAllKeysIn : getAllKeys)
    : (isFlat ? keysIn : keys);

  var props = isArr ? undefined : keysFunc(value);
  arrayEach(props || value, function(subValue, key) {
    if (props) {
      key = subValue;
      subValue = value[key];
    }
    // Recursively populate clone (susceptible to call stack limits).
    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
  });
  return result;
}

module.exports = baseClone;


/***/ }),
/* 218 */
/***/ (function(module, exports) {

module.exports = require("os");

/***/ }),
/* 219 */
/***/ (function(module, exports, __webpack_require__) {

var baseDifference = __webpack_require__(472),
    baseFlatten = __webpack_require__(122),
    baseRest = __webpack_require__(59),
    isArrayLikeObject = __webpack_require__(124);

/**
 * Creates an array of `array` values not included in the other given arrays
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons. The order and references of result values are
 * determined by the first array.
 *
 * **Note:** Unlike `_.pullAll`, this method returns a new array.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {...Array} [values] The values to exclude.
 * @returns {Array} Returns the new array of filtered values.
 * @see _.without, _.xor
 * @example
 *
 * _.difference([2, 1], [2, 3]);
 * // => [1]
 */
var difference = baseRest(function(array, values) {
  return isArrayLikeObject(array)
    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
    : [];
});

module.exports = difference;


/***/ }),
/* 220 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "a", function() { return /* binding */ initPolyglot; });
__webpack_require__.d(__webpack_exports__, "b", function() { return /* binding */ startService; });

// EXTERNAL MODULE: ./src/constants.js
var constants = __webpack_require__(0);

// EXTERNAL MODULE: ./src/doctypes/index.js
var doctypes = __webpack_require__(3);

// EXTERNAL MODULE: ./node_modules/cozy-ui/node_modules/node-polyglot/index.js
var node_polyglot = __webpack_require__(212);
var node_polyglot_default = /*#__PURE__*/__webpack_require__.n(node_polyglot);

// EXTERNAL MODULE: ./node_modules/cozy-ui/node_modules/@babel/runtime/helpers/classCallCheck.js
var classCallCheck = __webpack_require__(441);
var classCallCheck_default = /*#__PURE__*/__webpack_require__.n(classCallCheck);

// EXTERNAL MODULE: ./node_modules/cozy-ui/node_modules/@babel/runtime/helpers/createClass.js
var createClass = __webpack_require__(442);
var createClass_default = /*#__PURE__*/__webpack_require__.n(createClass);

// EXTERNAL MODULE: ./node_modules/cozy-ui/node_modules/@babel/runtime/helpers/assertThisInitialized.js
var assertThisInitialized = __webpack_require__(208);
var assertThisInitialized_default = /*#__PURE__*/__webpack_require__.n(assertThisInitialized);

// EXTERNAL MODULE: ./node_modules/cozy-ui/node_modules/@babel/runtime/helpers/inherits.js
var inherits = __webpack_require__(443);
var inherits_default = /*#__PURE__*/__webpack_require__.n(inherits);

// EXTERNAL MODULE: ./node_modules/cozy-ui/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js
var possibleConstructorReturn = __webpack_require__(444);
var possibleConstructorReturn_default = /*#__PURE__*/__webpack_require__.n(possibleConstructorReturn);

// EXTERNAL MODULE: ./node_modules/cozy-ui/node_modules/@babel/runtime/helpers/getPrototypeOf.js
var getPrototypeOf = __webpack_require__(213);
var getPrototypeOf_default = /*#__PURE__*/__webpack_require__.n(getPrototypeOf);

// EXTERNAL MODULE: ./node_modules/cozy-ui/node_modules/@babel/runtime/helpers/defineProperty.js
var defineProperty = __webpack_require__(445);
var defineProperty_default = /*#__PURE__*/__webpack_require__.n(defineProperty);

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(2);
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ./node_modules/prop-types/index.js
var prop_types = __webpack_require__(54);
var prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);

// EXTERNAL MODULE: ./node_modules/cozy-ui/node_modules/date-fns/format/index.js
var format = __webpack_require__(446);
var format_default = /*#__PURE__*/__webpack_require__.n(format);

// EXTERNAL MODULE: ./node_modules/cozy-ui/node_modules/date-fns/distance_in_words_to_now/index.js
var distance_in_words_to_now = __webpack_require__(447);
var distance_in_words_to_now_default = /*#__PURE__*/__webpack_require__.n(distance_in_words_to_now);

// EXTERNAL MODULE: ./node_modules/cozy-ui/node_modules/date-fns/distance_in_words_strict/index.js
var distance_in_words_strict = __webpack_require__(448);
var distance_in_words_strict_default = /*#__PURE__*/__webpack_require__.n(distance_in_words_strict);

// EXTERNAL MODULE: ./node_modules/cozy-ui/node_modules/date-fns/difference_in_calendar_days/index.js
var difference_in_calendar_days = __webpack_require__(209);
var difference_in_calendar_days_default = /*#__PURE__*/__webpack_require__.n(difference_in_calendar_days);

// EXTERNAL MODULE: ./node_modules/cozy-ui/node_modules/date-fns/add_days/index.js
var add_days = __webpack_require__(449);
var add_days_default = /*#__PURE__*/__webpack_require__.n(add_days);

// CONCATENATED MODULE: ./node_modules/cozy-ui/transpiled/react/providers/I18n/format.js






var format_locales = {};
var format_lang = DEFAULT_LANG;

var getWarningMessage = function getWarningMessage(lang) {
  return "The \"".concat(lang, "\" locale isn't supported by date-fns. or has not been included in the build. Check if you have configured a ContextReplacementPlugin that is too restrictive.");
};

var format_provideDateFnsLocale = function provideDateFnsLocale(userLang) {
  var defaultLang = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_LANG;
  format_lang = userLang;

  try {
    format_locales[defaultLang] = __webpack_require__(365)("./".concat(defaultLang, "/index.js"));
  } catch (err) {
    console.warn(getWarningMessage(defaultLang));
  }

  if (format_lang && format_lang !== defaultLang) {
    try {
      format_locales[format_lang] = __webpack_require__(365)("./".concat(format_lang, "/index.js"));
    } catch (e) {
      console.warn(getWarningMessage(format_lang));
    }
  }

  return format_locales[format_lang];
};
var format_initFormat = function initFormat(userLang) {
  var defaultLang = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_LANG;
  return function (date, formatStr) {
    var locale = format_provideDateFnsLocale(userLang, defaultLang);
    return format_default()(date, formatStr, {
      locale: locale
    });
  };
};
var format_formatLocallyDistanceToNow = function formatLocallyDistanceToNow(date) {
  return distance_in_words_to_now_default()(date, {
    locale: format_locales[format_lang]
  });
};
/**
 * Return the distance between the given dates in words, using strict units.
 * If the distance is in days, we force the time to be a whole number of days
 * @param {Date} date - Future date compared to the current date
 * @returns {string} Number of hours/day/month that separates the date from the present moment
 */

var format_formatLocallyDistanceToNowStrict = function formatLocallyDistanceToNowStrict(date) {
  var now = new Date();
  var days = difference_in_calendar_days_default()(date, now);
  var isSameDay = days === 0;
  var isInMonth = days > 0 && days < 32;
  var refDate = isSameDay ? date : add_days_default()(now, days);
  var unit = isInMonth ? 'd' : undefined;
  return distance_in_words_strict_default()(now, refDate, {
    locale: format_locales[format_lang],
    unit: unit
  });
};
// CONCATENATED MODULE: ./node_modules/cozy-ui/transpiled/react/providers/I18n/index.js
/**
 * Provides an I18n helper using a Higher Order Component.
 */










function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }





var DEFAULT_LANG = 'en';
var I18nContext = /*#__PURE__*/react_default.a.createContext();
var I18n_useI18n = function useI18n() {
  var context = Object(react["useContext"])(I18nContext);

  if (!context) {
    throw new Error('`I18nContext` is missing. `useI18n()` must be used within a `<I18n>`');
  }

  return context;
}; // Provider root component

var I18n_I18n = /*#__PURE__*/function (_Component) {
  inherits_default()(I18n, _Component);

  var _super = _createSuper(I18n);

  function I18n(props) {
    var _this;

    classCallCheck_default()(this, I18n);

    _this = _super.call(this, props);

    defineProperty_default()(assertThisInitialized_default()(_this), "UNSAFE_componentWillReceiveProps", function (nextProps) {
      if (nextProps.lang !== _this.props.lang) {
        _this.init(nextProps);
      }
    });

    _this.init(_this.props);

    return _this;
  }

  createClass_default()(I18n, [{
    key: "init",
    value: function init(props) {
      var polyglot = props.polyglot,
          lang = props.lang,
          dictRequire = props.dictRequire,
          context = props.context,
          defaultLang = props.defaultLang;
      this.translator = polyglot || translation_initTranslation(lang, dictRequire, context, defaultLang);
      this.format = format_initFormat(lang, defaultLang);
      this.t = this.translator.t.bind(this.translator);
      this.contextValue = this.getContextValue(props);
    }
  }, {
    key: "getContextValue",
    value: function getContextValue(props) {
      return {
        t: this.t,
        f: this.format,
        polyglot: (props || this.props).polyglot || this.translator,
        lang: (props || this.props).lang
      };
    }
  }, {
    key: "getChildContext",
    value: function getChildContext() {
      return this.contextValue;
    }
  }, {
    key: "render",
    value: function render() {
      return /*#__PURE__*/react_default.a.createElement(I18nContext.Provider, {
        value: this.contextValue
      }, this.props.children);
    }
  }]);

  return I18n;
}(react["Component"]);
I18n_I18n.propTypes = {
  lang: prop_types_default.a.string.isRequired,
  // current language.
  polyglot: prop_types_default.a.object,
  // A polyglot instance.
  dictRequire: prop_types_default.a.func,
  // A callback to load locales.
  context: prop_types_default.a.string,
  // current context.
  defaultLang: prop_types_default.a.string // default language. By default is 'en'

};
I18n_I18n.defaultProps = {
  defaultLang: DEFAULT_LANG
};
I18n_I18n.childContextTypes = {
  t: prop_types_default.a.func,
  f: prop_types_default.a.func,
  polyglot: prop_types_default.a.object,
  lang: prop_types_default.a.string
};



/* harmony default export */ var providers_I18n = (I18n_I18n);
// CONCATENATED MODULE: ./node_modules/cozy-ui/transpiled/react/providers/I18n/translation.js


var _polyglot;
var translation_initTranslation = function initTranslation(lang, dictRequire, context) {
  var defaultLang = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : DEFAULT_LANG;
  _polyglot = new node_polyglot_default.a({
    phrases: dictRequire(defaultLang),
    locale: defaultLang
  }); // Load global locales

  if (lang && lang !== defaultLang) {
    try {
      var dict = dictRequire(lang);

      _polyglot.extend(dict);

      _polyglot.locale(lang);
    } catch (e) {
      console.warn("The dict phrases for \"".concat(lang, "\" can't be loaded"));
    }
  } // Load context locales


  if (context) {
    try {
      var _dict = dictRequire(lang, context);

      _polyglot.extend(_dict);
    } catch (e) {
      console.warn("The context ".concat(context, " cannot be loaded for lang ").concat(lang));
    }
  }

  return _polyglot;
};
var extend = function extend(dict, polyglot) {
  var _ref;

  return (_ref = polyglot || _polyglot) === null || _ref === void 0 ? void 0 : _ref.extend(dict);
}; // Use to determine if we need to merge locales again, and to avoid useless calls

var useExtendI18nLang = '';
/**
 * Hook to merge app locales with cozy-ui locales
 * @param {object} locales - Locales sorted by lang `{ fr: {...}, en: {...} }`
 * @returns {void}
 */

var translation_useExtendI18n = function useExtendI18n(locales) {
  var _useI18n = I18n_useI18n(),
      lang = _useI18n.lang,
      polyglot = _useI18n.polyglot;

  if (!locales || !lang || !polyglot) return; // To simplify code we use Polyglot.extend to merge
  // locales from object and from polyglot.phrases
  // rather than native JS or lodash. this is why we have two extend.

  if (useExtendI18nLang !== lang) {
    var _polyglot2 = new node_polyglot_default.a({
      phrases: locales[lang],
      locale: lang
    }); // merge locales from app and cozy-ui, without replacing existing one in app


    extend(polyglot.phrases, _polyglot2); // use merged locales in app

    extend(_polyglot2.phrases, polyglot); // set the sitch to avoid useless merge

    useExtendI18nLang = lang;
  }
};
// CONCATENATED MODULE: ./src/lib/services.js



const services_DEFAULT_LANG = 'en';
const services_dictRequire = lang => {
  let res;
  try {
    res = __webpack_require__(340)(`./${lang}`);
  } catch (error) {
    res = __webpack_require__(340)(`./${services_DEFAULT_LANG}`);
  }
  return res;
};

/**
 * Init polyglot and returns t
 * @returns {object}
 */
const initPolyglot = () => {
  const lang = process.env.COZY_LOCALE || services_DEFAULT_LANG;
  const polyglot = translation_initTranslation(lang, services_dictRequire);
  const t = polyglot.t.bind(polyglot);
  return {
    t,
    lang,
    dictRequire: services_dictRequire
  };
};
const startService = async (client, serviceName, {
  fields
} = {}) => {
  await client.collection(doctypes["h" /* JOBS_DOCTYPE */]).create('service', {
    name: serviceName,
    slug: constants["g" /* APP_SLUG */],
    fields
  });
};

/***/ }),
/* 221 */
/***/ (function(module, exports, __webpack_require__) {

var baseFindIndex = __webpack_require__(451),
    baseIsNaN = __webpack_require__(498),
    strictIndexOf = __webpack_require__(499);

/**
 * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseIndexOf(array, value, fromIndex) {
  return value === value
    ? strictIndexOf(array, value, fromIndex)
    : baseFindIndex(array, baseIsNaN, fromIndex);
}

module.exports = baseIndexOf;


/***/ }),
/* 222 */
/***/ (function(module, exports, __webpack_require__) {

var baseSetToString = __webpack_require__(502),
    shortOut = __webpack_require__(454);

/**
 * Sets the `toString` method of `func` to return `string`.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var setToString = shortOut(baseSetToString);

module.exports = setToString;


/***/ }),
/* 223 */
/***/ (function(module, exports, __webpack_require__) {

var createFlow = __webpack_require__(666);

/**
 * Creates a function that returns the result of invoking the given functions
 * with the `this` binding of the created function, where each successive
 * invocation is supplied the return value of the previous.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Util
 * @param {...(Function|Function[])} [funcs] The functions to invoke.
 * @returns {Function} Returns the new composite function.
 * @see _.flowRight
 * @example
 *
 * function square(n) {
 *   return n * n;
 * }
 *
 * var addSquare = _.flow([_.add, square]);
 * addSquare(1, 2);
 * // => 9
 */
var flow = createFlow();

module.exports = flow;


/***/ }),
/* 224 */
/***/ (function(module, exports, __webpack_require__) {

var metaMap = __webpack_require__(463),
    noop = __webpack_require__(250);

/**
 * Gets metadata for `func`.
 *
 * @private
 * @param {Function} func The function to query.
 * @returns {*} Returns the metadata for `func`.
 */
var getData = !metaMap ? noop : function(func) {
  return metaMap.get(func);
};

module.exports = getData;


/***/ }),
/* 225 */
/***/ (function(module, exports) {

/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

module.exports = freeGlobal;


/***/ }),
/* 226 */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var funcProto = Function.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to convert.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

module.exports = toSource;


/***/ }),
/* 227 */
/***/ (function(module, exports, __webpack_require__) {

var apply = __webpack_require__(204);

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * A specialized version of `baseRest` which transforms the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @param {Function} transform The rest array transform.
 * @returns {Function} Returns the new function.
 */
function overRest(func, start, transform) {
  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
  return function() {
    var args = arguments,
        index = -1,
        length = nativeMax(args.length - start, 0),
        array = Array(length);

    while (++index < length) {
      array[index] = args[start + index];
    }
    index = -1;
    var otherArgs = Array(start + 1);
    while (++index < start) {
      otherArgs[index] = args[index];
    }
    otherArgs[start] = transform(array);
    return apply(func, this, otherArgs);
  };
}

module.exports = overRest;


/***/ }),
/* 228 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(62);

var defineProperty = (function() {
  try {
    var func = getNative(Object, 'defineProperty');
    func({}, '', {});
    return func;
  } catch (e) {}
}());

module.exports = defineProperty;


/***/ }),
/* 229 */
/***/ (function(module, exports, __webpack_require__) {

var arrayWithHoles = __webpack_require__(230);
var iterableToArray = __webpack_require__(231);
var unsupportedIterableToArray = __webpack_require__(164);
var nonIterableRest = __webpack_require__(233);
function _toArray(arr) {
  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();
}
module.exports = _toArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 230 */
/***/ (function(module, exports) {

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}
module.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 231 */
/***/ (function(module, exports) {

function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
module.exports = _iterableToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 232 */
/***/ (function(module, exports) {

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
module.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 233 */
/***/ (function(module, exports) {

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
module.exports = _nonIterableRest, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 234 */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__(90)["default"];
var toPrimitive = __webpack_require__(509);
function _toPropertyKey(arg) {
  var key = toPrimitive(arg, "string");
  return _typeof(key) === "symbol" ? key : String(key);
}
module.exports = _toPropertyKey, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 235 */
/***/ (function(module, exports, __webpack_require__) {

var createBaseFor = __webpack_require__(510);

/**
 * The base implementation of `baseForOwn` which iterates over `object`
 * properties returned by `keysFunc` and invokes `iteratee` for each property.
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @returns {Object} Returns `object`.
 */
var baseFor = createBaseFor();

module.exports = baseFor;


/***/ }),
/* 236 */
/***/ (function(module, exports, __webpack_require__) {

var baseTimes = __webpack_require__(237),
    isArguments = __webpack_require__(89),
    isArray = __webpack_require__(21),
    isBuffer = __webpack_require__(91),
    isIndex = __webpack_require__(111),
    isTypedArray = __webpack_require__(125);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */
function arrayLikeKeys(value, inherited) {
  var isArr = isArray(value),
      isArg = !isArr && isArguments(value),
      isBuff = !isArr && !isArg && isBuffer(value),
      isType = !isArr && !isArg && !isBuff && isTypedArray(value),
      skipIndexes = isArr || isArg || isBuff || isType,
      result = skipIndexes ? baseTimes(value.length, String) : [],
      length = result.length;

  for (var key in value) {
    if ((inherited || hasOwnProperty.call(value, key)) &&
        !(skipIndexes && (
           // Safari 9 has enumerable `arguments.length` in strict mode.
           key == 'length' ||
           // Node.js 0.10 has enumerable non-index properties on buffers.
           (isBuff && (key == 'offset' || key == 'parent')) ||
           // PhantomJS 2 has enumerable non-index properties on typed arrays.
           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
           // Skip index properties.
           isIndex(key, length)
        ))) {
      result.push(key);
    }
  }
  return result;
}

module.exports = arrayLikeKeys;


/***/ }),
/* 237 */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}

module.exports = baseTimes;


/***/ }),
/* 238 */
/***/ (function(module, exports) {

/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

module.exports = overArg;


/***/ }),
/* 239 */
/***/ (function(module, exports, __webpack_require__) {

var SetCache = __webpack_require__(116),
    arraySome = __webpack_require__(455),
    cacheHas = __webpack_require__(121);

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * A specialized version of `baseIsEqualDeep` for arrays with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Array} array The array to compare.
 * @param {Array} other The other array to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `array` and `other` objects.
 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
 */
function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      arrLength = array.length,
      othLength = other.length;

  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  }
  // Check that cyclic values are equal.
  var arrStacked = stack.get(array);
  var othStacked = stack.get(other);
  if (arrStacked && othStacked) {
    return arrStacked == other && othStacked == array;
  }
  var index = -1,
      result = true,
      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

  stack.set(array, other);
  stack.set(other, array);

  // Ignore non-index properties.
  while (++index < arrLength) {
    var arrValue = array[index],
        othValue = other[index];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, arrValue, index, other, array, stack)
        : customizer(arrValue, othValue, index, array, other, stack);
    }
    if (compared !== undefined) {
      if (compared) {
        continue;
      }
      result = false;
      break;
    }
    // Recursively compare arrays (susceptible to call stack limits).
    if (seen) {
      if (!arraySome(other, function(othValue, othIndex) {
            if (!cacheHas(seen, othIndex) &&
                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
              return seen.push(othIndex);
            }
          })) {
        result = false;
        break;
      }
    } else if (!(
          arrValue === othValue ||
            equalFunc(arrValue, othValue, bitmask, customizer, stack)
        )) {
      result = false;
      break;
    }
  }
  stack['delete'](array);
  stack['delete'](other);
  return result;
}

module.exports = equalArrays;


/***/ }),
/* 240 */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(43);

/** Built-in value references. */
var Uint8Array = root.Uint8Array;

module.exports = Uint8Array;


/***/ }),
/* 241 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetAllKeys = __webpack_require__(242),
    getSymbols = __webpack_require__(169),
    keys = __webpack_require__(66);

/**
 * Creates an array of own enumerable property names and symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeys(object) {
  return baseGetAllKeys(object, keys, getSymbols);
}

module.exports = getAllKeys;


/***/ }),
/* 242 */
/***/ (function(module, exports, __webpack_require__) {

var arrayPush = __webpack_require__(123),
    isArray = __webpack_require__(21);

/**
 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @param {Function} symbolsFunc The function to get the symbols of `object`.
 * @returns {Array} Returns the array of property names and symbols.
 */
function baseGetAllKeys(object, keysFunc, symbolsFunc) {
  var result = keysFunc(object);
  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
}

module.exports = baseGetAllKeys;


/***/ }),
/* 243 */
/***/ (function(module, exports) {

/**
 * This method returns a new empty array.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Array} Returns the new empty array.
 * @example
 *
 * var arrays = _.times(2, _.stubArray);
 *
 * console.log(arrays);
 * // => [[], []]
 *
 * console.log(arrays[0] === arrays[1]);
 * // => false
 */
function stubArray() {
  return [];
}

module.exports = stubArray;


/***/ }),
/* 244 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(62),
    root = __webpack_require__(43);

/* Built-in method references that are verified to be native. */
var Set = getNative(root, 'Set');

module.exports = Set;


/***/ }),
/* 245 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(62),
    root = __webpack_require__(43);

/* Built-in method references that are verified to be native. */
var WeakMap = getNative(root, 'WeakMap');

module.exports = WeakMap;


/***/ }),
/* 246 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(38);

/**
 * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` if suitable for strict
 *  equality comparisons, else `false`.
 */
function isStrictComparable(value) {
  return value === value && !isObject(value);
}

module.exports = isStrictComparable;


/***/ }),
/* 247 */
/***/ (function(module, exports) {

/**
 * A specialized version of `matchesProperty` for source values suitable
 * for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */
function matchesStrictComparable(key, srcValue) {
  return function(object) {
    if (object == null) {
      return false;
    }
    return object[key] === srcValue &&
      (srcValue !== undefined || (key in Object(object)));
  };
}

module.exports = matchesStrictComparable;


/***/ }),
/* 248 */
/***/ (function(module, exports, __webpack_require__) {

var baseHasIn = __webpack_require__(529),
    hasPath = __webpack_require__(249);

/**
 * Checks if `path` is a direct or inherited property of `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 * @example
 *
 * var object = _.create({ 'a': _.create({ 'b': 2 }) });
 *
 * _.hasIn(object, 'a');
 * // => true
 *
 * _.hasIn(object, 'a.b');
 * // => true
 *
 * _.hasIn(object, ['a', 'b']);
 * // => true
 *
 * _.hasIn(object, 'b');
 * // => false
 */
function hasIn(object, path) {
  return object != null && hasPath(object, path, baseHasIn);
}

module.exports = hasIn;


/***/ }),
/* 249 */
/***/ (function(module, exports, __webpack_require__) {

var castPath = __webpack_require__(74),
    isArguments = __webpack_require__(89),
    isArray = __webpack_require__(21),
    isIndex = __webpack_require__(111),
    isLength = __webpack_require__(163),
    toKey = __webpack_require__(71);

/**
 * Checks if `path` exists on `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @param {Function} hasFunc The function to check properties.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 */
function hasPath(object, path, hasFunc) {
  path = castPath(path, object);

  var index = -1,
      length = path.length,
      result = false;

  while (++index < length) {
    var key = toKey(path[index]);
    if (!(result = object != null && hasFunc(object, key))) {
      break;
    }
    object = object[key];
  }
  if (result || ++index != length) {
    return result;
  }
  length = object == null ? 0 : object.length;
  return !!length && isLength(length) && isIndex(key, length) &&
    (isArray(object) || isArguments(object));
}

module.exports = hasPath;


/***/ }),
/* 250 */
/***/ (function(module, exports) {

/**
 * This method returns `undefined`.
 *
 * @static
 * @memberOf _
 * @since 2.3.0
 * @category Util
 * @example
 *
 * _.times(2, _.noop);
 * // => [undefined, undefined]
 */
function noop() {
  // No operation performed.
}

module.exports = noop;


/***/ }),
/* 251 */
/***/ (function(module, exports, __webpack_require__) {

var arrayFilter = __webpack_require__(215),
    arrayMap = __webpack_require__(37),
    baseProperty = __webpack_require__(172),
    baseTimes = __webpack_require__(237),
    isArrayLikeObject = __webpack_require__(124);

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * This method is like `_.zip` except that it accepts an array of grouped
 * elements and creates an array regrouping the elements to their pre-zip
 * configuration.
 *
 * @static
 * @memberOf _
 * @since 1.2.0
 * @category Array
 * @param {Array} array The array of grouped elements to process.
 * @returns {Array} Returns the new array of regrouped elements.
 * @example
 *
 * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
 * // => [['a', 1, true], ['b', 2, false]]
 *
 * _.unzip(zipped);
 * // => [['a', 'b'], [1, 2], [true, false]]
 */
function unzip(array) {
  if (!(array && array.length)) {
    return [];
  }
  var length = 0;
  array = arrayFilter(array, function(group) {
    if (isArrayLikeObject(group)) {
      length = nativeMax(group.length, length);
      return true;
    }
  });
  return baseTimes(length, function(index) {
    return arrayMap(array, baseProperty(index));
  });
}

module.exports = unzip;


/***/ }),
/* 252 */
/***/ (function(module, exports, __webpack_require__) {

var arrayEach = __webpack_require__(216),
    baseEach = __webpack_require__(145),
    castFunction = __webpack_require__(536),
    isArray = __webpack_require__(21);

/**
 * Iterates over elements of `collection` and invokes `iteratee` for each element.
 * The iteratee is invoked with three arguments: (value, index|key, collection).
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * **Note:** As with other "Collections" methods, objects with a "length"
 * property are iterated like arrays. To avoid this behavior use `_.forIn`
 * or `_.forOwn` for object iteration.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @alias each
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Array|Object} Returns `collection`.
 * @see _.forEachRight
 * @example
 *
 * _.forEach([1, 2], function(value) {
 *   console.log(value);
 * });
 * // => Logs `1` then `2`.
 *
 * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
 *   console.log(key);
 * });
 * // => Logs 'a' then 'b' (iteration order is not guaranteed).
 */
function forEach(collection, iteratee) {
  var func = isArray(collection) ? arrayEach : baseEach;
  return func(collection, castFunction(iteratee));
}

module.exports = forEach;


/***/ }),
/* 253 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireWildcard = __webpack_require__(22);

var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function get() {
    return _CozyStackClient.default;
  }
});
Object.defineProperty(exports, "OAuthClient", {
  enumerable: true,
  get: function get() {
    return _OAuthClient.default;
  }
});
Object.defineProperty(exports, "errors", {
  enumerable: true,
  get: function get() {
    return _errors.default;
  }
});
Object.defineProperty(exports, "FetchError", {
  enumerable: true,
  get: function get() {
    return _errors.FetchError;
  }
});
Object.defineProperty(exports, "normalizeDoc", {
  enumerable: true,
  get: function get() {
    return _DocumentCollection.normalizeDoc;
  }
});

var _CozyStackClient = _interopRequireDefault(__webpack_require__(254));

var _OAuthClient = _interopRequireDefault(__webpack_require__(612));

var _errors = _interopRequireWildcard(__webpack_require__(56));

var _DocumentCollection = __webpack_require__(26);

/***/ }),
/* 254 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireWildcard = __webpack_require__(22);

var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(6));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(7));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(9));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));

var _createClass2 = _interopRequireDefault(__webpack_require__(13));

var _cloneDeep = _interopRequireDefault(__webpack_require__(255));

var _AppCollection = _interopRequireWildcard(__webpack_require__(260));

var _AppToken = _interopRequireDefault(__webpack_require__(590));

var _AccessToken = _interopRequireDefault(__webpack_require__(280));

var _DocumentCollection = _interopRequireDefault(__webpack_require__(26));

var _FileCollection = _interopRequireDefault(__webpack_require__(181));

var _JobCollection = _interopRequireWildcard(__webpack_require__(283));

var _KonnectorCollection = _interopRequireWildcard(__webpack_require__(596));

var _SharingCollection = _interopRequireDefault(__webpack_require__(598));

var _PermissionCollection = _interopRequireDefault(__webpack_require__(599));

var _TriggerCollection = _interopRequireWildcard(__webpack_require__(284));

var _SettingsCollection = _interopRequireWildcard(__webpack_require__(600));

var _NotesCollection = _interopRequireWildcard(__webpack_require__(601));

var _OAuthClientsCollection = _interopRequireWildcard(__webpack_require__(603));

var _ShortcutsCollection = _interopRequireWildcard(__webpack_require__(604));

var _ContactsCollection = _interopRequireWildcard(__webpack_require__(605));

var _AppsRegistryCollection = _interopRequireWildcard(__webpack_require__(607));

var _getIconURL2 = _interopRequireDefault(__webpack_require__(608));

var _logDeprecate = _interopRequireDefault(__webpack_require__(285));

var _xhrFetch = __webpack_require__(610);

var _microee = _interopRequireDefault(__webpack_require__(101));

var _errors = _interopRequireWildcard(__webpack_require__(56));

var _logger = _interopRequireDefault(__webpack_require__(51));

var _promiseCache = _interopRequireDefault(__webpack_require__(611));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var normalizeUri = function normalizeUri(uriArg) {
  var uri = uriArg;
  if (uri === null) return null;

  while (uri[uri.length - 1] === '/') {
    uri = uri.slice(0, -1);
  }

  return uri;
};
/**
 * Main API against the `cozy-stack` server.
 */


var CozyStackClient = /*#__PURE__*/function () {
  function CozyStackClient(options) {
    (0, _classCallCheck2.default)(this, CozyStackClient);

    var opts = _objectSpread({}, options);

    var token = opts.token,
        _opts$uri = opts.uri,
        uri = _opts$uri === void 0 ? '' : _opts$uri;
    this.options = opts;
    this.setUri(uri);
    this.setToken(token);
    this.konnectors = new _KonnectorCollection.default(this);
    this.jobs = new _JobCollection.default(this);
    this._promiseCache = new _promiseCache.default();
  }

  (0, _createClass2.default)(CozyStackClient, [{
    key: "isRevocationError",
    value: function isRevocationError(err) {
      var message = err === null || err === void 0 ? void 0 : err.message;
      if (!message) return false;
      if (_errors.default.CLIENT_NOT_FOUND.test(err.message) || _errors.default.UNREGISTERED_CLIENT.test(err.message)) return true;
    }
    /**
     * Creates a {@link DocumentCollection} instance.
     *
     * @param  {string} doctype The collection doctype.
     * @returns {DocumentCollection}
     */

  }, {
    key: "collection",
    value: function collection(doctype) {
      if (!doctype) {
        throw new Error('CozyStackClient.collection() called without a doctype');
      }

      switch (doctype) {
        case _AppCollection.APPS_DOCTYPE:
          return new _AppCollection.default(this);

        case _KonnectorCollection.KONNECTORS_DOCTYPE:
          return new _KonnectorCollection.default(this);

        case 'io.cozy.files':
          return new _FileCollection.default(doctype, this);

        case 'io.cozy.sharings':
          return new _SharingCollection.default(doctype, this);

        case 'io.cozy.permissions':
          return new _PermissionCollection.default(doctype, this);

        case _ContactsCollection.CONTACTS_DOCTYPE:
          return new _ContactsCollection.default(doctype, this);

        case _TriggerCollection.TRIGGERS_DOCTYPE:
          return new _TriggerCollection.default(this);

        case _JobCollection.JOBS_DOCTYPE:
          return new _JobCollection.default(this);

        case _SettingsCollection.SETTINGS_DOCTYPE:
          return new _SettingsCollection.default(this);

        case _NotesCollection.NOTES_DOCTYPE:
          return new _NotesCollection.default(this);

        case _OAuthClientsCollection.OAUTH_CLIENTS_DOCTYPE:
          return new _OAuthClientsCollection.default(this);

        case _ShortcutsCollection.SHORTCUTS_DOCTYPE:
          return new _ShortcutsCollection.default(this);

        case _AppsRegistryCollection.APPS_REGISTRY_DOCTYPE:
          return new _AppsRegistryCollection.default(this);

        default:
          return new _DocumentCollection.default(doctype, this);
      }
    }
    /**
     * Fetches an endpoint in an authorized way.
     *
     * @param  {string} method The HTTP method.
     * @param  {string} path The URI.
     * @param  {object} [body] The payload.
     * @param  {object} [opts={}] Options for fetch
     * @returns {object}
     * @throws {FetchError}
     */

  }, {
    key: "fetch",
    value: function (_fetch) {
      function fetch(_x, _x2, _x3) {
        return _fetch.apply(this, arguments);
      }

      fetch.toString = function () {
        return _fetch.toString();
      };

      return fetch;
    }( /*#__PURE__*/function () {
      var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(method, path, body) {
        var opts,
            options,
            headers,
            fullPath,
            fetcher,
            response,
            _args = arguments;
        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                opts = _args.length > 3 && _args[3] !== undefined ? _args[3] : {};
                options = _objectSpread({}, opts);
                options.method = method;
                headers = options.headers = _objectSpread({}, opts.headers);

                if (method !== 'GET' && method !== 'HEAD' && body !== undefined) {
                  if (headers['Content-Type']) {
                    options.body = body;
                  }
                }

                if (!headers.Authorization) {
                  headers.Authorization = this.getAuthorizationHeader();
                } // the option credentials:include tells fetch to include the cookies in the
                // request even for cross-origin requests
                // it is still prossible to enforce `credentials` value by providing one in the `opts` prop


                options.credentials = options.credentials || 'include';
                fullPath = this.fullpath(path);
                fetcher = (0, _xhrFetch.shouldXMLHTTPRequestBeUsed)(method, path, options) ? _xhrFetch.fetchWithXMLHttpRequest : fetch;
                _context.prev = 9;
                _context.next = 12;
                return fetcher(fullPath, options);

              case 12:
                response = _context.sent;

                if (!response.ok) {
                  this.emit('error', new _errors.FetchError(response, "".concat(response.status, " ").concat(response.statusText)));
                }

                return _context.abrupt("return", response);

              case 17:
                _context.prev = 17;
                _context.t0 = _context["catch"](9);

                if (this.isRevocationError(_context.t0)) {
                  this.onRevocationChange(true);
                }

                throw _context.t0;

              case 21:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this, [[9, 17]]);
      }));

      return function (_x4, _x5, _x6) {
        return _ref.apply(this, arguments);
      };
    }())
  }, {
    key: "onTokenRefresh",
    value: function onTokenRefresh(token) {
      if (this.options && this.options.onTokenRefresh) {
        this.options.onTokenRefresh(token);
      }
    }
  }, {
    key: "onRevocationChange",
    value: function onRevocationChange(state) {
      if (this.options && this.options.onRevocationChange) {
        this.options.onRevocationChange(state);
      }
    }
    /**
     * Retrieves a new app token by refreshing the currently used token.
     *
     * @throws {Error} The client should already have an access token to use this function
     * @throws {Error} The client couldn't fetch a new token
     * @returns {Promise} A promise that resolves with a new AccessToken object
     */

  }, {
    key: "refreshToken",
    value: function () {
      var _refreshToken = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2() {
        var options, response, html, parser, doc, appNode, data, token, newToken;
        return _regenerator.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                if (this.token) {
                  _context2.next = 2;
                  break;
                }

                throw new Error('Cannot refresh an empty token');

              case 2:
                options = {
                  method: 'GET',
                  credentials: 'include'
                };

                if (global.document) {
                  _context2.next = 5;
                  break;
                }

                throw new Error('Not in a web context, cannot refresh token');

              case 5:
                _context2.next = 7;
                return fetch('/?refreshToken', options);

              case 7:
                response = _context2.sent;

                if (response.ok) {
                  _context2.next = 10;
                  break;
                }

                throw new Error("couldn't fetch a new token - response " + response.statusCode);

              case 10:
                _context2.next = 12;
                return response.text();

              case 12:
                html = _context2.sent;
                parser = new DOMParser();
                doc = parser.parseFromString(html, 'text/html');

                if (doc) {
                  _context2.next = 17;
                  break;
                }

                throw Error("couldn't fetch a new token - doc is not html");

              case 17:
                appNode = doc.querySelector('div[role="application"]');

                if (appNode) {
                  _context2.next = 20;
                  break;
                }

                throw Error("couldn't fetch a new token - no div[role=application]");

              case 20:
                data = appNode.dataset.cozy ? JSON.parse(appNode.dataset.cozy) : _objectSpread({}, appNode.dataset);
                token = data.token;

                if (token) {
                  token = token || data.cozyToken;
                }

                if (token) {
                  _context2.next = 25;
                  break;
                }

                throw Error("couldn't fetch a new token -- missing data-cozy or data-cozy-token attribute");

              case 25:
                newToken = new _AppToken.default(token);
                this.setToken(newToken);
                this.onTokenRefresh(newToken);
                return _context2.abrupt("return", newToken);

              case 29:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function refreshToken() {
        return _refreshToken.apply(this, arguments);
      }

      return refreshToken;
    }()
    /**
     * Fetches JSON in an authorized way.
     *
     * @param  {string} method The HTTP method.
     * @param  {string} path The URI.
     * @param  {object} body The payload.
     * @param  {object} options Options
     * @returns {object}
     * @throws {FetchError}
     */

  }, {
    key: "fetchJSON",
    value: function () {
      var _fetchJSON = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3(method, path, body) {
        var _this = this;

        var options,
            _args3 = arguments;
        return _regenerator.default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                options = _args3.length > 3 && _args3[3] !== undefined ? _args3[3] : {};
                _context3.prev = 1;
                _context3.next = 4;
                return this.fetchJSONWithCurrentToken(method, path, body, options);

              case 4:
                return _context3.abrupt("return", _context3.sent);

              case 7:
                _context3.prev = 7;
                _context3.t0 = _context3["catch"](1);

                if (!(_errors.default.EXPIRED_TOKEN.test(_context3.t0.message) || _errors.default.INVALID_TOKEN.test(_context3.t0.message) || _errors.default.INVALID_TOKEN_ALT.test(_context3.t0.message))) {
                  _context3.next = 23;
                  break;
                }

                _context3.prev = 10;
                _context3.next = 13;
                return this._promiseCache.exec(function () {
                  return _this.refreshToken();
                }, function () {
                  return 'refreshToken';
                });

              case 13:
                _context3.next = 18;
                break;

              case 15:
                _context3.prev = 15;
                _context3.t1 = _context3["catch"](10);
                throw _context3.t0;

              case 18:
                _context3.next = 20;
                return this.fetchJSONWithCurrentToken(method, path, body, options);

              case 20:
                return _context3.abrupt("return", _context3.sent);

              case 23:
                throw _context3.t0;

              case 24:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this, [[1, 7], [10, 15]]);
      }));

      function fetchJSON(_x7, _x8, _x9) {
        return _fetchJSON.apply(this, arguments);
      }

      return fetchJSON;
    }()
  }, {
    key: "fetchJSONWithCurrentToken",
    value: function () {
      var _fetchJSONWithCurrentToken = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee4(method, path, bodyArg) {
        var options,
            clonedOptions,
            headers,
            body,
            resp,
            contentType,
            isJson,
            data,
            _args4 = arguments;
        return _regenerator.default.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                options = _args4.length > 3 && _args4[3] !== undefined ? _args4[3] : {};
                //Since we modify the object later by adding in some case a
                //content-type, let's clone this object to scope the modification
                clonedOptions = (0, _cloneDeep.default)(options);
                headers = clonedOptions.headers = clonedOptions.headers || {};
                headers['Accept'] = 'application/json';
                body = bodyArg;

                if (method !== 'GET' && method !== 'HEAD' && body !== undefined) {
                  if (!headers['Content-Type']) {
                    headers['Content-Type'] = 'application/json';
                    body = JSON.stringify(body);
                  }
                }

                _context4.next = 8;
                return this.fetch(method, path, body, clonedOptions);

              case 8:
                resp = _context4.sent;
                contentType = resp.headers.get('content-type');
                isJson = contentType && contentType.indexOf('json') >= 0;
                _context4.next = 13;
                return isJson ? resp.json() : resp.text();

              case 13:
                data = _context4.sent;

                if (!resp.ok) {
                  _context4.next = 16;
                  break;
                }

                return _context4.abrupt("return", data);

              case 16:
                throw new _errors.FetchError(resp, data);

              case 17:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function fetchJSONWithCurrentToken(_x10, _x11, _x12) {
        return _fetchJSONWithCurrentToken.apply(this, arguments);
      }

      return fetchJSONWithCurrentToken;
    }()
  }, {
    key: "fullpath",
    value: function fullpath(path) {
      if (path.startsWith('http')) {
        return path;
      } else {
        return this.uri + path;
      }
    }
  }, {
    key: "getAuthorizationHeader",
    value: function getAuthorizationHeader() {
      return this.token ? this.token.toAuthHeader() : null;
    }
  }, {
    key: "setCredentials",
    value: function setCredentials(token) {
      (0, _logDeprecate.default)('CozyStackClient::setCredentials is deprecated, use CozyStackClient::setToken');
      return this.setToken(token);
    }
  }, {
    key: "getCredentials",
    value: function getCredentials() {
      (0, _logDeprecate.default)('CozyStackClient::getCredentials is deprecated, use CozyStackClient::getAuthorizationHeader');
      return this.getAuthorizationHeader();
    }
    /**
     * Change or set the API token
     *
     * @param {string|AppToken|AccessToken} token - Stack API token
     */

  }, {
    key: "setToken",
    value: function setToken(token) {
      if (!token) {
        this.token = null;
      } else {
        if (token.toAuthHeader) {
          // AppToken or AccessToken
          this.token = token;
        } else if (typeof token === 'string') {
          // jwt string
          this.token = new _AppToken.default(token);
        } else {
          _logger.default.warn('Cozy-Client: Unknown token format', token);

          throw new Error('Cozy-Client: Unknown token format');
        }

        this.onRevocationChange(false);
      }
    }
    /**
     * Get the access token string, being an oauth token or an app token
     *
     * @returns {string} token
     */

  }, {
    key: "getAccessToken",
    value: function getAccessToken() {
      return this.token && this.token.getAccessToken();
    }
  }, {
    key: "setUri",
    value: function setUri(uri) {
      this.uri = normalizeUri(uri);
    }
  }, {
    key: "getIconURL",
    value: function getIconURL(opts) {
      return (0, _getIconURL2.default)(this, opts);
    }
  }]);
  return CozyStackClient;
}();

_microee.default.mixin(CozyStackClient);

var _default = CozyStackClient;
exports.default = _default;

/***/ }),
/* 255 */
/***/ (function(module, exports, __webpack_require__) {

var baseClone = __webpack_require__(217);

/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1,
    CLONE_SYMBOLS_FLAG = 4;

/**
 * This method is like `_.clone` except that it recursively clones `value`.
 *
 * @static
 * @memberOf _
 * @since 1.0.0
 * @category Lang
 * @param {*} value The value to recursively clone.
 * @returns {*} Returns the deep cloned value.
 * @see _.clone
 * @example
 *
 * var objects = [{ 'a': 1 }, { 'b': 2 }];
 *
 * var deep = _.cloneDeep(objects);
 * console.log(deep[0] === objects[0]);
 * // => false
 */
function cloneDeep(value) {
  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
}

module.exports = cloneDeep;


/***/ }),
/* 256 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(43);

/** Detect free variable `exports`. */
var freeExports =  true && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined,
    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;

/**
 * Creates a clone of  `buffer`.
 *
 * @private
 * @param {Buffer} buffer The buffer to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Buffer} Returns the cloned buffer.
 */
function cloneBuffer(buffer, isDeep) {
  if (isDeep) {
    return buffer.slice();
  }
  var length = buffer.length,
      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

  buffer.copy(result);
  return result;
}

module.exports = cloneBuffer;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(81)(module)))

/***/ }),
/* 257 */
/***/ (function(module, exports, __webpack_require__) {

var arrayPush = __webpack_require__(123),
    getPrototype = __webpack_require__(174),
    getSymbols = __webpack_require__(169),
    stubArray = __webpack_require__(243);

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols;

/**
 * Creates an array of the own and inherited enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
  var result = [];
  while (object) {
    arrayPush(result, getSymbols(object));
    object = getPrototype(object);
  }
  return result;
};

module.exports = getSymbolsIn;


/***/ }),
/* 258 */
/***/ (function(module, exports, __webpack_require__) {

var cloneArrayBuffer = __webpack_require__(176);

/**
 * Creates a clone of `typedArray`.
 *
 * @private
 * @param {Object} typedArray The typed array to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned typed array.
 */
function cloneTypedArray(typedArray, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
}

module.exports = cloneTypedArray;


/***/ }),
/* 259 */
/***/ (function(module, exports, __webpack_require__) {

var baseCreate = __webpack_require__(155),
    getPrototype = __webpack_require__(174),
    isPrototype = __webpack_require__(112);

/**
 * Initializes an object clone.
 *
 * @private
 * @param {Object} object The object to clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneObject(object) {
  return (typeof object.constructor == 'function' && !isPrototype(object))
    ? baseCreate(getPrototype(object))
    : {};
}

module.exports = initCloneObject;


/***/ }),
/* 260 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireWildcard = __webpack_require__(22);

var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.normalizeApp = exports.APPS_DOCTYPE = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(6));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(7));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));

var _createClass2 = _interopRequireDefault(__webpack_require__(13));

var _inherits2 = _interopRequireDefault(__webpack_require__(18));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(19));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(16));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(9));

var _get3 = _interopRequireDefault(__webpack_require__(10));

var _registry = __webpack_require__(261);

var _Collection = _interopRequireDefault(__webpack_require__(75));

var _DocumentCollection2 = _interopRequireWildcard(__webpack_require__(26));

var _errors = __webpack_require__(56);

var _logger = _interopRequireDefault(__webpack_require__(51));

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var APPS_DOCTYPE = 'io.cozy.apps';
exports.APPS_DOCTYPE = APPS_DOCTYPE;

var normalizeApp = function normalizeApp(app, doctype) {
  return _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, app.attributes), app), (0, _DocumentCollection2.normalizeDoc)(app, doctype)), {}, {
    id: app.id // ignores any 'id' attribute in the manifest

  });
};
/**
 * Extends `DocumentCollection` API along with specific methods for `io.cozy.apps`.
 */


exports.normalizeApp = normalizeApp;

var AppCollection = /*#__PURE__*/function (_DocumentCollection) {
  (0, _inherits2.default)(AppCollection, _DocumentCollection);

  var _super = _createSuper(AppCollection);

  function AppCollection(stackClient) {
    var _this;

    (0, _classCallCheck2.default)(this, AppCollection);
    _this = _super.call(this, APPS_DOCTYPE, stackClient);
    _this.endpoint = '/apps/';
    return _this;
  }

  (0, _createClass2.default)(AppCollection, [{
    key: "get",
    value: function () {
      var _get2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(idArg, query) {
        var _this2 = this;

        var id, sources, dataFetchers, _iterator, _step, source, res, data;

        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (idArg.indexOf('/') > -1) {
                  id = idArg.split('/')[1];
                } else {
                  _logger.default.warn("Deprecated: in next versions of cozy-client, it will not be possible to query apps/konnectors only with id, please use the form ".concat(this.doctype, "/").concat(idArg, "\n\n- Q('io.cozy.apps').getById('banks')\n+ Q('io.cozy.apps').getById('io.cozy.apps/banks')"));

                  id = idArg;
                }

                if (!(query && query.sources && (!Array.isArray(query.sources) || query.sources.length === 0))) {
                  _context.next = 3;
                  break;
                }

                throw new Error('Invalid "sources" attribute passed in query, please use an array with at least one element.');

              case 3:
                sources = (0, _get3.default)(query, 'sources', ['stack']);
                dataFetchers = {
                  stack: function stack() {
                    return _Collection.default.get(_this2.stackClient, "".concat(_this2.endpoint).concat(encodeURIComponent(id)), {
                      normalize: function normalize(data) {
                        return normalizeApp(data, _this2.doctype);
                      }
                    });
                  },
                  registry: function registry() {
                    return _this2.stackClient.fetchJSON('GET', _registry.registryEndpoint + id);
                  }
                };
                _iterator = _createForOfIteratorHelper(sources);
                _context.prev = 6;

                _iterator.s();

              case 8:
                if ((_step = _iterator.n()).done) {
                  _context.next = 27;
                  break;
                }

                source = _step.value;
                _context.prev = 10;
                _context.next = 13;
                return dataFetchers[source]();

              case 13:
                res = _context.sent;

                if (!(source !== 'registry')) {
                  _context.next = 16;
                  break;
                }

                return _context.abrupt("return", res);

              case 16:
                _logger.default.warn("The use of source registry is deprecated since it can polute the io.cozy.apps slice. For exemple, if we request data from the registry, than the app will be present in the io.cozy.apps slice and then the isInstalled() will return true.\n\n            Use Q('io.cozy.apps_registry) instead");

                data = (0, _registry.transformRegistryFormatToStackFormat)(res);
                return _context.abrupt("return", {
                  data: normalizeApp(data, this.doctype)
                });

              case 21:
                _context.prev = 21;
                _context.t0 = _context["catch"](10);

                if (!(source === sources[sources.length - 1])) {
                  _context.next = 25;
                  break;
                }

                throw _context.t0;

              case 25:
                _context.next = 8;
                break;

              case 27:
                _context.next = 32;
                break;

              case 29:
                _context.prev = 29;
                _context.t1 = _context["catch"](6);

                _iterator.e(_context.t1);

              case 32:
                _context.prev = 32;

                _iterator.f();

                return _context.finish(32);

              case 35:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this, [[6, 29, 32, 35], [10, 21]]);
      }));

      function get(_x, _x2) {
        return _get2.apply(this, arguments);
      }

      return get;
    }()
    /**
     * Lists all apps, without filters.
     *
     * The returned documents are not paginated by the stack.
     *
     * @returns {{data, meta, skip, next}} The JSON API conformant response.
     * @throws {FetchError}
     */

  }, {
    key: "all",
    value: function () {
      var _all = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2() {
        var _this3 = this;

        var resp;
        return _regenerator.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return this.stackClient.fetchJSON('GET', this.endpoint);

              case 2:
                resp = _context2.sent;
                return _context2.abrupt("return", {
                  data: resp.data.map(function (app) {
                    return normalizeApp(app, _this3.doctype);
                  }),
                  meta: {
                    count: resp.meta.count
                  },
                  skip: 0,
                  next: false
                });

              case 4:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function all() {
        return _all.apply(this, arguments);
      }

      return all;
    }()
  }, {
    key: "create",
    value: function () {
      var _create = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3() {
        return _regenerator.default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                throw new Error('create() method is not available for applications');

              case 1:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3);
      }));

      function create() {
        return _create.apply(this, arguments);
      }

      return create;
    }()
  }, {
    key: "update",
    value: function () {
      var _update = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee4() {
        return _regenerator.default.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                throw new Error('update() method is not available for applications');

              case 1:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4);
      }));

      function update() {
        return _update.apply(this, arguments);
      }

      return update;
    }()
  }, {
    key: "destroy",
    value: function () {
      var _destroy = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee5() {
        return _regenerator.default.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                throw new Error('destroy() method is not available for applications');

              case 1:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5);
      }));

      function destroy() {
        return _destroy.apply(this, arguments);
      }

      return destroy;
    }()
  }]);
  return AppCollection;
}(_DocumentCollection2.default);

AppCollection.normalizeDoctype = _DocumentCollection2.default.normalizeDoctypeJsonApi;
var _default = AppCollection;
exports.default = _default;

/***/ }),
/* 261 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.registryEndpoint = exports.transformRegistryFormatToStackFormat = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(6));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(7));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));

var _createClass2 = _interopRequireDefault(__webpack_require__(13));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(9));

var _get = _interopRequireDefault(__webpack_require__(10));

__webpack_require__(551);

var _terms = _interopRequireDefault(__webpack_require__(552));

var _constants = __webpack_require__(553);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var transformRegistryFormatToStackFormat = function transformRegistryFormatToStackFormat(doc) {
  return _objectSpread({
    id: (0, _get.default)(doc, 'latest_version.manifest.source'),
    attributes: (0, _get.default)(doc, 'latest_version.manifest')
  }, doc);
};

exports.transformRegistryFormatToStackFormat = transformRegistryFormatToStackFormat;
var registryEndpoint = '/registry/';
exports.registryEndpoint = registryEndpoint;

var queryPartFromOptions = function queryPartFromOptions(options) {
  var query = new URLSearchParams(options).toString();
  return query ? "?".concat(query) : '';
};

var getBaseRoute = function getBaseRoute(app) {
  var type = app.type; // TODO node is an historic type, it should be `konnector`, check with the back

  var route = type === _constants.APP_TYPE.KONNECTOR || type === 'node' ? 'konnectors' : 'apps';
  return "/".concat(route);
};
/**
 * @typedef {object} RegistryApp
 * @property {string} slug
 * @property {object} terms
 * @property {boolean} installed
 * @property {string} type
 */

/**
 * @typedef {"dev"|"beta"|"stable"} RegistryAppChannel
 */


var Registry = /*#__PURE__*/function () {
  function Registry(options) {
    (0, _classCallCheck2.default)(this, Registry);

    if (!options.client) {
      throw new Error('Need to pass a client to instantiate a Registry API.');
    }

    this.client = options.client;
  }
  /**
   * Installs or updates an app from a source.
   *
   * Accepts the terms if the app has them.
   *
   * @param  {RegistryApp} app - App to be installed
   * @param  {string} source - String (ex: registry://drive/stable)
   * @returns {Promise}
   */


  (0, _createClass2.default)(Registry, [{
    key: "installApp",
    value: function () {
      var _installApp = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(app, source) {
        var slug, terms, searchParams, isUpdate, querypart, verb, baseRoute;
        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                slug = app.slug, terms = app.terms;
                searchParams = {};
                isUpdate = app.installed;
                if (isUpdate) searchParams.PermissionsAcked = isUpdate;
                if (source) searchParams.Source = source;
                querypart = queryPartFromOptions(searchParams);

                if (!terms) {
                  _context.next = 9;
                  break;
                }

                _context.next = 9;
                return _terms.default.save(this.client, terms);

              case 9:
                verb = app.installed ? 'PUT' : 'POST';
                baseRoute = getBaseRoute(app);
                return _context.abrupt("return", this.client.stackClient.fetchJSON(verb, "".concat(baseRoute, "/").concat(slug).concat(querypart)));

              case 12:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function installApp(_x, _x2) {
        return _installApp.apply(this, arguments);
      }

      return installApp;
    }()
    /**
     * Uninstalls an app.
     *
     * @param  {RegistryApp} app - App to be installed
     * @returns {Promise}
     */

  }, {
    key: "uninstallApp",
    value: function () {
      var _uninstallApp = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(app) {
        var slug, baseRoute;
        return _regenerator.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                slug = app.slug;
                baseRoute = getBaseRoute(app);
                return _context2.abrupt("return", this.client.stackClient.fetchJSON('DELETE', "".concat(baseRoute, "/").concat(slug)));

              case 3:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function uninstallApp(_x3) {
        return _uninstallApp.apply(this, arguments);
      }

      return uninstallApp;
    }()
    /**
     * Fetch at most 200 apps from the channel
     *
     * @param  {object} params - Fetching parameters
     * @param  {string} params.type - "webapp" or "konnector"
     * @param  {RegistryAppChannel} params.channel - The channel of the apps to fetch
     * @param  {string} params.limit - maximum number of fetched apps - defaults to 200
     *
     * @returns {Promise<Array<RegistryApp>>}
     */

  }, {
    key: "fetchApps",
    value: function () {
      var _fetchApps = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3(params) {
        var channel, type, _params$limit, limit, searchParams, querypart, _yield$this$client$st, apps;

        return _regenerator.default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                channel = params.channel, type = params.type, _params$limit = params.limit, limit = _params$limit === void 0 ? '200' : _params$limit;
                searchParams = {
                  limit: limit,
                  versionsChannel: channel,
                  latestChannelVersion: channel
                };
                querypart = new URLSearchParams(searchParams).toString();

                if (type) {
                  // Unfortunately, URLSearchParams encodes brackets so we have to do
                  // the querypart handling manually
                  querypart = querypart + "&filter[type]=".concat(type);
                }

                _context3.next = 6;
                return this.client.stackClient.fetchJSON('GET', "/registry?".concat(querypart));

              case 6:
                _yield$this$client$st = _context3.sent;
                apps = _yield$this$client$st.data;
                return _context3.abrupt("return", apps);

              case 9:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function fetchApps(_x4) {
        return _fetchApps.apply(this, arguments);
      }

      return fetchApps;
    }()
    /**
     * Fetch the list of apps that are in maintenance mode
     *
     * @returns {Promise<Array<RegistryApp>>}
     */

  }, {
    key: "fetchAppsInMaintenance",
    value: function fetchAppsInMaintenance() {
      return this.client.stackClient.fetchJSON('GET', '/registry/maintenance');
    }
    /**
     * Fetch the status of a single app on the registry
     *
     * @param  {string} slug - The slug of the app to fetch
     *
     * @returns {Promise<RegistryApp>}
     */

  }, {
    key: "fetchApp",
    value: function fetchApp(slug) {
      return this.client.stackClient.fetchJSON('GET', "/registry/".concat(slug));
    }
    /**
     * Fetch the latest version of an app for the given channel and slug
     *
     * @param  {object} params - Fetching parameters
     * @param  {string} params.slug - The slug of the app to fetch
     * @param  {RegistryAppChannel} params.channel - The channel of the app to fetch
     * @param  {string} params.version - The version of the app to fetch. Can also be "latest"
     *
     * @returns {Promise<RegistryApp>}
     */

  }, {
    key: "fetchAppVersion",
    value: function fetchAppVersion(params) {
      if (!params.slug) {
        throw new Error('Need to pass a slug to use fetchAppVersion');
      }

      var slug = params.slug,
          channel = params.channel,
          version = params.version;
      var finalChannel = !channel && (!version || version === 'latest') ? 'stable' : channel;
      var url = "/registry/".concat(slug, "/");

      if (finalChannel) {
        url += "".concat(finalChannel, "/").concat(version || 'latest');
      } else {
        url += "".concat(version);
      }

      return this.client.stackClient.fetchJSON('GET', url);
    }
  }]);
  return Registry;
}();

var _default = Registry;
exports.default = _default;

/***/ }),
/* 262 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * @typedef {object} CozyStackClient
 * @property {object} oauthOptions oauthOptions
 * @property {string} uri CozyUri
 * @property {Function} fetch fetchMethod
 * @property {Function} fetchJSON fetchJSON
 */
var _default = {};
exports.default = _default;

/***/ }),
/* 263 */
/***/ (function(module, exports, __webpack_require__) {

var baseFindKey = __webpack_require__(555),
    baseForOwn = __webpack_require__(165),
    baseIteratee = __webpack_require__(47);

/**
 * This method is like `_.find` except that it returns the key of the first
 * element `predicate` returns truthy for instead of the element itself.
 *
 * @static
 * @memberOf _
 * @since 1.1.0
 * @category Object
 * @param {Object} object The object to inspect.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @returns {string|undefined} Returns the key of the matched element,
 *  else `undefined`.
 * @example
 *
 * var users = {
 *   'barney':  { 'age': 36, 'active': true },
 *   'fred':    { 'age': 40, 'active': false },
 *   'pebbles': { 'age': 1,  'active': true }
 * };
 *
 * _.findKey(users, function(o) { return o.age < 40; });
 * // => 'barney' (iteration order is not guaranteed)
 *
 * // The `_.matches` iteratee shorthand.
 * _.findKey(users, { 'age': 1, 'active': true });
 * // => 'pebbles'
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.findKey(users, ['active', false]);
 * // => 'fred'
 *
 * // The `_.property` iteratee shorthand.
 * _.findKey(users, 'active');
 * // => 'barney'
 */
function findKey(object, predicate) {
  return baseFindKey(object, baseIteratee(predicate, 3), baseForOwn);
}

module.exports = findKey;


/***/ }),
/* 264 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(265);

var consoleLogger = __webpack_require__(557);

// if we are running inside Electron then use the web version of console.js
var isElectron = (typeof window !== 'undefined' && window.process && window.process.type === 'renderer');
if (isElectron) {
  consoleLogger = __webpack_require__(565).minilog;
}

// intercept the pipe method and transparently wrap the stringifier, if the
// destination is a Node core stream

module.exports.Stringifier = __webpack_require__(568);

var oldPipe = module.exports.pipe;
module.exports.pipe = function(dest) {
  if(dest instanceof __webpack_require__(17)) {
    return oldPipe.call(module.exports, new (module.exports.Stringifier)).pipe(dest);
  } else {
    return oldPipe.call(module.exports, dest);
  }
};

module.exports.defaultBackend = consoleLogger;
module.exports.defaultFormatter = consoleLogger.formatMinilog;

module.exports.backends = {
  redis: __webpack_require__(569),
  nodeConsole: consoleLogger,
  console: consoleLogger
};


/***/ }),
/* 265 */
/***/ (function(module, exports, __webpack_require__) {

var Transform = __webpack_require__(28),
    Filter = __webpack_require__(556);

var log = new Transform(),
    slice = Array.prototype.slice;

exports = module.exports = function create(name) {
  var o   = function() { log.write(name, undefined, slice.call(arguments)); return o; };
  o.debug = function() { log.write(name, 'debug', slice.call(arguments)); return o; };
  o.info  = function() { log.write(name, 'info',  slice.call(arguments)); return o; };
  o.warn  = function() { log.write(name, 'warn',  slice.call(arguments)); return o; };
  o.error = function() { log.write(name, 'error', slice.call(arguments)); return o; };
  o.group = function() { log.write(name, 'group', slice.call(arguments)); return o; };
  o.groupEnd = function() { log.write(name, 'groupEnd', slice.call(arguments)); return o; };
  o.log   = o.debug; // for interface compliance with Node and browser consoles
  o.suggest = exports.suggest;
  o.format = log.format;
  return o;
};

// filled in separately
exports.defaultBackend = exports.defaultFormatter = null;

exports.pipe = function(dest) {
  return log.pipe(dest);
};

exports.end = exports.unpipe = exports.disable = function(from) {
  return log.unpipe(from);
};

exports.Transform = Transform;
exports.Filter = Filter;
// this is the default filter that's applied when .enable() is called normally
// you can bypass it completely and set up your own pipes
exports.suggest = new Filter();

exports.enable = function() {
  if(exports.defaultFormatter) {
    return log.pipe(exports.suggest) // filter
              .pipe(exports.defaultFormatter) // formatter
              .pipe(exports.defaultBackend); // backend
  }
  return log.pipe(exports.suggest) // filter
            .pipe(exports.defaultBackend); // formatter
};



/***/ }),
/* 266 */
/***/ (function(module, exports) {

var hex = {
  black: '#000',
  red: '#c23621',
  green: '#25bc26',
  yellow: '#bbbb00',
  blue:  '#492ee1',
  magenta: '#d338d3',
  cyan: '#33bbc8',
  gray: '#808080',
  purple: '#708'
};
function color(fg, isInverse) {
  if(isInverse) {
    return 'color: #fff; background: '+hex[fg]+';';
  } else {
    return 'color: '+hex[fg]+';';
  }
}

module.exports = color;


/***/ }),
/* 267 */
/***/ (function(module, exports) {

/**
 * Gets the last element of `array`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to query.
 * @returns {*} Returns the last element of `array`.
 * @example
 *
 * _.last([1, 2, 3]);
 * // => 3
 */
function last(array) {
  var length = array == null ? 0 : array.length;
  return length ? array[length - 1] : undefined;
}

module.exports = last;


/***/ }),
/* 268 */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.slice` without an iteratee call guard.
 *
 * @private
 * @param {Array} array The array to slice.
 * @param {number} [start=0] The start position.
 * @param {number} [end=array.length] The end position.
 * @returns {Array} Returns the slice of `array`.
 */
function baseSlice(array, start, end) {
  var index = -1,
      length = array.length;

  if (start < 0) {
    start = -start > length ? 0 : (length + start);
  }
  end = end > length ? length : end;
  if (end < 0) {
    end += length;
  }
  length = start > end ? 0 : ((end - start) >>> 0);
  start >>>= 0;

  var result = Array(length);
  while (++index < length) {
    result[index] = array[index + start];
  }
  return result;
}

module.exports = baseSlice;


/***/ }),
/* 269 */
/***/ (function(module, exports) {

/**
 * Gets the first element of `array`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @alias first
 * @category Array
 * @param {Array} array The array to query.
 * @returns {*} Returns the first element of `array`.
 * @example
 *
 * _.head([1, 2, 3]);
 * // => 1
 *
 * _.head([]);
 * // => undefined
 */
function head(array) {
  return (array && array.length) ? array[0] : undefined;
}

module.exports = head;


/***/ }),
/* 270 */
/***/ (function(module, exports, __webpack_require__) {

var baseAssignValue = __webpack_require__(73),
    eq = __webpack_require__(88);

/**
 * This function is like `assignValue` except that it doesn't assign
 * `undefined` values.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignMergeValue(object, key, value) {
  if ((value !== undefined && !eq(object[key], value)) ||
      (value === undefined && !(key in object))) {
    baseAssignValue(object, key, value);
  }
}

module.exports = assignMergeValue;


/***/ }),
/* 271 */
/***/ (function(module, exports) {

/**
 * Gets the value at `key`, unless `key` is "__proto__" or "constructor".
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function safeGet(object, key) {
  if (key === 'constructor' && typeof object[key] === 'function') {
    return;
  }

  if (key == '__proto__') {
    return;
  }

  return object[key];
}

module.exports = safeGet;


/***/ }),
/* 272 */
/***/ (function(module, exports) {

/** Used to match a single whitespace character. */
var reWhitespace = /\s/;

/**
 * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace
 * character of `string`.
 *
 * @private
 * @param {string} string The string to inspect.
 * @returns {number} Returns the index of the last non-whitespace character.
 */
function trimmedEndIndex(string) {
  var index = string.length;

  while (index-- && reWhitespace.test(string.charAt(index))) {}
  return index;
}

module.exports = trimmedEndIndex;


/***/ }),
/* 273 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/* eslint complexity: [2, 18], max-statements: [2, 33] */
module.exports = function hasSymbols() {
	if (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }
	if (typeof Symbol.iterator === 'symbol') { return true; }

	var obj = {};
	var sym = Symbol('test');
	var symObj = Object(sym);
	if (typeof sym === 'string') { return false; }

	if (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }
	if (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }

	// temp disabled per https://github.com/ljharb/object.assign/issues/17
	// if (sym instanceof Symbol) { return false; }
	// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4
	// if (!(symObj instanceof Symbol)) { return false; }

	// if (typeof Symbol.prototype.toString !== 'function') { return false; }
	// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }

	var symVal = 42;
	obj[sym] = symVal;
	for (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop
	if (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }

	if (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }

	var syms = Object.getOwnPropertySymbols(obj);
	if (syms.length !== 1 || syms[0] !== sym) { return false; }

	if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }

	if (typeof Object.getOwnPropertyDescriptor === 'function') {
		var descriptor = Object.getOwnPropertyDescriptor(obj, sym);
		if (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }
	}

	return true;
};


/***/ }),
/* 274 */
/***/ (function(module, exports, __webpack_require__) {

var hasMap = typeof Map === 'function' && Map.prototype;
var mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;
var mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;
var mapForEach = hasMap && Map.prototype.forEach;
var hasSet = typeof Set === 'function' && Set.prototype;
var setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;
var setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;
var setForEach = hasSet && Set.prototype.forEach;
var hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;
var weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;
var hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;
var weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;
var hasWeakRef = typeof WeakRef === 'function' && WeakRef.prototype;
var weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;
var booleanValueOf = Boolean.prototype.valueOf;
var objectToString = Object.prototype.toString;
var functionToString = Function.prototype.toString;
var $match = String.prototype.match;
var $slice = String.prototype.slice;
var $replace = String.prototype.replace;
var $toUpperCase = String.prototype.toUpperCase;
var $toLowerCase = String.prototype.toLowerCase;
var $test = RegExp.prototype.test;
var $concat = Array.prototype.concat;
var $join = Array.prototype.join;
var $arrSlice = Array.prototype.slice;
var $floor = Math.floor;
var bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;
var gOPS = Object.getOwnPropertySymbols;
var symToString = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? Symbol.prototype.toString : null;
var hasShammedSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'object';
// ie, `has-tostringtag/shams
var toStringTag = typeof Symbol === 'function' && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? 'object' : 'symbol')
    ? Symbol.toStringTag
    : null;
var isEnumerable = Object.prototype.propertyIsEnumerable;

var gPO = (typeof Reflect === 'function' ? Reflect.getPrototypeOf : Object.getPrototypeOf) || (
    [].__proto__ === Array.prototype // eslint-disable-line no-proto
        ? function (O) {
            return O.__proto__; // eslint-disable-line no-proto
        }
        : null
);

function addNumericSeparator(num, str) {
    if (
        num === Infinity
        || num === -Infinity
        || num !== num
        || (num && num > -1000 && num < 1000)
        || $test.call(/e/, str)
    ) {
        return str;
    }
    var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;
    if (typeof num === 'number') {
        var int = num < 0 ? -$floor(-num) : $floor(num); // trunc(num)
        if (int !== num) {
            var intStr = String(int);
            var dec = $slice.call(str, intStr.length + 1);
            return $replace.call(intStr, sepRegex, '$&_') + '.' + $replace.call($replace.call(dec, /([0-9]{3})/g, '$&_'), /_$/, '');
        }
    }
    return $replace.call(str, sepRegex, '$&_');
}

var utilInspect = __webpack_require__(585);
var inspectCustom = utilInspect.custom;
var inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;

module.exports = function inspect_(obj, options, depth, seen) {
    var opts = options || {};

    if (has(opts, 'quoteStyle') && (opts.quoteStyle !== 'single' && opts.quoteStyle !== 'double')) {
        throw new TypeError('option "quoteStyle" must be "single" or "double"');
    }
    if (
        has(opts, 'maxStringLength') && (typeof opts.maxStringLength === 'number'
            ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity
            : opts.maxStringLength !== null
        )
    ) {
        throw new TypeError('option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`');
    }
    var customInspect = has(opts, 'customInspect') ? opts.customInspect : true;
    if (typeof customInspect !== 'boolean' && customInspect !== 'symbol') {
        throw new TypeError('option "customInspect", if provided, must be `true`, `false`, or `\'symbol\'`');
    }

    if (
        has(opts, 'indent')
        && opts.indent !== null
        && opts.indent !== '\t'
        && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)
    ) {
        throw new TypeError('option "indent" must be "\\t", an integer > 0, or `null`');
    }
    if (has(opts, 'numericSeparator') && typeof opts.numericSeparator !== 'boolean') {
        throw new TypeError('option "numericSeparator", if provided, must be `true` or `false`');
    }
    var numericSeparator = opts.numericSeparator;

    if (typeof obj === 'undefined') {
        return 'undefined';
    }
    if (obj === null) {
        return 'null';
    }
    if (typeof obj === 'boolean') {
        return obj ? 'true' : 'false';
    }

    if (typeof obj === 'string') {
        return inspectString(obj, opts);
    }
    if (typeof obj === 'number') {
        if (obj === 0) {
            return Infinity / obj > 0 ? '0' : '-0';
        }
        var str = String(obj);
        return numericSeparator ? addNumericSeparator(obj, str) : str;
    }
    if (typeof obj === 'bigint') {
        var bigIntStr = String(obj) + 'n';
        return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;
    }

    var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;
    if (typeof depth === 'undefined') { depth = 0; }
    if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {
        return isArray(obj) ? '[Array]' : '[Object]';
    }

    var indent = getIndent(opts, depth);

    if (typeof seen === 'undefined') {
        seen = [];
    } else if (indexOf(seen, obj) >= 0) {
        return '[Circular]';
    }

    function inspect(value, from, noIndent) {
        if (from) {
            seen = $arrSlice.call(seen);
            seen.push(from);
        }
        if (noIndent) {
            var newOpts = {
                depth: opts.depth
            };
            if (has(opts, 'quoteStyle')) {
                newOpts.quoteStyle = opts.quoteStyle;
            }
            return inspect_(value, newOpts, depth + 1, seen);
        }
        return inspect_(value, opts, depth + 1, seen);
    }

    if (typeof obj === 'function' && !isRegExp(obj)) { // in older engines, regexes are callable
        var name = nameOf(obj);
        var keys = arrObjKeys(obj, inspect);
        return '[Function' + (name ? ': ' + name : ' (anonymous)') + ']' + (keys.length > 0 ? ' { ' + $join.call(keys, ', ') + ' }' : '');
    }
    if (isSymbol(obj)) {
        var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\(.*\))_[^)]*$/, '$1') : symToString.call(obj);
        return typeof obj === 'object' && !hasShammedSymbols ? markBoxed(symString) : symString;
    }
    if (isElement(obj)) {
        var s = '<' + $toLowerCase.call(String(obj.nodeName));
        var attrs = obj.attributes || [];
        for (var i = 0; i < attrs.length; i++) {
            s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value), 'double', opts);
        }
        s += '>';
        if (obj.childNodes && obj.childNodes.length) { s += '...'; }
        s += '</' + $toLowerCase.call(String(obj.nodeName)) + '>';
        return s;
    }
    if (isArray(obj)) {
        if (obj.length === 0) { return '[]'; }
        var xs = arrObjKeys(obj, inspect);
        if (indent && !singleLineValues(xs)) {
            return '[' + indentedJoin(xs, indent) + ']';
        }
        return '[ ' + $join.call(xs, ', ') + ' ]';
    }
    if (isError(obj)) {
        var parts = arrObjKeys(obj, inspect);
        if (!('cause' in Error.prototype) && 'cause' in obj && !isEnumerable.call(obj, 'cause')) {
            return '{ [' + String(obj) + '] ' + $join.call($concat.call('[cause]: ' + inspect(obj.cause), parts), ', ') + ' }';
        }
        if (parts.length === 0) { return '[' + String(obj) + ']'; }
        return '{ [' + String(obj) + '] ' + $join.call(parts, ', ') + ' }';
    }
    if (typeof obj === 'object' && customInspect) {
        if (inspectSymbol && typeof obj[inspectSymbol] === 'function' && utilInspect) {
            return utilInspect(obj, { depth: maxDepth - depth });
        } else if (customInspect !== 'symbol' && typeof obj.inspect === 'function') {
            return obj.inspect();
        }
    }
    if (isMap(obj)) {
        var mapParts = [];
        mapForEach.call(obj, function (value, key) {
            mapParts.push(inspect(key, obj, true) + ' => ' + inspect(value, obj));
        });
        return collectionOf('Map', mapSize.call(obj), mapParts, indent);
    }
    if (isSet(obj)) {
        var setParts = [];
        setForEach.call(obj, function (value) {
            setParts.push(inspect(value, obj));
        });
        return collectionOf('Set', setSize.call(obj), setParts, indent);
    }
    if (isWeakMap(obj)) {
        return weakCollectionOf('WeakMap');
    }
    if (isWeakSet(obj)) {
        return weakCollectionOf('WeakSet');
    }
    if (isWeakRef(obj)) {
        return weakCollectionOf('WeakRef');
    }
    if (isNumber(obj)) {
        return markBoxed(inspect(Number(obj)));
    }
    if (isBigInt(obj)) {
        return markBoxed(inspect(bigIntValueOf.call(obj)));
    }
    if (isBoolean(obj)) {
        return markBoxed(booleanValueOf.call(obj));
    }
    if (isString(obj)) {
        return markBoxed(inspect(String(obj)));
    }
    if (!isDate(obj) && !isRegExp(obj)) {
        var ys = arrObjKeys(obj, inspect);
        var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;
        var protoTag = obj instanceof Object ? '' : 'null prototype';
        var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj), 8, -1) : protoTag ? 'Object' : '';
        var constructorTag = isPlainObject || typeof obj.constructor !== 'function' ? '' : obj.constructor.name ? obj.constructor.name + ' ' : '';
        var tag = constructorTag + (stringTag || protoTag ? '[' + $join.call($concat.call([], stringTag || [], protoTag || []), ': ') + '] ' : '');
        if (ys.length === 0) { return tag + '{}'; }
        if (indent) {
            return tag + '{' + indentedJoin(ys, indent) + '}';
        }
        return tag + '{ ' + $join.call(ys, ', ') + ' }';
    }
    return String(obj);
};

function wrapQuotes(s, defaultStyle, opts) {
    var quoteChar = (opts.quoteStyle || defaultStyle) === 'double' ? '"' : "'";
    return quoteChar + s + quoteChar;
}

function quote(s) {
    return $replace.call(String(s), /"/g, '&quot;');
}

function isArray(obj) { return toStr(obj) === '[object Array]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }
function isDate(obj) { return toStr(obj) === '[object Date]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }
function isRegExp(obj) { return toStr(obj) === '[object RegExp]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }
function isError(obj) { return toStr(obj) === '[object Error]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }
function isString(obj) { return toStr(obj) === '[object String]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }
function isNumber(obj) { return toStr(obj) === '[object Number]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }
function isBoolean(obj) { return toStr(obj) === '[object Boolean]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }

// Symbol and BigInt do have Symbol.toStringTag by spec, so that can't be used to eliminate false positives
function isSymbol(obj) {
    if (hasShammedSymbols) {
        return obj && typeof obj === 'object' && obj instanceof Symbol;
    }
    if (typeof obj === 'symbol') {
        return true;
    }
    if (!obj || typeof obj !== 'object' || !symToString) {
        return false;
    }
    try {
        symToString.call(obj);
        return true;
    } catch (e) {}
    return false;
}

function isBigInt(obj) {
    if (!obj || typeof obj !== 'object' || !bigIntValueOf) {
        return false;
    }
    try {
        bigIntValueOf.call(obj);
        return true;
    } catch (e) {}
    return false;
}

var hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };
function has(obj, key) {
    return hasOwn.call(obj, key);
}

function toStr(obj) {
    return objectToString.call(obj);
}

function nameOf(f) {
    if (f.name) { return f.name; }
    var m = $match.call(functionToString.call(f), /^function\s*([\w$]+)/);
    if (m) { return m[1]; }
    return null;
}

function indexOf(xs, x) {
    if (xs.indexOf) { return xs.indexOf(x); }
    for (var i = 0, l = xs.length; i < l; i++) {
        if (xs[i] === x) { return i; }
    }
    return -1;
}

function isMap(x) {
    if (!mapSize || !x || typeof x !== 'object') {
        return false;
    }
    try {
        mapSize.call(x);
        try {
            setSize.call(x);
        } catch (s) {
            return true;
        }
        return x instanceof Map; // core-js workaround, pre-v2.5.0
    } catch (e) {}
    return false;
}

function isWeakMap(x) {
    if (!weakMapHas || !x || typeof x !== 'object') {
        return false;
    }
    try {
        weakMapHas.call(x, weakMapHas);
        try {
            weakSetHas.call(x, weakSetHas);
        } catch (s) {
            return true;
        }
        return x instanceof WeakMap; // core-js workaround, pre-v2.5.0
    } catch (e) {}
    return false;
}

function isWeakRef(x) {
    if (!weakRefDeref || !x || typeof x !== 'object') {
        return false;
    }
    try {
        weakRefDeref.call(x);
        return true;
    } catch (e) {}
    return false;
}

function isSet(x) {
    if (!setSize || !x || typeof x !== 'object') {
        return false;
    }
    try {
        setSize.call(x);
        try {
            mapSize.call(x);
        } catch (m) {
            return true;
        }
        return x instanceof Set; // core-js workaround, pre-v2.5.0
    } catch (e) {}
    return false;
}

function isWeakSet(x) {
    if (!weakSetHas || !x || typeof x !== 'object') {
        return false;
    }
    try {
        weakSetHas.call(x, weakSetHas);
        try {
            weakMapHas.call(x, weakMapHas);
        } catch (s) {
            return true;
        }
        return x instanceof WeakSet; // core-js workaround, pre-v2.5.0
    } catch (e) {}
    return false;
}

function isElement(x) {
    if (!x || typeof x !== 'object') { return false; }
    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {
        return true;
    }
    return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';
}

function inspectString(str, opts) {
    if (str.length > opts.maxStringLength) {
        var remaining = str.length - opts.maxStringLength;
        var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');
        return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + trailer;
    }
    // eslint-disable-next-line no-control-regex
    var s = $replace.call($replace.call(str, /(['\\])/g, '\\$1'), /[\x00-\x1f]/g, lowbyte);
    return wrapQuotes(s, 'single', opts);
}

function lowbyte(c) {
    var n = c.charCodeAt(0);
    var x = {
        8: 'b',
        9: 't',
        10: 'n',
        12: 'f',
        13: 'r'
    }[n];
    if (x) { return '\\' + x; }
    return '\\x' + (n < 0x10 ? '0' : '') + $toUpperCase.call(n.toString(16));
}

function markBoxed(str) {
    return 'Object(' + str + ')';
}

function weakCollectionOf(type) {
    return type + ' { ? }';
}

function collectionOf(type, size, entries, indent) {
    var joinedEntries = indent ? indentedJoin(entries, indent) : $join.call(entries, ', ');
    return type + ' (' + size + ') {' + joinedEntries + '}';
}

function singleLineValues(xs) {
    for (var i = 0; i < xs.length; i++) {
        if (indexOf(xs[i], '\n') >= 0) {
            return false;
        }
    }
    return true;
}

function getIndent(opts, depth) {
    var baseIndent;
    if (opts.indent === '\t') {
        baseIndent = '\t';
    } else if (typeof opts.indent === 'number' && opts.indent > 0) {
        baseIndent = $join.call(Array(opts.indent + 1), ' ');
    } else {
        return null;
    }
    return {
        base: baseIndent,
        prev: $join.call(Array(depth + 1), baseIndent)
    };
}

function indentedJoin(xs, indent) {
    if (xs.length === 0) { return ''; }
    var lineJoiner = '\n' + indent.prev + indent.base;
    return lineJoiner + $join.call(xs, ',' + lineJoiner) + '\n' + indent.prev;
}

function arrObjKeys(obj, inspect) {
    var isArr = isArray(obj);
    var xs = [];
    if (isArr) {
        xs.length = obj.length;
        for (var i = 0; i < obj.length; i++) {
            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';
        }
    }
    var syms = typeof gOPS === 'function' ? gOPS(obj) : [];
    var symMap;
    if (hasShammedSymbols) {
        symMap = {};
        for (var k = 0; k < syms.length; k++) {
            symMap['$' + syms[k]] = syms[k];
        }
    }

    for (var key in obj) { // eslint-disable-line no-restricted-syntax
        if (!has(obj, key)) { continue; } // eslint-disable-line no-restricted-syntax, no-continue
        if (isArr && String(Number(key)) === key && key < obj.length) { continue; } // eslint-disable-line no-restricted-syntax, no-continue
        if (hasShammedSymbols && symMap['$' + key] instanceof Symbol) {
            // this is to prevent shammed Symbols, which are stored as strings, from being included in the string key section
            continue; // eslint-disable-line no-restricted-syntax, no-continue
        } else if ($test.call(/[^\w$]/, key)) {
            xs.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));
        } else {
            xs.push(key + ': ' + inspect(obj[key], obj));
        }
    }
    if (typeof gOPS === 'function') {
        for (var j = 0; j < syms.length; j++) {
            if (isEnumerable.call(obj, syms[j])) {
                xs.push('[' + inspect(syms[j]) + ']: ' + inspect(obj[syms[j]], obj));
            }
        }
    }
    return xs;
}


/***/ }),
/* 275 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var formats = __webpack_require__(178);

var has = Object.prototype.hasOwnProperty;
var isArray = Array.isArray;

var hexTable = (function () {
    var array = [];
    for (var i = 0; i < 256; ++i) {
        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());
    }

    return array;
}());

var compactQueue = function compactQueue(queue) {
    while (queue.length > 1) {
        var item = queue.pop();
        var obj = item.obj[item.prop];

        if (isArray(obj)) {
            var compacted = [];

            for (var j = 0; j < obj.length; ++j) {
                if (typeof obj[j] !== 'undefined') {
                    compacted.push(obj[j]);
                }
            }

            item.obj[item.prop] = compacted;
        }
    }
};

var arrayToObject = function arrayToObject(source, options) {
    var obj = options && options.plainObjects ? Object.create(null) : {};
    for (var i = 0; i < source.length; ++i) {
        if (typeof source[i] !== 'undefined') {
            obj[i] = source[i];
        }
    }

    return obj;
};

var merge = function merge(target, source, options) {
    /* eslint no-param-reassign: 0 */
    if (!source) {
        return target;
    }

    if (typeof source !== 'object') {
        if (isArray(target)) {
            target.push(source);
        } else if (target && typeof target === 'object') {
            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {
                target[source] = true;
            }
        } else {
            return [target, source];
        }

        return target;
    }

    if (!target || typeof target !== 'object') {
        return [target].concat(source);
    }

    var mergeTarget = target;
    if (isArray(target) && !isArray(source)) {
        mergeTarget = arrayToObject(target, options);
    }

    if (isArray(target) && isArray(source)) {
        source.forEach(function (item, i) {
            if (has.call(target, i)) {
                var targetItem = target[i];
                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {
                    target[i] = merge(targetItem, item, options);
                } else {
                    target.push(item);
                }
            } else {
                target[i] = item;
            }
        });
        return target;
    }

    return Object.keys(source).reduce(function (acc, key) {
        var value = source[key];

        if (has.call(acc, key)) {
            acc[key] = merge(acc[key], value, options);
        } else {
            acc[key] = value;
        }
        return acc;
    }, mergeTarget);
};

var assign = function assignSingleSource(target, source) {
    return Object.keys(source).reduce(function (acc, key) {
        acc[key] = source[key];
        return acc;
    }, target);
};

var decode = function (str, decoder, charset) {
    var strWithoutPlus = str.replace(/\+/g, ' ');
    if (charset === 'iso-8859-1') {
        // unescape never throws, no try...catch needed:
        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);
    }
    // utf-8
    try {
        return decodeURIComponent(strWithoutPlus);
    } catch (e) {
        return strWithoutPlus;
    }
};

var encode = function encode(str, defaultEncoder, charset, kind, format) {
    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.
    // It has been adapted here for stricter adherence to RFC 3986
    if (str.length === 0) {
        return str;
    }

    var string = str;
    if (typeof str === 'symbol') {
        string = Symbol.prototype.toString.call(str);
    } else if (typeof str !== 'string') {
        string = String(str);
    }

    if (charset === 'iso-8859-1') {
        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {
            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';
        });
    }

    var out = '';
    for (var i = 0; i < string.length; ++i) {
        var c = string.charCodeAt(i);

        if (
            c === 0x2D // -
            || c === 0x2E // .
            || c === 0x5F // _
            || c === 0x7E // ~
            || (c >= 0x30 && c <= 0x39) // 0-9
            || (c >= 0x41 && c <= 0x5A) // a-z
            || (c >= 0x61 && c <= 0x7A) // A-Z
            || (format === formats.RFC1738 && (c === 0x28 || c === 0x29)) // ( )
        ) {
            out += string.charAt(i);
            continue;
        }

        if (c < 0x80) {
            out = out + hexTable[c];
            continue;
        }

        if (c < 0x800) {
            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);
            continue;
        }

        if (c < 0xD800 || c >= 0xE000) {
            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);
            continue;
        }

        i += 1;
        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));
        /* eslint operator-linebreak: [2, "before"] */
        out += hexTable[0xF0 | (c >> 18)]
            + hexTable[0x80 | ((c >> 12) & 0x3F)]
            + hexTable[0x80 | ((c >> 6) & 0x3F)]
            + hexTable[0x80 | (c & 0x3F)];
    }

    return out;
};

var compact = function compact(value) {
    var queue = [{ obj: { o: value }, prop: 'o' }];
    var refs = [];

    for (var i = 0; i < queue.length; ++i) {
        var item = queue[i];
        var obj = item.obj[item.prop];

        var keys = Object.keys(obj);
        for (var j = 0; j < keys.length; ++j) {
            var key = keys[j];
            var val = obj[key];
            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {
                queue.push({ obj: obj, prop: key });
                refs.push(val);
            }
        }
    }

    compactQueue(queue);

    return value;
};

var isRegExp = function isRegExp(obj) {
    return Object.prototype.toString.call(obj) === '[object RegExp]';
};

var isBuffer = function isBuffer(obj) {
    if (!obj || typeof obj !== 'object') {
        return false;
    }

    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));
};

var combine = function combine(a, b) {
    return [].concat(a, b);
};

var maybeMap = function maybeMap(val, fn) {
    if (isArray(val)) {
        var mapped = [];
        for (var i = 0; i < val.length; i += 1) {
            mapped.push(fn(val[i]));
        }
        return mapped;
    }
    return fn(val);
};

module.exports = {
    arrayToObject: arrayToObject,
    assign: assign,
    combine: combine,
    compact: compact,
    decode: decode,
    encode: encode,
    isBuffer: isBuffer,
    isRegExp: isRegExp,
    maybeMap: maybeMap,
    merge: merge
};


/***/ }),
/* 276 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isMatchingIndex = exports.getIndexFields = exports.transformSort = exports.getIndexNameFromFields = exports.normalizeDesignDoc = void 0;

var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(41));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(9));

var _head = _interopRequireDefault(__webpack_require__(269));

var _get = _interopRequireDefault(__webpack_require__(10));

var _isEqual = _interopRequireDefault(__webpack_require__(179));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 * @typedef {Object} MangoPartialFilter
 */

/**
 * @typedef {object} MangoSelector
 */

/**
 * @typedef {Array<object>} MangoSort
 */

/**
 * @typedef {object} MangoQueryOptions
 * @property {MangoSelector} [selector] Selector
 * @property {MangoSort} [sort] The sorting parameters
 * @property {Array<string>} [fields] The fields to return
 * @property {Array<string>} [partialFilterFields] The partial filter fields
 * @property {number|null} [limit] For pagination, the number of results to return
 * @property {number|null} [skip] For skip-based pagination, the number of referenced files to skip
 * @property {string|null} [indexId] The _id of the CouchDB index to use for this request
 * @property {string|null} [bookmark] For bookmark-based pagination, the document _id to start from
 * @property {Array<string>} [indexedFields]
 * @property {string} [use_index] Name of the index to use
 * @property {boolean} [execution_stats] If true, we request the stats from Couch
 * @property {MangoPartialFilter|null} [partialFilter] An optional partial filter
 */

/**
 * Attributes representing a design doc
 *
 * @typedef {object} DesignDoc
 *
 * @property {string} _id - Id of the design doc. Can be named, e.g. '_design/by_indexed_attribute' or not, e.g. '_design/12345'
 * @property {string} language - The index language. Can be 'query' for mango index or 'javascript' for views.
 * @property {object} views - Views definition, i.e. the index.
 * @property {string} _rev - Rev version
 */
var normalizeDesignDoc = function normalizeDesignDoc(designDoc) {
  var id = designDoc._id || designDoc.id;
  return _objectSpread({
    id: id,
    _id: id
  }, designDoc.doc);
};
/**
 * Name an index, based on its indexed fields and partial filter.
 *
 * It follows this naming convention:
 * `by_{indexed_field1}_and_{indexed_field2}_filter_{partial_filter_field1}_and_{partial_filter_field2}
 *
 * @param {Array<string>} fields - The indexed fields
 * @param {object} params - The additional params
 * @param {Array<string>=} params.partialFilterFields - The partial filter fields
 * @returns {string} The index name, built from the fields
 */


exports.normalizeDesignDoc = normalizeDesignDoc;

var getIndexNameFromFields = function getIndexNameFromFields(fields) {
  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      partialFilterFields = _ref.partialFilterFields;

  var indexName = "by_".concat(fields.join('_and_'));
  return partialFilterFields ? "".concat(indexName, "_filter_").concat(partialFilterFields.join('_and_')) : indexName;
};
/**
 * Transform sort into Array
 *
 * @param {MangoSort} sort - The sorting parameters
 * @returns {MangoSort}
 */


exports.getIndexNameFromFields = getIndexNameFromFields;

var transformSort = function transformSort(sort) {
  if (!sort || Array.isArray(sort)) {
    return sort;
  }

  throw Error('Passing an object to the "sort" is not supported');
};
/**
 * Compute fields that should be indexed for a mango
 * query to work
 *
 *
 * @returns {Array} - Fields to index
 */


exports.transformSort = transformSort;

var getIndexFields = function getIndexFields(
/** @type {MangoQueryOptions} */
_ref2) {
  var selector = _ref2.selector,
      partialFilter = _ref2.partialFilter,
      _ref2$sort = _ref2.sort,
      sort = _ref2$sort === void 0 ? [] : _ref2$sort;
  return Array.from(new Set([].concat((0, _toConsumableArray2.default)(sort.map(function (sortOption) {
    return (0, _head.default)(Object.keys(sortOption));
  })), (0, _toConsumableArray2.default)(selector ? Object.keys(selector) : []), (0, _toConsumableArray2.default)(partialFilter ? Object.keys(partialFilter) : []))));
};
/**
 * Check if an index is matching the given fields
 *
 * @param {DesignDoc} index - The index to check
 * @param {Array} fields - The fields that the index must have
 * @param {object} partialFilter - An optional partial filter
 * @returns {boolean} True if the index is matches the given fields
 */


exports.getIndexFields = getIndexFields;

var isMatchingIndex = function isMatchingIndex(index, fields, partialFilter) {
  var viewId = Object.keys((0, _get.default)(index, "views"))[0];
  var fieldsInIndex = Object.keys((0, _get.default)(index, "views.".concat(viewId, ".map.fields")));

  if ((0, _isEqual.default)(fieldsInIndex, fields)) {
    var partialFilterInIndex = (0, _get.default)(index, "views.".concat(viewId, ".map.partial_filter_selector"));

    if (!partialFilter && !partialFilterInIndex) {
      return true;
    }

    if ((0, _isEqual.default)(partialFilter, partialFilterInIndex)) {
      return true;
    }
  }

  return false;
};

exports.isMatchingIndex = isMatchingIndex;

/***/ }),
/* 277 */
/***/ (function(module, exports, __webpack_require__) {

var arrayMap = __webpack_require__(37),
    baseIteratee = __webpack_require__(47),
    basePickBy = __webpack_require__(278),
    getAllKeysIn = __webpack_require__(175);

/**
 * Creates an object composed of the `object` properties `predicate` returns
 * truthy for. The predicate is invoked with two arguments: (value, key).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The source object.
 * @param {Function} [predicate=_.identity] The function invoked per property.
 * @returns {Object} Returns the new object.
 * @example
 *
 * var object = { 'a': 1, 'b': '2', 'c': 3 };
 *
 * _.pickBy(object, _.isNumber);
 * // => { 'a': 1, 'c': 3 }
 */
function pickBy(object, predicate) {
  if (object == null) {
    return {};
  }
  var props = arrayMap(getAllKeysIn(object), function(prop) {
    return [prop];
  });
  predicate = baseIteratee(predicate);
  return basePickBy(object, props, function(value, path) {
    return predicate(value, path[0]);
  });
}

module.exports = pickBy;


/***/ }),
/* 278 */
/***/ (function(module, exports, __webpack_require__) {

var baseGet = __webpack_require__(92),
    baseSet = __webpack_require__(279),
    castPath = __webpack_require__(74);

/**
 * The base implementation of  `_.pickBy` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The source object.
 * @param {string[]} paths The property paths to pick.
 * @param {Function} predicate The function invoked per property.
 * @returns {Object} Returns the new object.
 */
function basePickBy(object, paths, predicate) {
  var index = -1,
      length = paths.length,
      result = {};

  while (++index < length) {
    var path = paths[index],
        value = baseGet(object, path);

    if (predicate(value, path)) {
      baseSet(result, castPath(path, object), value);
    }
  }
  return result;
}

module.exports = basePickBy;


/***/ }),
/* 279 */
/***/ (function(module, exports, __webpack_require__) {

var assignValue = __webpack_require__(154),
    castPath = __webpack_require__(74),
    isIndex = __webpack_require__(111),
    isObject = __webpack_require__(38),
    toKey = __webpack_require__(71);

/**
 * The base implementation of `_.set`.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {Array|string} path The path of the property to set.
 * @param {*} value The value to set.
 * @param {Function} [customizer] The function to customize path creation.
 * @returns {Object} Returns `object`.
 */
function baseSet(object, path, value, customizer) {
  if (!isObject(object)) {
    return object;
  }
  path = castPath(path, object);

  var index = -1,
      length = path.length,
      lastIndex = length - 1,
      nested = object;

  while (nested != null && ++index < length) {
    var key = toKey(path[index]),
        newValue = value;

    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {
      return object;
    }

    if (index != lastIndex) {
      var objValue = nested[key];
      newValue = customizer ? customizer(objValue, key, nested) : undefined;
      if (newValue === undefined) {
        newValue = isObject(objValue)
          ? objValue
          : (isIndex(path[index + 1]) ? [] : {});
      }
    }
    assignValue(nested, key, newValue);
    nested = nested[key];
  }
  return object;
}

module.exports = baseSet;


/***/ }),
/* 280 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));

var _createClass2 = _interopRequireDefault(__webpack_require__(13));

var AccessToken = /*#__PURE__*/function () {
  function AccessToken(dataArg) {
    (0, _classCallCheck2.default)(this, AccessToken);
    var data = dataArg;
    if (typeof data === 'string') data = JSON.parse(data);
    this.tokenType = data.token_type || data.tokenType;
    this.accessToken = data.access_token || data.accessToken;
    this.refreshToken = data.refresh_token || data.refreshToken;
    this.scope = data.scope;
  }

  (0, _createClass2.default)(AccessToken, [{
    key: "toAuthHeader",
    value: function toAuthHeader() {
      return 'Bearer ' + this.accessToken;
    }
  }, {
    key: "toBasicAuth",
    value: function toBasicAuth() {
      return "user:".concat(this.accessToken, "@");
    }
  }, {
    key: "toJSON",
    value: function toJSON() {
      return {
        tokenType: this.tokenType,
        accessToken: this.accessToken,
        refreshToken: this.refreshToken,
        scope: this.scope
      };
    }
  }, {
    key: "toString",
    value: function toString() {
      return JSON.stringify(this.toJSON());
    }
    /**
     * Get the access token string
     *
     * @see CozyStackClient.getAccessToken
     * @returns {string} token
     */

  }, {
    key: "getAccessToken",
    value: function getAccessToken() {
      return this.accessToken;
    }
  }]);
  return AccessToken;
}();

exports.default = AccessToken;

/***/ }),
/* 281 */
/***/ (function(module, exports, __webpack_require__) {

var baseHas = __webpack_require__(594),
    hasPath = __webpack_require__(249);

/**
 * Checks if `path` is a direct property of `object`.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 * @example
 *
 * var object = { 'a': { 'b': 2 } };
 * var other = _.create({ 'a': _.create({ 'b': 2 }) });
 *
 * _.has(object, 'a');
 * // => true
 *
 * _.has(object, 'a.b');
 * // => true
 *
 * _.has(object, ['a', 'b']);
 * // => true
 *
 * _.has(other, 'a');
 * // => false
 */
function has(object, path) {
  return object != null && hasPath(object, path, baseHas);
}

module.exports = has;


/***/ }),
/* 282 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getIllegalCharacters = void 0;

/**
 * Get the list of illegal characters in the file name
 *
 * @public
 * @param {string} name - the file name
 * @returns {string} illegal characters separated by spaces
 */
var getIllegalCharacters = function getIllegalCharacters(name) {
  var FILENAME_ILLEGAL_CHARACTERS = /\/|\x00|\n|\r/g; // eslint-disable-line no-control-regex

  var match = name.match(FILENAME_ILLEGAL_CHARACTERS);
  return match ? match.join(' ') : '';
};

exports.getIllegalCharacters = getIllegalCharacters;

/***/ }),
/* 283 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireWildcard = __webpack_require__(22);

var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.hasJobFinished = exports.normalizeJob = exports.JOBS_DOCTYPE = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(6));

var _taggedTemplateLiteral2 = _interopRequireDefault(__webpack_require__(45));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(7));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));

var _createClass2 = _interopRequireDefault(__webpack_require__(13));

var _inherits2 = _interopRequireDefault(__webpack_require__(18));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(19));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(16));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(9));

var _Collection = _interopRequireDefault(__webpack_require__(75));

var _DocumentCollection2 = _interopRequireWildcard(__webpack_require__(26));

var _utils = __webpack_require__(46);

function _templateObject() {
  var data = (0, _taggedTemplateLiteral2.default)(["/jobs/", ""]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var JOBS_DOCTYPE = 'io.cozy.jobs';
exports.JOBS_DOCTYPE = JOBS_DOCTYPE;

var sleep = function sleep(delay) {
  return new Promise(function (resolve) {
    return setTimeout(resolve, delay);
  });
};

var normalizeJob = function normalizeJob(job) {
  return _objectSpread(_objectSpread(_objectSpread({}, job), (0, _DocumentCollection2.normalizeDoc)(job, JOBS_DOCTYPE)), job.attributes);
};

exports.normalizeJob = normalizeJob;

var hasJobFinished = function hasJobFinished(job) {
  return job.state === 'done' || job.state === 'errored';
};
/**
 * Document representing a io.cozy.jobs
 *
 * @typedef {object} JobDocument
 * @property {string} _id - Id of the job
 * @property {string} attributes.state - state of the job. Can be 'errored', 'running', 'queued', 'done'
 * @property {string} attributes.error - Error message of the job if any
 */


exports.hasJobFinished = hasJobFinished;

var JobCollection = /*#__PURE__*/function (_DocumentCollection) {
  (0, _inherits2.default)(JobCollection, _DocumentCollection);

  var _super = _createSuper(JobCollection);

  function JobCollection(stackClient) {
    (0, _classCallCheck2.default)(this, JobCollection);
    return _super.call(this, JOBS_DOCTYPE, stackClient);
  }

  (0, _createClass2.default)(JobCollection, [{
    key: "queued",
    value: function queued(workerType) {
      return this.stackClient.fetchJSON('GET', "/jobs/queue/".concat(workerType));
    }
    /**
     * Creates a job
     *
     * @param  {string} workerType - Ex: "konnector"
     * @param  {object} [args={}] - Ex: {"slug": "my-konnector", "trigger": "trigger-id"}
     * @param  {object} [options={}] - creation options
     * @param  {boolean} [manual=false] -  Manual execution
     * @returns {object} createdJob
     */

  }, {
    key: "create",
    value: function create(workerType) {
      var args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      var manual = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
      return this.stackClient.fetchJSON('POST', "/jobs/queue/".concat(workerType), {
        data: {
          type: JOBS_DOCTYPE,
          attributes: {
            arguments: args,
            options: options,
            manual: manual
          }
        }
      });
    }
    /**
     * Return a normalized job, given its id
     *
     * @param {string} id - id of the job
     * @returns {JobDocument}
     */

  }, {
    key: "get",
    value: function () {
      var _get = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(id) {
        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt("return", _Collection.default.get(this.stackClient, (0, _utils.uri)(_templateObject(), id), {
                  normalize: normalizeJob
                }));

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function get(_x) {
        return _get.apply(this, arguments);
      }

      return get;
    }()
    /**
     * Update the job's state
     * This does work only for jobs comming from @client triggers
     *
     * @param {JobDocument} job - io.cozy.jobs document
     */

  }, {
    key: "update",
    value: function () {
      var _update = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(job) {
        var jobResult;
        return _regenerator.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                if (!(job.worker !== 'client')) {
                  _context2.next = 2;
                  break;
                }

                throw new Error("JobCollection.update only works for client workers. ".concat(job.worker, " given"));

              case 2:
                _context2.next = 4;
                return this.stackClient.fetchJSON('PATCH', "/jobs/".concat(job._id), {
                  data: {
                    type: JOBS_DOCTYPE,
                    id: job._id,
                    attributes: {
                      state: job.attributes.state,
                      error: job.attributes.error
                    }
                  }
                });

              case 4:
                jobResult = _context2.sent;
                return _context2.abrupt("return", normalizeJob(jobResult.data));

              case 6:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function update(_x2) {
        return _update.apply(this, arguments);
      }

      return update;
    }()
    /**
     * Polls a job state until it is finished
     *
     * `options.until` can be used to tweak when to stop waiting. It will be
     * given the current job state. If true is returned, the awaiting is
     * stopped.
     */

  }, {
    key: "waitFor",
    value: function () {
      var _waitFor = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3(id) {
        var _ref,
            _ref$onUpdate,
            onUpdate,
            _ref$until,
            until,
            _ref$delay,
            delay,
            _ref$timeout,
            timeout,
            start,
            jobData,
            now,
            _args3 = arguments;

        return _regenerator.default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _ref = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : {}, _ref$onUpdate = _ref.onUpdate, onUpdate = _ref$onUpdate === void 0 ? null : _ref$onUpdate, _ref$until = _ref.until, until = _ref$until === void 0 ? hasJobFinished : _ref$until, _ref$delay = _ref.delay, delay = _ref$delay === void 0 ? 5 * 1000 : _ref$delay, _ref$timeout = _ref.timeout, timeout = _ref$timeout === void 0 ? 60 * 5 * 1000 : _ref$timeout;
                start = Date.now();
                _context3.next = 4;
                return this.get(id);

              case 4:
                jobData = _context3.sent.data.attributes;

              case 5:
                if (!(!jobData || !until(jobData))) {
                  _context3.next = 17;
                  break;
                }

                _context3.next = 8;
                return sleep(delay);

              case 8:
                _context3.next = 10;
                return this.get(id);

              case 10:
                jobData = _context3.sent.data.attributes;

                if (onUpdate) {
                  onUpdate(jobData);
                }

                now = Date.now();

                if (!(start - now > timeout)) {
                  _context3.next = 15;
                  break;
                }

                throw new Error('Timeout for JobCollection::waitFor');

              case 15:
                _context3.next = 5;
                break;

              case 17:
                return _context3.abrupt("return", jobData);

              case 18:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function waitFor(_x3) {
        return _waitFor.apply(this, arguments);
      }

      return waitFor;
    }()
  }]);
  return JobCollection;
}(_DocumentCollection2.default);

var _default = JobCollection;
exports.default = _default;

/***/ }),
/* 284 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireWildcard = __webpack_require__(22);

var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.isForAccount = exports.isForKonnector = exports.normalizeTrigger = exports.TRIGGERS_DOCTYPE = exports.JOBS_DOCTYPE = void 0;

var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(50));

var _taggedTemplateLiteral2 = _interopRequireDefault(__webpack_require__(45));

var _regenerator = _interopRequireDefault(__webpack_require__(6));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(7));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));

var _createClass2 = _interopRequireDefault(__webpack_require__(13));

var _get3 = _interopRequireDefault(__webpack_require__(128));

var _inherits2 = _interopRequireDefault(__webpack_require__(18));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(19));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(16));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(9));

var _Collection = _interopRequireWildcard(__webpack_require__(75));

var _DocumentCollection2 = _interopRequireWildcard(__webpack_require__(26));

var _JobCollection = __webpack_require__(283);

var _utils = __webpack_require__(46);

var _errors = __webpack_require__(56);

function _templateObject4() {
  var data = (0, _taggedTemplateLiteral2.default)(["/jobs/triggers/", "/launch"]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = (0, _taggedTemplateLiteral2.default)(["/jobs/triggers/", ""]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = (0, _taggedTemplateLiteral2.default)(["/jobs/triggers/", ""]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = (0, _taggedTemplateLiteral2.default)(["/jobs/triggers"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var JOBS_DOCTYPE = 'io.cozy.jobs';
exports.JOBS_DOCTYPE = JOBS_DOCTYPE;
var TRIGGERS_DOCTYPE = 'io.cozy.triggers';
exports.TRIGGERS_DOCTYPE = TRIGGERS_DOCTYPE;

var normalizeTrigger = function normalizeTrigger(trigger) {
  return _objectSpread(_objectSpread(_objectSpread({}, trigger), (0, _DocumentCollection2.normalizeDoc)(trigger, TRIGGERS_DOCTYPE)), trigger.attributes);
};

exports.normalizeTrigger = normalizeTrigger;

var isForKonnector = function isForKonnector(triggerAttrs, slug) {
  return triggerAttrs.worker === 'konnector' && triggerAttrs.message.konnector == slug;
};

exports.isForKonnector = isForKonnector;

var isForAccount = function isForAccount(triggerAttrs, accountId) {
  return triggerAttrs.message.account == accountId;
};

exports.isForAccount = isForAccount;

var buildParamsUrl = function buildParamsUrl(worker, type) {
  var urlParams = new URLSearchParams();

  if (worker) {
    if (Array.isArray(worker.$in)) {
      urlParams.set('Worker', worker.$in.join(','));
    } else {
      urlParams.set('Worker', worker);
    }
  }

  if (type) {
    if (Array.isArray(type.$in)) {
      urlParams.set('Type', type.$in.join(','));
    } else {
      urlParams.set('Type', type);
    }
  }

  return urlParams.toString();
};
/**
 * Implements `DocumentCollection` API along with specific methods for `io.cozy.triggers`.
 */


var TriggerCollection = /*#__PURE__*/function (_DocumentCollection) {
  (0, _inherits2.default)(TriggerCollection, _DocumentCollection);

  var _super = _createSuper(TriggerCollection);

  function TriggerCollection(stackClient) {
    (0, _classCallCheck2.default)(this, TriggerCollection);
    return _super.call(this, TRIGGERS_DOCTYPE, stackClient);
  }
  /**
   * Get the list of triggers.
   *
   * @see https://docs.cozy.io/en/cozy-stack/jobs/#get-jobstriggers
   * @param  {{Worker}} options The fetch options: Worker allow to filter only triggers associated with a specific worker.
   * @returns {{data}} The JSON API conformant response.
   * @throws {FetchError}
   */


  (0, _createClass2.default)(TriggerCollection, [{
    key: "all",
    value: function () {
      var _all = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {
        var options,
            resp,
            _args = arguments;
        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                options = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};
                _context.prev = 1;
                _context.next = 4;
                return this.stackClient.fetchJSON('GET', "/jobs/triggers");

              case 4:
                resp = _context.sent;
                return _context.abrupt("return", {
                  data: resp.data.map(function (row) {
                    return normalizeTrigger(row, TRIGGERS_DOCTYPE);
                  }),
                  meta: {
                    count: resp.data.length
                  },
                  next: false,
                  skip: 0
                });

              case 8:
                _context.prev = 8;
                _context.t0 = _context["catch"](1);
                return _context.abrupt("return", (0, _Collection.dontThrowNotFoundError)(_context.t0));

              case 11:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this, [[1, 8]]);
      }));

      function all() {
        return _all.apply(this, arguments);
      }

      return all;
    }()
    /**
     * Creates a Trigger document
     *
     * @see https://docs.cozy.io/en/cozy-stack/jobs/#post-jobstriggers
     * @param  {object}  attributes Trigger's attributes
     * @returns {object}  Stack response, containing trigger document under `data` attribute.
     */

  }, {
    key: "create",
    value: function () {
      var _create = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(attributes) {
        var path, resp;
        return _regenerator.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                path = (0, _utils.uri)(_templateObject());
                _context2.next = 3;
                return this.stackClient.fetchJSON('POST', path, {
                  data: {
                    attributes: attributes
                  }
                });

              case 3:
                resp = _context2.sent;
                return _context2.abrupt("return", {
                  data: normalizeTrigger(resp.data)
                });

              case 5:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function create(_x) {
        return _create.apply(this, arguments);
      }

      return create;
    }()
    /**
     * Deletes a trigger
     *
     * @see https://docs.cozy.io/en/cozy-stack/jobs/#delete-jobstriggerstrigger-id
     * @param  {object} document The trigger to delete — must have an _id field
     * @returns {object} The deleted document
     */

  }, {
    key: "destroy",
    value: function () {
      var _destroy = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3(document) {
        var _id;

        return _regenerator.default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _id = document._id;

                if (_id) {
                  _context3.next = 3;
                  break;
                }

                throw new Error('TriggerCollection.destroy needs a document with an _id');

              case 3:
                _context3.next = 5;
                return this.stackClient.fetchJSON('DELETE', (0, _utils.uri)(_templateObject2(), _id));

              case 5:
                return _context3.abrupt("return", {
                  data: normalizeTrigger(_objectSpread(_objectSpread({}, document), {}, {
                    _deleted: true
                  }))
                });

              case 6:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function destroy(_x2) {
        return _destroy.apply(this, arguments);
      }

      return destroy;
    }()
    /**
     *
     * Be warned, ATM /jobs/triggers does not return the same informations
     * than /data/io.cozy.triggers (used by the super.find method).
     *
     * See https://github.com/cozy/cozy-stack/pull/2010
     *
     * @param {object} selector - Which kind of worker {konnector,service}
     * @param {object} options - Options
     * @returns {{data, meta, skip, next}} The JSON API conformant response.
     * @throws {FetchError}
     */

  }, {
    key: "find",
    value: function () {
      var _find = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee4() {
        var selector,
            options,
            worker,
            type,
            rest,
            hasOnlyWorkerAndType,
            url,
            resp,
            _args4 = arguments;
        return _regenerator.default.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                selector = _args4.length > 0 && _args4[0] !== undefined ? _args4[0] : {};
                options = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : {};
                worker = selector.worker, type = selector.type, rest = (0, _objectWithoutProperties2.default)(selector, ["worker", "type"]);
                hasOnlyWorkerAndType = Object.keys(rest).length === 0;

                if (!hasOnlyWorkerAndType) {
                  _context4.next = 18;
                  break;
                }

                // @see https://github.com/cozy/cozy-stack/blob/master/docs/jobs.md#get-jobstriggers
                url = "/jobs/triggers?".concat(buildParamsUrl(worker, type));
                _context4.prev = 6;
                _context4.next = 9;
                return this.stackClient.fetchJSON('GET', url);

              case 9:
                resp = _context4.sent;
                return _context4.abrupt("return", {
                  data: resp.data.map(function (row) {
                    return normalizeTrigger(row, TRIGGERS_DOCTYPE);
                  }),
                  meta: {
                    count: resp.data.length
                  },
                  next: false,
                  skip: 0
                });

              case 13:
                _context4.prev = 13;
                _context4.t0 = _context4["catch"](6);
                return _context4.abrupt("return", (0, _Collection.dontThrowNotFoundError)(_context4.t0));

              case 16:
                _context4.next = 19;
                break;

              case 18:
                return _context4.abrupt("return", (0, _get3.default)((0, _getPrototypeOf2.default)(TriggerCollection.prototype), "find", this).call(this, selector, options));

              case 19:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this, [[6, 13]]);
      }));

      function find() {
        return _find.apply(this, arguments);
      }

      return find;
    }()
  }, {
    key: "get",
    value: function () {
      var _get2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee5(id) {
        return _regenerator.default.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                return _context5.abrupt("return", _Collection.default.get(this.stackClient, (0, _utils.uri)(_templateObject3(), id), {
                  normalize: normalizeTrigger
                }));

              case 1:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function get(_x3) {
        return _get2.apply(this, arguments);
      }

      return get;
    }()
    /**
     * Force given trigger execution.
     *
     * @see https://docs.cozy.io/en/cozy-stack/jobs/#post-jobstriggerstrigger-idlaunch
     * @param {object} trigger Trigger to launch
     * @returns {object} Stack response, containing job launched by trigger, under `data` attribute.
     */

  }, {
    key: "launch",
    value: function () {
      var _launch = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee6(trigger) {
        var path, resp;
        return _regenerator.default.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                path = (0, _utils.uri)(_templateObject4(), trigger._id);
                _context6.next = 3;
                return this.stackClient.fetchJSON('POST', path);

              case 3:
                resp = _context6.sent;
                return _context6.abrupt("return", {
                  data: (0, _JobCollection.normalizeJob)(resp.data)
                });

              case 5:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));

      function launch(_x4) {
        return _launch.apply(this, arguments);
      }

      return launch;
    }()
    /**
     * Updates a Trigger document. Only updatable attributes plus _id are allowed.
     *
     * @param  {object}  trigger Trigger's attributes to update + id
     * @returns {object}  Stack response, containing resulting trigger document under `data` attribute.
     */

  }, {
    key: "update",
    value: function () {
      var _update = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee7(trigger) {
        var key, attributes, triggerUpdateResult;
        return _regenerator.default.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                _context7.t0 = _regenerator.default.keys(trigger);

              case 1:
                if ((_context7.t1 = _context7.t0()).done) {
                  _context7.next = 7;
                  break;
                }

                key = _context7.t1.value;

                if (['_id', '_rev', '_type', 'arguments', 'message', 'cozyMetadata'].includes(key)) {
                  _context7.next = 5;
                  break;
                }

                throw new Error("TriggerCollection.update only works for 'arguments', and 'message' attributes.");

              case 5:
                _context7.next = 1;
                break;

              case 7:
                attributes = _objectSpread(_objectSpread({}, trigger.arguments ? {
                  arguments: trigger.arguments
                } : {}), trigger.message ? {
                  message: trigger.message
                } : {});
                _context7.next = 10;
                return this.stackClient.fetchJSON('PATCH', "/jobs/triggers/".concat(trigger._id), {
                  data: {
                    attributes: attributes
                  }
                });

              case 10:
                triggerUpdateResult = _context7.sent;
                return _context7.abrupt("return", {
                  data: normalizeTrigger(triggerUpdateResult.data)
                });

              case 12:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7, this);
      }));

      function update(_x5) {
        return _update.apply(this, arguments);
      }

      return update;
    }()
  }]);
  return TriggerCollection;
}(_DocumentCollection2.default);

TriggerCollection.normalizeDoctype = _DocumentCollection2.default.normalizeDoctypeJsonApi;
var _default = TriggerCollection;
exports.default = _default;

/***/ }),
/* 285 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _logger = _interopRequireDefault(__webpack_require__(51));

var logDeprecate = function logDeprecate() {
  if (false) {}

  _logger.default.warn.apply(_logger.default, arguments);
};

var _default = logDeprecate;
exports.default = _default;

/***/ }),
/* 286 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.transformBulkDocsResponse = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(6));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(7));

var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(50));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));

var _createClass2 = _interopRequireDefault(__webpack_require__(13));

var _inherits2 = _interopRequireDefault(__webpack_require__(18));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(19));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(16));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(9));

var _zipWith = _interopRequireDefault(__webpack_require__(287));

var _dsl = __webpack_require__(20);

var _CozyLink2 = _interopRequireDefault(__webpack_require__(182));

var _const = __webpack_require__(57);

var _errors = __webpack_require__(288);

var _logger = _interopRequireDefault(__webpack_require__(27));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 *
 * To know if cozy-client should use Document.find()
 * or Document.all()
 * Similar to what is done in CozyPouchLink executeQuery()
 *
 * @param {QueryDefinition} queryDefinition - QueryDefinition to check
 * @returns {boolean} If has find options
 *
 */
var hasFindOptions = function hasFindOptions(queryDefinition) {
  var selector = queryDefinition.selector,
      partialFilter = queryDefinition.partialFilter,
      sort = queryDefinition.sort,
      fields = queryDefinition.fields;
  if (selector || partialFilter || sort || fields) return true;
  return false;
};
/**
 * Returns full documents after a bulk update
 *
 * @private
 *
 * @param  {import("./types").CouchDBBulkResult[]} bulkResponse - Response from bulk docs
 * @param  {import("./types").CozyClientDocument[]} originalDocuments - Documents that were updated
 * @returns {{ data: import("./types").CozyClientDocument[] }} - Full documents with updated _id and _rev
 */


var transformBulkDocsResponse = function transformBulkDocsResponse(bulkResponse, originalDocuments) {
  var updatedDocs = (0, _zipWith.default)(bulkResponse, originalDocuments, function (result, od) {
    return result.ok ? _objectSpread(_objectSpread({}, od), {}, {
      _id: result.id,
      _rev: result.rev
    }) : od;
  });

  if (bulkResponse.find(function (x) {
    return !x.ok;
  })) {
    throw new _errors.BulkEditError(bulkResponse, updatedDocs);
  }

  return {
    data: updatedDocs
  };
};
/**
 * Transfers queries and mutations to a remote stack
 */


exports.transformBulkDocsResponse = transformBulkDocsResponse;

var StackLink = /*#__PURE__*/function (_CozyLink) {
  (0, _inherits2.default)(StackLink, _CozyLink);

  var _super = _createSuper(StackLink);

  /**
   * @param {object} [options] - Options
   * @param  {object} [options.stackClient] - A StackClient
   * @param  {object} [options.client] - A StackClient (deprecated)
   */
  function StackLink() {
    var _this;

    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        client = _ref.client,
        stackClient = _ref.stackClient;

    (0, _classCallCheck2.default)(this, StackLink);
    _this = _super.call(this);

    if (client) {
      _logger.default.warn('Using options.client is deprecated, prefer options.stackClient');
    }

    _this.stackClient = stackClient || client;
    return _this;
  }

  (0, _createClass2.default)(StackLink, [{
    key: "registerClient",
    value: function registerClient(client) {
      this.stackClient = client.stackClient || client.client;
    }
  }, {
    key: "reset",
    value: function reset() {
      this.stackClient = null;
    }
  }, {
    key: "request",
    value: function request(operation, result, forward) {
      if (operation.mutationType) {
        return this.executeMutation(operation, result, forward);
      }

      return this.executeQuery(operation);
    }
    /**
     *
     * @param {QueryDefinition} query - Query to execute
     * @returns {Promise<import("./types").ClientResponse>}
     */

  }, {
    key: "executeQuery",
    value: function executeQuery(query) {
      var doctype = query.doctype,
          selector = query.selector,
          id = query.id,
          ids = query.ids,
          referenced = query.referenced,
          options = (0, _objectWithoutProperties2.default)(query, ["doctype", "selector", "id", "ids", "referenced"]);

      if (!doctype) {
        _logger.default.warn('Bad query', query);

        throw new Error('No doctype found in a query definition');
      }

      var collection = this.stackClient.collection(doctype);

      if (id) {
        return collection.get(id, query);
      }

      if (ids) {
        return collection.getAll(ids);
      }

      if (referenced) {
        return collection.findReferencedBy(referenced, options);
      }

      if (hasFindOptions(query)) {
        return collection.find(selector, options);
      } else {
        return collection.all(options);
      }
    }
  }, {
    key: "executeMutation",
    value: function () {
      var _executeMutation = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(mutation, result, forward) {
        var mutationType, doc, docs, props, updateAllResp;
        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                mutationType = mutation.mutationType, doc = mutation.document, docs = mutation.documents, props = (0, _objectWithoutProperties2.default)(mutation, ["mutationType", "document", "documents"]);
                _context.t0 = mutationType;
                _context.next = _context.t0 === _dsl.MutationTypes.CREATE_DOCUMENT ? 4 : _context.t0 === _dsl.MutationTypes.UPDATE_DOCUMENTS ? 5 : _context.t0 === _dsl.MutationTypes.UPDATE_DOCUMENT ? 9 : _context.t0 === _dsl.MutationTypes.DELETE_DOCUMENT ? 10 : _context.t0 === _dsl.MutationTypes.ADD_REFERENCES_TO ? 11 : _context.t0 === _dsl.MutationTypes.REMOVE_REFERENCES_TO ? 12 : _context.t0 === _dsl.MutationTypes.ADD_REFERENCED_BY ? 13 : _context.t0 === _dsl.MutationTypes.REMOVE_REFERENCED_BY ? 18 : _context.t0 === _dsl.MutationTypes.UPLOAD_FILE ? 23 : 24;
                break;

              case 4:
                return _context.abrupt("return", this.stackClient.collection(doc._type).create(doc));

              case 5:
                _context.next = 7;
                return this.stackClient.collection(docs[0]._type).updateAll(docs);

              case 7:
                updateAllResp = _context.sent;
                return _context.abrupt("return", transformBulkDocsResponse(updateAllResp, docs));

              case 9:
                return _context.abrupt("return", this.stackClient.collection(doc._type).update(doc));

              case 10:
                return _context.abrupt("return", this.stackClient.collection(doc._type).destroy(doc));

              case 11:
                return _context.abrupt("return", this.stackClient.collection(props.referencedDocuments[0]._type).addReferencesTo(doc, props.referencedDocuments));

              case 12:
                return _context.abrupt("return", this.stackClient.collection(props.referencedDocuments[0]._type).removeReferencesTo(doc, props.referencedDocuments));

              case 13:
                if (!(doc._type === _const.DOCTYPE_FILES)) {
                  _context.next = 17;
                  break;
                }

                return _context.abrupt("return", this.stackClient.collection(_const.DOCTYPE_FILES).addReferencedBy(doc, props.referencedDocuments));

              case 17:
                throw new Error('The document type should be io.cozy.files');

              case 18:
                if (!(doc._type === _const.DOCTYPE_FILES)) {
                  _context.next = 22;
                  break;
                }

                return _context.abrupt("return", this.stackClient.collection(_const.DOCTYPE_FILES).removeReferencedBy(doc, props.referencedDocuments));

              case 22:
                throw new Error('The document type should be io.cozy.files');

              case 23:
                return _context.abrupt("return", this.stackClient.collection(_const.DOCTYPE_FILES).upload(props.file, props.dirPath));

              case 24:
                return _context.abrupt("return", forward(mutation, result));

              case 25:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function executeMutation(_x, _x2, _x3) {
        return _executeMutation.apply(this, arguments);
      }

      return executeMutation;
    }()
  }]);
  return StackLink;
}(_CozyLink2.default);

exports.default = StackLink;

/***/ }),
/* 287 */
/***/ (function(module, exports, __webpack_require__) {

var baseRest = __webpack_require__(59),
    unzipWith = __webpack_require__(613);

/**
 * This method is like `_.zip` except that it accepts `iteratee` to specify
 * how grouped values should be combined. The iteratee is invoked with the
 * elements of each group: (...group).
 *
 * @static
 * @memberOf _
 * @since 3.8.0
 * @category Array
 * @param {...Array} [arrays] The arrays to process.
 * @param {Function} [iteratee=_.identity] The function to combine
 *  grouped values.
 * @returns {Array} Returns the new array of grouped elements.
 * @example
 *
 * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
 *   return a + b + c;
 * });
 * // => [111, 222]
 */
var zipWith = baseRest(function(arrays) {
  var length = arrays.length,
      iteratee = length > 1 ? arrays[length - 1] : undefined;

  iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
  return unzipWith(arrays, iteratee);
});

module.exports = zipWith;


/***/ }),
/* 288 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BulkEditError = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(9));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));

var _createClass2 = _interopRequireDefault(__webpack_require__(13));

var _inherits2 = _interopRequireDefault(__webpack_require__(18));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(19));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(16));

var _wrapNativeSuper2 = _interopRequireDefault(__webpack_require__(93));

var _zipWith = _interopRequireDefault(__webpack_require__(287));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var BulkEditError = /*#__PURE__*/function (_Error) {
  (0, _inherits2.default)(BulkEditError, _Error);

  var _super = _createSuper(BulkEditError);

  /**
   * Indicates that a bulk edit has (potentially partially) failed
   *
   * @param  {import("./types").CouchDBBulkResult[]} bulkResponse - CouchDB Bulk response
   * @param  {import("./types").CozyClientDocument[]} updatedDocs - Docs with updated _id and _rev
   */
  function BulkEditError(bulkResponse, updatedDocs) {
    var _this;

    (0, _classCallCheck2.default)(this, BulkEditError);
    _this = _super.call(this, 'Error while bulk saving');
    _this.name = 'BulkEditError';
    _this.results = (0, _zipWith.default)(bulkResponse, updatedDocs, function (result, doc) {
      return _objectSpread(_objectSpread({}, result), {}, {
        doc: doc
      });
    });
    return _this;
  }
  /**
   * Get documents that have been correctly updated
   *
   * @returns {import("./types").CozyClientDocument[]}
   */


  (0, _createClass2.default)(BulkEditError, [{
    key: "getUpdatedDocuments",
    value: function getUpdatedDocuments() {
      return this.results.filter(function (r) {
        return r.ok;
      }).map(function (r) {
        return r.doc;
      });
    }
    /**
     * Get bulk errors results
     *
     * @returns {Array<import("./types").CouchDBBulkResult & { doc: import("./types").CozyClientDocument }>}
     */

  }, {
    key: "getErrors",
    value: function getErrors() {
      return this.results.filter(function (r) {
        return !r.ok;
      });
    }
  }]);
  return BulkEditError;
}( /*#__PURE__*/(0, _wrapNativeSuper2.default)(Error));

exports.BulkEditError = BulkEditError;

/***/ }),
/* 289 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.getFileDatetime = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(6));

var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(41));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(9));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(7));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));

var _createClass2 = _interopRequireDefault(__webpack_require__(13));

var _get3 = _interopRequireDefault(__webpack_require__(128));

var _inherits2 = _interopRequireDefault(__webpack_require__(18));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(19));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(16));

var _slicedToArray2 = _interopRequireDefault(__webpack_require__(32));

var _get4 = _interopRequireDefault(__webpack_require__(10));

var _omit = _interopRequireDefault(__webpack_require__(113));

var _uniq = _interopRequireDefault(__webpack_require__(84));

var _dsl = __webpack_require__(20);

var _store = __webpack_require__(77);

var _const = __webpack_require__(57);

var _Association = _interopRequireDefault(__webpack_require__(64));

var _HasMany2 = _interopRequireDefault(__webpack_require__(94));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

/**
 * newCursor - Returns a CouchDB view Cursor for cursor-based pagination
 *
 * @param {import("../types").ViewKey} key - The CouchDB key of the view which will be requested
 * @param {import("../types").DocId} startDocId - The first doc _id to return from the view
 *
 * @returns {import("../types").CouchDBViewCursor}
 */
var newCursor = function newCursor(_ref, startDocId) {
  var _ref2 = (0, _slicedToArray2.default)(_ref, 3),
      doctype = _ref2[0],
      id = _ref2[1],
      lastDatetime = _ref2[2];

  var cursorKey = lastDatetime ? [doctype, id, lastDatetime] : [doctype, id];
  return [cursorKey, startDocId];
};
/**
 * Get the file datetime
 *
 * @param  {import('../types').IOCozyFile} file - io.cozy.files document
 * @returns {string} The file datetime
 */


var getFileDatetime = function getFileDatetime(file) {
  var _file$metadata;

  // Some files do not have any metadata, e.g. bitmap files.
  return ((_file$metadata = file.metadata) === null || _file$metadata === void 0 ? void 0 : _file$metadata.datetime) || file.created_at;
};
/**
 *  This class is only used for photos albums relationships.
 *  Behind the hood, the queries uses a view returning the files sorted
 *  by datetime, with a cursor-based pagination.
 */


exports.getFileDatetime = getFileDatetime;

var HasManyFiles = /*#__PURE__*/function (_HasMany) {
  (0, _inherits2.default)(HasManyFiles, _HasMany);

  var _super = _createSuper(HasManyFiles);

  function HasManyFiles() {
    (0, _classCallCheck2.default)(this, HasManyFiles);
    return _super.apply(this, arguments);
  }

  (0, _createClass2.default)(HasManyFiles, [{
    key: "fetchMore",
    value: function () {
      var _fetchMore = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2() {
        var _this = this;

        var queryDef, relationships, lastRelationship;
        return _regenerator.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                queryDef = new _dsl.QueryDefinition({
                  doctype: _const.DOCTYPE_FILES
                });
                relationships = this.getRelationship().data; // Get last datetime for cursor

                lastRelationship = relationships[relationships.length - 1];
                _context2.next = 5;
                return this.dispatch( /*#__PURE__*/function () {
                  var _ref3 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(dispatch, getState) {
                    var lastRelDoc, lastDatetime, cursor, response;
                    return _regenerator.default.wrap(function _callee$(_context) {
                      while (1) {
                        switch (_context.prev = _context.next) {
                          case 0:
                            lastRelDoc = (0, _store.getDocumentFromState)(getState(), lastRelationship._type, lastRelationship._id);
                            lastDatetime = getFileDatetime(lastRelDoc.attributes); // cursor-based pagination

                            cursor = newCursor([_this.target._type, _this.target._id, lastDatetime], relationships[relationships.length - 1]._id);
                            _context.next = 5;
                            return _this.query(queryDef.referencedBy(_this.target).offsetCursor(cursor));

                          case 5:
                            response = _context.sent;
                            // Remove first returned element, used as starting point for the query
                            response.data.shift();
                            _context.next = 9;
                            return _this.dispatch(_this.updateRelationshipData(function (previousRelationshipData) {
                              return _objectSpread(_objectSpread({}, previousRelationshipData), {}, {
                                data: [].concat((0, _toConsumableArray2.default)(previousRelationshipData.data), (0, _toConsumableArray2.default)(response.data)),
                                next: response.next
                              });
                            }));

                          case 9:
                          case "end":
                            return _context.stop();
                        }
                      }
                    }, _callee);
                  }));

                  return function (_x, _x2) {
                    return _ref3.apply(this, arguments);
                  };
                }());

              case 5:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function fetchMore() {
        return _fetchMore.apply(this, arguments);
      }

      return fetchMore;
    }()
  }, {
    key: "addById",
    value: function () {
      var _addById = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3(idsArg) {
        var _this2 = this;

        var ids, relations;
        return _regenerator.default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                ids = Array.isArray(idsArg) ? idsArg : [idsArg];
                this.addTargetRelationships(ids);
                relations = ids.map(function (id) {
                  return {
                    _id: id,
                    _type: _this2.doctype
                  };
                });
                _context3.next = 5;
                return this.mutate(this.addReferences(relations));

              case 5:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function addById(_x3) {
        return _addById.apply(this, arguments);
      }

      return addById;
    }()
  }, {
    key: "removeById",
    value: function () {
      var _removeById = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee4(idsArg) {
        var _this3 = this;

        var ids, references;
        return _regenerator.default.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                ids = Array.isArray(idsArg) ? idsArg : [idsArg];
                this.removeTargetRelationships(idsArg);
                references = ids.map(function (id) {
                  return {
                    _id: id,
                    _type: _this3.doctype
                  };
                });
                _context4.next = 5;
                return this.mutate(this.removeReferences(references));

              case 5:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function removeById(_x4) {
        return _removeById.apply(this, arguments);
      }

      return removeById;
    }()
  }, {
    key: "addReferences",
    value: function addReferences(referencedDocs) {
      if (this.target._type === _const.DOCTYPE_FILES) {
        return _dsl.Mutations.addReferencedBy(this.target, referencedDocs);
      } else if (referencedDocs[0]._type === _const.DOCTYPE_FILES) {
        return _dsl.Mutations.addReferencesTo(this.target, referencedDocs);
      } else {
        throw new Error('Either the document or the references should be io.cozy.files');
      }
    }
  }, {
    key: "removeReferences",
    value: function removeReferences(referencedDocs) {
      if (this.target._type === _const.DOCTYPE_FILES) {
        return _dsl.Mutations.removeReferencedBy(this.target, referencedDocs);
      } else if (referencedDocs[0]._type === _const.DOCTYPE_FILES) {
        return _dsl.Mutations.removeReferencesTo(this.target, referencedDocs);
      } else {
        throw new Error('Either the document or the references should be io.cozy.files');
      }
    }
  }, {
    key: "dehydrate",
    value: function dehydrate(doc) {
      // HasManyFiles relationships are stored on the file doctype, not the document the files are related to
      return (0, _omit.default)(doc, [this.name, "relationships.".concat(this.name)]);
    }
    /**
     * @param {import("../types").CozyClientDocument} document - Document to query
     * @param {object} client - The CozyClient instance
     * @param {Association} assoc - The query params
     *
     * @returns {import("../types").CozyClientDocument | QueryDefinition}
     */

  }, {
    key: "data",
    get: function get() {
      var _this4 = this;

      if (this.target._type === _const.DOCTYPE_FILES) {
        var refs = (0, _get4.default)(this.target, 'referenced_by', []);
        return refs.map(function (_ref4) {
          var id = _ref4.id,
              type = _ref4.type;
          return _this4.get(type, id);
        }).filter(Boolean);
      } else {
        return (0, _get3.default)((0, _getPrototypeOf2.default)(HasManyFiles.prototype), "data", this);
      }
    }
  }], [{
    key: "query",
    value: function query(document, client, assoc) {
      if (document._type === _const.DOCTYPE_FILES) {
        var refs = (0, _get4.default)(document, "relationships.referenced_by.data", []);
        var ids = (0, _uniq.default)(refs.filter(function (ref) {
          return ref.type === assoc.doctype;
        }).map(function (ref) {
          return ref.id;
        }));
        return ids.length > 0 ? (0, _dsl.Q)(assoc.doctype).getByIds(ids) : null;
      } else {
        var cursor = newCursor([document._type, document._id], '');
        return (0, _dsl.Q)(assoc.doctype).referencedBy(document).offsetCursor(cursor);
      }
    }
  }]);
  return HasManyFiles;
}(_HasMany2.default);

exports.default = HasManyFiles;

/***/ }),
/* 290 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.extractAndMergeDocument = exports.getCollectionFromSlice = exports.getDocumentFromSlice = exports.default = exports.mergeDocumentsWithRelationships = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(9));

var _keyBy = _interopRequireDefault(__webpack_require__(140));

var _get = _interopRequireDefault(__webpack_require__(10));

var _isEqual = _interopRequireDefault(__webpack_require__(179));

var _omit = _interopRequireDefault(__webpack_require__(113));

var _merge = _interopRequireDefault(__webpack_require__(52));

var _logger = _interopRequireDefault(__webpack_require__(27));

var _queries = __webpack_require__(183);

var _dsl = __webpack_require__(20);

var _mutations = __webpack_require__(184);

var _helpers = __webpack_require__(297);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var storeDocument = function storeDocument(state, document) {
  var type = document._type;

  if (!type) {
    if (false) {}

    throw new Error('Document without _type');
  }

  if (!(0, _helpers.properId)(document)) {
    if (false) {}

    throw new Error('Document without id');
  }

  var existingDoc = (0, _get.default)(state, [type, (0, _helpers.properId)(document)]);

  if ((0, _isEqual.default)(existingDoc, document)) {
    return state;
  } else {
    return _objectSpread(_objectSpread({}, state), {}, (0, _defineProperty2.default)({}, type, _objectSpread(_objectSpread({}, state[type]), {}, (0, _defineProperty2.default)({}, (0, _helpers.properId)(document), mergeDocumentsWithRelationships(existingDoc, document)))));
  }
};

var mergeDocumentsWithRelationships = function mergeDocumentsWithRelationships() {
  var prevDocument = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var nextDocument = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  /**
   * @type {import("../types").CozyClientDocument}
   */
  var merged = _objectSpread(_objectSpread({}, prevDocument), nextDocument);

  if (prevDocument.relationships || nextDocument.relationships) merged.relationships = _objectSpread(_objectSpread({}, prevDocument.relationships), nextDocument.relationships);
  return merged;
}; // reducer


exports.mergeDocumentsWithRelationships = mergeDocumentsWithRelationships;

var documents = function documents() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var action = arguments.length > 1 ? arguments[1] : undefined;

  if (!(0, _queries.isReceivingData)(action) && !(0, _mutations.isReceivingMutationResult)(action)) {
    return state;
  }

  if (action && action.definition && action.definition.mutationType === _dsl.MutationTypes.DELETE_DOCUMENT) {
    var docId = action.definition.document._id;
    var _type = action.definition.document._type;
    return _objectSpread(_objectSpread({}, state), {}, (0, _defineProperty2.default)({}, _type, (0, _omit.default)(state[_type], docId)));
  }

  var _action$response = action.response,
      data = _action$response.data,
      included = _action$response.included;
  if (!data || Array.isArray(data) && data.length === 0) return state;
  var updatedStateWithIncluded = included ? included.reduce(storeDocument, state) : state;

  if (!Array.isArray(data)) {
    return storeDocument(updatedStateWithIncluded, data);
  }

  return extractAndMergeDocument(data, updatedStateWithIncluded);
};

var _default = documents; // selector

exports.default = _default;

var getDocumentFromSlice = function getDocumentFromSlice() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var doctype = arguments.length > 1 ? arguments[1] : undefined;
  var id = arguments.length > 2 ? arguments[2] : undefined;

  if (!doctype) {
    throw new Error('getDocumentFromSlice: Cannot retrieve document with undefined doctype');
  }

  if (!id) {
    throw new Error('getDocumentFromSlice: Cannot retrieve document with undefined id');
  }

  if (!state[doctype]) {
    if (false) {}

    return null;
  } else if (!state[doctype][id]) {
    if (false) {}

    return null;
  }

  return state[doctype][id];
};

exports.getDocumentFromSlice = getDocumentFromSlice;

var getCollectionFromSlice = function getCollectionFromSlice() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var doctype = arguments.length > 1 ? arguments[1] : undefined;

  if (!doctype) {
    throw new Error('getDocumentFromSlice: Cannot retrieve document with undefined doctype');
  }

  if (!state[doctype]) {
    if (false) {}

    return null;
  }

  return Object.values(state[doctype]);
};
/*
  This method has been created in order to get a returned object
  in `data` with the full set on information coming potentially from
  `included`

  This method should be somewhere else. The `document` shall not be
  dealt with included / data and so on.

  This method takes `data` and `included` and merge both sources
  together. It should be always up-to-date. The returned object
  will be as full of information as it can be.
*/


exports.getCollectionFromSlice = getCollectionFromSlice;

var extractAndMergeDocument = function extractAndMergeDocument(data, updatedStateWithIncluded) {
  var doctype = data[0]._type;

  if (!doctype) {
    _logger.default.info('Document without _type', data[0]);

    throw new Error('Document without _type');
  }

  var sortedData = (0, _keyBy.default)(data, _helpers.properId);
  var mergedData = Object.assign({}, updatedStateWithIncluded);
  mergedData[doctype] = Object.assign({}, updatedStateWithIncluded[doctype]);
  Object.values(sortedData).map(function (data) {
    var id = (0, _helpers.properId)(data);

    if (mergedData[doctype][id]) {
      mergedData[doctype][id] = (0, _merge.default)({}, mergedData[doctype][id], data);
    } else {
      mergedData[doctype][id] = data;
    }
  });
  return mergedData;
};

exports.extractAndMergeDocument = extractAndMergeDocument;

/***/ }),
/* 291 */
/***/ (function(module, exports, __webpack_require__) {

var arrayAggregator = __webpack_require__(615),
    baseAggregator = __webpack_require__(616),
    baseIteratee = __webpack_require__(47),
    isArray = __webpack_require__(21);

/**
 * Creates a function like `_.groupBy`.
 *
 * @private
 * @param {Function} setter The function to set accumulator values.
 * @param {Function} [initializer] The accumulator object initializer.
 * @returns {Function} Returns the new aggregator function.
 */
function createAggregator(setter, initializer) {
  return function(collection, iteratee) {
    var func = isArray(collection) ? arrayAggregator : baseAggregator,
        accumulator = initializer ? initializer() : {};

    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);
  };
}

module.exports = createAggregator;


/***/ }),
/* 292 */
/***/ (function(module, exports, __webpack_require__) {

var baseAssignValue = __webpack_require__(73),
    createAggregator = __webpack_require__(291);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Creates an object composed of keys generated from the results of running
 * each element of `collection` thru `iteratee`. The order of grouped values
 * is determined by the order they occur in `collection`. The corresponding
 * value of each key is an array of elements responsible for generating the
 * key. The iteratee is invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
 * @returns {Object} Returns the composed aggregate object.
 * @example
 *
 * _.groupBy([6.1, 4.2, 6.3], Math.floor);
 * // => { '4': [4.2], '6': [6.1, 6.3] }
 *
 * // The `_.property` iteratee shorthand.
 * _.groupBy(['one', 'two', 'three'], 'length');
 * // => { '3': ['one', 'two'], '5': ['three'] }
 */
var groupBy = createAggregator(function(result, value, key) {
  if (hasOwnProperty.call(result, key)) {
    result[key].push(value);
  } else {
    baseAssignValue(result, key, [value]);
  }
});

module.exports = groupBy;


/***/ }),
/* 293 */
/***/ (function(module, exports, __webpack_require__) {

var arrayMap = __webpack_require__(37),
    baseIntersection = __webpack_require__(294),
    baseRest = __webpack_require__(59),
    castArrayLikeObject = __webpack_require__(295);

/**
 * Creates an array of unique values that are included in all given arrays
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons. The order and references of result values are
 * determined by the first array.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {...Array} [arrays] The arrays to inspect.
 * @returns {Array} Returns the new array of intersecting values.
 * @example
 *
 * _.intersection([2, 1], [2, 3]);
 * // => [2]
 */
var intersection = baseRest(function(arrays) {
  var mapped = arrayMap(arrays, castArrayLikeObject);
  return (mapped.length && mapped[0] === arrays[0])
    ? baseIntersection(mapped)
    : [];
});

module.exports = intersection;


/***/ }),
/* 294 */
/***/ (function(module, exports, __webpack_require__) {

var SetCache = __webpack_require__(116),
    arrayIncludes = __webpack_require__(151),
    arrayIncludesWith = __webpack_require__(162),
    arrayMap = __webpack_require__(37),
    baseUnary = __webpack_require__(70),
    cacheHas = __webpack_require__(121);

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMin = Math.min;

/**
 * The base implementation of methods like `_.intersection`, without support
 * for iteratee shorthands, that accepts an array of arrays to inspect.
 *
 * @private
 * @param {Array} arrays The arrays to inspect.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new array of shared values.
 */
function baseIntersection(arrays, iteratee, comparator) {
  var includes = comparator ? arrayIncludesWith : arrayIncludes,
      length = arrays[0].length,
      othLength = arrays.length,
      othIndex = othLength,
      caches = Array(othLength),
      maxLength = Infinity,
      result = [];

  while (othIndex--) {
    var array = arrays[othIndex];
    if (othIndex && iteratee) {
      array = arrayMap(array, baseUnary(iteratee));
    }
    maxLength = nativeMin(array.length, maxLength);
    caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
      ? new SetCache(othIndex && array)
      : undefined;
  }
  array = arrays[0];

  var index = -1,
      seen = caches[0];

  outer:
  while (++index < length && result.length < maxLength) {
    var value = array[index],
        computed = iteratee ? iteratee(value) : value;

    value = (comparator || value !== 0) ? value : 0;
    if (!(seen
          ? cacheHas(seen, computed)
          : includes(result, computed, comparator)
        )) {
      othIndex = othLength;
      while (--othIndex) {
        var cache = caches[othIndex];
        if (!(cache
              ? cacheHas(cache, computed)
              : includes(arrays[othIndex], computed, comparator))
            ) {
          continue outer;
        }
      }
      if (seen) {
        seen.push(computed);
      }
      result.push(value);
    }
  }
  return result;
}

module.exports = baseIntersection;


/***/ }),
/* 295 */
/***/ (function(module, exports, __webpack_require__) {

var isArrayLikeObject = __webpack_require__(124);

/**
 * Casts `value` to an empty array if it's not an array like object.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {Array|Object} Returns the cast array-like object.
 */
function castArrayLikeObject(value) {
  return isArrayLikeObject(value) ? value : [];
}

module.exports = castArrayLikeObject;


/***/ }),
/* 296 */
/***/ (function(module, exports, __webpack_require__) {

var arrayMap = __webpack_require__(37),
    baseGet = __webpack_require__(92),
    baseIteratee = __webpack_require__(47),
    baseMap = __webpack_require__(460),
    baseSortBy = __webpack_require__(618),
    baseUnary = __webpack_require__(70),
    compareMultiple = __webpack_require__(619),
    identity = __webpack_require__(85),
    isArray = __webpack_require__(21);

/**
 * The base implementation of `_.orderBy` without param guards.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
 * @param {string[]} orders The sort orders of `iteratees`.
 * @returns {Array} Returns the new sorted array.
 */
function baseOrderBy(collection, iteratees, orders) {
  if (iteratees.length) {
    iteratees = arrayMap(iteratees, function(iteratee) {
      if (isArray(iteratee)) {
        return function(value) {
          return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);
        }
      }
      return iteratee;
    });
  } else {
    iteratees = [identity];
  }

  var index = -1;
  iteratees = arrayMap(iteratees, baseUnary(baseIteratee));

  var result = baseMap(collection, function(value, key, collection) {
    var criteria = arrayMap(iteratees, function(iteratee) {
      return iteratee(value);
    });
    return { 'criteria': criteria, 'index': ++index, 'value': value };
  });

  return baseSortBy(result, function(object, other) {
    return compareMultiple(object, other, orders);
  });
}

module.exports = baseOrderBy;


/***/ }),
/* 297 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.properId = void 0;

var properId = function properId(doc) {
  return doc.id || doc._id;
};

exports.properId = properId;

/***/ }),
/* 298 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(9));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));

var _createClass2 = _interopRequireDefault(__webpack_require__(13));

var _inherits2 = _interopRequireDefault(__webpack_require__(18));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(19));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(16));

var _get2 = _interopRequireDefault(__webpack_require__(10));

var _set = _interopRequireDefault(__webpack_require__(33));

var _dsl = __webpack_require__(20);

var _Association2 = _interopRequireDefault(__webpack_require__(64));

var _logger = _interopRequireDefault(__webpack_require__(27));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var HasOne = /*#__PURE__*/function (_Association) {
  (0, _inherits2.default)(HasOne, _Association);

  var _super = _createSuper(HasOne);

  function HasOne() {
    (0, _classCallCheck2.default)(this, HasOne);
    return _super.apply(this, arguments);
  }

  (0, _createClass2.default)(HasOne, [{
    key: "add",

    /**
     * Add the relationship to the target document
     *
     * @param {import("../types").CozyClientDocument} doc - Document to add as a relationship
     * @returns {import("../types").CozyClientDocument} The saved target document
     */
    value: function add(doc) {
      this.setRelationship(doc);
      return this.save(this.target);
    }
    /**
     * Remove the relationship from the target document
     *
     * @returns {import("../types").CozyClientDocument} The saved target document
     */

  }, {
    key: "remove",
    value: function remove() {
      this.setRelationship(undefined);
      return this.save(this.target);
    }
  }, {
    key: "setRelationship",
    value: function setRelationship(doc) {
      if (doc && doc._type !== this.doctype) {
        throw new Error("Tried to associate a ".concat(doc._type, " document to a HasOne relationship on ").concat(this.doctype, " document"));
      }

      var path = "relationships[".concat(this.name, "].data");

      if (doc) {
        (0, _set.default)(this.target, path, {
          _id: doc._id,
          _type: doc._type
        });
      } else {
        (0, _set.default)(this.target, path, undefined);
      }
    }
  }, {
    key: "set",
    value: function set(doc) {
      _logger.default.warn('set is deprecated for has-one relationships. Use `add` instead.');

      this.setRelationship(doc);
    }
  }, {
    key: "unset",
    value: function unset() {
      _logger.default.warn('unset is deprecated for has-one relationships. Use `remove` instead.');

      this.setRelationship(undefined);
    }
  }, {
    key: "dehydrate",
    value: function dehydrate(doc) {
      if (!this.raw) {
        return doc;
      }

      return _objectSpread(_objectSpread({}, doc), {}, {
        relationships: _objectSpread(_objectSpread({}, doc.relationships), {}, (0, _defineProperty2.default)({}, this.name, {
          data: this.raw
        }))
      });
    }
  }, {
    key: "raw",
    get: function get() {
      return (0, _get2.default)(this.target, "relationships[".concat(this.name, "].data"), null);
    }
  }, {
    key: "data",
    get: function get() {
      if (!this.raw) {
        return null;
      }

      return this.get(this.doctype, this.raw._id);
    }
    /**
     * @param {import("../types").CozyClientDocument} document - Document to query
     * @param {object} client - The CozyClient instance
     * @param {Association} assoc - The query params
     *
     * @returns {import("../types").CozyClientDocument | QueryDefinition}
     */

  }], [{
    key: "query",
    value: function query(document, client, assoc) {
      var relationship = (0, _get2.default)(document, "relationships.".concat(assoc.name, ".data"), {});

      if (!relationship || !relationship._id) {
        return null;
      }

      return (0, _dsl.Q)(assoc.doctype).getById(relationship._id);
    }
  }]);
  return HasOne;
}(_Association2.default);

exports.default = HasOne;

/***/ }),
/* 299 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BelongsToInPlace = exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(9));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));

var _createClass2 = _interopRequireDefault(__webpack_require__(13));

var _inherits2 = _interopRequireDefault(__webpack_require__(18));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(19));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(16));

var _Association2 = _interopRequireDefault(__webpack_require__(64));

var _dsl = __webpack_require__(20);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

/**
 * Here the id of the document is directly set in the attribute
 * of the document, not in the relationships attribute
 */
var HasOneInPlace = /*#__PURE__*/function (_Association) {
  (0, _inherits2.default)(HasOneInPlace, _Association);

  var _super = _createSuper(HasOneInPlace);

  function HasOneInPlace() {
    (0, _classCallCheck2.default)(this, HasOneInPlace);
    return _super.apply(this, arguments);
  }

  (0, _createClass2.default)(HasOneInPlace, [{
    key: "dehydrate",
    value: function dehydrate(doc) {
      return _objectSpread(_objectSpread({}, doc), {}, (0, _defineProperty2.default)({}, this.name, this.raw || undefined));
    }
  }, {
    key: "raw",
    get: function get() {
      return this.target[this.name];
    }
  }, {
    key: "data",
    get: function get() {
      return this.get(this.doctype, this.raw);
    }
    /**
     * @param {import("../types").CozyClientDocument} document - Document to query
     * @param {object} client - The CozyClient instance
     * @param {Association} assoc - The query params
     *
     * @returns {import("../types").CozyClientDocument | QueryDefinition}
     */

  }], [{
    key: "query",
    value: function query(document, client, assoc) {
      var id = document[assoc.name];
      return client.getDocumentFromState(assoc.doctype, id) || (0, _dsl.Q)(assoc.doctype).getById(id);
    }
  }]);
  return HasOneInPlace;
}(_Association2.default);

exports.default = HasOneInPlace;
var BelongsToInPlace = HasOneInPlace;
exports.BelongsToInPlace = BelongsToInPlace;

/***/ }),
/* 300 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(9));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));

var _createClass2 = _interopRequireDefault(__webpack_require__(13));

var _inherits2 = _interopRequireDefault(__webpack_require__(18));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(19));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(16));

var _dsl = __webpack_require__(20);

var _Association2 = _interopRequireDefault(__webpack_require__(64));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

/**
 *
 * Used when related documents are stored directly under the attribute with
 * only the ids.
 *
 * @property {Function} get
 *
 * @description
 *
 * An example document representing a TODO. See as the related
 * tasks are represented via ids.
 *
 * ```js
 * const todo = {
 *   label: "Protect people's privacy",
 *   tasks: [1, 2]
 * }
 * ```
 *
 * Here is the `Schema` that would represent this kind of document.
 * Components receiving todos via `Query`s would have an instance of `HasManyInPlace`
 * as their `tasks` attribute.
 *
 * ```js
 * const schema = {
 *   todos: {
 *      doctype: 'io.cozy.todos',
 *      relationships: {
 *        tasks: {
 *          doctype: 'io.cozy.tasks',
 *          type: 'has-many-in-place'
 *        }
 *      }
 *    }
 * }
 *
 * const todo = {
 *   label: "Get rich",
 *   tasks: [1, 2]
 * }
 * ```
 *
 */
var HasManyInPlace = /*#__PURE__*/function (_Association) {
  (0, _inherits2.default)(HasManyInPlace, _Association);

  var _super = _createSuper(HasManyInPlace);

  function HasManyInPlace() {
    (0, _classCallCheck2.default)(this, HasManyInPlace);
    return _super.apply(this, arguments);
  }

  (0, _createClass2.default)(HasManyInPlace, [{
    key: "addById",
    value: function addById(id) {
      var rel = this.getRelationship();
      rel.push(id);
    }
  }, {
    key: "removeById",
    value: function removeById(id) {
      var rel = this.getRelationship();
      var index = rel.indexOf(id);

      if (index !== -1) {
        rel.splice(index, 1);
      }
    }
  }, {
    key: "existsById",
    value: function existsById(id) {
      var rel = this.getRelationship();
      return rel.indexOf(id) !== -1;
    }
  }, {
    key: "getRelationship",
    value: function getRelationship() {
      this.target[this.name] = this.target[this.name] || [];
      return this.target[this.name];
    }
  }, {
    key: "dehydrate",
    value: function dehydrate(doc) {
      return _objectSpread(_objectSpread({}, doc), {}, (0, _defineProperty2.default)({}, this.name, this.raw || []));
    }
  }, {
    key: "raw",

    /**
     * Raw property
     *
     * @type {Array<string>}
     */
    get: function get() {
      return this.target[this.name];
    }
  }, {
    key: "data",
    get: function get() {
      var _this = this;

      var doctype = this.doctype;
      return (this.raw || []).map(function (_id) {
        return _this.get(doctype, _id);
      });
    }
    /**
     * @param {import("../types").CozyClientDocument} document - Document to query
     * @param {object} client - The CozyClient instance
     * @param {Association} assoc - The query params
     *
     * @returns {import("../types").CozyClientDocument | QueryDefinition}
     */

  }], [{
    key: "query",
    value: function query(document, client, assoc) {
      var ids = document[assoc.name];

      if (ids && ids > 0) {
        return (0, _dsl.Q)(assoc.doctype).getByIds(ids);
      } else {
        return null;
      }
    }
  }]);
  return HasManyInPlace;
}(_Association2.default);

var _default = HasManyInPlace;
exports.default = _default;

/***/ }),
/* 301 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "checkApp", {
  enumerable: true,
  get: function get() {
    return _apps.checkApp;
  }
});
Object.defineProperty(exports, "getDeviceName", {
  enumerable: true,
  get: function get() {
    return _device.getDeviceName;
  }
});
Object.defineProperty(exports, "getFlagshipMetadata", {
  enumerable: true,
  get: function get() {
    return _flagship.getFlagshipMetadata;
  }
});
Object.defineProperty(exports, "getPlatform", {
  enumerable: true,
  get: function get() {
    return _platform.getPlatform;
  }
});
Object.defineProperty(exports, "hasDevicePlugin", {
  enumerable: true,
  get: function get() {
    return _plugins.hasDevicePlugin;
  }
});
Object.defineProperty(exports, "hasInAppBrowserPlugin", {
  enumerable: true,
  get: function get() {
    return _plugins.hasInAppBrowserPlugin;
  }
});
Object.defineProperty(exports, "hasNetworkInformationPlugin", {
  enumerable: true,
  get: function get() {
    return _plugins.hasNetworkInformationPlugin;
  }
});
Object.defineProperty(exports, "hasSafariPlugin", {
  enumerable: true,
  get: function get() {
    return _plugins.hasSafariPlugin;
  }
});
Object.defineProperty(exports, "isAndroid", {
  enumerable: true,
  get: function get() {
    return _platform.isAndroid;
  }
});
Object.defineProperty(exports, "isAndroidApp", {
  enumerable: true,
  get: function get() {
    return _platform.isAndroidApp;
  }
});
Object.defineProperty(exports, "isCordova", {
  enumerable: true,
  get: function get() {
    return _cordova.isCordova;
  }
});
Object.defineProperty(exports, "isFlagshipApp", {
  enumerable: true,
  get: function get() {
    return _flagship.isFlagshipApp;
  }
});
Object.defineProperty(exports, "isIOS", {
  enumerable: true,
  get: function get() {
    return _platform.isIOS;
  }
});
Object.defineProperty(exports, "isIOSApp", {
  enumerable: true,
  get: function get() {
    return _platform.isIOSApp;
  }
});
Object.defineProperty(exports, "isMobile", {
  enumerable: true,
  get: function get() {
    return _platform.isMobile;
  }
});
Object.defineProperty(exports, "isMobileApp", {
  enumerable: true,
  get: function get() {
    return _platform.isMobileApp;
  }
});
Object.defineProperty(exports, "isWebApp", {
  enumerable: true,
  get: function get() {
    return _platform.isWebApp;
  }
});
Object.defineProperty(exports, "nativeLinkOpen", {
  enumerable: true,
  get: function get() {
    return _link.nativeLinkOpen;
  }
});
Object.defineProperty(exports, "openDeeplinkOrRedirect", {
  enumerable: true,
  get: function get() {
    return _deeplink.openDeeplinkOrRedirect;
  }
});
Object.defineProperty(exports, "startApp", {
  enumerable: true,
  get: function get() {
    return _apps.startApp;
  }
});

var _platform = __webpack_require__(187);

var _device = __webpack_require__(627);

var _apps = __webpack_require__(633);

var _plugins = __webpack_require__(189);

var _cordova = __webpack_require__(131);

var _link = __webpack_require__(634);

var _deeplink = __webpack_require__(635);

var _flagship = __webpack_require__(636);

/***/ }),
/* 302 */
/***/ (function(module, exports, __webpack_require__) {

var baseSlice = __webpack_require__(268);

/**
 * Casts `array` to a slice if it's needed.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {number} start The start position.
 * @param {number} [end=array.length] The end position.
 * @returns {Array} Returns the cast slice.
 */
function castSlice(array, start, end) {
  var length = array.length;
  end = end === undefined ? length : end;
  return (!start && end >= length) ? array : baseSlice(array, start, end);
}

module.exports = castSlice;


/***/ }),
/* 303 */
/***/ (function(module, exports, __webpack_require__) {

var asciiToArray = __webpack_require__(631),
    hasUnicode = __webpack_require__(188),
    unicodeToArray = __webpack_require__(632);

/**
 * Converts `string` to an array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the converted array.
 */
function stringToArray(string) {
  return hasUnicode(string)
    ? unicodeToArray(string)
    : asciiToArray(string);
}

module.exports = stringToArray;


/***/ }),
/* 304 */
/***/ (function(module, exports) {

const Secret = function (data) {
  Object.assign(this, data)
  return this
}

Secret.prototype.toString = function () {
  throw new Error('Cannot convert Secret to string')
}

module.exports = Secret


/***/ }),
/* 305 */
/***/ (function(module, exports, __webpack_require__) {

/* MIT license */
var cssKeywords = __webpack_require__(643);

// NOTE: conversions should only return primitive values (i.e. arrays, or
//       values that give correct `typeof` results).
//       do not use box values types (i.e. Number(), String(), etc.)

var reverseKeywords = {};
for (var key in cssKeywords) {
	if (cssKeywords.hasOwnProperty(key)) {
		reverseKeywords[cssKeywords[key]] = key;
	}
}

var convert = module.exports = {
	rgb: {channels: 3, labels: 'rgb'},
	hsl: {channels: 3, labels: 'hsl'},
	hsv: {channels: 3, labels: 'hsv'},
	hwb: {channels: 3, labels: 'hwb'},
	cmyk: {channels: 4, labels: 'cmyk'},
	xyz: {channels: 3, labels: 'xyz'},
	lab: {channels: 3, labels: 'lab'},
	lch: {channels: 3, labels: 'lch'},
	hex: {channels: 1, labels: ['hex']},
	keyword: {channels: 1, labels: ['keyword']},
	ansi16: {channels: 1, labels: ['ansi16']},
	ansi256: {channels: 1, labels: ['ansi256']},
	hcg: {channels: 3, labels: ['h', 'c', 'g']},
	apple: {channels: 3, labels: ['r16', 'g16', 'b16']},
	gray: {channels: 1, labels: ['gray']}
};

// hide .channels and .labels properties
for (var model in convert) {
	if (convert.hasOwnProperty(model)) {
		if (!('channels' in convert[model])) {
			throw new Error('missing channels property: ' + model);
		}

		if (!('labels' in convert[model])) {
			throw new Error('missing channel labels property: ' + model);
		}

		if (convert[model].labels.length !== convert[model].channels) {
			throw new Error('channel and label counts mismatch: ' + model);
		}

		var channels = convert[model].channels;
		var labels = convert[model].labels;
		delete convert[model].channels;
		delete convert[model].labels;
		Object.defineProperty(convert[model], 'channels', {value: channels});
		Object.defineProperty(convert[model], 'labels', {value: labels});
	}
}

convert.rgb.hsl = function (rgb) {
	var r = rgb[0] / 255;
	var g = rgb[1] / 255;
	var b = rgb[2] / 255;
	var min = Math.min(r, g, b);
	var max = Math.max(r, g, b);
	var delta = max - min;
	var h;
	var s;
	var l;

	if (max === min) {
		h = 0;
	} else if (r === max) {
		h = (g - b) / delta;
	} else if (g === max) {
		h = 2 + (b - r) / delta;
	} else if (b === max) {
		h = 4 + (r - g) / delta;
	}

	h = Math.min(h * 60, 360);

	if (h < 0) {
		h += 360;
	}

	l = (min + max) / 2;

	if (max === min) {
		s = 0;
	} else if (l <= 0.5) {
		s = delta / (max + min);
	} else {
		s = delta / (2 - max - min);
	}

	return [h, s * 100, l * 100];
};

convert.rgb.hsv = function (rgb) {
	var rdif;
	var gdif;
	var bdif;
	var h;
	var s;

	var r = rgb[0] / 255;
	var g = rgb[1] / 255;
	var b = rgb[2] / 255;
	var v = Math.max(r, g, b);
	var diff = v - Math.min(r, g, b);
	var diffc = function (c) {
		return (v - c) / 6 / diff + 1 / 2;
	};

	if (diff === 0) {
		h = s = 0;
	} else {
		s = diff / v;
		rdif = diffc(r);
		gdif = diffc(g);
		bdif = diffc(b);

		if (r === v) {
			h = bdif - gdif;
		} else if (g === v) {
			h = (1 / 3) + rdif - bdif;
		} else if (b === v) {
			h = (2 / 3) + gdif - rdif;
		}
		if (h < 0) {
			h += 1;
		} else if (h > 1) {
			h -= 1;
		}
	}

	return [
		h * 360,
		s * 100,
		v * 100
	];
};

convert.rgb.hwb = function (rgb) {
	var r = rgb[0];
	var g = rgb[1];
	var b = rgb[2];
	var h = convert.rgb.hsl(rgb)[0];
	var w = 1 / 255 * Math.min(r, Math.min(g, b));

	b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));

	return [h, w * 100, b * 100];
};

convert.rgb.cmyk = function (rgb) {
	var r = rgb[0] / 255;
	var g = rgb[1] / 255;
	var b = rgb[2] / 255;
	var c;
	var m;
	var y;
	var k;

	k = Math.min(1 - r, 1 - g, 1 - b);
	c = (1 - r - k) / (1 - k) || 0;
	m = (1 - g - k) / (1 - k) || 0;
	y = (1 - b - k) / (1 - k) || 0;

	return [c * 100, m * 100, y * 100, k * 100];
};

/**
 * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance
 * */
function comparativeDistance(x, y) {
	return (
		Math.pow(x[0] - y[0], 2) +
		Math.pow(x[1] - y[1], 2) +
		Math.pow(x[2] - y[2], 2)
	);
}

convert.rgb.keyword = function (rgb) {
	var reversed = reverseKeywords[rgb];
	if (reversed) {
		return reversed;
	}

	var currentClosestDistance = Infinity;
	var currentClosestKeyword;

	for (var keyword in cssKeywords) {
		if (cssKeywords.hasOwnProperty(keyword)) {
			var value = cssKeywords[keyword];

			// Compute comparative distance
			var distance = comparativeDistance(rgb, value);

			// Check if its less, if so set as closest
			if (distance < currentClosestDistance) {
				currentClosestDistance = distance;
				currentClosestKeyword = keyword;
			}
		}
	}

	return currentClosestKeyword;
};

convert.keyword.rgb = function (keyword) {
	return cssKeywords[keyword];
};

convert.rgb.xyz = function (rgb) {
	var r = rgb[0] / 255;
	var g = rgb[1] / 255;
	var b = rgb[2] / 255;

	// assume sRGB
	r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);
	g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);
	b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);

	var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);
	var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);
	var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);

	return [x * 100, y * 100, z * 100];
};

convert.rgb.lab = function (rgb) {
	var xyz = convert.rgb.xyz(rgb);
	var x = xyz[0];
	var y = xyz[1];
	var z = xyz[2];
	var l;
	var a;
	var b;

	x /= 95.047;
	y /= 100;
	z /= 108.883;

	x = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);
	y = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);
	z = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);

	l = (116 * y) - 16;
	a = 500 * (x - y);
	b = 200 * (y - z);

	return [l, a, b];
};

convert.hsl.rgb = function (hsl) {
	var h = hsl[0] / 360;
	var s = hsl[1] / 100;
	var l = hsl[2] / 100;
	var t1;
	var t2;
	var t3;
	var rgb;
	var val;

	if (s === 0) {
		val = l * 255;
		return [val, val, val];
	}

	if (l < 0.5) {
		t2 = l * (1 + s);
	} else {
		t2 = l + s - l * s;
	}

	t1 = 2 * l - t2;

	rgb = [0, 0, 0];
	for (var i = 0; i < 3; i++) {
		t3 = h + 1 / 3 * -(i - 1);
		if (t3 < 0) {
			t3++;
		}
		if (t3 > 1) {
			t3--;
		}

		if (6 * t3 < 1) {
			val = t1 + (t2 - t1) * 6 * t3;
		} else if (2 * t3 < 1) {
			val = t2;
		} else if (3 * t3 < 2) {
			val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;
		} else {
			val = t1;
		}

		rgb[i] = val * 255;
	}

	return rgb;
};

convert.hsl.hsv = function (hsl) {
	var h = hsl[0];
	var s = hsl[1] / 100;
	var l = hsl[2] / 100;
	var smin = s;
	var lmin = Math.max(l, 0.01);
	var sv;
	var v;

	l *= 2;
	s *= (l <= 1) ? l : 2 - l;
	smin *= lmin <= 1 ? lmin : 2 - lmin;
	v = (l + s) / 2;
	sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);

	return [h, sv * 100, v * 100];
};

convert.hsv.rgb = function (hsv) {
	var h = hsv[0] / 60;
	var s = hsv[1] / 100;
	var v = hsv[2] / 100;
	var hi = Math.floor(h) % 6;

	var f = h - Math.floor(h);
	var p = 255 * v * (1 - s);
	var q = 255 * v * (1 - (s * f));
	var t = 255 * v * (1 - (s * (1 - f)));
	v *= 255;

	switch (hi) {
		case 0:
			return [v, t, p];
		case 1:
			return [q, v, p];
		case 2:
			return [p, v, t];
		case 3:
			return [p, q, v];
		case 4:
			return [t, p, v];
		case 5:
			return [v, p, q];
	}
};

convert.hsv.hsl = function (hsv) {
	var h = hsv[0];
	var s = hsv[1] / 100;
	var v = hsv[2] / 100;
	var vmin = Math.max(v, 0.01);
	var lmin;
	var sl;
	var l;

	l = (2 - s) * v;
	lmin = (2 - s) * vmin;
	sl = s * vmin;
	sl /= (lmin <= 1) ? lmin : 2 - lmin;
	sl = sl || 0;
	l /= 2;

	return [h, sl * 100, l * 100];
};

// http://dev.w3.org/csswg/css-color/#hwb-to-rgb
convert.hwb.rgb = function (hwb) {
	var h = hwb[0] / 360;
	var wh = hwb[1] / 100;
	var bl = hwb[2] / 100;
	var ratio = wh + bl;
	var i;
	var v;
	var f;
	var n;

	// wh + bl cant be > 1
	if (ratio > 1) {
		wh /= ratio;
		bl /= ratio;
	}

	i = Math.floor(6 * h);
	v = 1 - bl;
	f = 6 * h - i;

	if ((i & 0x01) !== 0) {
		f = 1 - f;
	}

	n = wh + f * (v - wh); // linear interpolation

	var r;
	var g;
	var b;
	switch (i) {
		default:
		case 6:
		case 0: r = v; g = n; b = wh; break;
		case 1: r = n; g = v; b = wh; break;
		case 2: r = wh; g = v; b = n; break;
		case 3: r = wh; g = n; b = v; break;
		case 4: r = n; g = wh; b = v; break;
		case 5: r = v; g = wh; b = n; break;
	}

	return [r * 255, g * 255, b * 255];
};

convert.cmyk.rgb = function (cmyk) {
	var c = cmyk[0] / 100;
	var m = cmyk[1] / 100;
	var y = cmyk[2] / 100;
	var k = cmyk[3] / 100;
	var r;
	var g;
	var b;

	r = 1 - Math.min(1, c * (1 - k) + k);
	g = 1 - Math.min(1, m * (1 - k) + k);
	b = 1 - Math.min(1, y * (1 - k) + k);

	return [r * 255, g * 255, b * 255];
};

convert.xyz.rgb = function (xyz) {
	var x = xyz[0] / 100;
	var y = xyz[1] / 100;
	var z = xyz[2] / 100;
	var r;
	var g;
	var b;

	r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);
	g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);
	b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);

	// assume sRGB
	r = r > 0.0031308
		? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)
		: r * 12.92;

	g = g > 0.0031308
		? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)
		: g * 12.92;

	b = b > 0.0031308
		? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)
		: b * 12.92;

	r = Math.min(Math.max(0, r), 1);
	g = Math.min(Math.max(0, g), 1);
	b = Math.min(Math.max(0, b), 1);

	return [r * 255, g * 255, b * 255];
};

convert.xyz.lab = function (xyz) {
	var x = xyz[0];
	var y = xyz[1];
	var z = xyz[2];
	var l;
	var a;
	var b;

	x /= 95.047;
	y /= 100;
	z /= 108.883;

	x = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);
	y = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);
	z = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);

	l = (116 * y) - 16;
	a = 500 * (x - y);
	b = 200 * (y - z);

	return [l, a, b];
};

convert.lab.xyz = function (lab) {
	var l = lab[0];
	var a = lab[1];
	var b = lab[2];
	var x;
	var y;
	var z;

	y = (l + 16) / 116;
	x = a / 500 + y;
	z = y - b / 200;

	var y2 = Math.pow(y, 3);
	var x2 = Math.pow(x, 3);
	var z2 = Math.pow(z, 3);
	y = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;
	x = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;
	z = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;

	x *= 95.047;
	y *= 100;
	z *= 108.883;

	return [x, y, z];
};

convert.lab.lch = function (lab) {
	var l = lab[0];
	var a = lab[1];
	var b = lab[2];
	var hr;
	var h;
	var c;

	hr = Math.atan2(b, a);
	h = hr * 360 / 2 / Math.PI;

	if (h < 0) {
		h += 360;
	}

	c = Math.sqrt(a * a + b * b);

	return [l, c, h];
};

convert.lch.lab = function (lch) {
	var l = lch[0];
	var c = lch[1];
	var h = lch[2];
	var a;
	var b;
	var hr;

	hr = h / 360 * 2 * Math.PI;
	a = c * Math.cos(hr);
	b = c * Math.sin(hr);

	return [l, a, b];
};

convert.rgb.ansi16 = function (args) {
	var r = args[0];
	var g = args[1];
	var b = args[2];
	var value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization

	value = Math.round(value / 50);

	if (value === 0) {
		return 30;
	}

	var ansi = 30
		+ ((Math.round(b / 255) << 2)
		| (Math.round(g / 255) << 1)
		| Math.round(r / 255));

	if (value === 2) {
		ansi += 60;
	}

	return ansi;
};

convert.hsv.ansi16 = function (args) {
	// optimization here; we already know the value and don't need to get
	// it converted for us.
	return convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);
};

convert.rgb.ansi256 = function (args) {
	var r = args[0];
	var g = args[1];
	var b = args[2];

	// we use the extended greyscale palette here, with the exception of
	// black and white. normal palette only has 4 greyscale shades.
	if (r === g && g === b) {
		if (r < 8) {
			return 16;
		}

		if (r > 248) {
			return 231;
		}

		return Math.round(((r - 8) / 247) * 24) + 232;
	}

	var ansi = 16
		+ (36 * Math.round(r / 255 * 5))
		+ (6 * Math.round(g / 255 * 5))
		+ Math.round(b / 255 * 5);

	return ansi;
};

convert.ansi16.rgb = function (args) {
	var color = args % 10;

	// handle greyscale
	if (color === 0 || color === 7) {
		if (args > 50) {
			color += 3.5;
		}

		color = color / 10.5 * 255;

		return [color, color, color];
	}

	var mult = (~~(args > 50) + 1) * 0.5;
	var r = ((color & 1) * mult) * 255;
	var g = (((color >> 1) & 1) * mult) * 255;
	var b = (((color >> 2) & 1) * mult) * 255;

	return [r, g, b];
};

convert.ansi256.rgb = function (args) {
	// handle greyscale
	if (args >= 232) {
		var c = (args - 232) * 10 + 8;
		return [c, c, c];
	}

	args -= 16;

	var rem;
	var r = Math.floor(args / 36) / 5 * 255;
	var g = Math.floor((rem = args % 36) / 6) / 5 * 255;
	var b = (rem % 6) / 5 * 255;

	return [r, g, b];
};

convert.rgb.hex = function (args) {
	var integer = ((Math.round(args[0]) & 0xFF) << 16)
		+ ((Math.round(args[1]) & 0xFF) << 8)
		+ (Math.round(args[2]) & 0xFF);

	var string = integer.toString(16).toUpperCase();
	return '000000'.substring(string.length) + string;
};

convert.hex.rgb = function (args) {
	var match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);
	if (!match) {
		return [0, 0, 0];
	}

	var colorString = match[0];

	if (match[0].length === 3) {
		colorString = colorString.split('').map(function (char) {
			return char + char;
		}).join('');
	}

	var integer = parseInt(colorString, 16);
	var r = (integer >> 16) & 0xFF;
	var g = (integer >> 8) & 0xFF;
	var b = integer & 0xFF;

	return [r, g, b];
};

convert.rgb.hcg = function (rgb) {
	var r = rgb[0] / 255;
	var g = rgb[1] / 255;
	var b = rgb[2] / 255;
	var max = Math.max(Math.max(r, g), b);
	var min = Math.min(Math.min(r, g), b);
	var chroma = (max - min);
	var grayscale;
	var hue;

	if (chroma < 1) {
		grayscale = min / (1 - chroma);
	} else {
		grayscale = 0;
	}

	if (chroma <= 0) {
		hue = 0;
	} else
	if (max === r) {
		hue = ((g - b) / chroma) % 6;
	} else
	if (max === g) {
		hue = 2 + (b - r) / chroma;
	} else {
		hue = 4 + (r - g) / chroma + 4;
	}

	hue /= 6;
	hue %= 1;

	return [hue * 360, chroma * 100, grayscale * 100];
};

convert.hsl.hcg = function (hsl) {
	var s = hsl[1] / 100;
	var l = hsl[2] / 100;
	var c = 1;
	var f = 0;

	if (l < 0.5) {
		c = 2.0 * s * l;
	} else {
		c = 2.0 * s * (1.0 - l);
	}

	if (c < 1.0) {
		f = (l - 0.5 * c) / (1.0 - c);
	}

	return [hsl[0], c * 100, f * 100];
};

convert.hsv.hcg = function (hsv) {
	var s = hsv[1] / 100;
	var v = hsv[2] / 100;

	var c = s * v;
	var f = 0;

	if (c < 1.0) {
		f = (v - c) / (1 - c);
	}

	return [hsv[0], c * 100, f * 100];
};

convert.hcg.rgb = function (hcg) {
	var h = hcg[0] / 360;
	var c = hcg[1] / 100;
	var g = hcg[2] / 100;

	if (c === 0.0) {
		return [g * 255, g * 255, g * 255];
	}

	var pure = [0, 0, 0];
	var hi = (h % 1) * 6;
	var v = hi % 1;
	var w = 1 - v;
	var mg = 0;

	switch (Math.floor(hi)) {
		case 0:
			pure[0] = 1; pure[1] = v; pure[2] = 0; break;
		case 1:
			pure[0] = w; pure[1] = 1; pure[2] = 0; break;
		case 2:
			pure[0] = 0; pure[1] = 1; pure[2] = v; break;
		case 3:
			pure[0] = 0; pure[1] = w; pure[2] = 1; break;
		case 4:
			pure[0] = v; pure[1] = 0; pure[2] = 1; break;
		default:
			pure[0] = 1; pure[1] = 0; pure[2] = w;
	}

	mg = (1.0 - c) * g;

	return [
		(c * pure[0] + mg) * 255,
		(c * pure[1] + mg) * 255,
		(c * pure[2] + mg) * 255
	];
};

convert.hcg.hsv = function (hcg) {
	var c = hcg[1] / 100;
	var g = hcg[2] / 100;

	var v = c + g * (1.0 - c);
	var f = 0;

	if (v > 0.0) {
		f = c / v;
	}

	return [hcg[0], f * 100, v * 100];
};

convert.hcg.hsl = function (hcg) {
	var c = hcg[1] / 100;
	var g = hcg[2] / 100;

	var l = g * (1.0 - c) + 0.5 * c;
	var s = 0;

	if (l > 0.0 && l < 0.5) {
		s = c / (2 * l);
	} else
	if (l >= 0.5 && l < 1.0) {
		s = c / (2 * (1 - l));
	}

	return [hcg[0], s * 100, l * 100];
};

convert.hcg.hwb = function (hcg) {
	var c = hcg[1] / 100;
	var g = hcg[2] / 100;
	var v = c + g * (1.0 - c);
	return [hcg[0], (v - c) * 100, (1 - v) * 100];
};

convert.hwb.hcg = function (hwb) {
	var w = hwb[1] / 100;
	var b = hwb[2] / 100;
	var v = 1 - b;
	var c = v - w;
	var g = 0;

	if (c < 1) {
		g = (v - c) / (1 - c);
	}

	return [hwb[0], c * 100, g * 100];
};

convert.apple.rgb = function (apple) {
	return [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];
};

convert.rgb.apple = function (rgb) {
	return [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];
};

convert.gray.rgb = function (args) {
	return [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];
};

convert.gray.hsl = convert.gray.hsv = function (args) {
	return [0, 0, args[0]];
};

convert.gray.hwb = function (gray) {
	return [0, 100, gray[0]];
};

convert.gray.cmyk = function (gray) {
	return [0, 0, 0, gray[0]];
};

convert.gray.lab = function (gray) {
	return [gray[0], 0, 0];
};

convert.gray.hex = function (gray) {
	var val = Math.round(gray[0] / 100 * 255) & 0xFF;
	var integer = (val << 16) + (val << 8) + val;

	var string = integer.toString(16).toUpperCase();
	return '000000'.substring(string.length) + string;
};

convert.rgb.gray = function (rgb) {
	var val = (rgb[0] + rgb[1] + rgb[2]) / 3;
	return [val / 255 * 100];
};


/***/ }),
/* 306 */
/***/ (function(module, exports, __webpack_require__) {

var realNames = __webpack_require__(667);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Gets the name of `func`.
 *
 * @private
 * @param {Function} func The function to query.
 * @returns {string} Returns the function name.
 */
function getFuncName(func) {
  var result = (func.name + ''),
      array = realNames[result],
      length = hasOwnProperty.call(realNames, result) ? array.length : 0;

  while (length--) {
    var data = array[length],
        otherFunc = data.func;
    if (otherFunc == null || otherFunc == func) {
      return data.name;
    }
  }
  return result;
}

module.exports = getFuncName;


/***/ }),
/* 307 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sanitizeCategories = sanitizeCategories;
exports.areTermsValid = areTermsValid;
exports.isPartnershipValid = isPartnershipValid;
exports.sanitize = sanitize;
exports.getIdentifier = exports.sanitizeIdentifier = exports.legacyLoginFields = exports.ROLE_IDENTIFIER = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(9));

var _flow2 = _interopRequireDefault(__webpack_require__(223));

var _cloneDeep2 = _interopRequireDefault(__webpack_require__(255));

var _findKey = _interopRequireDefault(__webpack_require__(263));

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var ROLE_IDENTIFIER = 'identifier';
/**
 * Legacy login fields declared by some konnectors
 */

exports.ROLE_IDENTIFIER = ROLE_IDENTIFIER;
var legacyLoginFields = ['login', 'identifier', 'new_identifier', 'email'];
exports.legacyLoginFields = legacyLoginFields;
var legacyEncryptedFields = ['secret', 'dob', 'code', 'answer', 'access_token', 'refresh_token', 'appSecret'];
var APP_CATEGORIES = ['banking', 'cozy', 'energy', 'health', 'host_provider', 'insurance', 'isp', 'mes_infos', 'online_services', 'others', 'partners', 'press', 'productivity', 'ptnb', 'public_service', 'shopping', 'social', 'telecom', 'transport'];
/**
 * Filters unauthorized categories. Defaults to ['others'] if no suitable category.
 *
 * @param {Array<Object>} categories - Array of categories
 * @returns {Array<Object>} sanitized categories
 */

function sanitizeCategories(categories) {
  if (!categories) return ['others'];
  var filteredList = categories.filter(function (c) {
    return APP_CATEGORIES.includes(c);
  });
  if (!filteredList.length) return ['others'];
  return filteredList;
}

function areTermsValid(terms) {
  return Boolean(terms && terms.id && terms.url && terms.version);
}

function isPartnershipValid(partnership) {
  return Boolean(partnership && partnership.description);
}
/**
 * Normalize app manifest, retro-compatibility for old manifests
 *
 * @param  {import('../types').Manifest} manifest - app manifest to normalize
 * @returns {import('../types').SanitizedManifest}
 */


function sanitize(manifest) {
  var sanitized = _objectSpread({}, manifest); // Make categories an array and delete category attribute if it exists


  if (!manifest.categories && manifest.category && typeof manifest.category === 'string') {
    sanitized.categories = [manifest.category];
    delete sanitized.category;
  }

  sanitized.categories = sanitizeCategories(sanitized.categories); // manifest name is not an object

  if (typeof manifest.name === 'object') sanitized.name = manifest.name.en; // Fix camelCase from cozy-stack

  if (manifest.available_version) {
    sanitized.availableVersion = manifest.available_version;
    delete sanitized.available_version;
  } // Fix camelCase from cozy-stack


  if (manifest.latest_version) {
    sanitized.latestVersion = manifest.latestVersion;
    delete sanitized.latest_version;
  } // Remove invalid terms


  if (sanitized.terms && !areTermsValid(sanitized.terms)) {
    delete sanitized.terms;
  } // Remove invalid partnership


  if (sanitized.partnership && !isPartnershipValid(sanitized.partnership)) {
    delete sanitized.partnership;
  }

  if (sanitized.fields) {
    sanitized.fields = sanitizeFields(manifest.fields);
  }

  return sanitized;
}
/**
 * Ensures that fields has at least one field with the role 'identifier'
 *
 * @param  {import('../types').ManifestFields} fields - Manifest fields
 * @returns {import('../types').ManifestFields} - Sanitized manifest fields
 */


var sanitizeIdentifier = function sanitizeIdentifier(fields) {
  var sanitized = (0, _cloneDeep2.default)(fields);
  var hasIdentifier = false;

  for (var fieldName in sanitized) {
    if (sanitized[fieldName].role === ROLE_IDENTIFIER) {
      if (hasIdentifier) delete sanitized[fieldName].role;else hasIdentifier = true;
    }
  }

  if (hasIdentifier) return sanitized;

  var _iterator = _createForOfIteratorHelper(legacyLoginFields),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var name = _step.value;

      if (sanitized[name]) {
        sanitized[name].role = ROLE_IDENTIFIER;
        return sanitized;
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  for (var _fieldName in sanitized) {
    if (sanitized[_fieldName].type !== 'password') {
      sanitized[_fieldName].role = ROLE_IDENTIFIER;
      return sanitized;
    }
  }

  return sanitized;
};
/**
 * Returns the key for the field having the role=identifier attribute
 *
 * @param  {import('../types').ManifestFields} fields Konnector fields
 * @returns {String|null}  The key for the identifier field, example 'login'
 */


exports.sanitizeIdentifier = sanitizeIdentifier;

var getIdentifier = function getIdentifier() {
  var fields = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return (0, _findKey.default)(sanitizeIdentifier(fields), function (field) {
    return field.role === ROLE_IDENTIFIER;
  }) || null;
};
/**
 * Ensures old fields are removed
 *
 * @param  {Object} fields Manifest fields
 * @returns {Object}        Sanitized manifest fields
 */


exports.getIdentifier = getIdentifier;

var removeOldFields = function removeOldFields(fields) {
  var sanitized = (0, _cloneDeep2.default)(fields);
  delete sanitized.advancedFields;
  return sanitized;
};
/**
 * Ensures every field not explicitely tagged as not required is required
 *
 * @param  {import('../types').ManifestFields} [fields={}] Manifest fields
 * @returns {import('../types').ManifestFields}            Sanitized manifest fields
 */


var sanitizeRequired = function sanitizeRequired(fields) {
  var sanitized = (0, _cloneDeep2.default)(fields);

  for (var fieldName in sanitized) {
    var field = sanitized[fieldName]; // Ensure legacy for field isRequired

    var required = typeof field.required === 'undefined' ? field.isRequired : field.required;
    sanitized[fieldName].required = typeof required === 'boolean' ? required : true;
  }

  return sanitized;
};
/**
 * Ensures:
 * * any field flagged as encrypted keeps its flag
 * * any legacy encrypted field is tagged as encrypted
 *
 * @param  {import('../types').ManifestFields} [fields={}] Manifest fields
 * @returns {import('../types').ManifestFields}             Sanitized Manifest fields
 */


var sanitizeEncrypted = function sanitizeEncrypted(fields) {
  var sanitized = (0, _cloneDeep2.default)(fields);

  for (var fieldName in sanitized) {
    var field = sanitized[fieldName];
    if (typeof field.encrypted !== 'boolean') field.encrypted = field.type === 'password' || legacyEncryptedFields.includes(fieldName);
  }

  return sanitized;
};
/**
 * Sanitizes manifest fields with multiple rules
 *
 * @param  {import('../types').ManifestFields} [fields={}] Manifest fields
 * @returns {import('../types').ManifestFields}            Sanitized manifest fields
 */


var sanitizeFields = (0, _flow2.default)([removeOldFields, sanitizeIdentifier, sanitizeRequired, sanitizeEncrypted]);

/***/ }),
/* 308 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

const fs = __webpack_require__(83);

let isDocker;

function hasDockerEnv() {
	try {
		fs.statSync('/.dockerenv');
		return true;
	} catch (_) {
		return false;
	}
}

function hasDockerCGroup() {
	try {
		return fs.readFileSync('/proc/self/cgroup', 'utf8').includes('docker');
	} catch (_) {
		return false;
	}
}

module.exports = () => {
	if (isDocker === undefined) {
		isDocker = hasDockerEnv() || hasDockerCGroup();
	}

	return isDocker;
};


/***/ }),
/* 309 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.makeDiskInfos = exports.hasPasswordDefinedAttribute = exports.buildPremiumLink = exports.hasAnOffer = exports.shouldDisplayOffers = exports.getUuid = exports.isFreemiumUser = exports.arePremiumLinksEnabled = exports.isSelfHosted = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(6));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(7));

var _get = _interopRequireDefault(__webpack_require__(10));

var _dsl = __webpack_require__(20);

var FallbackQuota = 1e11;
var GB = 1000 * 1000 * 1000;
var PREMIUM_QUOTA = 50 * GB;
/**
 * @typedef {object} InstanceInfo
 * @typedef {object} ContextInfo
 * @typedef {object} DiskUsageInfo
 */

/**
 * @typedef SettingsInfo
 * @property {ContextInfo} context - Object returned by /settings/context
 * @property {InstanceInfo} instance - Object returned by /settings/instance
 * @property {DiskUsageInfo} diskUsage - Object returned by /settings/disk-usage
 */
// If manager URL is present, then the instance is not self-hosted

var isSelfHosted = function isSelfHosted(instanceInfo) {
  return (0, _get.default)(instanceInfo, 'context.data.attributes.manager_url') ? false : true;
};

exports.isSelfHosted = isSelfHosted;

var arePremiumLinksEnabled = function arePremiumLinksEnabled(instanceInfo) {
  return (0, _get.default)(instanceInfo, 'context.data.attributes.enable_premium_links') ? true : false;
};

exports.arePremiumLinksEnabled = arePremiumLinksEnabled;

var isFreemiumUser = function isFreemiumUser(instanceInfo) {
  var quota = (0, _get.default)(instanceInfo, 'diskUsage.data.attributes.quota', false);
  return parseInt(quota) <= PREMIUM_QUOTA;
};

exports.isFreemiumUser = isFreemiumUser;

var getUuid = function getUuid(instanceInfo) {
  return (0, _get.default)(instanceInfo, 'instance.data.attributes.uuid');
};
/**
 * Returns whether an instance is concerned by our offers
 *
 * @param {SettingsInfo} data Object containing all the results from /settings/*
 * @returns {boolean} Should we display offers
 */


exports.getUuid = getUuid;

var shouldDisplayOffers = function shouldDisplayOffers(data) {
  return !isSelfHosted(data) && arePremiumLinksEnabled(data) && getUuid(data) && isFreemiumUser(data);
};
/**
 * Returns if an instance has subscribed to one of our offers
 *
 * @param {SettingsInfo} data Object containing all the results from /settings/*
 * @returns {boolean} Does the cozy have offers
 */


exports.shouldDisplayOffers = shouldDisplayOffers;

var hasAnOffer = function hasAnOffer(data) {
  return !isSelfHosted(data) && arePremiumLinksEnabled(data) && getUuid(data) && !isFreemiumUser(data);
};
/**
 * Returns the link to the Premium page on the Cozy's Manager
 *
 * @param {InstanceInfo} instanceInfo - Instance information
 */


exports.hasAnOffer = hasAnOffer;

var buildPremiumLink = function buildPremiumLink(instanceInfo) {
  var managerUrl = (0, _get.default)(instanceInfo, 'context.data.attributes.manager_url', false);
  var uuid = getUuid(instanceInfo);

  if (managerUrl && uuid) {
    return "".concat(managerUrl, "/cozy/instances/").concat(uuid, "/premium");
  } else {
    return null;
  }
};
/**
 * Checks the value of the password_defined attribute
 *
 * @param {import("../CozyClient").default} client - The CozyClient instance
 * @returns {Promise<boolean>} - Returns the value of the password_defined attribute
 */


exports.buildPremiumLink = buildPremiumLink;

var hasPasswordDefinedAttribute = /*#__PURE__*/function () {
  var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(client) {
    var _yield$client$fetchQu, password_defined;

    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.prev = 0;
            _context.next = 3;
            return client.fetchQueryAndGetFromState({
              definition: (0, _dsl.Q)('io.cozy.settings').getById('io.cozy.settings.instance'),
              options: {
                as: 'io.cozy.settings/io.cozy.settings.instance',
                singleDocData: true
              }
            });

          case 3:
            _yield$client$fetchQu = _context.sent;
            password_defined = _yield$client$fetchQu.data.attributes.password_defined;
            return _context.abrupt("return", Boolean(password_defined));

          case 8:
            _context.prev = 8;
            _context.t0 = _context["catch"](0);
            return _context.abrupt("return", false);

          case 11:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, null, [[0, 8]]);
  }));

  return function hasPasswordDefinedAttribute(_x) {
    return _ref.apply(this, arguments);
  };
}();
/**
 * @typedef DiskInfosRaw
 * @property diskQuota {number} - Space used in GB
 * @property diskUsage {number} -  Maximum space available in GB
 * @property percentUsage {number} - Usage percent of the disk
 */

/**
 * @typedef DiskInfos
 * @property humanDiskQuota {string} - Space used in GB rounded
 * @property humanDiskUsage {string} - Maximum space available in GB rounded
 * @property percentUsage {string} - Usage percent of the disk rounded
 */

/**
 * Convert input value into GB
 *
 * @param {number} bytes - Value in bytes
 * @returns {number} - Returns the value in GB
 */


exports.hasPasswordDefinedAttribute = hasPasswordDefinedAttribute;

var convertBytesToGB = function convertBytesToGB(bytes) {
  return bytes * 1e-9;
};
/**
 * Computes `value` rounded to `fractionDigits`.
 *
 * @param {number} value - Value to format
 * @param {number} fractionDigits - Number of decimal numbers
 * @returns {string} - Returns the rounded number as a string
 */


var formatDecimals = function formatDecimals(value) {
  var fractionDigits = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;
  return "".concat(value % 1 ? value.toFixed(fractionDigits) : value);
};
/**
 * Transform bytes data to GB data and compute percent usage
 *
 * @param {number} usage - Value in bytes representing the space used
 * @param {number} quota - Value in bytes representing the maximum space available
 * @returns {DiskInfosRaw} - Returns an transform data to GB and usage percent of the disk
 */


var computeDiskInfos = function computeDiskInfos(usage) {
  var quota = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : FallbackQuota;
  return {
    diskQuota: convertBytesToGB(quota),
    diskUsage: convertBytesToGB(usage),
    percentUsage: usage / quota * 100
  };
};
/**
 * Make human readable information from disk information (usage, quota)
 *
 * @param {number|string} usage - Value in bytes representing the space used
 * @param {number|string} [quota] - Value in bytes representing the maximum space available
 * @returns {DiskInfos} - Return a set of human readable information about disk
 */


var makeDiskInfos = function makeDiskInfos(usage, quota) {
  var _computeDiskInfos = computeDiskInfos(+usage, quota ? +quota : undefined),
      diskQuota = _computeDiskInfos.diskQuota,
      diskUsage = _computeDiskInfos.diskUsage,
      percentUsage = _computeDiskInfos.percentUsage;

  return {
    humanDiskQuota: formatDecimals(diskQuota),
    humanDiskUsage: formatDecimals(diskUsage),
    percentUsage: Math.round(percentUsage).toString()
  };
};

exports.makeDiskInfos = makeDiskInfos;

/***/ }),
/* 310 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.normalize = normalize;
exports.ensureFilePath = ensureFilePath;
exports.getParentFolderId = getParentFolderId;
exports.fetchBlobFileById = exports.isFromKonnector = exports.hasCertifications = exports.hasQualifications = exports.isPlainText = exports.doMobileUpload = exports.readMobileFile = exports.uploadFileWithConflictStrategy = exports.generateFileNameForRevision = exports.generateNewFileNameOnConflict = exports.overrideFileForPath = exports.move = exports.getFullpath = exports.hasMetadataAttribute = exports.fetchFilesByQualificationRules = exports.saveFileQualification = exports.isSharingShorcutNew = exports.isSharingShortcutNew = exports.isSharingShorcut = exports.isSharingShortcut = exports.getSharingShortcutTargetDoctype = exports.getSharingShortcutTargetMime = exports.getSharingShortcutStatus = exports.isShortcut = exports.shouldBeOpenedByOnlyOffice = exports.isOnlyOfficeFile = exports.isEncrypted = exports.isNote = exports.isDirectory = exports.isFile = exports.splitFilename = exports.ALBUMS_DOCTYPE = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(6));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(7));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(9));

var _get = _interopRequireDefault(__webpack_require__(10));

var _isString = _interopRequireDefault(__webpack_require__(158));

var _has = _interopRequireDefault(__webpack_require__(281));

var _trimEnd = _interopRequireDefault(__webpack_require__(682));

var _qualification = __webpack_require__(194);

var _dsl = __webpack_require__(20);

var _const = __webpack_require__(57);

var _CozyClient = _interopRequireDefault(__webpack_require__(40));

var _logger = _interopRequireDefault(__webpack_require__(27));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var FILE_TYPE = 'file';
var DIR_TYPE = 'directory';
var ALBUMS_DOCTYPE = 'io.cozy.photos.albums';
exports.ALBUMS_DOCTYPE = ALBUMS_DOCTYPE;
var FILENAME_WITH_EXTENSION_REGEX = /(.+)(\..*)$/;
/**
 * Returns base filename and extension
 *
 * @param {import("../types").IOCozyFile} file An io.cozy.files
 * @returns {{filename: string, extension: string}}
 */

var splitFilename = function splitFilename(file) {
  if (!(0, _isString.default)(file.name)) throw new Error('file should have a name property');

  if (file.type === 'file') {
    var match = file.name.match(FILENAME_WITH_EXTENSION_REGEX);

    if (match) {
      return {
        filename: match[1],
        extension: match[2]
      };
    }
  }

  return {
    filename: file.name,
    extension: ''
  };
};
/**
 *
 * @param {import("../types").IOCozyFile} file io.cozy.files
 */


exports.splitFilename = splitFilename;

var isFile = function isFile(file) {
  return file && file.type === FILE_TYPE;
};
/**
 *
 * @param {import("../types").IOCozyFile} file io.cozy.files
 */


exports.isFile = isFile;

var isDirectory = function isDirectory(file) {
  return file && file.type === DIR_TYPE;
};
/**
 * Is file param a correct note
 *
 * @param {import("../types").IOCozyFile} file io.cozy.files
 * @returns {boolean}
 */


exports.isDirectory = isDirectory;

var isNote = function isNote(file) {
  if (file && file.name && file.name.endsWith('.cozy-note') && file.type === FILE_TYPE && file.metadata && file.metadata.title !== undefined && file.metadata.version !== undefined) return true;
  return false;
};
/**
 * Whether the file is client-side encrypted
 *
 * @param {import("../types").IOCozyFile} file - io.cozy.files document
 * @returns {boolean}
 */


exports.isNote = isNote;

var isEncrypted = function isEncrypted(file) {
  return !!file.encrypted;
};
/**
 * Whether the file is supported by Only Office
 *
 * @param {import("../types").IOCozyFile} file - io.cozy.file document
 * @returns {boolean}
 */


exports.isEncrypted = isEncrypted;

var isOnlyOfficeFile = function isOnlyOfficeFile(file) {
  return isFile(file) && !isNote(file) && (file.class === 'text' || file.class === 'spreadsheet' || file.class === 'slide');
};
/**
 * Whether the file should be opened by only office
 * We want to be consistent with the stack so we check the class attributes
 * But we want to exclude .txt and .md because the CozyUI Viewer can already show them
 *
 * @param {import("../types").IOCozyFile} file - io.cozy.file document
 * @returns {boolean}
 */


exports.isOnlyOfficeFile = isOnlyOfficeFile;

var shouldBeOpenedByOnlyOffice = function shouldBeOpenedByOnlyOffice(file) {
  return isOnlyOfficeFile(file) && !file.name.endsWith('.txt') && !file.name.endsWith('.md');
};
/**
 *
 * @param {import("../types").IOCozyFile} file - io.cozy.files document
 * @returns {boolean} true if the file is a shortcut
 */


exports.shouldBeOpenedByOnlyOffice = shouldBeOpenedByOnlyOffice;

var isShortcut = function isShortcut(file) {
  return file && file.class === 'shortcut';
};
/**
 * Normalizes an object representing a io.cozy.files object
 *
 * Ensures existence of `_id` and `_type`
 *
 * @public
 * @param {object} file - object representing the file
 * @returns {object} full normalized object
 */


exports.isShortcut = isShortcut;

function normalize(file) {
  var id = file._id || file.id;
  var doctype = file._type || _const.DOCTYPE_FILES;
  return _objectSpread({
    _id: id,
    id: id,
    _type: doctype
  }, file);
}
/**
 * Ensure the file has a `path` attribute, or build it
 *
 * @public
 * @param {object} file - object representing the file
 * @param {object} parent - parent directory for the file
 * @returns {object} file object with path attribute
 */


function ensureFilePath(file, parent) {
  if (file.path) return file;
  if (!parent || !parent.path) throw new Error("Could not define a file path for ".concat(file._id || file.id));
  var path = parent.path + '/' + file.name;
  return _objectSpread({
    path: path
  }, file);
}
/**
 * Get the id of the parent folder (`null` for the root folder)
 *
 * @param {object} file  - io.cozy.files document
 * @returns {string|null} id of the parent folder, if any
 */


function getParentFolderId(file) {
  var parentId = (0, _get.default)(file, 'attributes.dir_id');
  return parentId === '' ? null : parentId;
}
/**
 * Returns the status of a sharing shortcut.
 *
 * @param {import("../types").IOCozyFile} file - io.cozy.files document
 *
 * @returns {string} A description of the status
 */


var getSharingShortcutStatus = function getSharingShortcutStatus(file) {
  return (0, _get.default)(file, 'metadata.sharing.status');
};
/**
 * Returns the mime type of the target of the sharing shortcut, if it is a file.
 *
 * @param {import("../types").IOCozyFile} file  - io.cozy.files document
 *
 * @returns {string} The mime-type of the target file, or an empty string is the target is not a file.
 */


exports.getSharingShortcutStatus = getSharingShortcutStatus;

var getSharingShortcutTargetMime = function getSharingShortcutTargetMime(file) {
  return (0, _get.default)(file, 'metadata.target.mime');
};
/**
 * Returns the doctype of the target of the sharing shortcut.
 *
 * @param {import("../types").IOCozyFile} file - io.cozy.files document
 *
 * @returns {string} A doctype
 */


exports.getSharingShortcutTargetMime = getSharingShortcutTargetMime;

var getSharingShortcutTargetDoctype = function getSharingShortcutTargetDoctype(file) {
  return (0, _get.default)(file, 'metadata.target._type');
};
/**
 * Returns whether the file is a shortcut to a sharing
 *
 * @param {import("../types").IOCozyFile} file - io.cozy.files document
 *
 * @returns {boolean}
 */


exports.getSharingShortcutTargetDoctype = getSharingShortcutTargetDoctype;

var isSharingShortcut = function isSharingShortcut(file) {
  return Boolean(getSharingShortcutStatus(file));
};
/**
 * Returns whether the file is a shortcut to a sharing
 *
 * @deprecated Prefer to use isSharingShortcut.
 * @param {import("../types").IOCozyFile} file - io.cozy.files document
 *
 * @returns {boolean}
 */


exports.isSharingShortcut = isSharingShortcut;

var isSharingShorcut = function isSharingShorcut(file) {
  _logger.default.warn('Deprecation: `isSharingShorcut` is deprecated, please use `isSharingShortcut` instead');

  return isSharingShortcut(file);
};
/**
 * Returns whether the sharing shortcut is new
 *
 * @param {import("../types").IOCozyFile} file - io.cozy.files document
 *
 * @returns {boolean}
 */


exports.isSharingShorcut = isSharingShorcut;

var isSharingShortcutNew = function isSharingShortcutNew(file) {
  return getSharingShortcutStatus(file) === 'new';
};
/**
 * Returns whether the sharing shortcut is new
 *
 * @deprecated Prefer to use isSharingShortcutNew.
 * @param {object} file - io.cozy.files document
 *
 * @returns {boolean}
 */


exports.isSharingShortcutNew = isSharingShortcutNew;

var isSharingShorcutNew = function isSharingShorcutNew(file) {
  _logger.default.warn('Deprecation: `isSharingShorcutNew` is deprecated, please use `isSharingShortcutNew` instead');

  return isSharingShortcutNew(file);
};
/**
 * Save the file with the given qualification
 *
 * @param {CozyClient} client - The CozyClient instance
 * @param {import("../types").IOCozyFile} file - The file to qualify
 * @param {object} qualification - The file qualification
 * @returns {Promise<import("../types").IOCozyFile>} The saved file
 */


exports.isSharingShorcutNew = isSharingShorcutNew;

var saveFileQualification = /*#__PURE__*/function () {
  var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(client, file, qualification) {
    var qualifiedFile;
    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            qualifiedFile = (0, _qualification.setQualification)(file, qualification);
            return _context.abrupt("return", client.collection(_const.DOCTYPE_FILES).updateMetadataAttribute(file._id, qualifiedFile.metadata));

          case 2:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function saveFileQualification(_x, _x2, _x3) {
    return _ref.apply(this, arguments);
  };
}();
/**
 * Helper to query files based on qualification rules
 *
 * @param {object} client - The CozyClient instance
 * @param {object} docRules - the rules containing the searched qualification and the count
 * @returns {Promise<import("../types").QueryResult>} The files found by the rules
 */


exports.saveFileQualification = saveFileQualification;

var fetchFilesByQualificationRules = /*#__PURE__*/function () {
  var _ref2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(client, docRules) {
    var rules, count, query, result;
    return _regenerator.default.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            rules = docRules.rules, count = docRules.count;
            query = (0, _dsl.Q)(_const.DOCTYPE_FILES).where(_objectSpread({}, rules)).partialIndex({
              trashed: false
            }).indexFields(['cozyMetadata.updatedAt', 'metadata.qualification']).sortBy([{
              'cozyMetadata.updatedAt': 'desc'
            }]).limitBy(count ? count : 1);
            _context2.next = 4;
            return client.query(query);

          case 4:
            result = _context2.sent;
            return _context2.abrupt("return", result);

          case 6:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));

  return function fetchFilesByQualificationRules(_x4, _x5) {
    return _ref2.apply(this, arguments);
  };
}();
/**
 * Whether the file's metadata attribute exists
 *
 * @param {object} params - Param
 * @param {import("../types").IOCozyFile} params.file - An io.cozy.files document
 * @param {string} params.attribute - Metadata attribute to check
 * @returns {boolean}
 */


exports.fetchFilesByQualificationRules = fetchFilesByQualificationRules;

var hasMetadataAttribute = function hasMetadataAttribute(_ref3) {
  var file = _ref3.file,
      attribute = _ref3.attribute;
  return (0, _has.default)(file, "metadata.".concat(attribute));
};
/**
 * async getFullpath - Gets a file's path
 *
 * @param {CozyClient} client - The CozyClient instance
 * @param {string} dirId  - The id of the parent directory
 * @param {string} name  - The file's name
 * @returns {Promise<string>} The full path of the file in the cozy
 **/


exports.hasMetadataAttribute = hasMetadataAttribute;

var getFullpath = /*#__PURE__*/function () {
  var _ref4 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3(client, dirId, name) {
    var _yield$client$query, parentDir, parentDirectoryPath;

    return _regenerator.default.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            if (dirId) {
              _context3.next = 2;
              break;
            }

            throw new Error('You must provide a dirId');

          case 2:
            _context3.next = 4;
            return client.query((0, _dsl.Q)(_const.DOCTYPE_FILES).getById(dirId));

          case 4:
            _yield$client$query = _context3.sent;
            parentDir = _yield$client$query.data;
            parentDirectoryPath = (0, _trimEnd.default)(parentDir.path, '/');
            return _context3.abrupt("return", "".concat(parentDirectoryPath, "/").concat(name));

          case 8:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  }));

  return function getFullpath(_x6, _x7, _x8) {
    return _ref4.apply(this, arguments);
  };
}();
/**
 * Move file to destination.
 *
 * @param {CozyClient} client             - The CozyClient instance
 * @param   {string} fileId               - The file's id (required)
 * @param   {object} destination          - The destination object containing:
 * @param   {string} destination.folderId - The destination folder's id (required)
 * @param   {string} destination.path     - The file's path after the move (optional, used to optimize performance in case of conflict)
 * @param   {boolean} force               - Whether we should overwrite, i.e. put to trash, the destination in case of conflict (defaults to false).
 * @returns {Promise}                     - A promise that returns the move action response and the deleted file id (if any) if resolved or an Error if rejected
 *
 */


exports.getFullpath = getFullpath;

var move = /*#__PURE__*/function () {
  var _ref5 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee4(client, fileId, destination) {
    var force,
        folderId,
        path,
        resp,
        destinationPath,
        _yield$client$query2,
        movedFile,
        filename,
        conflictResp,
        _resp,
        _args4 = arguments;

    return _regenerator.default.wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            force = _args4.length > 3 && _args4[3] !== undefined ? _args4[3] : false;
            folderId = destination.folderId, path = destination.path;
            _context4.prev = 2;
            _context4.next = 5;
            return client.collection(_const.DOCTYPE_FILES).updateFileMetadata(fileId, {
              dir_id: folderId
            });

          case 5:
            resp = _context4.sent;
            return _context4.abrupt("return", {
              moved: resp.data,
              deleted: null
            });

          case 9:
            _context4.prev = 9;
            _context4.t0 = _context4["catch"](2);

            if (!(_context4.t0.status === 409 && force)) {
              _context4.next = 35;
              break;
            }

            if (!path) {
              _context4.next = 16;
              break;
            }

            destinationPath = path;
            _context4.next = 24;
            break;

          case 16:
            _context4.next = 18;
            return client.query((0, _dsl.Q)(_const.DOCTYPE_FILES).getById(fileId));

          case 18:
            _yield$client$query2 = _context4.sent;
            movedFile = _yield$client$query2.data;
            filename = movedFile.name;
            _context4.next = 23;
            return getFullpath(client, folderId, filename);

          case 23:
            destinationPath = _context4.sent;

          case 24:
            _context4.next = 26;
            return client.collection(_const.DOCTYPE_FILES).statByPath(destinationPath);

          case 26:
            conflictResp = _context4.sent;
            _context4.next = 29;
            return client.collection(_const.DOCTYPE_FILES).destroy(conflictResp.data);

          case 29:
            _context4.next = 31;
            return client.collection(_const.DOCTYPE_FILES).updateFileMetadata(fileId, {
              dir_id: folderId
            });

          case 31:
            _resp = _context4.sent;
            return _context4.abrupt("return", {
              moved: _resp.data,
              deleted: conflictResp.data.id
            });

          case 35:
            throw _context4.t0;

          case 36:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4, null, [[2, 9]]);
  }));

  return function move(_x9, _x10, _x11) {
    return _ref5.apply(this, arguments);
  };
}();
/**
 *
 * Method to upload a file even if a file with the same name already exists.
 *
 * @param {CozyClient} client   - The CozyClient instance
 * @param {string} dirPath      - Fullpath of directory to upload to ex: path/to/
 * @param {object} file         - HTML Object file
 * @param {object} metadata     - An object containing the wanted metadata to attach
 * @returns {Promise<import("../types").IOCozyFile>} The overrided file
 */


exports.move = move;

var overrideFileForPath = /*#__PURE__*/function () {
  var _ref6 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee5(client, dirPath, file, metadata) {
    var path, filesCollection, existingFile, _existingFile$data, fileId, dirId, resp, _dirId, createdFile;

    return _regenerator.default.wrap(function _callee5$(_context5) {
      while (1) {
        switch (_context5.prev = _context5.next) {
          case 0:
            path = dirPath;
            if (!path.endsWith('/')) path = path + '/';
            filesCollection = client.collection(_const.DOCTYPE_FILES);
            _context5.prev = 3;
            _context5.next = 6;
            return filesCollection.statByPath(path + file.name);

          case 6:
            existingFile = _context5.sent;
            _existingFile$data = existingFile.data, fileId = _existingFile$data.id, dirId = _existingFile$data.dir_id;
            _context5.next = 10;
            return filesCollection.updateFile(file, {
              dirId: dirId,
              fileId: fileId,
              metadata: metadata
            });

          case 10:
            resp = _context5.sent;
            return _context5.abrupt("return", resp);

          case 14:
            _context5.prev = 14;
            _context5.t0 = _context5["catch"](3);

            if (!/Not Found/.test(_context5.t0)) {
              _context5.next = 24;
              break;
            }

            _context5.next = 19;
            return filesCollection.ensureDirectoryExists(path);

          case 19:
            _dirId = _context5.sent;
            _context5.next = 22;
            return filesCollection.createFile(file, {
              dirId: _dirId,
              metadata: metadata
            });

          case 22:
            createdFile = _context5.sent;
            return _context5.abrupt("return", createdFile);

          case 24:
            throw _context5.t0;

          case 25:
          case "end":
            return _context5.stop();
        }
      }
    }, _callee5, null, [[3, 14]]);
  }));

  return function overrideFileForPath(_x12, _x13, _x14, _x15) {
    return _ref6.apply(this, arguments);
  };
}();
/**
 * Method to generate a new filename if there is a conflict
 *
 * @param {string} filenameWithoutExtension - A filename without the extension
 * @param {import('../types').ConflictOptions} [conflictOptions] - Conflict options
 * @returns {string} A filename with the right suffix
 */


exports.overrideFileForPath = overrideFileForPath;

var generateNewFileNameOnConflict = function generateNewFileNameOnConflict(filenameWithoutExtension, conflictOptions) {
  var delimiter = (conflictOptions === null || conflictOptions === void 0 ? void 0 : conflictOptions.delimiter) || '_'; //Check if the string ends by _1

  var regex = new RegExp("(".concat(delimiter, ")([0-9]+)$"));
  var matches = filenameWithoutExtension.match(regex);

  if (matches) {
    var versionNumber = parseInt(matches[2]); //increment versionNumber

    versionNumber++;
    var newFilenameWithoutExtension = filenameWithoutExtension.replace(new RegExp("(".concat(delimiter, ")([0-9]+)$")), "".concat(delimiter).concat(versionNumber));
    return newFilenameWithoutExtension;
  } else {
    return "".concat(filenameWithoutExtension).concat(delimiter, "1");
  }
};
/**
 * Generate a file name for a revision
 *
 * @param {import("../types").IOCozyFile} file - io.cozy.files document
 * @param {object} revision - The revision containing the updated_at
 * @param {function} f      - A function taking a a date and a format as arguments to generate the name.
 */


exports.generateNewFileNameOnConflict = generateNewFileNameOnConflict;

var generateFileNameForRevision = function generateFileNameForRevision(file, revision, f) {
  var _splitFilename = splitFilename(file),
      filename = _splitFilename.filename,
      extension = _splitFilename.extension;

  return "".concat(filename, "_").concat(f(revision.updated_at, 'DD MMMM - HH[h]mm')).concat(extension);
};
/**
 * @typedef FileUploadOptions
 * @property {string} [name]              - The file name to upload
 * @property {string} [dirId]             - The dirId to upload the file to
 * @property {object} [metadata]          - An object containing the metadata to attach
 * @property {string} [contentType]       - The file Content-Type
 * @property {string} [conflictStrategy]  - Erase / rename
 * @property {import('../types').ConflictOptions} [conflictOptions] - Conflict options
 */

/**
 * The goal of this method is to upload a file based on a conflict strategy.
 * Be careful: We need to check if the file exists by doing a statByPath query
 * before trying to upload the file since if we post and the stack return a
 * 409 conflict, we will get a SPDY_ERROR_PROTOCOL on Chrome. This is the only
 * viable workaround
 * If there is no conflict, then we upload the file.
 * If there is a conflict, then we apply the conflict strategy : `erase` or `rename`:
 *   - The `erase` strategy means an upload with a new version
 *   - The `rename` strategy means a new upload with a new name
 *
 * @param {CozyClient} client         - The CozyClient instance
 * @param {string|ArrayBuffer} file   - Can be the file path (file://) or the binary itself
 * @param {FileUploadOptions} options - The upload options
 */


exports.generateFileNameForRevision = generateFileNameForRevision;

var uploadFileWithConflictStrategy = /*#__PURE__*/function () {
  var _ref7 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee6(client, file, options) {
    var name, dirId, conflictStrategy, conflictOptions, path, existingFile, fileId, resp, _splitFilename2, filename, extension, newFileName;

    return _regenerator.default.wrap(function _callee6$(_context6) {
      while (1) {
        switch (_context6.prev = _context6.next) {
          case 0:
            name = options.name, dirId = options.dirId, conflictStrategy = options.conflictStrategy, conflictOptions = options.conflictOptions;
            _context6.prev = 1;
            _context6.next = 4;
            return getFullpath(client, dirId, name);

          case 4:
            path = _context6.sent;
            _context6.next = 7;
            return client.collection(_const.DOCTYPE_FILES).statByPath(path);

          case 7:
            existingFile = _context6.sent;
            fileId = existingFile.data.id;

            if (!(conflictStrategy === 'erase')) {
              _context6.next = 16;
              break;
            }

            _context6.next = 12;
            return client.collection(_const.DOCTYPE_FILES).updateFile(file, _objectSpread(_objectSpread({}, options), {}, {
              fileId: fileId
            }));

          case 12:
            resp = _context6.sent;
            return _context6.abrupt("return", resp);

          case 16:
            // @ts-ignore
            _splitFilename2 = splitFilename({
              name: name,
              type: 'file'
            }), filename = _splitFilename2.filename, extension = _splitFilename2.extension;
            newFileName = generateNewFileNameOnConflict(filename, conflictOptions) + extension; //recall itself with the newFilename.

            return _context6.abrupt("return", uploadFileWithConflictStrategy(client, file, _objectSpread(_objectSpread({}, options), {}, {
              name: newFileName
            })));

          case 19:
            _context6.next = 26;
            break;

          case 21:
            _context6.prev = 21;
            _context6.t0 = _context6["catch"](1);

            if (!/Not Found/.test(_context6.t0.message)) {
              _context6.next = 25;
              break;
            }

            return _context6.abrupt("return", client.collection(_const.DOCTYPE_FILES).createFile(file, options));

          case 25:
            throw _context6.t0;

          case 26:
          case "end":
            return _context6.stop();
        }
      }
    }, _callee6, null, [[1, 21]]);
  }));

  return function uploadFileWithConflictStrategy(_x16, _x17, _x18) {
    return _ref7.apply(this, arguments);
  };
}();
/**
 * Read a file on a mobile
 *
 * @param {string} fileURL - The local file path (file://)
 */


exports.uploadFileWithConflictStrategy = uploadFileWithConflictStrategy;

var readMobileFile = /*#__PURE__*/function () {
  var _ref8 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee10(fileURL) {
    var p;
    return _regenerator.default.wrap(function _callee10$(_context10) {
      while (1) {
        switch (_context10.prev = _context10.next) {
          case 0:
            /** Cordova plugin doesn't support promise since they are supporting Android 4.X.X
             * so we have to create manually a promise to be able to write beautiful code ;)
             */
            p = new Promise(function (resolve, reject) {
              var onResolvedLocalFS = /*#__PURE__*/function () {
                var _ref9 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee9(fileEntry) {
                  return _regenerator.default.wrap(function _callee9$(_context9) {
                    while (1) {
                      switch (_context9.prev = _context9.next) {
                        case 0:
                          fileEntry.file( /*#__PURE__*/function () {
                            var _ref10 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee8(file) {
                              var reader;
                              return _regenerator.default.wrap(function _callee8$(_context8) {
                                while (1) {
                                  switch (_context8.prev = _context8.next) {
                                    case 0:
                                      reader = new FileReader();
                                      reader.onloadend = /*#__PURE__*/(0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee7() {
                                        return _regenerator.default.wrap(function _callee7$(_context7) {
                                          while (1) {
                                            switch (_context7.prev = _context7.next) {
                                              case 0:
                                                resolve(reader.result);

                                              case 1:
                                              case "end":
                                                return _context7.stop();
                                            }
                                          }
                                        }, _callee7);
                                      })); // Read the file as an ArrayBuffer

                                      reader.readAsArrayBuffer(file);

                                    case 3:
                                    case "end":
                                      return _context8.stop();
                                  }
                                }
                              }, _callee8);
                            }));

                            return function (_x21) {
                              return _ref10.apply(this, arguments);
                            };
                          }(), function (err) {
                            // Since this module is pretty recent, let's have this info in sentry if needed
                            console.error('error getting fileentry file!' + err); // eslint-disable-line no-console

                            reject(err);
                          });

                        case 1:
                        case "end":
                          return _context9.stop();
                      }
                    }
                  }, _callee9);
                }));

                return function onResolvedLocalFS(_x20) {
                  return _ref9.apply(this, arguments);
                };
              }();

              var onError = function onError(error) {
                reject(error);
              };
              /**
               * file:/// can not be converted to a fileEntry without the Cordova's File plugin.
               * `resolveLocalFileSystemURL` is provided by this plugin and can resolve the native
               * path to a fileEntry readable by a `FileReader`
               *
               * When we finished to read the fileEntry as buffer, we start the upload process
               *
               */
              // @ts-ignore


              window.resolveLocalFileSystemURL(fileURL, onResolvedLocalFS, onError);
            });
            return _context10.abrupt("return", p);

          case 2:
          case "end":
            return _context10.stop();
        }
      }
    }, _callee10);
  }));

  return function readMobileFile(_x19) {
    return _ref8.apply(this, arguments);
  };
}();
/**
 * Upload a file on a mobile
 *
 * @param {CozyClient} client         - The CozyClient instance
 * @param {string} fileURL            - The local file path (file://)
 * @param {FileUploadOptions} options - The upload options
 */


exports.readMobileFile = readMobileFile;

var doMobileUpload = /*#__PURE__*/function () {
  var _ref12 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee11(client, fileURL, options) {
    var file;
    return _regenerator.default.wrap(function _callee11$(_context11) {
      while (1) {
        switch (_context11.prev = _context11.next) {
          case 0:
            _context11.next = 2;
            return readMobileFile(fileURL);

          case 2:
            file = _context11.sent;
            return _context11.abrupt("return", uploadFileWithConflictStrategy(client, file, options));

          case 4:
          case "end":
            return _context11.stop();
        }
      }
    }, _callee11);
  }));

  return function doMobileUpload(_x22, _x23, _x24) {
    return _ref12.apply(this, arguments);
  };
}();
/**
 * @param {string} [mimeType=''] - Mime type of file
 * @param {string} [fileName=''] - Name of file
 * @returns {boolean}
 */


exports.doMobileUpload = doMobileUpload;

var isPlainText = function isPlainText() {
  var mimeType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  var fileName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  return mimeType ? /^text\//.test(mimeType) : /\.(txt|md)$/.test(fileName);
};
/**
 * @param {import("../types").IOCozyFile} file - io.cozy.files document
 * @returns {boolean}
 */


exports.isPlainText = isPlainText;

var hasQualifications = function hasQualifications(file) {
  return (0, _has.default)(file, 'metadata.qualification');
};
/**
 * @param {import("../types").IOCozyFile} file - io.cozy.files document
 * @returns {boolean}
 */


exports.hasQualifications = hasQualifications;

var hasCertifications = function hasCertifications(file) {
  return (0, _get.default)(file, 'metadata.carbonCopy', false) || (0, _get.default)(file, 'metadata.electronicSafe', false);
};
/**
 * @param {import("../types").IOCozyFile} file - io.cozy.files document
 * @returns {boolean}
 */


exports.hasCertifications = hasCertifications;

var isFromKonnector = function isFromKonnector(file) {
  return (0, _has.default)(file, 'cozyMetadata.sourceAccount');
};
/**
 * @param {CozyClient} client - Instance of CozyClient
 * @param {string} fileId - Id of io.cozy.files document
 * @returns {Promise<Blob>}
 */


exports.isFromKonnector = isFromKonnector;

var fetchBlobFileById = /*#__PURE__*/function () {
  var _ref13 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee12(client, fileId) {
    var fileColl, fileBin, fileBlob;
    return _regenerator.default.wrap(function _callee12$(_context12) {
      while (1) {
        switch (_context12.prev = _context12.next) {
          case 0:
            fileColl = client.collection(_const.DOCTYPE_FILES);
            _context12.next = 3;
            return fileColl.fetchFileContentById(fileId);

          case 3:
            fileBin = _context12.sent;
            _context12.next = 6;
            return fileBin.blob();

          case 6:
            fileBlob = _context12.sent;
            return _context12.abrupt("return", fileBlob);

          case 8:
          case "end":
            return _context12.stop();
        }
      }
    }, _callee12);
  }));

  return function fetchBlobFileById(_x25, _x26) {
    return _ref13.apply(this, arguments);
  };
}();

exports.fetchBlobFileById = fetchBlobFileById;

/***/ }),
/* 311 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.iconLabelPairs = exports.THEME_OTHERS_LABELS = exports.THEME_INVOICE_LABELS = exports.THEME_FINANCE_LABELS = exports.THEME_ACTIVITY_LABELS = exports.THEME_TRANSPORT_LABELS = exports.THEME_HOME_LABELS = exports.THEME_HEALTH_LABELS = exports.THEME_WORK_STUDY_LABELS = exports.THEME_FAMILY_LABELS = exports.THEME_IDENTITY_LABELS = void 0;
// #region Qualification labels for each theme

/**
 * @type {Array<import("../../types").IdentityLabel>}
 */
var THEME_IDENTITY_LABELS = ['identity_photo', 'national_id_card', 'passport', 'residence_permit', 'electoral_card', 'family_record_book', 'birth_certificate', 'driver_license', 'citizen_registration_certificate', 'note_identity_document', 'other_identity_document'];
/**
 * @type {Array<import("../../types").FamilyLabel>}
 */

exports.THEME_IDENTITY_LABELS = THEME_IDENTITY_LABELS;
var THEME_FAMILY_LABELS = ['family_record_book', 'birth_certificate', 'wedding', 'pacs', 'single_parent_benefit', 'divorce', 'large_family_card', 'caf', 'payment_proof_family_allowance', 'note_family_document', 'other_family_document', 'person_insurance'];
/**
 * @type {Array<import("../../types").WorkStudyLabels>}
 */

exports.THEME_FAMILY_LABELS = THEME_FAMILY_LABELS;
var THEME_WORK_STUDY_LABELS = ['diploma', 'work_contract', 'pay_sheet', 'unemployment_benefit', 'employment_center_certificate', 'pension', 'work_disability_recognition', 'gradebook', 'student_card', 'school_attendance_certificate', 'school_insurance_certificate', 'resume', 'motivation_letter', 'expense_claim', 'note_work_document', 'other_work_document'];
/**
 * @type {Array<import("../../types").HealthLabels>}
 */

exports.THEME_WORK_STUDY_LABELS = THEME_WORK_STUDY_LABELS;
var THEME_HEALTH_LABELS = ['health_certificate', 'health_book', 'national_health_insurance_card', 'national_health_insurance_right_certificate', 'health_insurance_card', 'prescription', 'health_invoice', 'work_disability_recognition', 'pregnancy_medical_certificate', 'note_health_document', 'other_health_document'];
/**
 * @type {Array<import("../../types").HomeLabels>}
 */

exports.THEME_HEALTH_LABELS = THEME_HEALTH_LABELS;
var THEME_HOME_LABELS = ['phone_invoice', 'isp_invoice', 'telecom_invoice', 'energy_invoice', 'water_invoice', 'other_invoice', 'work_invoice', 'house_sale_agreeement', 'building_permit', 'technical_diagnostic_record', 'unfit_for_habitation_declaration', 'lease', 'rent_receipt', 'accommodation_proof', 'house_insurance', 'work_quote', 'condition_report', 'note_house_document', 'other_house_document', 'real_estate_insurance'];
/**
 * @type {Array<import("../../types").TransportLabels>}
 */

exports.THEME_HOME_LABELS = THEME_HOME_LABELS;
var THEME_TRANSPORT_LABELS = ['driver_license', 'vehicle_registration', 'car_insurance', 'transport_card', 'mechanic_invoice', 'transport_invoice', 'note_transport_document', 'other_transport_document'];
/**
 * @type {Array<import("../../types").ActivityLabels>}
 */

exports.THEME_TRANSPORT_LABELS = THEME_TRANSPORT_LABELS;
var THEME_ACTIVITY_LABELS = ['personal_sporting_licence', 'fidelity_card', 'library_card', 'note_activity_document', 'other_activity_document'];
/**
 * @type {Array<import("../../types").FinanceLabels>}
 */

exports.THEME_ACTIVITY_LABELS = THEME_ACTIVITY_LABELS;
var THEME_FINANCE_LABELS = ['fine', 'tax_return', 'tax_notice', 'tax_timetable', 'real_estate_tax', 'pay_sheet', 'receipt', 'single_parent_benefit', 'other_tax_document', 'bank_details', 'bank_statement', 'loan_agreement', 'payment_proof_family_allowance', 'note_finance', 'expense_claim', 'other_bank_document', 'other_revenue'];
/**
 * @type {Array<import("../../types").InvoiceLabels>}
 */

exports.THEME_FINANCE_LABELS = THEME_FINANCE_LABELS;
var THEME_INVOICE_LABELS = ['phone_invoice', 'isp_invoice', 'telecom_invoice', 'energy_invoice', 'water_invoice', 'appliance_invoice', 'web_service_invoice', 'restaurant_invoice', 'work_invoice', 'transport_invoice', 'health_invoice', 'note_invoice', 'expense_claim', 'energy_contract', 'grocery_invoice', 'other_invoice'];
/**
 * @type {Array<import("../../types").OthersLabels>}
 */

exports.THEME_INVOICE_LABELS = THEME_INVOICE_LABELS;
var THEME_OTHERS_LABELS = ['other_administrative_document']; // #endregion Qualification labels for each theme
// #region Qualifcation labels for each icon

/**
 * @type {Array<import("../../types").iconPeopleLabels>}
 */

exports.THEME_OTHERS_LABELS = THEME_OTHERS_LABELS;
var ICON_PEOPLE_LABELS = ['national_id_card', 'other_identity_document', 'resume', 'work_disability_recognition'];
/**
 * @type {Array<import("../../types").iconWorkLabels>}
 */

var ICON_WORK_LABELS = ['employment_center_certificate', 'motivation_letter', 'other_work_document', 'school_attendance_certificate', 'school_insurance_certificate', 'student_card', 'unemployment_benefit', 'work_contract'];
/**
 * @type {Array<import("../../types").iconJusticeLabels>}
 */

var ICON_JUSTICE_LABELS = ['fine'];
/**
 * @type {Array<import("../../types").iconGlobeLabels>}
 */

var ICON_GLOBE_LABELS = ['residence_permit'];
/**
 * @type {Array<import("../../types").iconPlaneLabels>}
 */

var ICON_PLANE_LABELS = ['passport'];
/**
 * @type {Array<import("../../types").iconLibraryLabels>}
 */

var ICON_LIBRARY_LABELS = ['library_card'];
/**
 * @type {Array<import("../../types").iconImageLabels>}
 */

var ICON_IMAGE_LABELS = ['identity_photo'];
/**
 * @type {Array<import("../../types").iconShopLabels>}
 */

var ICON_SHOP_LABELS = ['fidelity_card', 'grocery_invoice'];
/**
 * @type {Array<import("../../types").iconGouvLabels>}
 */

var ICON_GOUV_LABELS = ['electoral_card'];
/**
 * @type {Array<import("../../types").iconSchoolLabels>}
 */

var ICON_SCHOOL_LABELS = ['diploma', 'gradebook'];
/**
 * @type {Array<import("../../types").iconChildLabels>}
 */

var ICON_CHILD_LABELS = ['birth_certificate'];
/**
 * @type {Array<import("../../types").iconEmailLabels>}
 */

var ICON_EMAIL_LABELS = ['receipt'];
/**
 * @type {Array<import("../../types").iconLaudryLabels>}
 */

var ICON_LAUDRY_LABELS = ['appliance_invoice'];
/**
 * @type {Array<import("../../types").iconHomeLabels>}
 */

var ICON_HOME_LABELS = ['accommodation_proof', 'building_permit', 'condition_report', 'house_insurance', 'house_sale_agreeement', 'lease', 'mechanic_invoice', 'other_house_document', 'real_estate_insurance', 'rent_receipt', 'technical_diagnostic_record', 'unfit_for_habitation_declaration', 'work_invoice', 'work_quote'];
/**
 * @type {Array<import("../../types").iconBenefitLabels>}
 */

var ICON_BENEFIT_LABELS = ['loan_agreement', 'other_revenue', 'pay_sheet', 'payment_proof_family_allowance', 'pension'];
/**
 * @type {Array<import("../../types").iconEuroLabels>}
 */

var ICON_EURO_LABELS = ['other_bank_document'];
/**
 * @type {Array<import("../../types").iconBankCheckLabels>}
 */

var ICON_BANK_CHECK_LABELS = ['bank_details'];
/**
 * @type {Array<import("../../types").iconBankLabels>}
 */

var ICON_BANK_LABELS = ['other_administrative_document', 'other_tax_document', 'real_estate_tax', 'tax_notice', 'tax_return', 'tax_timetable'];
/**
 * @type {Array<import("../../types").iconCarLabels>}
 */

var ICON_CAR_LABELS = ['car_insurance', 'driver_license', 'other_transport_document', 'transport_card', 'transport_invoice', 'vehicle_registration'];
/**
 * @type {Array<import("../../types").iconLightningLabels>}
 */

var ICON_LIGHTNING_LABELS = ['energy_contract', 'energy_invoice'];
/**
 * @type {Array<import("../../types").iconTelecomLabels>}
 */

var ICON_TELECOM_LABELS = ['isp_invoice', 'telecom_invoice', 'web_service_invoice'];
/**
 * @type {Array<import("../../types").iconTelephoneLabels>}
 */

var ICON_TELEPHONE_LABELS = ['phone_invoice'];
/**
 * @type {Array<import("../../types").iconWaterLabels>}
 */

var ICON_WATER_LABELS = ['water_invoice'];
/**
 * @type {Array<import("../../types").iconRemboursementLabels>}
 */

var ICON_REMBOURSEMENT_LABELS = ['expense_claim'];
/**
 * @type {Array<import("../../types").iconRestaurantLabels>}
 */

var ICON_RESTAURANT_LABELS = ['restaurant_invoice'];
/**
 * @type {Array<import("../../types").iconBillLabels>}
 */

var ICON_BILL_LABELS = ['other_invoice'];
/**
 * @type {Array<import("../../types").iconTeamLabels>}
 */

var ICON_TEAM_LABELS = ['caf', 'citizen_registration_certificate', 'divorce', 'family_record_book', 'large_family_card', 'other_family_document', 'pacs', 'single_parent_benefit', 'wedding'];
/**
 * @type {Array<import("../../types").iconFitnessLabels>}
 */

var ICON_FITNESS_LABELS = ['other_activity_document', 'personal_sporting_licence'];
/**
 * @type {Array<import("../../types").iconHeartLabels>}
 */

var ICON_HEART_LABELS = ['health_book', 'health_certificate', 'health_insurance_card', 'health_invoice', 'national_health_insurance_card', 'national_health_insurance_right_certificate', 'other_health_document', 'person_insurance', 'pregnancy_medical_certificate', 'prescription'];
/**
 * @type {Array<import("../../types").iconExchangeLabels>}
 */

var ICON_EXCHANGE_LABELS = ['bank_statement'];
/**
 * @type {Array<import("../../types").iconFileTypeNoteLabels>}
 */

var ICON_FILE_TYPE_NOTE_LABELS = ['note_activity_document', 'note_family_document', 'note_finance', 'note_health_document', 'note_house_document', 'note_identity_document', 'note_invoice', 'note_transport_document', 'note_work_document'];
/**
 * @type {Array<import("../../types").iconLabelPairs>}
 */

var iconLabelPairs = [{
  icon: 'bank-check',
  labels: ICON_BANK_CHECK_LABELS
}, {
  icon: 'bank',
  labels: ICON_BANK_LABELS
}, {
  icon: 'benefit',
  labels: ICON_BENEFIT_LABELS
}, {
  icon: 'bill',
  labels: ICON_BILL_LABELS
}, {
  icon: 'car',
  labels: ICON_CAR_LABELS
}, {
  icon: 'child',
  labels: ICON_CHILD_LABELS
}, {
  icon: 'email',
  labels: ICON_EMAIL_LABELS
}, {
  icon: 'euro',
  labels: ICON_EURO_LABELS
}, {
  icon: 'exchange',
  labels: ICON_EXCHANGE_LABELS
}, {
  icon: 'file-type-note',
  labels: ICON_FILE_TYPE_NOTE_LABELS
}, {
  icon: 'fitness',
  labels: ICON_FITNESS_LABELS
}, {
  icon: 'globe',
  labels: ICON_GLOBE_LABELS
}, {
  icon: 'gouv',
  labels: ICON_GOUV_LABELS
}, {
  icon: 'heart',
  labels: ICON_HEART_LABELS
}, {
  icon: 'home',
  labels: ICON_HOME_LABELS
}, {
  icon: 'image',
  labels: ICON_IMAGE_LABELS
}, {
  icon: 'justice',
  labels: ICON_JUSTICE_LABELS
}, {
  icon: 'laudry',
  labels: ICON_LAUDRY_LABELS
}, {
  icon: 'library',
  labels: ICON_LIBRARY_LABELS
}, {
  icon: 'lightning',
  labels: ICON_LIGHTNING_LABELS
}, {
  icon: 'people',
  labels: ICON_PEOPLE_LABELS
}, {
  icon: 'plane',
  labels: ICON_PLANE_LABELS
}, {
  icon: 'remboursement',
  labels: ICON_REMBOURSEMENT_LABELS
}, {
  icon: 'restaurant',
  labels: ICON_RESTAURANT_LABELS
}, {
  icon: 'school',
  labels: ICON_SCHOOL_LABELS
}, {
  icon: 'shop',
  labels: ICON_SHOP_LABELS
}, {
  icon: 'team',
  labels: ICON_TEAM_LABELS
}, {
  icon: 'telecom',
  labels: ICON_TELECOM_LABELS
}, {
  icon: 'telephone',
  labels: ICON_TELEPHONE_LABELS
}, {
  icon: 'water',
  labels: ICON_WATER_LABELS
}, {
  icon: 'work',
  labels: ICON_WORK_LABELS
}]; // #endregion Qualifcation labels for each icon

exports.iconLabelPairs = iconLabelPairs;

/***/ }),
/* 312 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getReferencedFolder = exports.createFolderWithReference = exports.ensureMagicFolder = exports.MAGIC_FOLDERS = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(6));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(7));

var _sortBy = _interopRequireDefault(__webpack_require__(144));

var _CozyClient = _interopRequireDefault(__webpack_require__(40));

var _const = __webpack_require__(57);

var _dsl = __webpack_require__(20);

var APP_DOCTYPE = 'io.cozy.apps';
var administrative = 'administrative';
var photos = 'photos';
var MAGIC_FOLDERS = {
  ADMINISTRATIVE: "".concat(APP_DOCTYPE, "/").concat(administrative),
  PHOTOS: "".concat(APP_DOCTYPE, "/").concat(photos),
  PHOTOS_BACKUP: "".concat(APP_DOCTYPE, "/").concat(photos, "/mobile"),
  PHOTOS_UPLOAD: "".concat(APP_DOCTYPE, "/").concat(photos, "/upload"),
  NOTES: "".concat(APP_DOCTYPE, "/notes"),
  HOME: "".concat(APP_DOCTYPE, "/home"),
  PAPERS: "".concat(APP_DOCTYPE, "/").concat(administrative, "/papers"),
  COACH_CO2: "".concat(APP_DOCTYPE, "/").concat(administrative, "/coachco2")
};
/**
 * Returns a "Magic Folder", given its id. See https://docs.cozy.io/en/cozy-doctypes/docs/io.cozy.apps/#special-iocozyapps-doctypes
 *
 * @param  {CozyClient} client    cozy-client instance
 * @param  {string} id Magic Folder id. `CozyFolder.magicFolders` contains the
 * ids of folders that can be magic folders.
 * @param {string} path Default path to use if magic folder does not exist
 * @returns {Promise<import("../types").IOCozyFolder>} Folder document
 */

exports.MAGIC_FOLDERS = MAGIC_FOLDERS;

var ensureMagicFolder = /*#__PURE__*/function () {
  var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(client, id, path) {
    var magicFolderDocument, existingMagicFolder, magicFoldersValues;
    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            magicFolderDocument = {
              _type: APP_DOCTYPE,
              _id: id
            };
            _context.next = 3;
            return getReferencedFolder(client, magicFolderDocument);

          case 3:
            existingMagicFolder = _context.sent;

            if (!existingMagicFolder) {
              _context.next = 6;
              break;
            }

            return _context.abrupt("return", existingMagicFolder);

          case 6:
            magicFoldersValues = Object.values(MAGIC_FOLDERS);

            if (magicFoldersValues.includes(id)) {
              _context.next = 9;
              break;
            }

            throw new Error("Cannot create Magic folder with id ".concat(id, ". Allowed values are ").concat(magicFoldersValues.join(', '), "."));

          case 9:
            if (path) {
              _context.next = 11;
              break;
            }

            throw new Error('Magic folder default path must be defined');

          case 11:
            return _context.abrupt("return", createFolderWithReference(client, path, magicFolderDocument));

          case 12:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function ensureMagicFolder(_x, _x2, _x3) {
    return _ref.apply(this, arguments);
  };
}();
/**
 * The next functions are considered private and only exported for unit tests
 */

/**
 * Create a folder with a reference to the given document
 *
 * @param  {CozyClient}  client - cozy-client instance
 * @param  {string}  path - Folder path
 * @param  {import("../types").CozyClientDocument}  document - Document to make reference to. Any doctype.
 * @returns {Promise<import("../types").IOCozyFolder>}  Folder document
 */


exports.ensureMagicFolder = ensureMagicFolder;

var createFolderWithReference = /*#__PURE__*/function () {
  var _ref2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(client, path, document) {
    var collection, dirId, _yield$collection$get, dirInfos;

    return _regenerator.default.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            collection = client.collection(_const.DOCTYPE_FILES);
            _context2.next = 3;
            return collection.ensureDirectoryExists(path);

          case 3:
            dirId = _context2.sent;
            _context2.next = 6;
            return collection.addReferencesTo(document, [{
              _id: dirId
            }]);

          case 6:
            _context2.next = 8;
            return collection.get(dirId);

          case 8:
            _yield$collection$get = _context2.sent;
            dirInfos = _yield$collection$get.data;
            return _context2.abrupt("return", dirInfos);

          case 11:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));

  return function createFolderWithReference(_x4, _x5, _x6) {
    return _ref2.apply(this, arguments);
  };
}();
/**
 * Returns the most recent folder referenced by the given document
 *
 * @param  {CozyClient}  client    cozy-client instance
 * @param  {import("../types").CozyClientDocument}  document  Document to get references from
 * @returns {Promise<import("../types").IOCozyFolder>} Folder referenced by the given document
 */


exports.createFolderWithReference = createFolderWithReference;

var getReferencedFolder = /*#__PURE__*/function () {
  var _ref3 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3(client, document) {
    var _yield$client$query, folders;

    return _regenerator.default.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            _context3.next = 2;
            return client.query((0, _dsl.Q)(_const.DOCTYPE_FILES).partialIndex({
              type: 'directory',
              trashed: false
            }).referencedBy(document));

          case 2:
            _yield$client$query = _context3.sent;
            folders = _yield$client$query.included;
            return _context3.abrupt("return", folders.length > 0 ? (0, _sortBy.default)(folders, 'created_at').pop() : null);

          case 5:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  }));

  return function getReferencedFolder(_x7, _x8) {
    return _ref3.apply(this, arguments);
  };
}();

exports.getReferencedFolder = getReferencedFolder;

/***/ }),
/* 313 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var toStr = Object.prototype.toString;

module.exports = function isArguments(value) {
	var str = toStr.call(value);
	var isArgs = str === '[object Arguments]';
	if (!isArgs) {
		isArgs = str !== '[object Array]' &&
			value !== null &&
			typeof value === 'object' &&
			typeof value.length === 'number' &&
			value.length >= 0 &&
			toStr.call(value.callee) === '[object Function]';
	}
	return isArgs;
};


/***/ }),
/* 314 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var GetIntrinsic = __webpack_require__(23);
var callBound = __webpack_require__(24);
var $TypeError = GetIntrinsic('%TypeError%');

var Call = __webpack_require__(689);
var Get = __webpack_require__(315);
var HasProperty = __webpack_require__(693);
var IsCallable = __webpack_require__(694);
var LengthOfArrayLike = __webpack_require__(695);
var ToObject = __webpack_require__(712);
var ToString = __webpack_require__(317);

var isString = __webpack_require__(331);

var $split = callBound('String.prototype.split');

// Check failure of by-index access of string characters (IE < 9) and failure of `0 in boxedString` (Rhino)
var boxedString = Object('a');
var splitString = boxedString[0] !== 'a' || !(0 in boxedString);

module.exports = function forEach(callbackfn) {
	var thisO = ToObject(this);
	var O = splitString && isString(this) ? $split(this, '') : thisO;

	var len = LengthOfArrayLike(O);

	if (!IsCallable(callbackfn)) {
		throw new $TypeError('Array.prototype.forEach callback must be a function');
	}

	var thisArg;
	if (arguments.length > 1) {
		thisArg = arguments[1];
	}

	var k = 0;
	while (k < len) {
		var Pk = ToString(k);
		var kPresent = HasProperty(O, Pk);
		if (kPresent) {
			var kValue = Get(O, Pk);
			Call(callbackfn, thisArg, [kValue, k, O]);
		}
		k += 1;
	}

	return void undefined;
};


/***/ }),
/* 315 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var GetIntrinsic = __webpack_require__(23);

var $TypeError = GetIntrinsic('%TypeError%');

var inspect = __webpack_require__(274);

var IsPropertyKey = __webpack_require__(316);
var Type = __webpack_require__(132);

// https://ecma-international.org/ecma-262/6.0/#sec-get-o-p

module.exports = function Get(O, P) {
	// 7.3.1.1
	if (Type(O) !== 'Object') {
		throw new $TypeError('Assertion failed: Type(O) is not Object');
	}
	// 7.3.1.2
	if (!IsPropertyKey(P)) {
		throw new $TypeError('Assertion failed: IsPropertyKey(P) is not true, got ' + inspect(P));
	}
	// 7.3.1.3
	return O[P];
};


/***/ }),
/* 316 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// https://ecma-international.org/ecma-262/6.0/#sec-ispropertykey

module.exports = function IsPropertyKey(argument) {
	return typeof argument === 'string' || typeof argument === 'symbol';
};


/***/ }),
/* 317 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var GetIntrinsic = __webpack_require__(23);

var $String = GetIntrinsic('%String%');
var $TypeError = GetIntrinsic('%TypeError%');

// https://ecma-international.org/ecma-262/6.0/#sec-tostring

module.exports = function ToString(argument) {
	if (typeof argument === 'symbol') {
		throw new $TypeError('Cannot convert a Symbol value to a string');
	}
	return $String(argument);
};


/***/ }),
/* 318 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var arrayMethodBoxesProperly = __webpack_require__(332);

var implementation = __webpack_require__(314);

module.exports = function getPolyfill() {
	var method = Array.prototype.forEach;
	return arrayMethodBoxesProperly(method) ? method : implementation;
};


/***/ }),
/* 319 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var RequireObjectCoercible = __webpack_require__(95);
var callBound = __webpack_require__(24);
var $isEnumerable = callBound('Object.prototype.propertyIsEnumerable');
var $push = callBound('Array.prototype.push');

module.exports = function entries(O) {
	var obj = RequireObjectCoercible(O);
	var entrys = [];
	for (var key in obj) {
		if ($isEnumerable(obj, key)) { // checks own-ness as well
			$push(entrys, [key, obj[key]]);
		}
	}
	return entrys;
};


/***/ }),
/* 320 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var implementation = __webpack_require__(319);

module.exports = function getPolyfill() {
	return typeof Object.entries === 'function' ? Object.entries : implementation;
};


/***/ }),
/* 321 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var RequireObjectCoercible = __webpack_require__(95);
var ToString = __webpack_require__(317);
var callBound = __webpack_require__(24);
var $replace = callBound('String.prototype.replace');

var mvsIsWS = (/^\s$/).test('\u180E');
/* eslint-disable no-control-regex */
var leftWhitespace = mvsIsWS
	? /^[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]+/
	: /^[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]+/;
var rightWhitespace = mvsIsWS
	? /[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]+$/
	: /[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]+$/;
/* eslint-enable no-control-regex */

module.exports = function trim() {
	var S = ToString(RequireObjectCoercible(this));
	return $replace($replace(S, leftWhitespace, ''), rightWhitespace, '');
};


/***/ }),
/* 322 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var implementation = __webpack_require__(321);

var zeroWidthSpace = '\u200b';
var mongolianVowelSeparator = '\u180E';

module.exports = function getPolyfill() {
	if (
		String.prototype.trim
		&& zeroWidthSpace.trim() === zeroWidthSpace
		&& mongolianVowelSeparator.trim() === mongolianVowelSeparator
		&& ('_' + mongolianVowelSeparator).trim() === ('_' + mongolianVowelSeparator)
		&& (mongolianVowelSeparator + '_').trim() === (mongolianVowelSeparator + '_')
	) {
		return String.prototype.trim;
	}
	return implementation;
};


/***/ }),
/* 323 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.themesList = void 0;

var _constants = __webpack_require__(311);

var _qualification = __webpack_require__(194);

/**
 *
 * @param {Array<import("../../types").ItemsLabels>} labels - Array of items labels
 * @returns {Array<import("../../types").QualificationAttributes>}
 */
var buildItemsByLabel = function buildItemsByLabel(labels) {
  return labels.map(function (label) {
    try {
      return _qualification.Qualification.getByLabel(label);
    } catch (e) {
      console.log('error', e); // eslint-disable-line no-console

      return null;
    }
  }).filter(function (item) {
    return item;
  });
};
/**
 * @type {import("../../types").ThemesList}
 */


var themesList = [{
  id: 'theme1',
  label: 'identity',
  icon: 'people',
  items: buildItemsByLabel(_constants.THEME_IDENTITY_LABELS),
  defaultItems: ['birth_certificate']
}, {
  id: 'theme2',
  label: 'family',
  icon: 'team',
  items: buildItemsByLabel(_constants.THEME_FAMILY_LABELS),
  defaultItems: ['family_record_book']
}, {
  id: 'theme3',
  label: 'work_study',
  icon: 'company',
  items: buildItemsByLabel(_constants.THEME_WORK_STUDY_LABELS)
}, {
  id: 'theme4',
  label: 'health',
  icon: 'heart',
  items: buildItemsByLabel(_constants.THEME_HEALTH_LABELS)
}, {
  id: 'theme5',
  label: 'home',
  icon: 'home',
  items: buildItemsByLabel(_constants.THEME_HOME_LABELS)
}, {
  id: 'theme6',
  label: 'transport',
  icon: 'car',
  items: buildItemsByLabel(_constants.THEME_TRANSPORT_LABELS),
  defaultItems: ['driver_license']
}, {
  id: 'theme7',
  label: 'activity',
  icon: 'compass',
  items: buildItemsByLabel(_constants.THEME_ACTIVITY_LABELS)
}, {
  id: 'theme8',
  label: 'finance',
  icon: 'bank',
  items: buildItemsByLabel(_constants.THEME_FINANCE_LABELS)
}, {
  id: 'theme9',
  label: 'invoice',
  icon: 'bill',
  items: buildItemsByLabel(_constants.THEME_INVOICE_LABELS)
}, {
  id: 'theme10',
  label: 'others',
  icon: 'dots',
  items: buildItemsByLabel(_constants.THEME_OTHERS_LABELS)
}];
exports.themesList = themesList;

/***/ }),
/* 324 */,
/* 325 */
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export Headers */
/* unused harmony export Request */
/* unused harmony export Response */
/* unused harmony export FetchError */
/* harmony import */ var stream__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(17);
/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(58);
/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(31);
/* harmony import */ var whatwg_url__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(100);
/* harmony import */ var https__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(104);
/* harmony import */ var zlib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(25);







// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js

// fix for "Readable" isn't a named export issue
const Readable = stream__WEBPACK_IMPORTED_MODULE_0__.Readable;

const BUFFER = Symbol('buffer');
const TYPE = Symbol('type');

class Blob {
	constructor() {
		this[TYPE] = '';

		const blobParts = arguments[0];
		const options = arguments[1];

		const buffers = [];
		let size = 0;

		if (blobParts) {
			const a = blobParts;
			const length = Number(a.length);
			for (let i = 0; i < length; i++) {
				const element = a[i];
				let buffer;
				if (element instanceof Buffer) {
					buffer = element;
				} else if (ArrayBuffer.isView(element)) {
					buffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);
				} else if (element instanceof ArrayBuffer) {
					buffer = Buffer.from(element);
				} else if (element instanceof Blob) {
					buffer = element[BUFFER];
				} else {
					buffer = Buffer.from(typeof element === 'string' ? element : String(element));
				}
				size += buffer.length;
				buffers.push(buffer);
			}
		}

		this[BUFFER] = Buffer.concat(buffers);

		let type = options && options.type !== undefined && String(options.type).toLowerCase();
		if (type && !/[^\u0020-\u007E]/.test(type)) {
			this[TYPE] = type;
		}
	}
	get size() {
		return this[BUFFER].length;
	}
	get type() {
		return this[TYPE];
	}
	text() {
		return Promise.resolve(this[BUFFER].toString());
	}
	arrayBuffer() {
		const buf = this[BUFFER];
		const ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);
		return Promise.resolve(ab);
	}
	stream() {
		const readable = new Readable();
		readable._read = function () {};
		readable.push(this[BUFFER]);
		readable.push(null);
		return readable;
	}
	toString() {
		return '[object Blob]';
	}
	slice() {
		const size = this.size;

		const start = arguments[0];
		const end = arguments[1];
		let relativeStart, relativeEnd;
		if (start === undefined) {
			relativeStart = 0;
		} else if (start < 0) {
			relativeStart = Math.max(size + start, 0);
		} else {
			relativeStart = Math.min(start, size);
		}
		if (end === undefined) {
			relativeEnd = size;
		} else if (end < 0) {
			relativeEnd = Math.max(size + end, 0);
		} else {
			relativeEnd = Math.min(end, size);
		}
		const span = Math.max(relativeEnd - relativeStart, 0);

		const buffer = this[BUFFER];
		const slicedBuffer = buffer.slice(relativeStart, relativeStart + span);
		const blob = new Blob([], { type: arguments[2] });
		blob[BUFFER] = slicedBuffer;
		return blob;
	}
}

Object.defineProperties(Blob.prototype, {
	size: { enumerable: true },
	type: { enumerable: true },
	slice: { enumerable: true }
});

Object.defineProperty(Blob.prototype, Symbol.toStringTag, {
	value: 'Blob',
	writable: false,
	enumerable: false,
	configurable: true
});

/**
 * fetch-error.js
 *
 * FetchError interface for operational errors
 */

/**
 * Create FetchError instance
 *
 * @param   String      message      Error message for human
 * @param   String      type         Error type for machine
 * @param   String      systemError  For Node.js system error
 * @return  FetchError
 */
function FetchError(message, type, systemError) {
  Error.call(this, message);

  this.message = message;
  this.type = type;

  // when err.type is `system`, err.code contains system error code
  if (systemError) {
    this.code = this.errno = systemError.code;
  }

  // hide custom error implementation details from end-users
  Error.captureStackTrace(this, this.constructor);
}

FetchError.prototype = Object.create(Error.prototype);
FetchError.prototype.constructor = FetchError;
FetchError.prototype.name = 'FetchError';

let convert;
try {
	convert = require('encoding').convert;
} catch (e) {}

const INTERNALS = Symbol('Body internals');

// fix an issue where "PassThrough" isn't a named export for node <10
const PassThrough = stream__WEBPACK_IMPORTED_MODULE_0__.PassThrough;

/**
 * Body mixin
 *
 * Ref: https://fetch.spec.whatwg.org/#body
 *
 * @param   Stream  body  Readable stream
 * @param   Object  opts  Response options
 * @return  Void
 */
function Body(body) {
	var _this = this;

	var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	    _ref$size = _ref.size;

	let size = _ref$size === undefined ? 0 : _ref$size;
	var _ref$timeout = _ref.timeout;
	let timeout = _ref$timeout === undefined ? 0 : _ref$timeout;

	if (body == null) {
		// body is undefined or null
		body = null;
	} else if (isURLSearchParams(body)) {
		// body is a URLSearchParams
		body = Buffer.from(body.toString());
	} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {
		// body is ArrayBuffer
		body = Buffer.from(body);
	} else if (ArrayBuffer.isView(body)) {
		// body is ArrayBufferView
		body = Buffer.from(body.buffer, body.byteOffset, body.byteLength);
	} else if (body instanceof stream__WEBPACK_IMPORTED_MODULE_0__) ; else {
		// none of the above
		// coerce to string then buffer
		body = Buffer.from(String(body));
	}
	this[INTERNALS] = {
		body,
		disturbed: false,
		error: null
	};
	this.size = size;
	this.timeout = timeout;

	if (body instanceof stream__WEBPACK_IMPORTED_MODULE_0__) {
		body.on('error', function (err) {
			const error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);
			_this[INTERNALS].error = error;
		});
	}
}

Body.prototype = {
	get body() {
		return this[INTERNALS].body;
	},

	get bodyUsed() {
		return this[INTERNALS].disturbed;
	},

	/**
  * Decode response as ArrayBuffer
  *
  * @return  Promise
  */
	arrayBuffer() {
		return consumeBody.call(this).then(function (buf) {
			return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);
		});
	},

	/**
  * Return raw response as Blob
  *
  * @return Promise
  */
	blob() {
		let ct = this.headers && this.headers.get('content-type') || '';
		return consumeBody.call(this).then(function (buf) {
			return Object.assign(
			// Prevent copying
			new Blob([], {
				type: ct.toLowerCase()
			}), {
				[BUFFER]: buf
			});
		});
	},

	/**
  * Decode response as json
  *
  * @return  Promise
  */
	json() {
		var _this2 = this;

		return consumeBody.call(this).then(function (buffer) {
			try {
				return JSON.parse(buffer.toString());
			} catch (err) {
				return Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));
			}
		});
	},

	/**
  * Decode response as text
  *
  * @return  Promise
  */
	text() {
		return consumeBody.call(this).then(function (buffer) {
			return buffer.toString();
		});
	},

	/**
  * Decode response as buffer (non-spec api)
  *
  * @return  Promise
  */
	buffer() {
		return consumeBody.call(this);
	},

	/**
  * Decode response as text, while automatically detecting the encoding and
  * trying to decode to UTF-8 (non-spec api)
  *
  * @return  Promise
  */
	textConverted() {
		var _this3 = this;

		return consumeBody.call(this).then(function (buffer) {
			return convertBody(buffer, _this3.headers);
		});
	}
};

// In browsers, all properties are enumerable.
Object.defineProperties(Body.prototype, {
	body: { enumerable: true },
	bodyUsed: { enumerable: true },
	arrayBuffer: { enumerable: true },
	blob: { enumerable: true },
	json: { enumerable: true },
	text: { enumerable: true }
});

Body.mixIn = function (proto) {
	for (const name of Object.getOwnPropertyNames(Body.prototype)) {
		// istanbul ignore else: future proof
		if (!(name in proto)) {
			const desc = Object.getOwnPropertyDescriptor(Body.prototype, name);
			Object.defineProperty(proto, name, desc);
		}
	}
};

/**
 * Consume and convert an entire Body to a Buffer.
 *
 * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body
 *
 * @return  Promise
 */
function consumeBody() {
	var _this4 = this;

	if (this[INTERNALS].disturbed) {
		return Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));
	}

	this[INTERNALS].disturbed = true;

	if (this[INTERNALS].error) {
		return Body.Promise.reject(this[INTERNALS].error);
	}

	let body = this.body;

	// body is null
	if (body === null) {
		return Body.Promise.resolve(Buffer.alloc(0));
	}

	// body is blob
	if (isBlob(body)) {
		body = body.stream();
	}

	// body is buffer
	if (Buffer.isBuffer(body)) {
		return Body.Promise.resolve(body);
	}

	// istanbul ignore if: should never happen
	if (!(body instanceof stream__WEBPACK_IMPORTED_MODULE_0__)) {
		return Body.Promise.resolve(Buffer.alloc(0));
	}

	// body is stream
	// get ready to actually consume the body
	let accum = [];
	let accumBytes = 0;
	let abort = false;

	return new Body.Promise(function (resolve, reject) {
		let resTimeout;

		// allow timeout on slow response body
		if (_this4.timeout) {
			resTimeout = setTimeout(function () {
				abort = true;
				reject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));
			}, _this4.timeout);
		}

		// handle stream errors
		body.on('error', function (err) {
			if (err.name === 'AbortError') {
				// if the request was aborted, reject with this Error
				abort = true;
				reject(err);
			} else {
				// other errors, such as incorrect content-encoding
				reject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));
			}
		});

		body.on('data', function (chunk) {
			if (abort || chunk === null) {
				return;
			}

			if (_this4.size && accumBytes + chunk.length > _this4.size) {
				abort = true;
				reject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));
				return;
			}

			accumBytes += chunk.length;
			accum.push(chunk);
		});

		body.on('end', function () {
			if (abort) {
				return;
			}

			clearTimeout(resTimeout);

			try {
				resolve(Buffer.concat(accum, accumBytes));
			} catch (err) {
				// handle streams that have accumulated too much data (issue #414)
				reject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));
			}
		});
	});
}

/**
 * Detect buffer encoding and convert to target encoding
 * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding
 *
 * @param   Buffer  buffer    Incoming buffer
 * @param   String  encoding  Target encoding
 * @return  String
 */
function convertBody(buffer, headers) {
	if (typeof convert !== 'function') {
		throw new Error('The package `encoding` must be installed to use the textConverted() function');
	}

	const ct = headers.get('content-type');
	let charset = 'utf-8';
	let res, str;

	// header
	if (ct) {
		res = /charset=([^;]*)/i.exec(ct);
	}

	// no charset in content type, peek at response body for at most 1024 bytes
	str = buffer.slice(0, 1024).toString();

	// html5
	if (!res && str) {
		res = /<meta.+?charset=(['"])(.+?)\1/i.exec(str);
	}

	// html4
	if (!res && str) {
		res = /<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(str);
		if (!res) {
			res = /<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(str);
			if (res) {
				res.pop(); // drop last quote
			}
		}

		if (res) {
			res = /charset=(.*)/i.exec(res.pop());
		}
	}

	// xml
	if (!res && str) {
		res = /<\?xml.+?encoding=(['"])(.+?)\1/i.exec(str);
	}

	// found charset
	if (res) {
		charset = res.pop();

		// prevent decode issues when sites use incorrect encoding
		// ref: https://hsivonen.fi/encoding-menu/
		if (charset === 'gb2312' || charset === 'gbk') {
			charset = 'gb18030';
		}
	}

	// turn raw buffers into a single utf-8 buffer
	return convert(buffer, 'UTF-8', charset).toString();
}

/**
 * Detect a URLSearchParams object
 * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143
 *
 * @param   Object  obj     Object to detect by type or brand
 * @return  String
 */
function isURLSearchParams(obj) {
	// Duck-typing as a necessary condition.
	if (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {
		return false;
	}

	// Brand-checking and more duck-typing as optional condition.
	return obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';
}

/**
 * Check if `obj` is a W3C `Blob` object (which `File` inherits from)
 * @param  {*} obj
 * @return {boolean}
 */
function isBlob(obj) {
	return typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);
}

/**
 * Clone body given Res/Req instance
 *
 * @param   Mixed  instance  Response or Request instance
 * @return  Mixed
 */
function clone(instance) {
	let p1, p2;
	let body = instance.body;

	// don't allow cloning a used body
	if (instance.bodyUsed) {
		throw new Error('cannot clone body after it is used');
	}

	// check that body is a stream and not form-data object
	// note: we can't clone the form-data object without having it as a dependency
	if (body instanceof stream__WEBPACK_IMPORTED_MODULE_0__ && typeof body.getBoundary !== 'function') {
		// tee instance body
		p1 = new PassThrough();
		p2 = new PassThrough();
		body.pipe(p1);
		body.pipe(p2);
		// set instance body to teed body and return the other teed body
		instance[INTERNALS].body = p1;
		body = p2;
	}

	return body;
}

/**
 * Performs the operation "extract a `Content-Type` value from |object|" as
 * specified in the specification:
 * https://fetch.spec.whatwg.org/#concept-bodyinit-extract
 *
 * This function assumes that instance.body is present.
 *
 * @param   Mixed  instance  Any options.body input
 */
function extractContentType(body) {
	if (body === null) {
		// body is null
		return null;
	} else if (typeof body === 'string') {
		// body is string
		return 'text/plain;charset=UTF-8';
	} else if (isURLSearchParams(body)) {
		// body is a URLSearchParams
		return 'application/x-www-form-urlencoded;charset=UTF-8';
	} else if (isBlob(body)) {
		// body is blob
		return body.type || null;
	} else if (Buffer.isBuffer(body)) {
		// body is buffer
		return null;
	} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {
		// body is ArrayBuffer
		return null;
	} else if (ArrayBuffer.isView(body)) {
		// body is ArrayBufferView
		return null;
	} else if (typeof body.getBoundary === 'function') {
		// detect form data input from form-data module
		return `multipart/form-data;boundary=${body.getBoundary()}`;
	} else if (body instanceof stream__WEBPACK_IMPORTED_MODULE_0__) {
		// body is stream
		// can't really do much about this
		return null;
	} else {
		// Body constructor defaults other things to string
		return 'text/plain;charset=UTF-8';
	}
}

/**
 * The Fetch Standard treats this as if "total bytes" is a property on the body.
 * For us, we have to explicitly get it with a function.
 *
 * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes
 *
 * @param   Body    instance   Instance of Body
 * @return  Number?            Number of bytes, or null if not possible
 */
function getTotalBytes(instance) {
	const body = instance.body;


	if (body === null) {
		// body is null
		return 0;
	} else if (isBlob(body)) {
		return body.size;
	} else if (Buffer.isBuffer(body)) {
		// body is buffer
		return body.length;
	} else if (body && typeof body.getLengthSync === 'function') {
		// detect form data input from form-data module
		if (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x
		body.hasKnownLength && body.hasKnownLength()) {
			// 2.x
			return body.getLengthSync();
		}
		return null;
	} else {
		// body is stream
		return null;
	}
}

/**
 * Write a Body to a Node.js WritableStream (e.g. http.Request) object.
 *
 * @param   Body    instance   Instance of Body
 * @return  Void
 */
function writeToStream(dest, instance) {
	const body = instance.body;


	if (body === null) {
		// body is null
		dest.end();
	} else if (isBlob(body)) {
		body.stream().pipe(dest);
	} else if (Buffer.isBuffer(body)) {
		// body is buffer
		dest.write(body);
		dest.end();
	} else {
		// body is stream
		body.pipe(dest);
	}
}

// expose Promise
Body.Promise = global.Promise;

/**
 * headers.js
 *
 * Headers class offers convenient helpers
 */

const invalidTokenRegex = /[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/;
const invalidHeaderCharRegex = /[^\t\x20-\x7e\x80-\xff]/;

function validateName(name) {
	name = `${name}`;
	if (invalidTokenRegex.test(name) || name === '') {
		throw new TypeError(`${name} is not a legal HTTP header name`);
	}
}

function validateValue(value) {
	value = `${value}`;
	if (invalidHeaderCharRegex.test(value)) {
		throw new TypeError(`${value} is not a legal HTTP header value`);
	}
}

/**
 * Find the key in the map object given a header name.
 *
 * Returns undefined if not found.
 *
 * @param   String  name  Header name
 * @return  String|Undefined
 */
function find(map, name) {
	name = name.toLowerCase();
	for (const key in map) {
		if (key.toLowerCase() === name) {
			return key;
		}
	}
	return undefined;
}

const MAP = Symbol('map');
class Headers {
	/**
  * Headers class
  *
  * @param   Object  headers  Response headers
  * @return  Void
  */
	constructor() {
		let init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;

		this[MAP] = Object.create(null);

		if (init instanceof Headers) {
			const rawHeaders = init.raw();
			const headerNames = Object.keys(rawHeaders);

			for (const headerName of headerNames) {
				for (const value of rawHeaders[headerName]) {
					this.append(headerName, value);
				}
			}

			return;
		}

		// We don't worry about converting prop to ByteString here as append()
		// will handle it.
		if (init == null) ; else if (typeof init === 'object') {
			const method = init[Symbol.iterator];
			if (method != null) {
				if (typeof method !== 'function') {
					throw new TypeError('Header pairs must be iterable');
				}

				// sequence<sequence<ByteString>>
				// Note: per spec we have to first exhaust the lists then process them
				const pairs = [];
				for (const pair of init) {
					if (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {
						throw new TypeError('Each header pair must be iterable');
					}
					pairs.push(Array.from(pair));
				}

				for (const pair of pairs) {
					if (pair.length !== 2) {
						throw new TypeError('Each header pair must be a name/value tuple');
					}
					this.append(pair[0], pair[1]);
				}
			} else {
				// record<ByteString, ByteString>
				for (const key of Object.keys(init)) {
					const value = init[key];
					this.append(key, value);
				}
			}
		} else {
			throw new TypeError('Provided initializer must be an object');
		}
	}

	/**
  * Return combined header value given name
  *
  * @param   String  name  Header name
  * @return  Mixed
  */
	get(name) {
		name = `${name}`;
		validateName(name);
		const key = find(this[MAP], name);
		if (key === undefined) {
			return null;
		}

		return this[MAP][key].join(', ');
	}

	/**
  * Iterate over all headers
  *
  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)
  * @param   Boolean   thisArg   `this` context for callback function
  * @return  Void
  */
	forEach(callback) {
		let thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;

		let pairs = getHeaders(this);
		let i = 0;
		while (i < pairs.length) {
			var _pairs$i = pairs[i];
			const name = _pairs$i[0],
			      value = _pairs$i[1];

			callback.call(thisArg, value, name, this);
			pairs = getHeaders(this);
			i++;
		}
	}

	/**
  * Overwrite header values given name
  *
  * @param   String  name   Header name
  * @param   String  value  Header value
  * @return  Void
  */
	set(name, value) {
		name = `${name}`;
		value = `${value}`;
		validateName(name);
		validateValue(value);
		const key = find(this[MAP], name);
		this[MAP][key !== undefined ? key : name] = [value];
	}

	/**
  * Append a value onto existing header
  *
  * @param   String  name   Header name
  * @param   String  value  Header value
  * @return  Void
  */
	append(name, value) {
		name = `${name}`;
		value = `${value}`;
		validateName(name);
		validateValue(value);
		const key = find(this[MAP], name);
		if (key !== undefined) {
			this[MAP][key].push(value);
		} else {
			this[MAP][name] = [value];
		}
	}

	/**
  * Check for header name existence
  *
  * @param   String   name  Header name
  * @return  Boolean
  */
	has(name) {
		name = `${name}`;
		validateName(name);
		return find(this[MAP], name) !== undefined;
	}

	/**
  * Delete all header values given name
  *
  * @param   String  name  Header name
  * @return  Void
  */
	delete(name) {
		name = `${name}`;
		validateName(name);
		const key = find(this[MAP], name);
		if (key !== undefined) {
			delete this[MAP][key];
		}
	}

	/**
  * Return raw headers (non-spec api)
  *
  * @return  Object
  */
	raw() {
		return this[MAP];
	}

	/**
  * Get an iterator on keys.
  *
  * @return  Iterator
  */
	keys() {
		return createHeadersIterator(this, 'key');
	}

	/**
  * Get an iterator on values.
  *
  * @return  Iterator
  */
	values() {
		return createHeadersIterator(this, 'value');
	}

	/**
  * Get an iterator on entries.
  *
  * This is the default iterator of the Headers object.
  *
  * @return  Iterator
  */
	[Symbol.iterator]() {
		return createHeadersIterator(this, 'key+value');
	}
}
Headers.prototype.entries = Headers.prototype[Symbol.iterator];

Object.defineProperty(Headers.prototype, Symbol.toStringTag, {
	value: 'Headers',
	writable: false,
	enumerable: false,
	configurable: true
});

Object.defineProperties(Headers.prototype, {
	get: { enumerable: true },
	forEach: { enumerable: true },
	set: { enumerable: true },
	append: { enumerable: true },
	has: { enumerable: true },
	delete: { enumerable: true },
	keys: { enumerable: true },
	values: { enumerable: true },
	entries: { enumerable: true }
});

function getHeaders(headers) {
	let kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';

	const keys = Object.keys(headers[MAP]).sort();
	return keys.map(kind === 'key' ? function (k) {
		return k.toLowerCase();
	} : kind === 'value' ? function (k) {
		return headers[MAP][k].join(', ');
	} : function (k) {
		return [k.toLowerCase(), headers[MAP][k].join(', ')];
	});
}

const INTERNAL = Symbol('internal');

function createHeadersIterator(target, kind) {
	const iterator = Object.create(HeadersIteratorPrototype);
	iterator[INTERNAL] = {
		target,
		kind,
		index: 0
	};
	return iterator;
}

const HeadersIteratorPrototype = Object.setPrototypeOf({
	next() {
		// istanbul ignore if
		if (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {
			throw new TypeError('Value of `this` is not a HeadersIterator');
		}

		var _INTERNAL = this[INTERNAL];
		const target = _INTERNAL.target,
		      kind = _INTERNAL.kind,
		      index = _INTERNAL.index;

		const values = getHeaders(target, kind);
		const len = values.length;
		if (index >= len) {
			return {
				value: undefined,
				done: true
			};
		}

		this[INTERNAL].index = index + 1;

		return {
			value: values[index],
			done: false
		};
	}
}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));

Object.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {
	value: 'HeadersIterator',
	writable: false,
	enumerable: false,
	configurable: true
});

/**
 * Export the Headers object in a form that Node.js can consume.
 *
 * @param   Headers  headers
 * @return  Object
 */
function exportNodeCompatibleHeaders(headers) {
	const obj = Object.assign({ __proto__: null }, headers[MAP]);

	// http.request() only supports string as Host header. This hack makes
	// specifying custom Host header possible.
	const hostHeaderKey = find(headers[MAP], 'Host');
	if (hostHeaderKey !== undefined) {
		obj[hostHeaderKey] = obj[hostHeaderKey][0];
	}

	return obj;
}

/**
 * Create a Headers object from an object of headers, ignoring those that do
 * not conform to HTTP grammar productions.
 *
 * @param   Object  obj  Object of headers
 * @return  Headers
 */
function createHeadersLenient(obj) {
	const headers = new Headers();
	for (const name of Object.keys(obj)) {
		if (invalidTokenRegex.test(name)) {
			continue;
		}
		if (Array.isArray(obj[name])) {
			for (const val of obj[name]) {
				if (invalidHeaderCharRegex.test(val)) {
					continue;
				}
				if (headers[MAP][name] === undefined) {
					headers[MAP][name] = [val];
				} else {
					headers[MAP][name].push(val);
				}
			}
		} else if (!invalidHeaderCharRegex.test(obj[name])) {
			headers[MAP][name] = [obj[name]];
		}
	}
	return headers;
}

const INTERNALS$1 = Symbol('Response internals');

// fix an issue where "STATUS_CODES" aren't a named export for node <10
const STATUS_CODES = http__WEBPACK_IMPORTED_MODULE_1__.STATUS_CODES;

/**
 * Response class
 *
 * @param   Stream  body  Readable stream
 * @param   Object  opts  Response options
 * @return  Void
 */
class Response {
	constructor() {
		let body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
		let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

		Body.call(this, body, opts);

		const status = opts.status || 200;
		const headers = new Headers(opts.headers);

		if (body != null && !headers.has('Content-Type')) {
			const contentType = extractContentType(body);
			if (contentType) {
				headers.append('Content-Type', contentType);
			}
		}

		this[INTERNALS$1] = {
			url: opts.url,
			status,
			statusText: opts.statusText || STATUS_CODES[status],
			headers,
			counter: opts.counter
		};
	}

	get url() {
		return this[INTERNALS$1].url || '';
	}

	get status() {
		return this[INTERNALS$1].status;
	}

	/**
  * Convenience property representing if the request ended normally
  */
	get ok() {
		return this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;
	}

	get redirected() {
		return this[INTERNALS$1].counter > 0;
	}

	get statusText() {
		return this[INTERNALS$1].statusText;
	}

	get headers() {
		return this[INTERNALS$1].headers;
	}

	/**
  * Clone this response
  *
  * @return  Response
  */
	clone() {
		return new Response(clone(this), {
			url: this.url,
			status: this.status,
			statusText: this.statusText,
			headers: this.headers,
			ok: this.ok,
			redirected: this.redirected
		});
	}
}

Body.mixIn(Response.prototype);

Object.defineProperties(Response.prototype, {
	url: { enumerable: true },
	status: { enumerable: true },
	ok: { enumerable: true },
	redirected: { enumerable: true },
	statusText: { enumerable: true },
	headers: { enumerable: true },
	clone: { enumerable: true }
});

Object.defineProperty(Response.prototype, Symbol.toStringTag, {
	value: 'Response',
	writable: false,
	enumerable: false,
	configurable: true
});

const INTERNALS$2 = Symbol('Request internals');
const URL = url__WEBPACK_IMPORTED_MODULE_2__.URL || whatwg_url__WEBPACK_IMPORTED_MODULE_3__.URL;

// fix an issue where "format", "parse" aren't a named export for node <10
const parse_url = url__WEBPACK_IMPORTED_MODULE_2__.parse;
const format_url = url__WEBPACK_IMPORTED_MODULE_2__.format;

/**
 * Wrapper around `new URL` to handle arbitrary URLs
 *
 * @param  {string} urlStr
 * @return {void}
 */
function parseURL(urlStr) {
	/*
 	Check whether the URL is absolute or not
 		Scheme: https://tools.ietf.org/html/rfc3986#section-3.1
 	Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3
 */
	if (/^[a-zA-Z][a-zA-Z\d+\-.]*:/.exec(urlStr)) {
		urlStr = new URL(urlStr).toString();
	}

	// Fallback to old implementation for arbitrary URLs
	return parse_url(urlStr);
}

const streamDestructionSupported = 'destroy' in stream__WEBPACK_IMPORTED_MODULE_0__.Readable.prototype;

/**
 * Check if a value is an instance of Request.
 *
 * @param   Mixed   input
 * @return  Boolean
 */
function isRequest(input) {
	return typeof input === 'object' && typeof input[INTERNALS$2] === 'object';
}

function isAbortSignal(signal) {
	const proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);
	return !!(proto && proto.constructor.name === 'AbortSignal');
}

/**
 * Request class
 *
 * @param   Mixed   input  Url or Request instance
 * @param   Object  init   Custom options
 * @return  Void
 */
class Request {
	constructor(input) {
		let init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

		let parsedURL;

		// normalize input
		if (!isRequest(input)) {
			if (input && input.href) {
				// in order to support Node.js' Url objects; though WHATWG's URL objects
				// will fall into this branch also (since their `toString()` will return
				// `href` property anyway)
				parsedURL = parseURL(input.href);
			} else {
				// coerce input to a string before attempting to parse
				parsedURL = parseURL(`${input}`);
			}
			input = {};
		} else {
			parsedURL = parseURL(input.url);
		}

		let method = init.method || input.method || 'GET';
		method = method.toUpperCase();

		if ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {
			throw new TypeError('Request with GET/HEAD method cannot have body');
		}

		let inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;

		Body.call(this, inputBody, {
			timeout: init.timeout || input.timeout || 0,
			size: init.size || input.size || 0
		});

		const headers = new Headers(init.headers || input.headers || {});

		if (inputBody != null && !headers.has('Content-Type')) {
			const contentType = extractContentType(inputBody);
			if (contentType) {
				headers.append('Content-Type', contentType);
			}
		}

		let signal = isRequest(input) ? input.signal : null;
		if ('signal' in init) signal = init.signal;

		if (signal != null && !isAbortSignal(signal)) {
			throw new TypeError('Expected signal to be an instanceof AbortSignal');
		}

		this[INTERNALS$2] = {
			method,
			redirect: init.redirect || input.redirect || 'follow',
			headers,
			parsedURL,
			signal
		};

		// node-fetch-only options
		this.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;
		this.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;
		this.counter = init.counter || input.counter || 0;
		this.agent = init.agent || input.agent;
	}

	get method() {
		return this[INTERNALS$2].method;
	}

	get url() {
		return format_url(this[INTERNALS$2].parsedURL);
	}

	get headers() {
		return this[INTERNALS$2].headers;
	}

	get redirect() {
		return this[INTERNALS$2].redirect;
	}

	get signal() {
		return this[INTERNALS$2].signal;
	}

	/**
  * Clone this request
  *
  * @return  Request
  */
	clone() {
		return new Request(this);
	}
}

Body.mixIn(Request.prototype);

Object.defineProperty(Request.prototype, Symbol.toStringTag, {
	value: 'Request',
	writable: false,
	enumerable: false,
	configurable: true
});

Object.defineProperties(Request.prototype, {
	method: { enumerable: true },
	url: { enumerable: true },
	headers: { enumerable: true },
	redirect: { enumerable: true },
	clone: { enumerable: true },
	signal: { enumerable: true }
});

/**
 * Convert a Request to Node.js http request options.
 *
 * @param   Request  A Request instance
 * @return  Object   The options object to be passed to http.request
 */
function getNodeRequestOptions(request) {
	const parsedURL = request[INTERNALS$2].parsedURL;
	const headers = new Headers(request[INTERNALS$2].headers);

	// fetch step 1.3
	if (!headers.has('Accept')) {
		headers.set('Accept', '*/*');
	}

	// Basic fetch
	if (!parsedURL.protocol || !parsedURL.hostname) {
		throw new TypeError('Only absolute URLs are supported');
	}

	if (!/^https?:$/.test(parsedURL.protocol)) {
		throw new TypeError('Only HTTP(S) protocols are supported');
	}

	if (request.signal && request.body instanceof stream__WEBPACK_IMPORTED_MODULE_0__.Readable && !streamDestructionSupported) {
		throw new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');
	}

	// HTTP-network-or-cache fetch steps 2.4-2.7
	let contentLengthValue = null;
	if (request.body == null && /^(POST|PUT)$/i.test(request.method)) {
		contentLengthValue = '0';
	}
	if (request.body != null) {
		const totalBytes = getTotalBytes(request);
		if (typeof totalBytes === 'number') {
			contentLengthValue = String(totalBytes);
		}
	}
	if (contentLengthValue) {
		headers.set('Content-Length', contentLengthValue);
	}

	// HTTP-network-or-cache fetch step 2.11
	if (!headers.has('User-Agent')) {
		headers.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');
	}

	// HTTP-network-or-cache fetch step 2.15
	if (request.compress && !headers.has('Accept-Encoding')) {
		headers.set('Accept-Encoding', 'gzip,deflate');
	}

	let agent = request.agent;
	if (typeof agent === 'function') {
		agent = agent(parsedURL);
	}

	if (!headers.has('Connection') && !agent) {
		headers.set('Connection', 'close');
	}

	// HTTP-network fetch step 4.2
	// chunked encoding is handled by Node.js

	return Object.assign({}, parsedURL, {
		method: request.method,
		headers: exportNodeCompatibleHeaders(headers),
		agent
	});
}

/**
 * abort-error.js
 *
 * AbortError interface for cancelled requests
 */

/**
 * Create AbortError instance
 *
 * @param   String      message      Error message for human
 * @return  AbortError
 */
function AbortError(message) {
  Error.call(this, message);

  this.type = 'aborted';
  this.message = message;

  // hide custom error implementation details from end-users
  Error.captureStackTrace(this, this.constructor);
}

AbortError.prototype = Object.create(Error.prototype);
AbortError.prototype.constructor = AbortError;
AbortError.prototype.name = 'AbortError';

const URL$1 = url__WEBPACK_IMPORTED_MODULE_2__.URL || whatwg_url__WEBPACK_IMPORTED_MODULE_3__.URL;

// fix an issue where "PassThrough", "resolve" aren't a named export for node <10
const PassThrough$1 = stream__WEBPACK_IMPORTED_MODULE_0__.PassThrough;

const isDomainOrSubdomain = function isDomainOrSubdomain(destination, original) {
	const orig = new URL$1(original).hostname;
	const dest = new URL$1(destination).hostname;

	return orig === dest || orig[orig.length - dest.length - 1] === '.' && orig.endsWith(dest);
};

/**
 * Fetch function
 *
 * @param   Mixed    url   Absolute url or Request instance
 * @param   Object   opts  Fetch options
 * @return  Promise
 */
function fetch(url, opts) {

	// allow custom promise
	if (!fetch.Promise) {
		throw new Error('native promise missing, set fetch.Promise to your favorite alternative');
	}

	Body.Promise = fetch.Promise;

	// wrap http.request into fetch
	return new fetch.Promise(function (resolve, reject) {
		// build request object
		const request = new Request(url, opts);
		const options = getNodeRequestOptions(request);

		const send = (options.protocol === 'https:' ? https__WEBPACK_IMPORTED_MODULE_4__ : http__WEBPACK_IMPORTED_MODULE_1__).request;
		const signal = request.signal;

		let response = null;

		const abort = function abort() {
			let error = new AbortError('The user aborted a request.');
			reject(error);
			if (request.body && request.body instanceof stream__WEBPACK_IMPORTED_MODULE_0__.Readable) {
				request.body.destroy(error);
			}
			if (!response || !response.body) return;
			response.body.emit('error', error);
		};

		if (signal && signal.aborted) {
			abort();
			return;
		}

		const abortAndFinalize = function abortAndFinalize() {
			abort();
			finalize();
		};

		// send request
		const req = send(options);
		let reqTimeout;

		if (signal) {
			signal.addEventListener('abort', abortAndFinalize);
		}

		function finalize() {
			req.abort();
			if (signal) signal.removeEventListener('abort', abortAndFinalize);
			clearTimeout(reqTimeout);
		}

		if (request.timeout) {
			req.once('socket', function (socket) {
				reqTimeout = setTimeout(function () {
					reject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));
					finalize();
				}, request.timeout);
			});
		}

		req.on('error', function (err) {
			reject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));
			finalize();
		});

		req.on('response', function (res) {
			clearTimeout(reqTimeout);

			const headers = createHeadersLenient(res.headers);

			// HTTP fetch step 5
			if (fetch.isRedirect(res.statusCode)) {
				// HTTP fetch step 5.2
				const location = headers.get('Location');

				// HTTP fetch step 5.3
				let locationURL = null;
				try {
					locationURL = location === null ? null : new URL$1(location, request.url).toString();
				} catch (err) {
					// error here can only be invalid URL in Location: header
					// do not throw when options.redirect == manual
					// let the user extract the errorneous redirect URL
					if (request.redirect !== 'manual') {
						reject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));
						finalize();
						return;
					}
				}

				// HTTP fetch step 5.5
				switch (request.redirect) {
					case 'error':
						reject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));
						finalize();
						return;
					case 'manual':
						// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.
						if (locationURL !== null) {
							// handle corrupted header
							try {
								headers.set('Location', locationURL);
							} catch (err) {
								// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request
								reject(err);
							}
						}
						break;
					case 'follow':
						// HTTP-redirect fetch step 2
						if (locationURL === null) {
							break;
						}

						// HTTP-redirect fetch step 5
						if (request.counter >= request.follow) {
							reject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));
							finalize();
							return;
						}

						// HTTP-redirect fetch step 6 (counter increment)
						// Create a new Request object.
						const requestOpts = {
							headers: new Headers(request.headers),
							follow: request.follow,
							counter: request.counter + 1,
							agent: request.agent,
							compress: request.compress,
							method: request.method,
							body: request.body,
							signal: request.signal,
							timeout: request.timeout,
							size: request.size
						};

						if (!isDomainOrSubdomain(request.url, locationURL)) {
							for (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {
								requestOpts.headers.delete(name);
							}
						}

						// HTTP-redirect fetch step 9
						if (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {
							reject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));
							finalize();
							return;
						}

						// HTTP-redirect fetch step 11
						if (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {
							requestOpts.method = 'GET';
							requestOpts.body = undefined;
							requestOpts.headers.delete('content-length');
						}

						// HTTP-redirect fetch step 15
						resolve(fetch(new Request(locationURL, requestOpts)));
						finalize();
						return;
				}
			}

			// prepare response
			res.once('end', function () {
				if (signal) signal.removeEventListener('abort', abortAndFinalize);
			});
			let body = res.pipe(new PassThrough$1());

			const response_options = {
				url: request.url,
				status: res.statusCode,
				statusText: res.statusMessage,
				headers: headers,
				size: request.size,
				timeout: request.timeout,
				counter: request.counter
			};

			// HTTP-network fetch step 12.1.1.3
			const codings = headers.get('Content-Encoding');

			// HTTP-network fetch step 12.1.1.4: handle content codings

			// in following scenarios we ignore compression support
			// 1. compression support is disabled
			// 2. HEAD request
			// 3. no Content-Encoding header
			// 4. no content response (204)
			// 5. content not modified response (304)
			if (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {
				response = new Response(body, response_options);
				resolve(response);
				return;
			}

			// For Node v6+
			// Be less strict when decoding compressed responses, since sometimes
			// servers send slightly invalid responses that are still accepted
			// by common browsers.
			// Always using Z_SYNC_FLUSH is what cURL does.
			const zlibOptions = {
				flush: zlib__WEBPACK_IMPORTED_MODULE_5__.Z_SYNC_FLUSH,
				finishFlush: zlib__WEBPACK_IMPORTED_MODULE_5__.Z_SYNC_FLUSH
			};

			// for gzip
			if (codings == 'gzip' || codings == 'x-gzip') {
				body = body.pipe(zlib__WEBPACK_IMPORTED_MODULE_5__.createGunzip(zlibOptions));
				response = new Response(body, response_options);
				resolve(response);
				return;
			}

			// for deflate
			if (codings == 'deflate' || codings == 'x-deflate') {
				// handle the infamous raw deflate response from old servers
				// a hack for old IIS and Apache servers
				const raw = res.pipe(new PassThrough$1());
				raw.once('data', function (chunk) {
					// see http://stackoverflow.com/questions/37519828
					if ((chunk[0] & 0x0F) === 0x08) {
						body = body.pipe(zlib__WEBPACK_IMPORTED_MODULE_5__.createInflate());
					} else {
						body = body.pipe(zlib__WEBPACK_IMPORTED_MODULE_5__.createInflateRaw());
					}
					response = new Response(body, response_options);
					resolve(response);
				});
				return;
			}

			// for br
			if (codings == 'br' && typeof zlib__WEBPACK_IMPORTED_MODULE_5__.createBrotliDecompress === 'function') {
				body = body.pipe(zlib__WEBPACK_IMPORTED_MODULE_5__.createBrotliDecompress());
				response = new Response(body, response_options);
				resolve(response);
				return;
			}

			// otherwise, use response as-is
			response = new Response(body, response_options);
			resolve(response);
		});

		writeToStream(req, request);
	});
}
/**
 * Redirect code matching
 *
 * @param   Number   code  Status code
 * @return  Boolean
 */
fetch.isRedirect = function (code) {
	return code === 301 || code === 302 || code === 303 || code === 307 || code === 308;
};

// expose Promise
fetch.Promise = global.Promise;

/* harmony default export */ __webpack_exports__["a"] = (fetch);



/***/ }),
/* 326 */
/***/ (function(module, exports) {

/**
 * Converts `map` to its key-value pairs.
 *
 * @private
 * @param {Object} map The map to convert.
 * @returns {Array} Returns the key-value pairs.
 */
function mapToArray(map) {
  var index = -1,
      result = Array(map.size);

  map.forEach(function(value, key) {
    result[++index] = [key, value];
  });
  return result;
}

module.exports = mapToArray;


/***/ }),
/* 327 */
/***/ (function(module, exports, __webpack_require__) {

var castPath = __webpack_require__(74),
    last = __webpack_require__(267),
    parent = __webpack_require__(572),
    toKey = __webpack_require__(71);

/**
 * The base implementation of `_.unset`.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {Array|string} path The property path to unset.
 * @returns {boolean} Returns `true` if the property is deleted, else `false`.
 */
function baseUnset(object, path) {
  path = castPath(path, object);
  object = parent(object, path);
  return object == null || delete object[toKey(last(path))];
}

module.exports = baseUnset;


/***/ }),
/* 328 */
/***/ (function(module, exports, __webpack_require__) {

var toFinite = __webpack_require__(458);

/**
 * Converts `value` to an integer.
 *
 * **Note:** This method is loosely based on
 * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted integer.
 * @example
 *
 * _.toInteger(3.2);
 * // => 3
 *
 * _.toInteger(Number.MIN_VALUE);
 * // => 0
 *
 * _.toInteger(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toInteger('3.2');
 * // => 3
 */
function toInteger(value) {
  var result = toFinite(value),
      remainder = result % 1;

  return result === result ? (remainder ? result - remainder : result) : 0;
}

module.exports = toInteger;


/***/ }),
/* 329 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var hasSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol';

var isPrimitive = __webpack_require__(704);
var isCallable = __webpack_require__(197);
var isDate = __webpack_require__(705);
var isSymbol = __webpack_require__(706);

var ordinaryToPrimitive = function OrdinaryToPrimitive(O, hint) {
	if (typeof O === 'undefined' || O === null) {
		throw new TypeError('Cannot call method on ' + O);
	}
	if (typeof hint !== 'string' || (hint !== 'number' && hint !== 'string')) {
		throw new TypeError('hint must be "string" or "number"');
	}
	var methodNames = hint === 'string' ? ['toString', 'valueOf'] : ['valueOf', 'toString'];
	var method, result, i;
	for (i = 0; i < methodNames.length; ++i) {
		method = O[methodNames[i]];
		if (isCallable(method)) {
			result = method.call(O);
			if (isPrimitive(result)) {
				return result;
			}
		}
	}
	throw new TypeError('No default value');
};

var GetMethod = function GetMethod(O, P) {
	var func = O[P];
	if (func !== null && typeof func !== 'undefined') {
		if (!isCallable(func)) {
			throw new TypeError(func + ' returned for property ' + P + ' of object ' + O + ' is not a function');
		}
		return func;
	}
	return void 0;
};

// http://www.ecma-international.org/ecma-262/6.0/#sec-toprimitive
module.exports = function ToPrimitive(input) {
	if (isPrimitive(input)) {
		return input;
	}
	var hint = 'default';
	if (arguments.length > 1) {
		if (arguments[1] === String) {
			hint = 'string';
		} else if (arguments[1] === Number) {
			hint = 'number';
		}
	}

	var exoticToPrim;
	if (hasSymbols) {
		if (Symbol.toPrimitive) {
			exoticToPrim = GetMethod(input, Symbol.toPrimitive);
		} else if (isSymbol(input)) {
			exoticToPrim = Symbol.prototype.valueOf;
		}
	}
	if (typeof exoticToPrim !== 'undefined') {
		var result = exoticToPrim.call(input, hint);
		if (isPrimitive(result)) {
			return result;
		}
		throw new TypeError('unable to convert exotic object to primitive');
	}
	if (hint === 'default' && (isDate(input) || isSymbol(input))) {
		hint = 'string';
	}
	return ordinaryToPrimitive(input, hint === 'default' ? 'number' : hint);
};


/***/ }),
/* 330 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var callBound = __webpack_require__(24);
var GetIntrinsic = __webpack_require__(23);
var isRegex = __webpack_require__(708);

var $exec = callBound('RegExp.prototype.exec');
var $TypeError = GetIntrinsic('%TypeError%');

module.exports = function regexTester(regex) {
	if (!isRegex(regex)) {
		throw new $TypeError('`regex` must be a RegExp');
	}
	return function test(s) {
		return $exec(regex, s) !== null;
	};
};


/***/ }),
/* 331 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var strValue = String.prototype.valueOf;
var tryStringObject = function tryStringObject(value) {
	try {
		strValue.call(value);
		return true;
	} catch (e) {
		return false;
	}
};
var toStr = Object.prototype.toString;
var strClass = '[object String]';
var hasToStringTag = __webpack_require__(196)();

module.exports = function isString(value) {
	if (typeof value === 'string') {
		return true;
	}
	if (typeof value !== 'object') {
		return false;
	}
	return hasToStringTag ? tryStringObject(value) : toStr.call(value) === strClass;
};


/***/ }),
/* 332 */
/***/ (function(module, exports) {

module.exports = function properlyBoxed(method) {
	// Check node 0.6.21 bug where third parameter is not boxed
	var properlyBoxesNonStrict = true;
	var properlyBoxesStrict = true;
	var threwException = false;
	if (typeof method === 'function') {
		try {
			// eslint-disable-next-line max-params
			method.call('f', function (_, __, O) {
				if (typeof O !== 'object') {
					properlyBoxesNonStrict = false;
				}
			});

			method.call(
				[null],
				function () {
					'use strict';

					properlyBoxesStrict = typeof this === 'string'; // eslint-disable-line no-invalid-this
				},
				'x'
			);
		} catch (e) {
			threwException = true;
		}
		return !threwException && properlyBoxesNonStrict && properlyBoxesStrict;
	}
	return false;
};


/***/ }),
/* 333 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var __DEV__ = "production" !== 'production';

var warning = function() {};

if (__DEV__) {
  var printWarning = function printWarning(format, args) {
    var len = arguments.length;
    args = new Array(len > 1 ? len - 1 : 0);
    for (var key = 1; key < len; key++) {
      args[key - 1] = arguments[key];
    }
    var argIndex = 0;
    var message = 'Warning: ' +
      format.replace(/%s/g, function() {
        return args[argIndex++];
      });
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  }

  warning = function(condition, format, args) {
    var len = arguments.length;
    args = new Array(len > 2 ? len - 2 : 0);
    for (var key = 2; key < len; key++) {
      args[key - 2] = arguments[key];
    }
    if (format === undefined) {
      throw new Error(
          '`warning(condition, format, ...args)` requires a warning ' +
          'message argument'
      );
    }
    if (!condition) {
      printWarning.apply(null, [format].concat(args));
    }
  };
}

module.exports = warning;


/***/ }),
/* 334 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export findClosestStartAndEndContactsAddress */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return findMatchingStartAndEnd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return findMatchingContactAddressForTimeserie; });
/* harmony import */ var src_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var src_lib_timeseries__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(55);
/* harmony import */ var cozy_client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(4);
/* harmony import */ var cozy_client__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(cozy_client__WEBPACK_IMPORTED_MODULE_2__);



const {
  geodesicDistance
} = cozy_client__WEBPACK_IMPORTED_MODULE_2__["models"].geo;

/**
 * @typedef {import('./types').TimeseriesGeoJSON} TimeSerie
 * @typedef {import('./types').Contact} Contact
 * @typedef {import('./types').Address} Address
 */

/**
 * Find the closest addresses related to a start and end place
 *
 * @typedef StartAndEndClosestAddress
 * @property {Address} matchingStart
 * @property {Address} matchingEnd
 *
 * @param {TimeSerie} timeserie - The timeserie with start and end place coordinates
 * @param {Array<Contact>} contacts - The list of contacts to search for an address
 * @returns {StartAndEndClosestAddress} The closest addresses for start and end place
 */
const findClosestStartAndEndContactsAddress = (timeserie, contacts) => {
  const startCoordinates = Object(src_lib_timeseries__WEBPACK_IMPORTED_MODULE_1__[/* getStartPlaceCoordinates */ "g"])(timeserie);
  const endCoordinates = Object(src_lib_timeseries__WEBPACK_IMPORTED_MODULE_1__[/* getEndPlaceCoordinates */ "d"])(timeserie);
  let closestStart = {},
    closestEnd = {};
  let minStartDistance = Number.MAX_SAFE_INTEGER,
    minEndDistance = Number.MAX_SAFE_INTEGER;
  for (const contact of contacts) {
    for (const address of contact.address) {
      var _address$geo;
      if (!(address !== null && address !== void 0 && (_address$geo = address.geo) !== null && _address$geo !== void 0 && _address$geo.geo)) {
        continue;
      }
      const addressCoordinates = {
        lon: address.geo.geo[0],
        lat: address.geo.geo[1]
      };
      const startPlaceDistance = geodesicDistance(startCoordinates, addressCoordinates);
      const endPlaceDistance = geodesicDistance(endCoordinates, addressCoordinates);
      if (startPlaceDistance < minStartDistance) {
        closestStart = {
          distance: startPlaceDistance,
          contact,
          address,
          newCoordinates: startCoordinates
        };
        minStartDistance = startPlaceDistance;
      }
      if (endPlaceDistance < minEndDistance) {
        closestEnd = {
          distance: endPlaceDistance,
          contact,
          address,
          newCoordinates: endCoordinates
        };
        minEndDistance = endPlaceDistance;
      }
    }
  }
  return {
    closestStart,
    closestEnd
  };
};

/**
 *
 * For a timeserie, find a matching contact address for start and end place.
 * A matching address has the closest coordinates and is below a distance threshold.
 *
 * @typedef StartAndEndMatchingAddress
 * @property {Address} matchingStart
 * @property {Address} matchingEnd
 *
 * @param {TimeSerie} timeserie - The timeserie with start and end place coordinates
 * @param {Array<Contact>} contacts - The list of contacts to search for an address
 * @returns {StartAndEndMatchingAddress} The matching start and end addresses
 */
const findMatchingStartAndEnd = (timeserie, contacts) => {
  const {
    closestStart,
    closestEnd
  } = findClosestStartAndEndContactsAddress(timeserie, contacts);
  let matchingStart = null,
    matchingEnd = null;
  if ((closestStart === null || closestStart === void 0 ? void 0 : closestStart.distance) < src_constants__WEBPACK_IMPORTED_MODULE_0__[/* COORDINATES_DISTANCE_THRESHOLD_M */ "z"]) {
    matchingStart = closestStart;
  }
  if ((closestEnd === null || closestEnd === void 0 ? void 0 : closestEnd.distance) < src_constants__WEBPACK_IMPORTED_MODULE_0__[/* COORDINATES_DISTANCE_THRESHOLD_M */ "z"]) {
    matchingEnd = closestEnd;
  }
  return {
    matchingStart,
    matchingEnd
  };
};

/**
 *
 * Try to find a contact address matching the given timeserie start or end place.
 *
 * @typedef {Object} params
 * @property {TimeSerie} - The timeserie to extract start and end coordinates
 * @property {Contact} - The contact containing the address to find a matching
 * @property {startOrEnd} - Either 'start' or 'end'. Specifiy if it should find a matching on the trip start or end
 * @param Params
 * @returns { Address} - The matching contact address
 */
const findMatchingContactAddressForTimeserie = ({
  timeserie,
  contact,
  startOrEnd
}) => {
  const {
    matchingStart,
    matchingEnd
  } = findMatchingStartAndEnd(timeserie, [contact]);
  if (startOrEnd === 'start') {
    return (matchingStart === null || matchingStart === void 0 ? void 0 : matchingStart.address) || null;
  } else if (startOrEnd === 'end') {
    return (matchingEnd === null || matchingEnd === void 0 ? void 0 : matchingEnd.address) || null;
  }
  return null;
};

/***/ }),
/* 335 */,
/* 336 */,
/* 337 */,
/* 338 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Transform = __webpack_require__(34),
    Filter = __webpack_require__(745);

var log = new Transform(),
    slice = Array.prototype.slice;

exports = module.exports = function create(name) {
  var o = function o() {
    log.write(name, undefined, slice.call(arguments));
    return o;
  };

  o.debug = function () {
    log.write(name, 'debug', slice.call(arguments));
    return o;
  };

  o.info = function () {
    log.write(name, 'info', slice.call(arguments));
    return o;
  };

  o.warn = function () {
    log.write(name, 'warn', slice.call(arguments));
    return o;
  };

  o.error = function () {
    log.write(name, 'error', slice.call(arguments));
    return o;
  };

  o.group = function () {
    log.write(name, 'group', slice.call(arguments));
    return o;
  };

  o.groupEnd = function () {
    log.write(name, 'groupEnd', slice.call(arguments));
    return o;
  };

  o.log = o.debug; // for interface compliance with Node and browser consoles

  o.suggest = exports.suggest;
  o.format = log.format;
  return o;
}; // filled in separately


exports.defaultBackend = exports.defaultFormatter = null;

exports.pipe = function (dest) {
  return log.pipe(dest);
};

exports.end = exports.unpipe = exports.disable = function (from) {
  return log.unpipe(from);
};

exports.Transform = Transform;
exports.Filter = Filter; // this is the default filter that's applied when .enable() is called normally
// you can bypass it completely and set up your own pipes

exports.suggest = new Filter();

exports.enable = function () {
  if (exports.defaultFormatter) {
    return log.pipe(exports.suggest) // filter
    .pipe(exports.defaultFormatter) // formatter
    .pipe(exports.defaultBackend); // backend
  }

  return log.pipe(exports.suggest) // filter
  .pipe(exports.defaultBackend); // formatter
};

/***/ }),
/* 339 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var hex = {
  black: '#000',
  red: '#c23621',
  green: '#25bc26',
  yellow: '#bbbb00',
  blue: '#492ee1',
  magenta: '#d338d3',
  cyan: '#33bbc8',
  gray: '#808080',
  purple: '#708'
};

function color(fg, isInverse) {
  if (isInverse) {
    return 'color: #fff; background: ' + hex[fg] + ';';
  } else {
    return 'color: ' + hex[fg] + ';';
  }
}

module.exports = color;

/***/ }),
/* 340 */
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./en": 341,
	"./en.json": 341,
	"./fr": 342,
	"./fr.json": 342
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 340;

/***/ }),
/* 341 */
/***/ (function(module) {

module.exports = JSON.parse("{\"nav\":{\"trips\":\"Trips\",\"analysis\":\"Analysis\",\"modes\":\"Modes of transport\",\"purposes\":\"Purposes of travel\",\"settings\":\"Settings\"},\"folder\":{\"administrative\":\"Administrative\",\"coachco2\":\"Coach CO2\"},\"devices\":{\"select\":\"Select a device\",\"label\":\"Data source\"},\"settings\":{\"allAccounts\":\"All sources\",\"debug\":\"Demo & debug mode\",\"services\":\"Services\"},\"trips\":{\"allTrips\":\"All trips\",\"trips\":\"Trips\",\"from\":\"Trips from\",\"departure\":\"Departure\",\"arrival\":\"Arrival\",\"submit\":\"Save\",\"cancel\":\"Cancel\",\"customLabel\":\"Custom label\",\"modes\":{\"default\":\"default\",\"AIR_OR_HSR\":\"Plane\",\"BICYCLING_ELECTRIC\":\"Electric bike\",\"BICYCLING\":\"Bike\",\"BUS_ELECTRIC\":\"Electric bus\",\"BUS\":\"Bus\",\"CAR_ELECTRIC\":\"Electric car\",\"CAR\":\"Car\",\"IN_VEHICLE\":\"Vehicle\",\"CARPOOL_ELECTRIC\":\"Electric carpooling\",\"CARPOOL\":\"Carpooling\",\"MOTO_INF_250\":\"Moto < 250cm3\",\"MOTO_SUP_250\":\"Moto > 250cm3\",\"SCOOTER_ELECTRIC\":\"Electric scooter\",\"MOPED\":\"Moped\",\"SUBWAY\":\"Subway\",\"TRAIN\":\"Train\",\"TRAMWAY\":\"Tramway\",\"UNKNOWN\":\"Unknown\",\"WALKING\":\"Walking\",\"ON_FOOT\":\"Walking\",\"RUNNING\":\"Running\",\"categories\":{\"BICYCLING_CATEGORY\":\"Bike, scooter\",\"CAR_CATEGORY\":\"Car, motorcycle, moped\",\"PUBLIC_TRANSPORT_CATEGORY\":\"Transports en commun\"}},\"purposes\":{\"COMMUTE\":\"Going to or from work\",\"WORK\":\"Profressional travel\",\"SHOPPING\":\"Going shopping\",\"PERSONAL_MED\":\"Personal travel\",\"PICK_DROP\":\"Pick & drop someone\",\"SPORT\":\"Going to or from sport\",\"EXERCISE\":\"Physical activity / sport\",\"ENTERTAINMENT\":\"Going out, leisure\",\"TRAVEL\":\"Travel\",\"OTHER_PURPOSE\":\"Unknown\"},\"duration\":\"Duration\",\"distance\":\"Distance\",\"calories\":\"Calories\",\"co2\":\"CO2\"},\"contactToPlace\":{\"saveStartPlace\":\"Save the starting point?\",\"saveEndPlace\":\"Save the arrival point?\",\"tooltip\":\"Saving this address will enable you to find it in similar trips and help categorise them automatically.\",\"submit\":\"Save\",\"delete\":\"Delete\",\"cancel\":\"Cancel\",\"dismiss\":\"No, thanks\",\"contact\":\"Save as contact\",\"label\":\"Label\",\"noLabel\":\"No label\",\"custom\":\"Customised\",\"customLabel\":\"Custom label\",\"home\":\"Home\",\"work\":\"Work\",\"pro\":\"Pro\",\"perso\":\"Perso\",\"error\":\"Specify which contact to save the address under\",\"addSuccess\":\"The addresses have been registered\",\"removeSuccess\":\"The addresses have been deleted\",\"atHome\":\"At home\",\"lat\":\"lat.\",\"long\":\"long.\"},\"loadMore\":\"Load more trips\",\"tripEdit\":{\"selectMode\":\"Modify the transportation mode\",\"modeTooltip\":\"The CO2 values in grams per kilometre (g/km) displayed may not always be representative of reality and may vary. It is important to take the CO2 values displayed with caution and to consider them as a general indication rather than an accurate representation of reality. Driving conditions, driver behaviour and other factors can lead to significant variations from the laboratory values, making it difficult to make a true comparison between different vehicles in terms of CO2 emissions.\",\"selectPurpose\":\"Modify the travel purpose\"},\"purpose\":\"Reason for travel\",\"recurring\":{\"title\":\"Recurrence\",\"text\":\"Automatically apply this pattern to similar moves\"},\"analysis\":{\"mode\":\"CO2 emissions\",\"purpose\":\"CO2 emissions\",\"travels\":\"%{smart_count} travel |||| %{smart_count} travel\",\"allYear\":\"All year\",\"emittedCO2\":\"emitted CO2\"},\"support\":{\"label\":\"Support\",\"problem\":\"A problem?\",\"consult\":{\"text\":\"Consult our\",\"link\":\"Geolocation FAQ\"}},\"export\":{\"filename\":\"%{today} - Trips %{accountLabel}.csv\",\"button\":\"Export trips in CSV\",\"modal\":{\"button\":{\"close\":\"Close\",\"viewInDrive\":\"View in Drive\"},\"title\":\"Exporting\",\"content\":{\"done\":\"The \\\"%{filename}\\\" file was created in the \\\"Drive%{pathAppDir}\\\" folder of your Cozy.\",\"progress\":\"The export of your trips is in progress, please wait...\"}}},\"emptyContent\":{\"welcome\":{\"title\":\"Welcome to your CO2 Coach\",\"text\":\"Let's improve our region together.\\n\\nThis application will allow you to record all your journeys, to understand their impact in terms of CO2 emissions, to compare yourself with the average user, and so on..\",\"textA\":\"This application, available free of charge for %{maxDaysToCapture} days as part of your package, will enable you to record all your journeys, understand their impact in terms of CO2 emissions, track your eligibility for the cycle allowance, compare yourself with the average user, and so on.\",\"textB\":\"This application, which is included in your Cozy package, will enable you to record all your journeys, understand their impact in terms of CO2 emissions, track your eligibility for the cycle allowance, compare yourself with the average user, and so on.\",\"textC\":\"Let's improve our region together.\\n\\nThis application, which is made available to you by your %{sourceType} %{sourceName}, will enable you to record all your journeys, understand their impact in terms of CO2 emissions, keep track of your bike journeys, and so on.\",\"textD\":\"This application, which is currently in the experimental phase, will enable you to record all your journeys, understand their impact in terms of CO2 emissions, and notify you as soon as you are eligible for your %{sourceType} %{sourceName} cycling allowance, etc.\",\"action\":\"Let's go!\"},\"installApp\":{\"title\":\"Detect your movements\\nusing your phone\",\"text\":\"Install the Cozy Cloud application on your mobile phone to record all your journeys, understand their impact in terms of CO2 emissions, keep track of your journeys by bike, etc.\",\"action\":\"Install the app\"},\"GPSStandby\":{\"title\":\"Location detected\",\"text\":\"Your first trip will be posted here a few hours after you make it.\"},\"changeAccount\":{\"title\":\"No travel\",\"text\":\"No travel has yet been detected from the selected data source.\",\"action\":\"Changing the data source\"}},\"manifest\":{\"short_description\":\"Keep track of your trips and analyze their impact on the environment.\",\"long_description\":\"If you happen to be looking for answers to some of these questions:\\n- How far have I travelled **on foot** this week?\\n- If I bought an **electric** car, what would be the impact on my fuel bill?\\n- Would it make sense for me to **lease a car instead of owning one**, given my actual usage?\\n- How can I **find the start of this enchanting path** that I found by chance two years ago?\\n- How much do **my air travel** represent in my annual CO2 emissions?\\n- How many **home/work trips** have I made by bike this year?\\n- What if I kept an **accurate history of** all the places I visited during **my travels?**?\\n- As a company, how can I make **my bike allowance** (SMP) more effective?\\n\\n... then the CoachCO2 application can provide you with some answers! It will also help you to **awareness of the challenges** of mobility, to question your travel habits, and perhaps to find more sustainable alternatives.\\n\\n&nbsp;\\n\\n**What about the confidentiality of my private life?**\\n\\n&nbsp;\\n\\nAs always with your Cozy: **you are by default the only one** with the right to **access your data**. And you can of course also **share them** with whomever you like, for as long as you like.\\n\\n&nbsp;\\n\\n**Can I advance ecomobility by sharing my anomymised data?**\\n\\n&nbsp;\\n\\nYes, as well as helping you to become more aware of your own mobility issues, the aim of the CoachCO2 application is to enable the emergence of new ecomobility offers thanks to studies based on anonymised and previously aggregated data such as distances travelled by means and objectives of transport. Some French **local authorities** are **already working** on this!\\n\\n&nbsp;\\n\\n**And tomorrow ?**\\n\\n&nbsp;\\n\\nThis memory of your trips is stored and secured in your personal cloud in a **standard format that can be reused and exported** as you wish.\\n\\n&nbsp;\\n\\nThe CoachCO2 application itself is regularly enhanced with **new features**. Today it focuses on mobility, but tomorrow other sources of CO2 could extend its scope, such as the energy consumption of your home.\\n\\n&nbsp;\\n\\nTomorrow, new applications will be able to offer you **other uses** thanks to the storage of this precious travel data. For example, you could build your own mapped albums of your travels or favourite activities, and share them with friends and family without having to use social networks.\\n\\n&nbsp;\\n\\n**Acknowledgements and conditions of use**\\n\\n&nbsp;\\n\\nThis application is currently being developed and maintained by Cozy Cloud as a common asset. Launched in 2021 thanks to the agglomeration of **la Rochelle** and its Agremob programme, it was then supported by the department of **Alpes-Maritimes**. You can use it for free if you self-host your Cozy, or buy it from a third party. It is also available as part of the Premium packages hosted by Cozy Cloud (with a 1-month free trial in the discovery package).\",\"permissions\":{\"apps\":{\"description\":\"Required by the cozy-bar to display the icons of the apps\"},\"settings\":{\"description\":\"Required by the cozy-bar to display Claudy and know which applications are coming soon\"},\"accounts\":{\"description\":\"Required to get konnector account\"},\"files\":{\"description\":\"Required to access the files for saved your export of trips\"},\"geojson-timeseries\":{\"description\":\"Required to display geojson timeseries\"},\"coachco2.settings\":{\"description\":\"Used to manage your Coach CO2 settings\"}}},\"dacc\":{\"settings\":{\"anonymous_participation\":\"Participate anonymously in the calculation of average CO2 emissions\",\"showAlerter\":\"Show DACC alerter\"},\"tripsCard\":{\"label\":\"Compare your emissions to the average of other users of the application?\",\"discard\":\"No, thank you\",\"accept\":\"Compare\"},\"compareDialog\":{\"title\":\"Compare anonymously\",\"primaryText\":\"In order to average the emissions of users, and because your Cozy has made a promise to you to never disclose your data without your explicit request, it will ask you for the right to send this data.\",\"secondaryText\":\"This data will be aggregated and anonymous and will not contain any identifiers or locations.\",\"action\":\"I understood\"},\"permissionsDialog\":{\"title\":\"Request for permissions\",\"primaryText\":\"The CO2 Coach application requires the following permissions from your Cozy:\",\"secondaryText\":\"Once authorized, the permissions can be modified in the settings\",\"why_asking\":\"Why ask me for these permissions?\",\"export_outside\":\"Exporting out of Cozy\",\"anonymized_emissions\":\"My anonymized CO2 emissions\",\"anonymized_bikegoal_progression\":\"My anonymized progression\",\"accept\":\"Always allow\",\"refuse\":\"Refuse\"},\"reasonsDialog\":{\"title\":\"Reasons for permissions\",\"content\":\"Because your Cozy has made a promise to you to never disclose your private data, it will always ask you for the right to let an application send it out.\"}},\"vericalBarChart\":{\"title\":\"CO2 emissions\",\"legend\":{\"yours\":\"Your emissions\",\"average\":\"Average users of the app\"}},\"bikeGoal\":{\"title\":\"Bike to work\",\"yearly_goal_progression\":\"%{days}/%{daysToReach} days \\nper year\",\"goal_progression\":\"%{days}/%{daysToReach} days\",\"my_progression\":\"My yearly progression\",\"average_progression\":\"Avg. progress of my organisation\",\"average_progression_noValue\":\"Avg. progress of other users\",\"achievement_certificate\":\"Certificate of achievement\",\"goal\":\"Objective\",\"goals\":\"Objectives\",\"days\":\"days\",\"empty\":{\"title\":\"Your trips eligible for the Bike Goal will be counted and displayed here.\"},\"about\":{\"title\":\"About the goal\",\"intro\":{\"title\":\"Introduction\",\"content\":\"In order to encourage the use of alternative and sustainable modes of transport, the sustainable mobility package came into force on 10 May 2020.\\n\\nEmployees and agents who choose an alternative and sustainable mode of transport for their home-to-work journey will be able to receive a sum from their employer if the latter implements this scheme.\"},\"how_trips_detected\":{\"title\":\"How are my trips detected?\",\"content\":\"Your home-to-work journeys by bike will be automatically detected on the basis of your timetable and your speed.\\n\\nIf a journey is not automatically classified as a “Journey to and from work“, open the details of the journey and change the reason for the journey.\\n\\nIf the mode of transport for a journey is not automatically detected as “bike“, open the journey details and change the mode of transport to “bike“.\"},\"once_goal_reach\":{\"title\":\"What to do once the goal is reached?\",\"optional\":\"Last step\",\"content\":\"Once you've reached your target, you can congratulate yourself! You'll then be able to generate a certificate of honour that you can send to your employer.\"}},\"deactivate\":{\"deactivate\":\"Deactivate\",\"title\":\"Do you really want to stop participating in the goal?\",\"content\":\"You can always choose to participate again from the application settings.\",\"stop_participate\":\"No longer participating\",\"cancel\":\"Cancel\"},\"alert\":{\"success\":{\"text\":\"Congratulations, you have achieved the “Bike to Work” goal 🎉\",\"action\":\"Receive my certificate |||| Benefit from my %{bountyAmount}€ package\"},\"title\":\"Be part of the change: cycle to work!\",\"text\":\"Track your trips and generate a certificate for your employer if they offer the Sustainable Mobility Package (SMP) bonus.\",\"actions\":{\"participate\":\"Participate\",\"discard\":\"No, thank you\"}},\"edit\":{\"modify\":\"Modify\",\"title\":\"Modify the goal\",\"firstname\":\"Firstname\",\"lastname\":\"Lastname\",\"daysToReach\":\"Days to reach\",\"compare_progress\":\"Compare my progress with that of my organisation\",\"compare_progress_noValue\":\"Compare my progress with that of other users\",\"cancel\":\"Cancel\",\"submit\":\"Ok\",\"required\":\"This field is required\"},\"settings\":{\"participation\":\"Participate to the goal “Bike to work”\",\"showAlerter\":\"Bike goal: Show bike goals alerter\",\"hideOnboarding\":\"Bike goal: Hide bike goal onboarding\",\"sendToDACC\":\"Bike goal: activate DACC\",\"showAlerterSuccess\":\"Bike goal: Show the bike goal success alert\"},\"onboarding\":{\"title\":\"Objective: To cycle to work\",\"actions\":{\"finish\":\"Finish\",\"previous\":\"Previous\",\"next\":\"Next\"},\"steps\":{\"naming\":{\"title\":\"Lastname and firstname\",\"nameLegend\":\"Fill in the following details to generate a certificate of achievement in your name:\"},\"daysToReach\":{\"title\":\"Set yourself a goal\",\"legend\":\"Set a number of days for your home-to-work journeys by bike or scooter and track your progress with your CO2 Coach.\\n\\nOnce you've reached your target, you'll receive an alert and a certificate of achievement to send to your employer.\",\"error\":\"Set a more realistic goal. Enter a value greater than 0.\"},\"comparison\":{\"comparisonLegend\":\"You can display the average progress of the members of your organisation %{sourceName} who are participating in the objective. To do this, you will be asked to participate in the creation of this average.\\n\\nYour progress data will be aggregated and sent anonymously, and will not contain any identifiers or locations.\",\"comparisonLegend_noValue\":\"You can display the average progress of the other users who are participating in the objective. To do this, you will be asked to participate in the creation of this average.\\n\\nYour progress data will be aggregated and sent anonymously, and will not contain any identifiers or locations.\",\"compare\":\"Compare my progression\",\"doNotCompare\":\"Do not compare my progression\"}}},\"certificateGeneration\":{\"title\":\"Congratulations, you have achieved the “Bike to Work“ goal\",\"content\":\"A certificate has been generated to certify your success for %{year}. Email it to your employer now. |||| A certificate has been generated as proof of your success for the year %{year}. Forward it now by email to your employer to receive %{bountyAmount}€ !\",\"actions\":{\"show\":\"Certificate - Bike to work.pdf\",\"generate\":\"Generate a certificate\",\"regenerate\":\"Generate a new certificate\",\"understood\":\"Understood\"}}},\"geolocationTracking\":{\"tooltip\":{\"title\":\"Your new trips are not saved\",\"text\":\"Automatically record all your movements and discover your carbon footprint.\",\"action\":\"Configure\"},\"locationRefusedDialog\":{\"description\":\"Your Cozy needs access to additional data in order to help you analyze your movements. This data will NEVER be transmitted to anyone without your explicit request.\\n\\nYou will be redirected to the app's settings to authorize it to ALWAYS access your phone's position, even when the app is not in use, and PHYSICAL ACTIVITY, movement and shape data..\"},\"locationDisabledDialog\":{\"title\":\"Enable Location Services and Fitness Tracking\",\"description\":\"To record your movements, you must first activate:\",\"locationService\":\"- Location Services in Settings > Privacy & Security > Location Services\",\"motionService\":\"- Fitness Tracking in Settings > Privacy & Security > Motion & Fitness\"},\"settings\":{\"enable\":\"Record my movements with my mobile (GPS)\",\"sendLogs\":\"Send application logs to the support\",\"forceUploadData\":\"Force Upload Data\",\"copyIdentifier\":\"Copy OpenPATH Identifier\",\"createdOn\":\"created on\"},\"notifications\":{\"quotaExpired\":{\"title\":\"Journey recording disabled\",\"content\":\"You have reached the limit of %{maxDaysToCapture} days of journeys included in your offer.\"},\"quotaAlmostExpired\":{\"title\":\"Journey recording\",\"content\":\"You have almost reached the limit of %{maxDaysToCapture} days of journeys included in your offer.\"}}},\"Modes\":{\"DefaultDialog\":{\"primary\":\"Set as default transport for this category?\",\"secondary\":\"The transport mode will automatically be selected as default for all future trips detected for this transport type.\",\"actions\":{\"save\":\"Save\",\"cancel\":\"Cancel\"}}},\"PDF\":{\"name\":\"Certificate - Cycling to work (%{year}).pdf\",\"title\":\"Certificate on honor\\n of the success of the objective\\n of the Sustainable Mobility Package\",\"date\":\"%{currentDateFormatted} at %{currentTimeFormatted}\",\"recipient\":\"Employer : %{sourceName}\",\"paragraph01\":\"I, %{username}, certify on my honor that I have achieved the %{daysToReach} days sustainable mobility package objective by traveling from home to work by bike from January 1 to %{year}.\",\"paragraph02\":\"In addition to this certificate, I provide my employer with any useful proof of actual use of the bicycle, such as invoice or payment statements, insurance or maintenance of my bicycle.\",\"paragraph03\":\"Made to serve and assert what is right.\",\"signature\":\"Signature : %{username}\"},\"centreValDeLoireExpe\":{\"settings\":{\"sendToDACC\":\"Participate in the region’s Mobile CVL experiment\"}}}");

/***/ }),
/* 342 */
/***/ (function(module) {

module.exports = JSON.parse("{\"nav\":{\"trips\":\"Déplacements\",\"analysis\":\"Analyses\",\"modes\":\"Modes de transport\",\"purposes\":\"Motifs de déplacement\",\"settings\":\"Paramètres\"},\"folder\":{\"administrative\":\"Administratif\",\"coachco2\":\"Coach CO2\"},\"devices\":{\"select\":\"Sélectionnez un appareil\",\"label\":\"Source des données\"},\"settings\":{\"allAccounts\":\"Toutes les sources\",\"debug\":\"Mode démo & débug\",\"services\":\"Services\"},\"trips\":{\"allTrips\":\"Tous les déplacements\",\"trips\":\"Déplacements\",\"from\":\"Déplacements de\",\"departure\":\"Départ\",\"arrival\":\"Arrivée\",\"submit\":\"Enregistrer\",\"cancel\":\"Annuler\",\"customLabel\":\"Libellé personnalisé\",\"modes\":{\"default\":\"défaut\",\"AIR_OR_HSR\":\"Avion\",\"BICYCLING_ELECTRIC\":\"Vélo électrique\",\"BICYCLING\":\"Vélo\",\"BUS_ELECTRIC\":\"Bus électrique\",\"BUS\":\"Bus\",\"CAR_ELECTRIC\":\"Voiture électrique\",\"CAR\":\"Voiture\",\"IN_VEHICLE\":\"Véhicule\",\"CARPOOL_ELECTRIC\":\"Covoiturage électrique\",\"CARPOOL\":\"Covoiturage\",\"MOTO_INF_250\":\"Moto < 250cm3\",\"MOTO_SUP_250\":\"Moto > 250cm3\",\"SCOOTER_ELECTRIC\":\"Trottinette électrique\",\"MOPED\":\"Cyclomoteur\",\"SUBWAY\":\"Métro\",\"TRAIN\":\"Train\",\"TRAMWAY\":\"Tramway\",\"UNKNOWN\":\"Non reconnu\",\"WALKING\":\"Marche\",\"ON_FOOT\":\"Marche\",\"RUNNING\":\"Course\",\"categories\":{\"BICYCLING_CATEGORY\":\"Vélo, trotinette\",\"CAR_CATEGORY\":\"Voiture, moto, scooter\",\"PUBLIC_TRANSPORT_CATEGORY\":\"Transports en commun\"}},\"purposes\":{\"COMMUTE\":\"Aller-retour au travail\",\"WORK\":\"Déplacement professionel\",\"SHOPPING\":\"Aller faire les courses\",\"PERSONAL_MED\":\"Déplacement personnel\",\"PICK_DROP\":\"Déposer quelqu'un\",\"SPORT\":\"Aller-retour au sport\",\"EXERCISE\":\"Activité physique / sportive\",\"ENTERTAINMENT\":\"Sortie, loisirs\",\"TRAVEL\":\"Voyage\",\"OTHER_PURPOSE\":\"Indéfini\"},\"duration\":\"Durée\",\"distance\":\"Distance\",\"calories\":\"Calories\",\"co2\":\"CO2\"},\"contactToPlace\":{\"saveStartPlace\":\"Enregistrer le point de départ ?\",\"saveEndPlace\":\"Enregistrer le point d'arrivée ?\",\"tooltip\":\"Enregistrer cette adresse vous permettra de la retrouver dans des déplacements similaires et d'aider à leur catégorisation automatique.\",\"submit\":\"Enregistrer\",\"delete\":\"Supprimer\",\"cancel\":\"Annuler\",\"dismiss\":\"Non, merci\",\"contact\":\"Enregistrer dans une fiche contact\",\"label\":\"Libellé\",\"noLabel\":\"Aucun libellé\",\"custom\":\"Personnalisé\",\"customLabel\":\"Libellé personnalisé\",\"home\":\"Domicile\",\"work\":\"Travail\",\"pro\":\"Pro\",\"perso\":\"Perso\",\"error\":\"Préciser sous quel contact enregistrer l'adresse\",\"addSuccess\":\"Les adresses ont bien été enregistrées\",\"removeSuccess\":\"Les adresses ont bien été supprimées\",\"atHome\":\"Chez moi\",\"lat\":\"lat.\",\"long\":\"long.\"},\"loadMore\":\"Charger plus de trajets\",\"tripEdit\":{\"selectMode\":\"Modifier le mode de transport\",\"modeTooltip\":\"Les valeurs de CO2 en grammes par kilomètre (g/km) affichées peuvent parfois ne pas être représentatives de la réalité et peuvent varier. Il est important de prendre les valeurs de CO2 affichées avec précaution et de les considérer comme une indication générale plutôt qu'une représentation précise de la réalité. Les conditions de conduite, le comportement du conducteur et d'autres facteurs peuvent entraîner des variations significatives par rapport aux valeurs de laboratoire, ce qui rend difficile la comparaison réelle entre différents véhicules en termes d'émissions de CO2.\",\"selectPurpose\":\"Modifier le motif du déplacement\"},\"purpose\":\"Motif du déplacement\",\"recurring\":{\"title\":\"Récurrence\",\"text\":\"Appliquer automatiquement ce motif aux déplacements similaires\"},\"analysis\":{\"mode\":\"Émissions de CO2\",\"purpose\":\"Émissions de CO2\",\"travels\":\"%{smart_count} déplacement |||| %{smart_count} déplacements\",\"allYear\":\"Toute l'année\",\"emittedCO2\":\"CO2 émis\"},\"support\":{\"label\":\"Support\",\"problem\":\"Un problème ?\",\"consult\":{\"text\":\"Consulter notre\",\"link\":\"FAQ de géolocalisation\"}},\"export\":{\"filename\":\"%{today} - Déplacements %{accountLabel}.csv\",\"button\":\"Exporter les déplacements en CSV\",\"modal\":{\"button\":{\"close\":\"Fermer\",\"viewInDrive\":\"Voir dans Drive\"},\"title\":\"Exportation\",\"content\":{\"done\":\"Le fichier \\\"%{filename}\\\" a été créé dans le dossier \\\"Drive%{pathAppDir}\\\" de votre Cozy.\",\"progress\":\"L’export de vos déplacements est en cours, merci de patienter...\"}}},\"emptyContent\":{\"welcome\":{\"title\":\"Bienvenue sur votre Coach CO2\",\"text\":\"Améliorons ensemble notre territoire.\\n\\nCette application vous permettra d’enregistrer tous vos déplacements, d’en comprendre l’impact en émission de CO2, de vous comparer avec la moyenne des utilisateurs, etc.\",\"textA\":\"Cette application, disponible gratuitement pendant %{maxDaysToCapture} jours dans votre offre, vous permettra d'enregistrer tous vos déplacements, d'en comprendre l'impact en émission de CO2, de suivre votre éligibilité à la prime vélo, de vous comparer avec la moyenne des utilisateurs, etc.\",\"textB\":\"Cette application, incluse dans l'offre de votre Cozy, vous permettra d'enregistrer tous vos déplacements, d'en comprendre l'impact en émission de CO2, de suivre votre éligibilité à la prime vélo, de vous comparer avec la moyenne des utilisateurs, etc.\",\"textC\":\"Améliorons ensemble notre territoire.\\n\\nCette application, dont l'usage vous est offert par votre %{sourceType} %{sourceName}, vous permettra d'enregistrer tous vos déplacements, d'en comprendre l'impact en émission de CO2, de comptabiliser vos trajets en vélo, etc.\",\"textD\":\"Cette application en phase expérimentale vous permettra d'enregistrer tous vos déplacements, d'en comprendre l'impact en émission de CO2, de vous avertir dès que vous êtes éligible à la prime vélo de votre %{sourceType} %{sourceName}, etc.\",\"action\":\"C'est parti !\"},\"installApp\":{\"title\":\"Détecter vos déplacements\\ngrâce à votre téléphone\",\"text\":\"Installer l'application Cozy Cloud sur votre mobile pour enregistrer tous vos déplacements, en comprendre l'impact en émission de CO2, comptabiliser vos trajets en vélo, etc.\",\"action\":\"Installer l'app\"},\"GPSStandby\":{\"title\":\"Localisation détectée\",\"text\":\"Votre premier trajet sera affiché ici quelques heures après que vous l'ayez effectué.\"},\"changeAccount\":{\"title\":\"Aucun déplacement\",\"text\":\"Aucun déplacement n’a encore été détecté depuis la source de données sélectionnée.\",\"action\":\"Changer la source de données\"}},\"manifest\":{\"short_description\":\"Conservez l'historique de vos déplacements et analysez leurs impacts sur l'environnement.\",\"long_description\":\"S’il vous arrive de chercher des réponses à certaines de ces questions :\\n- Quelle distance ai-je parcourue **à pied** cette semaine ?\\n- Si j'achetais une voiture **électrique**, quel serait l'impact sur ma facture de carburant ?\\n- Serait-il pertinent pour moi de **louer une voiture au lieu d’en posséder une**, à la vue de mon usage réel ?\\n- Comment **retrouver le départ de ce sentier** enchanteur que j'avais trouvé par hasard il y a deux ans ?\\n- Que représentent **mes voyages en avion** dans mes émissions annuelles de CO2 ?\\n- Combien de **trajets domicile/travail** ai-je réalisé en vélo cette année ?\\n- Et si je gardais un **historique précis de** tous les lieux que j’ai visités pendant **mes voyages ?**\\n- En tant qu’entreprise, comment pourrais-je rendre **ma prime vélo** (FMD) plus efficace ?\\n\\n... alors l'application CoachCO2 peut vous fournir des réponses ! Elle vous permettra aussi de **prendre conscience des enjeux** de mobilité, de questionner vos habitudes de déplacements, et peut-être de trouver des alternatives plus durables.\\n\\n&nbsp;\\n\\n**Et la confidentialité de ma vie privée ?**\\n\\n&nbsp;\\n\\nComme toujours dans votre Cozy : **vous êtes par défaut le seul** à avoir le droit d'**accéder à vos données**. Et vous pourrez bien entendu aussi **les partager** avec qui vous souhaitez, pour la durée que vous souhaitez.\\n\\n&nbsp;\\n\\n**Puis-je faire avancer l'écomobilité en partageant mes données anomymisées ?**\\n\\n&nbsp;\\n\\nOui, en plus de vous aider à prendre conscience de vos propres enjeux de mobilité, l'objectif de l'application CoachCO2 est de permettre l’émergence de nouvelles offres d’écomobilité grâce à des études basées sur des données anonymisées et préalablement agrégées comme les distances parcourues par moyens et objectifs de transport. Certaines **collectivités** françaises **y travaillent** déjà !\\n\\n&nbsp;\\n\\n**Et demain ?**\\n\\n&nbsp;\\n\\nCette mémoire de vos déplacements est stockée et sécurisée dans votre cloud personnel dans un **format standard réutilisable et exportable** à votre guise.\\n\\n&nbsp;\\n\\nL'application CoachCO2 est elle-même régulièrement enrichie de **nouvelles fonctionnalités**. Elle est aujourd'hui tournée vers la mobilité, demain d'autres sources de CO2 pourront étendre son champ d'action, comme par exemple la consommation énergétique de votre logement.\\n\\n&nbsp;\\n\\nDemain de nouvelles applications pourront vous offrir d'**autres usages** grâce à la mémorisation de ces précieuses données de déplacements. Par exemple, construire pour vous les albums cartographiés de vos voyages ou activités passions, et les partager à vos proches sans obligatoirement utiliser les réseaux sociaux.\\n\\n&nbsp;\\n\\n**Remerciements et conditions d'utilisation**\\n\\n&nbsp;\\n\\nCette application est aujourd'hui développée et maintenue par Cozy Cloud comme un bien commun. Démarrée en 2021 grâce à l'agglomération de **la Rochelle** et son programme Agremob, elle a ensuite été soutenue par le département des **Alpes-Maritimes**. Vous pouvez ainsi l'utiliser gratuitement si vous auto-hébergez votre Cozy, ou en achetez l’hébergement à un tiers. Elle est ainsi disponible dans les offres Premium hébergées par Cozy Cloud (avec 1 mois d’essai gratuit dans l’offre découverte).\",\"permissions\":{\"apps\":{\"description\":\"Utilisé par la cozy-bar pour afficher les icônes des applications\"},\"settings\":{\"description\":\"Utilisé par le cozy-bar pour afficher Claudy et savoir quelles applications sont à venir\"},\"accounts\":{\"description\":\"Utilisé pour obtenir un compte konnector\"},\"files\":{\"description\":\"Utilisé pour accéder aux fichiers de sauvegarde de votre exportation de voyages\"},\"geojson-timeseries\":{\"description\":\"Utilisé pour afficher les séries temporelles geojson\"},\"coachco2.settings\":{\"description\":\"Utilisé pour gérer les paramètres de votre Coach CO2\"}}},\"dacc\":{\"settings\":{\"anonymous_participation\":\"Participer anonymement au calcul des émissions moyennes de CO2\",\"showAlerter\":\"Emission CO2 : afficher l'alerter DACC sur la homepage\"},\"tripsCard\":{\"label\":\"Comparez vos émissions à la moyenne des autres utilisateurs de l’application ?\",\"discard\":\"Non, merci\",\"accept\":\"Comparer\"},\"compareDialog\":{\"title\":\"Comparez-vous anonymement\",\"primaryText\":\"Afin de constituer la moyenne des émissions des utilisateurs, et parce que votre Cozy vous a fait la promesse de ne jamais divulguer vos données sans votre demande explicite, il va vous demander le droit d'envoyer cette donnée.\",\"secondaryText\":\"Ces données seront agrégées et anonymes, elles ne contiendront aucun identifiant ni lieux.\",\"action\":\"J'ai compris\"},\"permissionsDialog\":{\"title\":\"Demande de permissions\",\"primaryText\":\"L’application Coach CO2 demande les permissions suivantes à votre Cozy :\",\"secondaryText\":\"Une fois autorisées, les permissions pourront être modifiées dans les paramètres\",\"why_asking\":\"Pourquoi me demander ces permissions ?\",\"export_outside\":\"Exporter hors du Cozy\",\"anonymized_emissions\":\"Mes émissions de CO2 anonymisées\",\"anonymized_bikegoal_progression\":\"Ma progression de façon anonyme\",\"accept\":\"Toujours autoriser\",\"refuse\":\"Refuser\"},\"reasonsDialog\":{\"title\":\"Motifs de permissions\",\"content\":\"Parce que votre Cozy vous a fait la promesse de ne jamais divulguer vos données privées, il vous demandera toujours le droit de laisser une application les envoyer à l'extérieur.\"}},\"vericalBarChart\":{\"title\":\"Émissions de CO2\",\"legend\":{\"yours\":\"Vos émissions\",\"average\":\"Moyennes des utilisateurs de l'app\"}},\"bikeGoal\":{\"title\":\"Aller au travail à vélo\",\"yearly_goal_progression\":\"%{days}/%{daysToReach} jours \\npar an\",\"goal_progression\":\"%{days}/%{daysToReach} jours\",\"my_progression\":\"Ma progression annuelle\",\"average_progression\":\"Progression moy. de mon organisation\",\"average_progression_noValue\":\"Progression moy. des autres utilisateurs\",\"achievement_certificate\":\"Attestation de réussite\",\"goal\":\"Objectif\",\"goals\":\"Objectifs\",\"days\":\"jours\",\"empty\":{\"title\":\"Vos déplacements éligibles à l'objectif vélo seront comptabilisés et affichés ici.\"},\"about\":{\"title\":\"À propos de l’objectif\",\"intro\":{\"title\":\"Introduction\",\"content\":\"Afin d’encourager le recours à des modes de transports alternatifs et durables, la mise en œuvre du forfait mobilités durables est entré en vigueur le 10 mai 2020.\\n\\nAinsi les collaborateurs et agent qui font le choix d'un mode de transport alternatif et durable pour leur trajet domicile-travail pourront recevoir une somme de leur employeur si celui-ci met en place ce dispositif.\"},\"how_trips_detected\":{\"title\":\"Comment sont détectés mes trajets ?\",\"content\":\"Vos trajets domicile-travail à vélo seront automatiquement détectés à partir de vos horaires et de votre vitesse.\\n\\nSi un trajet n’est pas automatiquement qualifié en “Aller-retour au travail”, ouvrez le détail du trajet et modifiez le motif du déplacement.\\n\\nSi le mode de transport d’un trajet n’est pas automatiquement détecté en “vélo”, ouvrez le détail du trajet et modifiez le mode de transport en “vélo”.\"},\"once_goal_reach\":{\"title\":\"Que faire une fois l’objectif atteint ?\",\"optional\":\"Dernière étape\",\"content\":\"Une fois l'objectif atteint, vous pourrez vous en féliciter ! Et il vous sera alors possible de générer une attestation sur l'honneur que vous pourrez transmettre à votre employeur.\"}},\"deactivate\":{\"deactivate\":\"Désactiver\",\"title\":\"Souhaitez-vous vraiment ne plus participer à l’objectif ?\",\"content\":\"Vous pourrez toujours choisir d’y participer à nouveau depuis les paramètres de l’application.\",\"stop_participate\":\"Ne plus participer\",\"cancel\":\"Annuler\"},\"alert\":{\"success\":{\"text\":\"Félicitations, vous avez atteint l’objectif “Aller travailler à vélo” 🎉\",\"action\":\"Bénéficier de mon attestation |||| Bénéficier de mon forfait de %{smart_count}€\"},\"title\":\"Soyez acteur du changement, allez travailler à vélo !\",\"text\":\"Suivez vos trajets et générez une attestation à destination de votre employeur s'il propose la prime Forfait Mobilité Durable (FMD).\",\"actions\":{\"participate\":\"Participer\",\"discard\":\"non, merci\"}},\"edit\":{\"modify\":\"Modifier\",\"title\":\"Modifier l'objectif\",\"firstname\":\"Prénom\",\"lastname\":\"Nom\",\"daysToReach\":\"Objectif à atteindre\",\"compare_progress\":\"Comparer ma progression avec celle de mon organisation\",\"compare_progress_noValue\":\"Comparer ma progression avec celle des autres utilisateurs\",\"cancel\":\"Annuler\",\"submit\":\"Ok\",\"required\":\"Ce champ est obligatoire\"},\"settings\":{\"participation\":\"Participer à l'objectif “Aller au travail à vélo”\",\"showAlerter\":\"Objectif vélo : afficher l'infobulle de participation sur la homepage\",\"hideOnboarding\":\"Objectif vélo : masquer l'onboarding\",\"sendToDACC\":\"Objectif vélo : activer le DACC\",\"showAlerterSuccess\":\"Objectif vélo : forcer l'affichage de l'alerte de succès sur la homepage\"},\"onboarding\":{\"title\":\"Objectif : Aller travailler à vélo\",\"actions\":{\"finish\":\"Terminer\",\"previous\":\"Précédent\",\"next\":\"Suivant\"},\"steps\":{\"naming\":{\"title\":\"Nom et prénom\",\"nameLegend\":\"Renseigner les informations suivantes afin de générer l’attestation de réussite à votre nom :\"},\"daysToReach\":{\"title\":\"Fixez-vous un objectif\",\"legend\":\"Définissez un nombre de jours à vélo ou trottinette pour vos trajets domicile-travail et suivez votre avancement avec votre Coach CO2.\\n\\nUne fois votre objectif atteint, vous recevrez une alerte ainsi qu’une attestation de réussite à transmettre à votre employeur.\",\"error\":\"Définissez un objectif plus réaliste. Entrer une valeur supérieure à 0.\"},\"comparison\":{\"comparisonLegend\":\"Il vous est possible d’afficher la progression moyenne des membres de votre organisation %{sourceName} qui participent à l’objectif. Pour cela, il vous sera demandé de participer également à la constitution de cette moyenne.\\n\\nVos données de progression seront agrégées et envoyées anonymement, elles ne contiendront aucun identifiant ni lieux.\",\"comparisonLegend_noValue\":\"Il vous est possible d’afficher la progression moyenne des autres utilisateurs qui participent à l’objectif. Pour cela, il vous sera demandé de participer également à la constitution de cette moyenne.\\n\\nVos données de progression seront agrégées et envoyées anonymement, elles ne contiendront aucun identifiant ni lieux.\",\"compare\":\"Comparer ma progression\",\"doNotCompare\":\"Ne pas comparer ma progression\"}}},\"certificateGeneration\":{\"title\":\"Félicitations, vous avez atteint l’objectif “Aller travailler à vélo”\",\"content\":\"Une attestation a été générée pour attester de votre succès pour l’année %{year}. Transférez-la dès maintenant par email à votre employeur. |||| Une attestation a été générée pour attester de votre succès pour l’année %{year}. Transférez-la dès maintenant par email à votre employeur pour recevoir %{smart_count}€ !\",\"actions\":{\"show\":\"Certificat - Aller travailler à vélo.pdf\",\"generate\":\"Générer une attestation\",\"regenerate\":\"Générer une nouvelle attestation\",\"understood\":\"J'ai compris\"}}},\"geolocationTracking\":{\"tooltip\":{\"title\":\"Vos nouveaux trajets ne sont pas mémorisés\",\"text\":\"Enregistrez automatiquement tous vos déplacements et découvrez votre empreinte carbone.\",\"action\":\"Configurer\"},\"locationRefusedDialog\":{\"description\":\"Votre Cozy a besoin d'accéder à des données supplémentaires afin de vous aider à analyser vos déplacements. Elles ne seront JAMAIS transmises à qui que ce soit sans votre demande explicite.\\n\\nVous allez être redirigé vers les paramètres de l'app afin de l'autoriser à TOUJOURS accéder à la position de votre téléphone, donc aussi lorsque l'app n'est pas utilisée, et au données d'ACTIVITÉ PHYSIQUE, mouvements et formes.\"},\"locationDisabledDialog\":{\"title\":\"Activez la localisation et le suivi forme\",\"description\":\"Pour enregistrer vos déplacements, vous devez d'abord activer :\",\"locationService\":\"- le service de localisation dans Réglages > Confidentialité et sécurité > Service de localisation\",\"motionService\":\"- le suivi forme dans Réglages > Confidentialité et sécurité > Mouvements et forme\"},\"settings\":{\"enable\":\"Enregistrer mes déplacements avec mon mobile (GPS)\",\"sendLogs\":\"Envoyer les journaux de l'application à l'assistance\",\"forceUploadData\":\"Forcer l'upload des données\",\"copyIdentifier\":\"Copier l'identifiant OpenPATH\",\"createdOn\":\"créé le\"},\"notifications\":{\"quotaExpired\":{\"title\":\"Enregistrement des déplacements désactivés\",\"content\":\"Vous avez atteint la limite des %{maxDaysToCapture} jours de trajets inclus dans votre offre.\"},\"quotaAlmostExpired\":{\"title\":\"Enregistrement des déplacements\",\"content\":\"Vous avez presque atteint la limite des %{maxDaysToCapture} jours de trajets inclus dans votre offre.\"}}},\"Modes\":{\"DefaultDialog\":{\"primary\":\"Définir comme transport par défaut pour cette catégorie ?\",\"secondary\":\"Le mode de transport sera automatiquement sélectionné comme par défaut pour tous les futurs trajets détectés pour ce type de transport.\",\"actions\":{\"save\":\"Enregistrer\",\"cancel\":\"Annuler\"}}},\"PDF\":{\"name\":\"Attestation - Aller travailler à vélo (%{year}).pdf\",\"title\":\"Attestation sur l'honneur\\n de le réussite de l'objectif\\n du forfait mobilités durables\",\"date\":\"Le %{currentDateFormatted} à %{currentTimeFormatted}\",\"recipient\":\"Employeur : %{sourceName}\",\"paragraph01\":\"Je soussigné(e) %{username} certifie sur l’honneur avoir atteint l'objectif forfait mobilités durables de %{daysToReach} jours en effectuant mes déplacements du domicile vers mon travail en vélo du 1er janvier au 31 décembre %{year}.\",\"paragraph02\":\"En plus de cette attestation, je tiens à disposition de mon employeur tout justificatif utile d'utilisation effective du vélo comme les relevés de facture ou de paiement, d’assurances ou d’entretien de mon vélo.\",\"paragraph03\":\"Fait pour servir et valoir ce que de droit.\",\"signature\":\"Signature : %{username}\"},\"centreValDeLoireExpe\":{\"settings\":{\"sendToDACC\":\"Participer à l’expérimentation Mobile CVL de la région\"}}}");

/***/ }),
/* 343 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var GetIntrinsic = __webpack_require__(42);
var callBound = __webpack_require__(24);
var $TypeError = GetIntrinsic('%TypeError%');

var Call = __webpack_require__(763);
var Get = __webpack_require__(344);
var HasProperty = __webpack_require__(769);
var IsCallable = __webpack_require__(770);
var LengthOfArrayLike = __webpack_require__(771);
var ToObject = __webpack_require__(786);
var ToString = __webpack_require__(352);

var isString = __webpack_require__(331);

var $split = callBound('String.prototype.split');

// Check failure of by-index access of string characters (IE < 9) and failure of `0 in boxedString` (Rhino)
var boxedString = Object('a');
var splitString = boxedString[0] !== 'a' || !(0 in boxedString);

module.exports = function forEach(callbackfn) {
	var thisO = ToObject(this);
	var O = splitString && isString(this) ? $split(this, '') : thisO;

	var len = LengthOfArrayLike(O);

	if (!IsCallable(callbackfn)) {
		throw new $TypeError('Array.prototype.forEach callback must be a function');
	}

	var thisArg;
	if (arguments.length > 1) {
		thisArg = arguments[1];
	}

	var k = 0;
	while (k < len) {
		var Pk = ToString(k);
		var kPresent = HasProperty(O, Pk);
		if (kPresent) {
			var kValue = Get(O, Pk);
			Call(callbackfn, thisArg, [kValue, k, O]);
		}
		k += 1;
	}

	return void undefined;
};


/***/ }),
/* 344 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var GetIntrinsic = __webpack_require__(42);

var $TypeError = GetIntrinsic('%TypeError%');

var inspect = __webpack_require__(766);

var IsPropertyKey = __webpack_require__(345);
var Type = __webpack_require__(115);

// https://262.ecma-international.org/6.0/#sec-get-o-p

module.exports = function Get(O, P) {
	// 7.3.1.1
	if (Type(O) !== 'Object') {
		throw new $TypeError('Assertion failed: Type(O) is not Object');
	}
	// 7.3.1.2
	if (!IsPropertyKey(P)) {
		throw new $TypeError('Assertion failed: IsPropertyKey(P) is not true, got ' + inspect(P));
	}
	// 7.3.1.3
	return O[P];
};


/***/ }),
/* 345 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// https://262.ecma-international.org/6.0/#sec-ispropertykey

module.exports = function IsPropertyKey(argument) {
	return typeof argument === 'string' || typeof argument === 'symbol';
};


/***/ }),
/* 346 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var keys = __webpack_require__(199);
var hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';

var toStr = Object.prototype.toString;
var concat = Array.prototype.concat;
var origDefineProperty = Object.defineProperty;

var isFunction = function (fn) {
	return typeof fn === 'function' && toStr.call(fn) === '[object Function]';
};

var hasPropertyDescriptors = __webpack_require__(200)();

var supportsDescriptors = origDefineProperty && hasPropertyDescriptors;

var defineProperty = function (object, name, value, predicate) {
	if (name in object && (!isFunction(predicate) || !predicate())) {
		return;
	}
	if (supportsDescriptors) {
		origDefineProperty(object, name, {
			configurable: true,
			enumerable: false,
			value: value,
			writable: true
		});
	} else {
		object[name] = value; // eslint-disable-line no-param-reassign
	}
};

var defineProperties = function (object, map) {
	var predicates = arguments.length > 2 ? arguments[2] : {};
	var props = keys(map);
	if (hasSymbols) {
		props = concat.call(props, Object.getOwnPropertySymbols(map));
	}
	for (var i = 0; i < props.length; i += 1) {
		defineProperty(object, props[i], map[props[i]], predicates[props[i]]);
	}
};

defineProperties.supportsDescriptors = !!supportsDescriptors;

module.exports = defineProperties;


/***/ }),
/* 347 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = __webpack_require__(780);


/***/ }),
/* 348 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var undefined;

var $SyntaxError = SyntaxError;
var $Function = Function;
var $TypeError = TypeError;

// eslint-disable-next-line consistent-return
var getEvalledConstructor = function (expressionSyntax) {
	try {
		return $Function('"use strict"; return (' + expressionSyntax + ').constructor;')();
	} catch (e) {}
};

var $gOPD = Object.getOwnPropertyDescriptor;
if ($gOPD) {
	try {
		$gOPD({}, '');
	} catch (e) {
		$gOPD = null; // this is IE 8, which has a broken gOPD
	}
}

var throwTypeError = function () {
	throw new $TypeError();
};
var ThrowTypeError = $gOPD
	? (function () {
		try {
			// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties
			arguments.callee; // IE 8 does not throw here
			return throwTypeError;
		} catch (calleeThrows) {
			try {
				// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')
				return $gOPD(arguments, 'callee').get;
			} catch (gOPDthrows) {
				return throwTypeError;
			}
		}
	}())
	: throwTypeError;

var hasSymbols = __webpack_require__(136)();

var getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto

var needsEval = {};

var TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);

var INTRINSICS = {
	'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,
	'%Array%': Array,
	'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,
	'%ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,
	'%AsyncFromSyncIteratorPrototype%': undefined,
	'%AsyncFunction%': needsEval,
	'%AsyncGenerator%': needsEval,
	'%AsyncGeneratorFunction%': needsEval,
	'%AsyncIteratorPrototype%': needsEval,
	'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,
	'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,
	'%Boolean%': Boolean,
	'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,
	'%Date%': Date,
	'%decodeURI%': decodeURI,
	'%decodeURIComponent%': decodeURIComponent,
	'%encodeURI%': encodeURI,
	'%encodeURIComponent%': encodeURIComponent,
	'%Error%': Error,
	'%eval%': eval, // eslint-disable-line no-eval
	'%EvalError%': EvalError,
	'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,
	'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,
	'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,
	'%Function%': $Function,
	'%GeneratorFunction%': needsEval,
	'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,
	'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,
	'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,
	'%isFinite%': isFinite,
	'%isNaN%': isNaN,
	'%IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,
	'%JSON%': typeof JSON === 'object' ? JSON : undefined,
	'%Map%': typeof Map === 'undefined' ? undefined : Map,
	'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),
	'%Math%': Math,
	'%Number%': Number,
	'%Object%': Object,
	'%parseFloat%': parseFloat,
	'%parseInt%': parseInt,
	'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,
	'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,
	'%RangeError%': RangeError,
	'%ReferenceError%': ReferenceError,
	'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,
	'%RegExp%': RegExp,
	'%Set%': typeof Set === 'undefined' ? undefined : Set,
	'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),
	'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,
	'%String%': String,
	'%StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,
	'%Symbol%': hasSymbols ? Symbol : undefined,
	'%SyntaxError%': $SyntaxError,
	'%ThrowTypeError%': ThrowTypeError,
	'%TypedArray%': TypedArray,
	'%TypeError%': $TypeError,
	'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,
	'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,
	'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,
	'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,
	'%URIError%': URIError,
	'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,
	'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,
	'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet
};

var doEval = function doEval(name) {
	var value;
	if (name === '%AsyncFunction%') {
		value = getEvalledConstructor('async function () {}');
	} else if (name === '%GeneratorFunction%') {
		value = getEvalledConstructor('function* () {}');
	} else if (name === '%AsyncGeneratorFunction%') {
		value = getEvalledConstructor('async function* () {}');
	} else if (name === '%AsyncGenerator%') {
		var fn = doEval('%AsyncGeneratorFunction%');
		if (fn) {
			value = fn.prototype;
		}
	} else if (name === '%AsyncIteratorPrototype%') {
		var gen = doEval('%AsyncGenerator%');
		if (gen) {
			value = getProto(gen.prototype);
		}
	}

	INTRINSICS[name] = value;

	return value;
};

var LEGACY_ALIASES = {
	'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],
	'%ArrayPrototype%': ['Array', 'prototype'],
	'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],
	'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],
	'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],
	'%ArrayProto_values%': ['Array', 'prototype', 'values'],
	'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],
	'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],
	'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],
	'%BooleanPrototype%': ['Boolean', 'prototype'],
	'%DataViewPrototype%': ['DataView', 'prototype'],
	'%DatePrototype%': ['Date', 'prototype'],
	'%ErrorPrototype%': ['Error', 'prototype'],
	'%EvalErrorPrototype%': ['EvalError', 'prototype'],
	'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],
	'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],
	'%FunctionPrototype%': ['Function', 'prototype'],
	'%Generator%': ['GeneratorFunction', 'prototype'],
	'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],
	'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],
	'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],
	'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],
	'%JSONParse%': ['JSON', 'parse'],
	'%JSONStringify%': ['JSON', 'stringify'],
	'%MapPrototype%': ['Map', 'prototype'],
	'%NumberPrototype%': ['Number', 'prototype'],
	'%ObjectPrototype%': ['Object', 'prototype'],
	'%ObjProto_toString%': ['Object', 'prototype', 'toString'],
	'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],
	'%PromisePrototype%': ['Promise', 'prototype'],
	'%PromiseProto_then%': ['Promise', 'prototype', 'then'],
	'%Promise_all%': ['Promise', 'all'],
	'%Promise_reject%': ['Promise', 'reject'],
	'%Promise_resolve%': ['Promise', 'resolve'],
	'%RangeErrorPrototype%': ['RangeError', 'prototype'],
	'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],
	'%RegExpPrototype%': ['RegExp', 'prototype'],
	'%SetPrototype%': ['Set', 'prototype'],
	'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],
	'%StringPrototype%': ['String', 'prototype'],
	'%SymbolPrototype%': ['Symbol', 'prototype'],
	'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],
	'%TypedArrayPrototype%': ['TypedArray', 'prototype'],
	'%TypeErrorPrototype%': ['TypeError', 'prototype'],
	'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],
	'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],
	'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],
	'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],
	'%URIErrorPrototype%': ['URIError', 'prototype'],
	'%WeakMapPrototype%': ['WeakMap', 'prototype'],
	'%WeakSetPrototype%': ['WeakSet', 'prototype']
};

var bind = __webpack_require__(102);
var hasOwn = __webpack_require__(105);
var $concat = bind.call(Function.call, Array.prototype.concat);
var $spliceApply = bind.call(Function.apply, Array.prototype.splice);
var $replace = bind.call(Function.call, String.prototype.replace);
var $strSlice = bind.call(Function.call, String.prototype.slice);
var $exec = bind.call(Function.call, RegExp.prototype.exec);

/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */
var rePropName = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
var reEscapeChar = /\\(\\)?/g; /** Used to match backslashes in property paths. */
var stringToPath = function stringToPath(string) {
	var first = $strSlice(string, 0, 1);
	var last = $strSlice(string, -1);
	if (first === '%' && last !== '%') {
		throw new $SyntaxError('invalid intrinsic syntax, expected closing `%`');
	} else if (last === '%' && first !== '%') {
		throw new $SyntaxError('invalid intrinsic syntax, expected opening `%`');
	}
	var result = [];
	$replace(string, rePropName, function (match, number, quote, subString) {
		result[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;
	});
	return result;
};
/* end adaptation */

var getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {
	var intrinsicName = name;
	var alias;
	if (hasOwn(LEGACY_ALIASES, intrinsicName)) {
		alias = LEGACY_ALIASES[intrinsicName];
		intrinsicName = '%' + alias[0] + '%';
	}

	if (hasOwn(INTRINSICS, intrinsicName)) {
		var value = INTRINSICS[intrinsicName];
		if (value === needsEval) {
			value = doEval(intrinsicName);
		}
		if (typeof value === 'undefined' && !allowMissing) {
			throw new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');
		}

		return {
			alias: alias,
			name: intrinsicName,
			value: value
		};
	}

	throw new $SyntaxError('intrinsic ' + name + ' does not exist!');
};

module.exports = function GetIntrinsic(name, allowMissing) {
	if (typeof name !== 'string' || name.length === 0) {
		throw new $TypeError('intrinsic name must be a non-empty string');
	}
	if (arguments.length > 1 && typeof allowMissing !== 'boolean') {
		throw new $TypeError('"allowMissing" argument must be a boolean');
	}

	if ($exec(/^%?[^%]*%?$/, name) === null) {
		throw new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');
	}
	var parts = stringToPath(name);
	var intrinsicBaseName = parts.length > 0 ? parts[0] : '';

	var intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);
	var intrinsicRealName = intrinsic.name;
	var value = intrinsic.value;
	var skipFurtherCaching = false;

	var alias = intrinsic.alias;
	if (alias) {
		intrinsicBaseName = alias[0];
		$spliceApply(parts, $concat([0, 1], alias));
	}

	for (var i = 1, isOwn = true; i < parts.length; i += 1) {
		var part = parts[i];
		var first = $strSlice(part, 0, 1);
		var last = $strSlice(part, -1);
		if (
			(
				(first === '"' || first === "'" || first === '`')
				|| (last === '"' || last === "'" || last === '`')
			)
			&& first !== last
		) {
			throw new $SyntaxError('property names with quotes must have matching quotes');
		}
		if (part === 'constructor' || !isOwn) {
			skipFurtherCaching = true;
		}

		intrinsicBaseName += '.' + part;
		intrinsicRealName = '%' + intrinsicBaseName + '%';

		if (hasOwn(INTRINSICS, intrinsicRealName)) {
			value = INTRINSICS[intrinsicRealName];
		} else if (value != null) {
			if (!(part in value)) {
				if (!allowMissing) {
					throw new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');
				}
				return void undefined;
			}
			if ($gOPD && (i + 1) >= parts.length) {
				var desc = $gOPD(value, part);
				isOwn = !!desc;

				// By convention, when a data property is converted to an accessor
				// property to emulate a data property that does not suffer from
				// the override mistake, that accessor's getter is marked with
				// an `originalValue` property. Here, when we detect this, we
				// uphold the illusion by pretending to see that original data
				// property, i.e., returning the value rather than the getter
				// itself.
				if (isOwn && 'get' in desc && !('originalValue' in desc.get)) {
					value = desc.get;
				} else {
					value = value[part];
				}
			} else {
				isOwn = hasOwn(value, part);
				value = value[part];
			}

			if (isOwn && !skipFurtherCaching) {
				INTRINSICS[intrinsicRealName] = value;
			}
		}
	}
	return value;
};


/***/ }),
/* 349 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var RequireObjectCoercible = __webpack_require__(347);
var ToString = __webpack_require__(781);
var callBound = __webpack_require__(24);
var $replace = callBound('String.prototype.replace');

var mvsIsWS = (/^\s$/).test('\u180E');
/* eslint-disable no-control-regex */
var leftWhitespace = mvsIsWS
	? /^[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]+/
	: /^[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]+/;
var rightWhitespace = mvsIsWS
	? /[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]+$/
	: /[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]+$/;
/* eslint-enable no-control-regex */

module.exports = function trim() {
	var S = ToString(RequireObjectCoercible(this));
	return $replace($replace(S, leftWhitespace, ''), rightWhitespace, '');
};


/***/ }),
/* 350 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var implementation = __webpack_require__(349);

var zeroWidthSpace = '\u200b';
var mongolianVowelSeparator = '\u180E';

module.exports = function getPolyfill() {
	if (
		String.prototype.trim
		&& zeroWidthSpace.trim() === zeroWidthSpace
		&& mongolianVowelSeparator.trim() === mongolianVowelSeparator
		&& ('_' + mongolianVowelSeparator).trim() === ('_' + mongolianVowelSeparator)
		&& (mongolianVowelSeparator + '_').trim() === (mongolianVowelSeparator + '_')
	) {
		return String.prototype.trim;
	}
	return implementation;
};


/***/ }),
/* 351 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = Number.isNaN || function isNaN(a) {
	return a !== a;
};


/***/ }),
/* 352 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var GetIntrinsic = __webpack_require__(42);

var $String = GetIntrinsic('%String%');
var $TypeError = GetIntrinsic('%TypeError%');

// https://262.ecma-international.org/6.0/#sec-tostring

module.exports = function ToString(argument) {
	if (typeof argument === 'symbol') {
		throw new $TypeError('Cannot convert a Symbol value to a string');
	}
	return $String(argument);
};


/***/ }),
/* 353 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var arrayMethodBoxesProperly = __webpack_require__(332);

var implementation = __webpack_require__(343);

module.exports = function getPolyfill() {
	var method = Array.prototype.forEach;
	return arrayMethodBoxesProperly(method) ? method : implementation;
};


/***/ }),
/* 354 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var RequireObjectCoercible = __webpack_require__(114);
var callBound = __webpack_require__(24);
var $isEnumerable = callBound('Object.prototype.propertyIsEnumerable');
var $push = callBound('Array.prototype.push');

module.exports = function entries(O) {
	var obj = RequireObjectCoercible(O);
	var entrys = [];
	for (var key in obj) {
		if ($isEnumerable(obj, key)) { // checks own-ness as well
			$push(entrys, [key, obj[key]]);
		}
	}
	return entrys;
};


/***/ }),
/* 355 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var implementation = __webpack_require__(354);

module.exports = function getPolyfill() {
	return typeof Object.entries === 'function' ? Object.entries : implementation;
};


/***/ }),
/* 356 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var RequireObjectCoercible = __webpack_require__(114);
var ToString = __webpack_require__(352);
var callBound = __webpack_require__(24);
var $replace = callBound('String.prototype.replace');

var mvsIsWS = (/^\s$/).test('\u180E');
/* eslint-disable no-control-regex */
var leftWhitespace = mvsIsWS
	? /^[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]+/
	: /^[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]+/;
var rightWhitespace = mvsIsWS
	? /[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]+$/
	: /[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]+$/;
/* eslint-enable no-control-regex */

module.exports = function trim() {
	var S = ToString(RequireObjectCoercible(this));
	return $replace($replace(S, leftWhitespace, ''), rightWhitespace, '');
};


/***/ }),
/* 357 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var implementation = __webpack_require__(356);

var zeroWidthSpace = '\u200b';
var mongolianVowelSeparator = '\u180E';

module.exports = function getPolyfill() {
	if (
		String.prototype.trim
		&& zeroWidthSpace.trim() === zeroWidthSpace
		&& mongolianVowelSeparator.trim() === mongolianVowelSeparator
		&& ('_' + mongolianVowelSeparator).trim() === ('_' + mongolianVowelSeparator)
		&& (mongolianVowelSeparator + '_').trim() === (mongolianVowelSeparator + '_')
	) {
		return String.prototype.trim;
	}
	return implementation;
};


/***/ }),
/* 358 */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__(205)["default"];
var toPrimitive = __webpack_require__(792);
function _toPropertyKey(arg) {
  var key = toPrimitive(arg, "string");
  return _typeof(key) === "symbol" ? key : String(key);
}
module.exports = _toPropertyKey, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 359 */
/***/ (function(module, exports) {

/**
 * @category Common Helpers
 * @summary Is the given argument an instance of Date?
 *
 * @description
 * Is the given argument an instance of Date?
 *
 * @param {*} argument - the argument to check
 * @returns {Boolean} the given argument is an instance of Date
 *
 * @example
 * // Is 'mayonnaise' a Date?
 * var result = isDate('mayonnaise')
 * //=> false
 */
function isDate (argument) {
  return argument instanceof Date
}

module.exports = isDate


/***/ }),
/* 360 */
/***/ (function(module, exports, __webpack_require__) {

var parse = __webpack_require__(29)
var startOfISOWeek = __webpack_require__(206)

/**
 * @category ISO Week-Numbering Year Helpers
 * @summary Get the ISO week-numbering year of the given date.
 *
 * @description
 * Get the ISO week-numbering year of the given date,
 * which always starts 3 days before the year's first Thursday.
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * @param {Date|String|Number} date - the given date
 * @returns {Number} the ISO week-numbering year
 *
 * @example
 * // Which ISO-week numbering year is 2 January 2005?
 * var result = getISOYear(new Date(2005, 0, 2))
 * //=> 2004
 */
function getISOYear (dirtyDate) {
  var date = parse(dirtyDate)
  var year = date.getFullYear()

  var fourthOfJanuaryOfNextYear = new Date(0)
  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4)
  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0)
  var startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear)

  var fourthOfJanuaryOfThisYear = new Date(0)
  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4)
  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0)
  var startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear)

  if (date.getTime() >= startOfNextYear.getTime()) {
    return year + 1
  } else if (date.getTime() >= startOfThisYear.getTime()) {
    return year
  } else {
    return year - 1
  }
}

module.exports = getISOYear


/***/ }),
/* 361 */
/***/ (function(module, exports) {

function buildDistanceInWordsLocale () {
  var distanceInWordsLocale = {
    lessThanXSeconds: {
      one: 'less than a second',
      other: 'less than {{count}} seconds'
    },

    xSeconds: {
      one: '1 second',
      other: '{{count}} seconds'
    },

    halfAMinute: 'half a minute',

    lessThanXMinutes: {
      one: 'less than a minute',
      other: 'less than {{count}} minutes'
    },

    xMinutes: {
      one: '1 minute',
      other: '{{count}} minutes'
    },

    aboutXHours: {
      one: 'about 1 hour',
      other: 'about {{count}} hours'
    },

    xHours: {
      one: '1 hour',
      other: '{{count}} hours'
    },

    xDays: {
      one: '1 day',
      other: '{{count}} days'
    },

    aboutXMonths: {
      one: 'about 1 month',
      other: 'about {{count}} months'
    },

    xMonths: {
      one: '1 month',
      other: '{{count}} months'
    },

    aboutXYears: {
      one: 'about 1 year',
      other: 'about {{count}} years'
    },

    xYears: {
      one: '1 year',
      other: '{{count}} years'
    },

    overXYears: {
      one: 'over 1 year',
      other: 'over {{count}} years'
    },

    almostXYears: {
      one: 'almost 1 year',
      other: 'almost {{count}} years'
    }
  }

  function localize (token, count, options) {
    options = options || {}

    var result
    if (typeof distanceInWordsLocale[token] === 'string') {
      result = distanceInWordsLocale[token]
    } else if (count === 1) {
      result = distanceInWordsLocale[token].one
    } else {
      result = distanceInWordsLocale[token].other.replace('{{count}}', count)
    }

    if (options.addSuffix) {
      if (options.comparison > 0) {
        return 'in ' + result
      } else {
        return result + ' ago'
      }
    }

    return result
  }

  return {
    localize: localize
  }
}

module.exports = buildDistanceInWordsLocale


/***/ }),
/* 362 */
/***/ (function(module, exports, __webpack_require__) {

var buildFormattingTokensRegExp = __webpack_require__(15)

function buildFormatLocale () {
  // Note: in English, the names of days of the week and months are capitalized.
  // If you are making a new locale based on this one, check if the same is true for the language you're working on.
  // Generally, formatted dates should look like they are in the middle of a sentence,
  // e.g. in Spanish language the weekdays and months should be in the lowercase.
  var months3char = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']
  var monthsFull = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']
  var weekdays2char = ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']
  var weekdays3char = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']
  var weekdaysFull = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']
  var meridiemUppercase = ['AM', 'PM']
  var meridiemLowercase = ['am', 'pm']
  var meridiemFull = ['a.m.', 'p.m.']

  var formatters = {
    // Month: Jan, Feb, ..., Dec
    'MMM': function (date) {
      return months3char[date.getMonth()]
    },

    // Month: January, February, ..., December
    'MMMM': function (date) {
      return monthsFull[date.getMonth()]
    },

    // Day of week: Su, Mo, ..., Sa
    'dd': function (date) {
      return weekdays2char[date.getDay()]
    },

    // Day of week: Sun, Mon, ..., Sat
    'ddd': function (date) {
      return weekdays3char[date.getDay()]
    },

    // Day of week: Sunday, Monday, ..., Saturday
    'dddd': function (date) {
      return weekdaysFull[date.getDay()]
    },

    // AM, PM
    'A': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]
    },

    // am, pm
    'a': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]
    },

    // a.m., p.m.
    'aa': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]
    }
  }

  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.
  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']
  ordinalFormatters.forEach(function (formatterToken) {
    formatters[formatterToken + 'o'] = function (date, formatters) {
      return ordinal(formatters[formatterToken](date))
    }
  })

  return {
    formatters: formatters,
    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)
  }
}

function ordinal (number) {
  var rem100 = number % 100
  if (rem100 > 20 || rem100 < 10) {
    switch (rem100 % 10) {
      case 1:
        return number + 'st'
      case 2:
        return number + 'nd'
      case 3:
        return number + 'rd'
    }
  }
  return number + 'th'
}

module.exports = buildFormatLocale


/***/ }),
/* 363 */
/***/ (function(module, exports, __webpack_require__) {

var parse = __webpack_require__(29)

/**
 * @category Common Helpers
 * @summary Compare the two dates reverse chronologically and return -1, 0 or 1.
 *
 * @description
 * Compare the two dates and return -1 if the first date is after the second,
 * 1 if the first date is before the second or 0 if dates are equal.
 *
 * @param {Date|String|Number} dateLeft - the first date to compare
 * @param {Date|String|Number} dateRight - the second date to compare
 * @returns {Number} the result of the comparison
 *
 * @example
 * // Compare 11 February 1987 and 10 July 1989 reverse chronologically:
 * var result = compareDesc(
 *   new Date(1987, 1, 11),
 *   new Date(1989, 6, 10)
 * )
 * //=> 1
 *
 * @example
 * // Sort the array of dates in reverse chronological order:
 * var result = [
 *   new Date(1995, 6, 2),
 *   new Date(1987, 1, 11),
 *   new Date(1989, 6, 10)
 * ].sort(compareDesc)
 * //=> [
 * //   Sun Jul 02 1995 00:00:00,
 * //   Mon Jul 10 1989 00:00:00,
 * //   Wed Feb 11 1987 00:00:00
 * // ]
 */
function compareDesc (dirtyDateLeft, dirtyDateRight) {
  var dateLeft = parse(dirtyDateLeft)
  var timeLeft = dateLeft.getTime()
  var dateRight = parse(dirtyDateRight)
  var timeRight = dateRight.getTime()

  if (timeLeft > timeRight) {
    return -1
  } else if (timeLeft < timeRight) {
    return 1
  } else {
    return 0
  }
}

module.exports = compareDesc


/***/ }),
/* 364 */
/***/ (function(module, exports, __webpack_require__) {

var differenceInMilliseconds = __webpack_require__(803)

/**
 * @category Second Helpers
 * @summary Get the number of seconds between the given dates.
 *
 * @description
 * Get the number of seconds between the given dates.
 *
 * @param {Date|String|Number} dateLeft - the later date
 * @param {Date|String|Number} dateRight - the earlier date
 * @returns {Number} the number of seconds
 *
 * @example
 * // How many seconds are between
 * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?
 * var result = differenceInSeconds(
 *   new Date(2014, 6, 2, 12, 30, 20, 0),
 *   new Date(2014, 6, 2, 12, 30, 7, 999)
 * )
 * //=> 12
 */
function differenceInSeconds (dirtyDateLeft, dirtyDateRight) {
  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / 1000
  return diff > 0 ? Math.floor(diff) : Math.ceil(diff)
}

module.exports = differenceInSeconds


/***/ }),
/* 365 */
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./_lib/build_formatting_tokens_reg_exp/index.js": 15,
	"./ar/build_distance_in_words_locale/index.js": 366,
	"./ar/build_format_locale/index.js": 367,
	"./ar/index.js": 807,
	"./be/build_distance_in_words_locale/index.js": 368,
	"./be/build_format_locale/index.js": 369,
	"./be/index.js": 808,
	"./bg/build_distance_in_words_locale/index.js": 370,
	"./bg/build_format_locale/index.js": 371,
	"./bg/index.js": 809,
	"./ca/build_distance_in_words_locale/index.js": 372,
	"./ca/build_format_locale/index.js": 373,
	"./ca/index.js": 810,
	"./cs/build_distance_in_words_locale/index.js": 374,
	"./cs/build_format_locale/index.js": 375,
	"./cs/index.js": 811,
	"./da/build_distance_in_words_locale/index.js": 376,
	"./da/build_format_locale/index.js": 377,
	"./da/index.js": 812,
	"./de/build_distance_in_words_locale/index.js": 378,
	"./de/build_format_locale/index.js": 379,
	"./de/index.js": 813,
	"./el/build_distance_in_words_locale/index.js": 380,
	"./el/build_format_locale/index.js": 381,
	"./el/index.js": 814,
	"./en/build_distance_in_words_locale/index.js": 361,
	"./en/build_format_locale/index.js": 362,
	"./en/index.js": 147,
	"./eo/build_distance_in_words_locale/index.js": 382,
	"./eo/build_format_locale/index.js": 383,
	"./eo/index.js": 815,
	"./es/build_distance_in_words_locale/index.js": 384,
	"./es/build_format_locale/index.js": 385,
	"./es/index.js": 816,
	"./fi/build_distance_in_words_locale/index.js": 386,
	"./fi/build_format_locale/index.js": 387,
	"./fi/index.js": 817,
	"./fil/build_distance_in_words_locale/index.js": 388,
	"./fil/build_format_locale/index.js": 389,
	"./fil/index.js": 818,
	"./fr/build_distance_in_words_locale/index.js": 390,
	"./fr/build_format_locale/index.js": 391,
	"./fr/index.js": 819,
	"./hr/build_distance_in_words_locale/index.js": 392,
	"./hr/build_format_locale/index.js": 393,
	"./hr/index.js": 820,
	"./hu/build_distance_in_words_locale/index.js": 394,
	"./hu/build_format_locale/index.js": 395,
	"./hu/index.js": 821,
	"./id/build_distance_in_words_locale/index.js": 396,
	"./id/build_format_locale/index.js": 397,
	"./id/index.js": 822,
	"./is/build_distance_in_words_locale/index.js": 398,
	"./is/build_format_locale/index.js": 399,
	"./is/index.js": 823,
	"./it/build_distance_in_words_locale/index.js": 400,
	"./it/build_format_locale/index.js": 401,
	"./it/index.js": 824,
	"./ja/build_distance_in_words_locale/index.js": 402,
	"./ja/build_format_locale/index.js": 403,
	"./ja/index.js": 825,
	"./ko/build_distance_in_words_locale/index.js": 404,
	"./ko/build_format_locale/index.js": 405,
	"./ko/index.js": 826,
	"./mk/build_distance_in_words_locale/index.js": 406,
	"./mk/build_format_locale/index.js": 407,
	"./mk/index.js": 827,
	"./nb/build_distance_in_words_locale/index.js": 408,
	"./nb/build_format_locale/index.js": 409,
	"./nb/index.js": 828,
	"./nl/build_distance_in_words_locale/index.js": 410,
	"./nl/build_format_locale/index.js": 411,
	"./nl/index.js": 829,
	"./pl/build_distance_in_words_locale/index.js": 412,
	"./pl/build_format_locale/index.js": 413,
	"./pl/index.js": 830,
	"./pt/build_distance_in_words_locale/index.js": 414,
	"./pt/build_format_locale/index.js": 415,
	"./pt/index.js": 831,
	"./ro/build_distance_in_words_locale/index.js": 416,
	"./ro/build_format_locale/index.js": 417,
	"./ro/index.js": 832,
	"./ru/build_distance_in_words_locale/index.js": 418,
	"./ru/build_format_locale/index.js": 419,
	"./ru/index.js": 833,
	"./sk/build_distance_in_words_locale/index.js": 420,
	"./sk/build_format_locale/index.js": 421,
	"./sk/index.js": 834,
	"./sl/build_distance_in_words_locale/index.js": 422,
	"./sl/build_format_locale/index.js": 423,
	"./sl/index.js": 835,
	"./sr/build_distance_in_words_locale/index.js": 424,
	"./sr/build_format_locale/index.js": 425,
	"./sr/index.js": 836,
	"./sv/build_distance_in_words_locale/index.js": 426,
	"./sv/build_format_locale/index.js": 427,
	"./sv/index.js": 837,
	"./th/build_distance_in_words_locale/index.js": 428,
	"./th/build_format_locale/index.js": 429,
	"./th/index.js": 838,
	"./tr/build_distance_in_words_locale/index.js": 430,
	"./tr/build_format_locale/index.js": 431,
	"./tr/index.js": 839,
	"./zh_cn/build_distance_in_words_locale/index.js": 432,
	"./zh_cn/build_format_locale/index.js": 433,
	"./zh_cn/index.js": 840,
	"./zh_tw/build_distance_in_words_locale/index.js": 434,
	"./zh_tw/build_format_locale/index.js": 435,
	"./zh_tw/index.js": 841
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 365;

/***/ }),
/* 366 */
/***/ (function(module, exports) {

function buildDistanceInWordsLocale () {
  var distanceInWordsLocale = {
    lessThanXSeconds: {
      one: 'أقل من ثانية واحدة',
      other: 'أقل من {{count}} ثواني'
    },

    xSeconds: {
      one: 'ثانية واحدة',
      other: '{{count}} ثواني'
    },

    halfAMinute: 'نصف دقيقة',

    lessThanXMinutes: {
      one: 'أقل من دقيقة',
      other: 'أقل من {{count}} دقيقة'
    },

    xMinutes: {
      one: 'دقيقة واحدة',
      other: '{{count}} دقائق'
    },

    aboutXHours: {
      one: 'ساعة واحدة تقريباً',
      other: '{{count}} ساعات تقريباً'
    },

    xHours: {
      one: 'ساعة واحدة',
      other: '{{count}} ساعات'
    },

    xDays: {
      one: 'يوم واحد',
      other: '{{count}} أيام'
    },

    aboutXMonths: {
      one: 'شهر واحد تقريباً',
      other: '{{count}} أشهر تقريباً'
    },

    xMonths: {
      one: 'شهر واحد',
      other: '{{count}} أشهر'
    },

    aboutXYears: {
      one: 'عام واحد تقريباً',
      other: '{{count}} أعوام تقريباً'
    },

    xYears: {
      one: 'عام واحد',
      other: '{{count}} أعوام'
    },

    overXYears: {
      one: 'أكثر من عام',
      other: 'أكثر من {{count}} أعوام'
    },

    almostXYears: {
      one: 'عام واحد تقريباً',
      other: '{{count}} أعوام تقريباً'
    }
  }

  function localize (token, count, options) {
    options = options || {}

    var result
    if (typeof distanceInWordsLocale[token] === 'string') {
      result = distanceInWordsLocale[token]
    } else if (count === 1) {
      result = distanceInWordsLocale[token].one
    } else {
      result = distanceInWordsLocale[token].other.replace('{{count}}', count)
    }

    if (options.addSuffix) {
      if (options.comparison > 0) {
        return 'في خلال ' + result
      } else {
        return 'منذ ' + result
      }
    }

    return result
  }

  return {
    localize: localize
  }
}

module.exports = buildDistanceInWordsLocale


/***/ }),
/* 367 */
/***/ (function(module, exports, __webpack_require__) {

var buildFormattingTokensRegExp = __webpack_require__(15)

function buildFormatLocale () {
  var months3char = ['يناير', 'فبراير', 'مارس', 'أبريل', 'مايو', 'يونيو', 'يوليو', 'أغسطس', 'سبتمبر', 'أكتوبر', 'نوفمبر', 'ديسمبر']
  var monthsFull = ['كانون الثاني يناير', 'شباط فبراير', 'آذار مارس', 'نيسان أبريل', 'أيار مايو', 'حزيران يونيو', 'تموز يوليو', 'آب أغسطس', 'أيلول سبتمبر', 'تشرين الأول أكتوبر', 'تشرين الثاني نوفمبر', 'كانون الأول ديسمبر']
  var weekdays2char = ['ح', 'ن', 'ث', 'ر', 'خ', 'ج', 'س']
  var weekdays3char = ['أحد', 'إثنين', 'ثلاثاء', 'أربعاء', 'خميس', 'جمعة', 'سبت']
  var weekdaysFull = ['الأحد', 'الإثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت']
  var meridiemUppercase = ['صباح', 'مساء']
  var meridiemLowercase = ['ص', 'م']
  var meridiemFull = ['صباحاً', 'مساءاً']

  var formatters = {
    // Month: Jan, Feb, ..., Dec
    'MMM': function (date) {
      return months3char[date.getMonth()]
    },

    // Month: January, February, ..., December
    'MMMM': function (date) {
      return monthsFull[date.getMonth()]
    },

    // Day of week: Su, Mo, ..., Sa
    'dd': function (date) {
      return weekdays2char[date.getDay()]
    },

    // Day of week: Sun, Mon, ..., Sat
    'ddd': function (date) {
      return weekdays3char[date.getDay()]
    },

    // Day of week: Sunday, Monday, ..., Saturday
    'dddd': function (date) {
      return weekdaysFull[date.getDay()]
    },

    // AM, PM
    'A': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]
    },

    // am, pm
    'a': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]
    },

    // a.m., p.m.
    'aa': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]
    }
  }

  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.
  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']
  ordinalFormatters.forEach(function (formatterToken) {
    formatters[formatterToken + 'o'] = function (date, formatters) {
      return ordinal(formatters[formatterToken](date))
    }
  })

  return {
    formatters: formatters,
    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)
  }
}

function ordinal (number) {
  return String(number)
}

module.exports = buildFormatLocale


/***/ }),
/* 368 */
/***/ (function(module, exports) {

function buildDistanceInWordsLocale () {
  var distanceInWordsLocale = {
    lessThanXSeconds: {
      one: 'менш секунды',
      other: 'менш {{count}} секунд'
    },

    xSeconds: {
      one: '1 секунда',
      other: '{{count}} секунд(-ы)'
    },

    halfAMinute: 'паўхвіліны',

    lessThanXMinutes: {
      one: 'менш хвіліны',
      other: 'менш {{count}} хвілін'
    },

    xMinutes: {
      one: '1 хвіліна',
      other: '{{count}} хвілін(-ы)'
    },

    aboutXHours: {
      one: 'каля 1 гадзіны',
      other: 'каля {{count}} гадзін'
    },

    xHours: {
      one: '1 гадзіна',
      other: '{{count}} гадзін(-ы)'
    },

    xDays: {
      one: '1 дзень',
      other: '{{count}} дні (дзён)'
    },

    aboutXMonths: {
      one: 'каля 1 месяца',
      other: 'каля {{count}} месяцаў'
    },

    xMonths: {
      one: '1 месяц',
      other: '{{count}} месяцы(-аў)'
    },

    aboutXYears: {
      one: 'каля 1 года',
      other: 'каля {{count}} гадоў'
    },

    xYears: {
      one: '1 год',
      other: '{{count}} гады(гадоў)'
    },

    overXYears: {
      one: 'больш 1 года',
      other: 'больш {{count}} гадоў'
    },

    almostXYears: {
      one: 'амаль 1 год',
      other: 'амаль {{count}} гады(-оў)'
    }
  }

  function localize (token, count, options) {
    options = options || {}

    var result
    if (typeof distanceInWordsLocale[token] === 'string') {
      result = distanceInWordsLocale[token]
    } else if (count === 1) {
      result = distanceInWordsLocale[token].one
    } else {
      result = distanceInWordsLocale[token].other.replace('{{count}}', count)
    }

    if (options.addSuffix) {
      if (options.comparison > 0) {
        return 'у/праз ' + result
      } else {
        return result + ' таму'
      }
    }

    return result
  }

  return {
    localize: localize
  }
}

module.exports = buildDistanceInWordsLocale


/***/ }),
/* 369 */
/***/ (function(module, exports, __webpack_require__) {

var buildFormattingTokensRegExp = __webpack_require__(15)

function buildFormatLocale () {
  var months3char = ['студз', 'лют', 'сак', 'крас', 'май', 'чэрв', 'ліп', 'жн', 'вер', 'кастр', 'ліст', 'снеж']
  var monthsFull = ['студзень', 'люты', 'сакавік', 'красавік', 'май', 'чэрвень', 'ліпень', 'жнівень', 'верасень', 'кастрычнік', 'лістапад', 'снежань']
  var weekdays2char = ['нд', 'пн', 'аў', 'ср', 'чц', 'пт', 'сб']
  var weekdays3char = ['нядз', 'пан', 'аўт', 'сер', 'чац', 'пят', 'суб']
  var weekdaysFull = ['нядзеля', 'панядзелак', 'аўторак', 'серада', 'чацвер', 'пятніца', 'субота']
  var meridiemUppercase = ['AM', 'PM']
  var meridiemLowercase = ['am', 'pm']
  var meridiemFull = ['a.m.', 'p.m.']

  var formatters = {
    // Month: Jan, Feb, ..., Dec
    'MMM': function (date) {
      return months3char[date.getMonth()]
    },

    // Month: January, February, ..., December
    'MMMM': function (date) {
      return monthsFull[date.getMonth()]
    },

    // Day of week: Su, Mo, ..., Sa
    'dd': function (date) {
      return weekdays2char[date.getDay()]
    },

    // Day of week: Sun, Mon, ..., Sat
    'ddd': function (date) {
      return weekdays3char[date.getDay()]
    },

    // Day of week: Sunday, Monday, ..., Saturday
    'dddd': function (date) {
      return weekdaysFull[date.getDay()]
    },

    // AM, PM
    'A': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]
    },

    // am, pm
    'a': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]
    },

    // a.m., p.m.
    'aa': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]
    }
  }

  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.
  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']
  ordinalFormatters.forEach(function (formatterToken) {
    formatters[formatterToken + 'o'] = function (date, formatters) {
      return ordinal(formatters[formatterToken](date))
    }
  })

  return {
    formatters: formatters,
    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)
  }
}

function ordinal (number) {
  return number + '.'
}

module.exports = buildFormatLocale


/***/ }),
/* 370 */
/***/ (function(module, exports) {

function buildDistanceInWordsLocale () {
  var distanceInWordsLocale = {
    lessThanXSeconds: {
      one: 'по-малко от секунда',
      other: 'по-малко от {{count}} секунди'
    },

    xSeconds: {
      one: '1 секунда',
      other: '{{count}} секунди'
    },

    halfAMinute: 'половин минута',

    lessThanXMinutes: {
      one: 'по-малко от минута',
      other: 'по-малко от {{count}} минути'
    },

    xMinutes: {
      one: '1 минута',
      other: '{{count}} минути'
    },

    aboutXHours: {
      one: 'около час',
      other: 'около {{count}} часа'
    },

    xHours: {
      one: '1 час',
      other: '{{count}} часа'
    },

    xDays: {
      one: '1 ден',
      other: '{{count}} дни'
    },

    aboutXMonths: {
      one: 'около месец',
      other: 'около {{count}} месеца'
    },

    xMonths: {
      one: '1 месец',
      other: '{{count}} месеца'
    },

    aboutXYears: {
      one: 'около година',
      other: 'около {{count}} години'
    },

    xYears: {
      one: '1 година',
      other: '{{count}} години'
    },

    overXYears: {
      one: 'над година',
      other: 'над {{count}} години'
    },

    almostXYears: {
      one: 'почти година',
      other: 'почти {{count}} години'
    }
  }

  function localize (token, count, options) {
    options = options || {}

    var result
    if (typeof distanceInWordsLocale[token] === 'string') {
      result = distanceInWordsLocale[token]
    } else if (count === 1) {
      result = distanceInWordsLocale[token].one
    } else {
      result = distanceInWordsLocale[token].other.replace('{{count}}', count)
    }

    if (options.addSuffix) {
      if (options.comparison > 0) {
        return 'след ' + result
      } else {
        return 'преди ' + result
      }
    }

    return result
  }

  return {
    localize: localize
  }
}

module.exports = buildDistanceInWordsLocale


/***/ }),
/* 371 */
/***/ (function(module, exports, __webpack_require__) {

var buildFormattingTokensRegExp = __webpack_require__(15)

function buildFormatLocale () {
  var months3char = ['яну', 'фев', 'мар', 'апр', 'май', 'юни', 'юли', 'авг', 'сеп', 'окт', 'ное', 'дек']
  var monthsFull = ['януари', 'февруари', 'март', 'април', 'май', 'юни', 'юли', 'август', 'септември', 'октомври', 'ноември', 'декември']
  var weekdays2char = ['нд', 'пн', 'вт', 'ср', 'чт', 'пт', 'сб']
  var weekdays3char = ['нед', 'пон', 'вто', 'сря', 'чет', 'пет', 'съб']
  var weekdaysFull = ['неделя', 'понеделник', 'вторник', 'сряда', 'четвъртък', 'петък', 'събота']
  var meridiem = ['сутринта', 'на обяд', 'следобед', 'вечерта']

  var timeOfDay = function (date) {
    var hours = date.getHours()
    if (hours >= 4 && hours < 12) {
      return meridiem[0]
    } else if (hours >= 12 && hours < 14) {
      return meridiem[1]
    } else if (hours >= 14 && hours < 17) {
      return meridiem[2]
    } else {
      return meridiem[3]
    }
  }

  var formatters = {
    // Month: Jan, Feb, ..., Dec
    'MMM': function (date) {
      return months3char[date.getMonth()]
    },

    // Month: January, February, ..., December
    'MMMM': function (date) {
      return monthsFull[date.getMonth()]
    },

    // Day of week: Su, Mo, ..., Sa
    'dd': function (date) {
      return weekdays2char[date.getDay()]
    },

    // Day of week: Sun, Mon, ..., Sat
    'ddd': function (date) {
      return weekdays3char[date.getDay()]
    },

    // Day of week: Sunday, Monday, ..., Saturday
    'dddd': function (date) {
      return weekdaysFull[date.getDay()]
    },

    // AM, PM
    'A': timeOfDay,

    // am, pm
    'a': timeOfDay,

    // a.m., p.m.
    'aa': timeOfDay
  }

  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.
  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']
  ordinalFormatters.forEach(function (formatterToken) {
    formatters[formatterToken + 'o'] = function (date, formatters) {
      return ordinal(formatters[formatterToken](date))
    }
  })

  return {
    formatters: formatters,
    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)
  }
}

function ordinal (number) {
  var rem100 = number % 100
  if (rem100 > 20 || rem100 < 10) {
    switch (rem100 % 10) {
      case 1:
        return number + '-ви'
      case 2:
        return number + '-ри'
    }
  }
  return number + '-и'
}

module.exports = buildFormatLocale


/***/ }),
/* 372 */
/***/ (function(module, exports) {

function buildDistanceInWordsLocale () {
  var distanceInWordsLocale = {
    lessThanXSeconds: {
      one: "menys d'un segon",
      other: 'menys de {{count}} segons'
    },

    xSeconds: {
      one: '1 segon',
      other: '{{count}} segons'
    },

    halfAMinute: 'mig minut',

    lessThanXMinutes: {
      one: "menys d'un minut",
      other: 'menys de {{count}} minuts'
    },

    xMinutes: {
      one: '1 minut',
      other: '{{count}} minuts'
    },

    aboutXHours: {
      one: 'aproximadament una hora',
      other: 'aproximadament {{count}} hores'
    },

    xHours: {
      one: '1 hora',
      other: '{{count}} hores'
    },

    xDays: {
      one: '1 dia',
      other: '{{count}} dies'
    },

    aboutXMonths: {
      one: 'aproximadament un mes',
      other: 'aproximadament {{count}} mesos'
    },

    xMonths: {
      one: '1 mes',
      other: '{{count}} mesos'
    },

    aboutXYears: {
      one: 'aproximadament un any',
      other: 'aproximadament {{count}} anys'
    },

    xYears: {
      one: '1 any',
      other: '{{count}} anys'
    },

    overXYears: {
      one: "més d'un any",
      other: 'més de {{count}} anys'
    },

    almostXYears: {
      one: 'gairebé un any',
      other: 'gairebé {{count}} anys'
    }
  }

  function localize (token, count, options) {
    options = options || {}

    var result
    if (typeof distanceInWordsLocale[token] === 'string') {
      result = distanceInWordsLocale[token]
    } else if (count === 1) {
      result = distanceInWordsLocale[token].one
    } else {
      result = distanceInWordsLocale[token].other.replace('{{count}}', count)
    }

    if (options.addSuffix) {
      if (options.comparison > 0) {
        return 'en ' + result
      } else {
        return 'fa ' + result
      }
    }

    return result
  }

  return {
    localize: localize
  }
}

module.exports = buildDistanceInWordsLocale


/***/ }),
/* 373 */
/***/ (function(module, exports, __webpack_require__) {

var buildFormattingTokensRegExp = __webpack_require__(15)

function buildFormatLocale () {
  var months3char = ['gen', 'feb', 'mar', 'abr', 'mai', 'jun', 'jul', 'ago', 'set', 'oct', 'nov', 'des']
  var monthsFull = ['gener', 'febrer', 'març', 'abril', 'maig', 'juny', 'juliol', 'agost', 'setembre', 'octobre', 'novembre', 'desembre']
  var weekdays2char = ['dg', 'dl', 'dt', 'dc', 'dj', 'dv', 'ds']
  var weekdays3char = ['dge', 'dls', 'dts', 'dcs', 'djs', 'dvs', 'dss']
  var weekdaysFull = ['diumenge', 'dilluns', 'dimarts', 'dimecres', 'dijous', 'divendres', 'dissabte']
  var meridiemUppercase = ['AM', 'PM']
  var meridiemLowercase = ['am', 'pm']
  var meridiemFull = ['a.m.', 'p.m.']

  var formatters = {
    // Month: Jan, Feb, ..., Dec
    'MMM': function (date) {
      return months3char[date.getMonth()]
    },

    // Month: January, February, ..., December
    'MMMM': function (date) {
      return monthsFull[date.getMonth()]
    },

    // Day of week: Su, Mo, ..., Sa
    'dd': function (date) {
      return weekdays2char[date.getDay()]
    },

    // Day of week: Sun, Mon, ..., Sat
    'ddd': function (date) {
      return weekdays3char[date.getDay()]
    },

    // Day of week: Sunday, Monday, ..., Saturday
    'dddd': function (date) {
      return weekdaysFull[date.getDay()]
    },

    // AM, PM
    'A': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]
    },

    // am, pm
    'a': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]
    },

    // a.m., p.m.
    'aa': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]
    }
  }

  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.
  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']
  ordinalFormatters.forEach(function (formatterToken) {
    formatters[formatterToken + 'o'] = function (date, formatters) {
      return ordinal(formatters[formatterToken](date))
    }
  })

  return {
    formatters: formatters,
    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)
  }
}

function ordinal (number) {
  switch (number) {
    case 1:
      return '1r'
    case 2:
      return '2n'
    case 3:
      return '3r'
    case 4:
      return '4t'
    default:
      return number + 'è'
  }
}

module.exports = buildFormatLocale


/***/ }),
/* 374 */
/***/ (function(module, exports) {

function declensionGroup (scheme, count) {
  if (count === 1) {
    return scheme.one
  }

  if (count >= 2 && count <= 4) {
    return scheme.twoFour
  }

  // if count === null || count === 0 || count >= 5
  return scheme.other
}

function declension (scheme, count, time) {
  var group = declensionGroup(scheme, count)
  var finalText = group[time] || group
  return finalText.replace('{{count}}', count)
}

function extractPreposition (token) {
  var result = ['lessThan', 'about', 'over', 'almost'].filter(function (preposition) {
    return !!token.match(new RegExp('^' + preposition))
  })

  return result[0]
}

function prefixPreposition (preposition) {
  var translation = ''

  if (preposition === 'almost') {
    translation = 'skoro'
  }

  if (preposition === 'about') {
    translation = 'přibližně'
  }

  return translation.length > 0 ? translation + ' ' : ''
}

function suffixPreposition (preposition) {
  var translation = ''

  if (preposition === 'lessThan') {
    translation = 'méně než'
  }

  if (preposition === 'over') {
    translation = 'více než'
  }

  return translation.length > 0 ? translation + ' ' : ''
}

function lowercaseFirstLetter (string) {
  return string.charAt(0).toLowerCase() + string.slice(1)
}

function buildDistanceInWordsLocale () {
  var distanceInWordsLocale = {
    xSeconds: {
      one: {
        regular: 'vteřina',
        past: 'vteřinou',
        future: 'vteřinu'
      },
      twoFour: {
        regular: '{{count}} vteřiny',
        past: '{{count}} vteřinami',
        future: '{{count}} vteřiny'
      },
      other: {
        regular: '{{count}} vteřin',
        past: '{{count}} vteřinami',
        future: '{{count}} vteřin'
      }
    },

    halfAMinute: {
      other: {
        regular: 'půl minuty',
        past: 'půl minutou',
        future: 'půl minuty'
      }
    },

    xMinutes: {
      one: {
        regular: 'minuta',
        past: 'minutou',
        future: 'minutu'
      },
      twoFour: {
        regular: '{{count}} minuty',
        past: '{{count}} minutami',
        future: '{{count}} minuty'
      },
      other: {
        regular: '{{count}} minut',
        past: '{{count}} minutami',
        future: '{{count}} minut'
      }
    },

    xHours: {
      one: {
        regular: 'hodina',
        past: 'hodinou',
        future: 'hodinu'
      },
      twoFour: {
        regular: '{{count}} hodiny',
        past: '{{count}} hodinami',
        future: '{{count}} hodiny'
      },
      other: {
        regular: '{{count}} hodin',
        past: '{{count}} hodinami',
        future: '{{count}} hodin'
      }
    },

    xDays: {
      one: {
        regular: 'den',
        past: 'dnem',
        future: 'den'
      },
      twoFour: {
        regular: '{{count}} dni',
        past: '{{count}} dny',
        future: '{{count}} dni'
      },
      other: {
        regular: '{{count}} dní',
        past: '{{count}} dny',
        future: '{{count}} dní'
      }
    },

    xMonths: {
      one: {
        regular: 'měsíc',
        past: 'měsícem',
        future: 'měsíc'
      },
      twoFour: {
        regular: '{{count}} měsíce',
        past: '{{count}} měsíci',
        future: '{{count}} měsíce'
      },
      other: {
        regular: '{{count}} měsíců',
        past: '{{count}} měsíci',
        future: '{{count}} měsíců'
      }
    },

    xYears: {
      one: {
        regular: 'rok',
        past: 'rokem',
        future: 'rok'
      },
      twoFour: {
        regular: '{{count}} roky',
        past: '{{count}} roky',
        future: '{{count}} roky'
      },
      other: {
        regular: '{{count}} roků',
        past: '{{count}} roky',
        future: '{{count}} roků'
      }
    }
  }

  function localize (token, count, options) {
    options = options || {}

    var preposition = extractPreposition(token) || ''
    var key = lowercaseFirstLetter(token.substring(preposition.length))
    var scheme = distanceInWordsLocale[key]

    if (!options.addSuffix) {
      return prefixPreposition(preposition) + suffixPreposition(preposition) + declension(scheme, count, 'regular')
    }

    if (options.comparison > 0) {
      return prefixPreposition(preposition) + 'za ' + suffixPreposition(preposition) + declension(scheme, count, 'future')
    } else {
      return prefixPreposition(preposition) + 'před ' + suffixPreposition(preposition) + declension(scheme, count, 'past')
    }
  }

  return {
    localize: localize
  }
}

module.exports = buildDistanceInWordsLocale


/***/ }),
/* 375 */
/***/ (function(module, exports, __webpack_require__) {

var buildFormattingTokensRegExp = __webpack_require__(15)

function buildFormatLocale () {
  var months3char = ['led', 'úno', 'bře', 'dub', 'kvě', 'čvn', 'čvc', 'srp', 'zář', 'říj', 'lis', 'pro']
  var monthsFull = ['leden', 'únor', 'březen', 'duben', 'květen', 'červen', 'červenec', 'srpen', 'září', 'říjen', 'listopad', 'prosinec']
  var weekdays2char = ['ne', 'po', 'út', 'st', 'čt', 'pá', 'so']
  var weekdays3char = ['ned', 'pon', 'úte', 'stř', 'čtv', 'pát', 'sob']
  var weekdaysFull = ['neděle', 'pondělí', 'úterý', 'středa', 'čtvrtek', 'pátek', 'sobota']
  var meridiemUppercase = ['DOP.', 'ODP.']
  var meridiemLowercase = ['dop.', 'odp.']
  var meridiemFull = ['dopoledne', 'odpoledne']

  var formatters = {
    // Month: led, úno, ..., pro
    'MMM': function (date) {
      return months3char[date.getMonth()]
    },

    // Month: leden, únor, ..., prosinec
    'MMMM': function (date) {
      return monthsFull[date.getMonth()]
    },

    // Day of week: ne, po, ..., so
    'dd': function (date) {
      return weekdays2char[date.getDay()]
    },

    // Day of week: ned, pon, ..., sob
    'ddd': function (date) {
      return weekdays3char[date.getDay()]
    },

    // Day of week: neděle, pondělí, ..., sobota
    'dddd': function (date) {
      return weekdaysFull[date.getDay()]
    },

    // DOP., ODP.
    'A': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]
    },

    // dop., odp.
    'a': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]
    },

    // dopoledne, odpoledne
    'aa': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]
    }
  }

  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.
  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']
  ordinalFormatters.forEach(function (formatterToken) {
    formatters[formatterToken + 'o'] = function (date, formatters) {
      return ordinal(formatters[formatterToken](date))
    }
  })

  return {
    formatters: formatters,
    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)
  }
}

function ordinal (number) {
  return number + '.'
}

module.exports = buildFormatLocale


/***/ }),
/* 376 */
/***/ (function(module, exports) {

function buildDistanceInWordsLocale () {
  var distanceInWordsLocale = {
    lessThanXSeconds: {
      one: 'mindre end et sekund',
      other: 'mindre end {{count}} sekunder'
    },

    xSeconds: {
      one: '1 sekund',
      other: '{{count}} sekunder'
    },

    halfAMinute: 'et halvt minut',

    lessThanXMinutes: {
      one: 'mindre end et minut',
      other: 'mindre end {{count}} minutter'
    },

    xMinutes: {
      one: '1 minut',
      other: '{{count}} minutter'
    },

    aboutXHours: {
      one: 'cirka 1 time',
      other: 'cirka {{count}} timer'
    },

    xHours: {
      one: '1 time',
      other: '{{count}} timer'
    },

    xDays: {
      one: '1 dag',
      other: '{{count}} dage'
    },

    aboutXMonths: {
      one: 'cirka 1 måned',
      other: 'cirka {{count}} måneder'
    },

    xMonths: {
      one: '1 måned',
      other: '{{count}} måneder'
    },

    aboutXYears: {
      one: 'cirka 1 år',
      other: 'cirka {{count}} år'
    },

    xYears: {
      one: '1 år',
      other: '{{count}} år'
    },

    overXYears: {
      one: 'over 1 år',
      other: 'over {{count}} år'
    },

    almostXYears: {
      one: 'næsten 1 år',
      other: 'næsten {{count}} år'
    }
  }

  function localize (token, count, options) {
    options = options || {}

    var result
    if (typeof distanceInWordsLocale[token] === 'string') {
      result = distanceInWordsLocale[token]
    } else if (count === 1) {
      result = distanceInWordsLocale[token].one
    } else {
      result = distanceInWordsLocale[token].other.replace('{{count}}', count)
    }

    if (options.addSuffix) {
      if (options.comparison > 0) {
        return 'om ' + result
      } else {
        return result + ' siden'
      }
    }

    return result
  }

  return {
    localize: localize
  }
}

module.exports = buildDistanceInWordsLocale


/***/ }),
/* 377 */
/***/ (function(module, exports, __webpack_require__) {

var buildFormattingTokensRegExp = __webpack_require__(15)

function buildFormatLocale () {
  var months3char = ['jan', 'feb', 'mar', 'apr', 'maj', 'jun', 'jul', 'aug', 'sep', 'okt', 'nov', 'dec']
  var monthsFull = ['januar', 'februar', 'marts', 'april', 'maj', 'juni', 'juli', 'august', 'september', 'oktober', 'november', 'december']
  var weekdays2char = ['sø', 'ma', 'ti', 'on', 'to', 'fr', 'lø']
  var weekdays3char = ['søn', 'man', 'tir', 'ons', 'tor', 'fre', 'lør']
  var weekdaysFull = ['søndag', 'mandag', 'tirsdag', 'onsdag', 'torsdag', 'fredag', 'lørdag']
  var meridiemUppercase = ['AM', 'PM']
  var meridiemLowercase = ['am', 'pm']
  var meridiemFull = ['a.m.', 'p.m.']

  var formatters = {
    // Month: Jan, Feb, ..., Dec
    'MMM': function (date) {
      return months3char[date.getMonth()]
    },

    // Month: January, February, ..., December
    'MMMM': function (date) {
      return monthsFull[date.getMonth()]
    },

    // Day of week: Su, Mo, ..., Sa
    'dd': function (date) {
      return weekdays2char[date.getDay()]
    },

    // Day of week: Sun, Mon, ..., Sat
    'ddd': function (date) {
      return weekdays3char[date.getDay()]
    },

    // Day of week: Sunday, Monday, ..., Saturday
    'dddd': function (date) {
      return weekdaysFull[date.getDay()]
    },

    // AM, PM
    'A': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]
    },

    // am, pm
    'a': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]
    },

    // a.m., p.m.
    'aa': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]
    }
  }

  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.
  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']
  ordinalFormatters.forEach(function (formatterToken) {
    formatters[formatterToken + 'o'] = function (date, formatters) {
      return ordinal(formatters[formatterToken](date))
    }
  })

  return {
    formatters: formatters,
    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)
  }
}

function ordinal (number) {
  return number + '.'
}

module.exports = buildFormatLocale


/***/ }),
/* 378 */
/***/ (function(module, exports) {

function buildDistanceInWordsLocale () {
  var distanceInWordsLocale = {
    lessThanXSeconds: {
      standalone: {
        one: 'weniger als eine Sekunde',
        other: 'weniger als {{count}} Sekunden'
      },
      withPreposition: {
        one: 'weniger als einer Sekunde',
        other: 'weniger als {{count}} Sekunden'
      }
    },

    xSeconds: {
      standalone: {
        one: 'eine Sekunde',
        other: '{{count}} Sekunden'
      },
      withPreposition: {
        one: 'einer Sekunde',
        other: '{{count}} Sekunden'
      }
    },

    halfAMinute: {
      standalone: 'eine halbe Minute',
      withPreposition: 'einer halben Minute'
    },

    lessThanXMinutes: {
      standalone: {
        one: 'weniger als eine Minute',
        other: 'weniger als {{count}} Minuten'
      },
      withPreposition: {
        one: 'weniger als einer Minute',
        other: 'weniger als {{count}} Minuten'
      }
    },

    xMinutes: {
      standalone: {
        one: 'eine Minute',
        other: '{{count}} Minuten'
      },
      withPreposition: {
        one: 'einer Minute',
        other: '{{count}} Minuten'
      }
    },

    aboutXHours: {
      standalone: {
        one: 'etwa eine Stunde',
        other: 'etwa {{count}} Stunden'
      },
      withPreposition: {
        one: 'etwa einer Stunde',
        other: 'etwa {{count}} Stunden'
      }
    },

    xHours: {
      standalone: {
        one: 'eine Stunde',
        other: '{{count}} Stunden'
      },
      withPreposition: {
        one: 'einer Stunde',
        other: '{{count}} Stunden'
      }
    },

    xDays: {
      standalone: {
        one: 'ein Tag',
        other: '{{count}} Tage'
      },
      withPreposition: {
        one: 'einem Tag',
        other: '{{count}} Tagen'
      }

    },

    aboutXMonths: {
      standalone: {
        one: 'etwa ein Monat',
        other: 'etwa {{count}} Monate'
      },
      withPreposition: {
        one: 'etwa einem Monat',
        other: 'etwa {{count}} Monaten'
      }
    },

    xMonths: {
      standalone: {
        one: 'ein Monat',
        other: '{{count}} Monate'
      },
      withPreposition: {
        one: 'einem Monat',
        other: '{{count}} Monaten'
      }
    },

    aboutXYears: {
      standalone: {
        one: 'etwa ein Jahr',
        other: 'etwa {{count}} Jahre'
      },
      withPreposition: {
        one: 'etwa einem Jahr',
        other: 'etwa {{count}} Jahren'
      }
    },

    xYears: {
      standalone: {
        one: 'ein Jahr',
        other: '{{count}} Jahre'
      },
      withPreposition: {
        one: 'einem Jahr',
        other: '{{count}} Jahren'
      }
    },

    overXYears: {
      standalone: {
        one: 'mehr als ein Jahr',
        other: 'mehr als {{count}} Jahre'
      },
      withPreposition: {
        one: 'mehr als einem Jahr',
        other: 'mehr als {{count}} Jahren'
      }
    },

    almostXYears: {
      standalone: {
        one: 'fast ein Jahr',
        other: 'fast {{count}} Jahre'
      },
      withPreposition: {
        one: 'fast einem Jahr',
        other: 'fast {{count}} Jahren'
      }
    }
  }

  function localize (token, count, options) {
    options = options || {}

    var usageGroup = options.addSuffix
      ? distanceInWordsLocale[token].withPreposition
      : distanceInWordsLocale[token].standalone

    var result
    if (typeof usageGroup === 'string') {
      result = usageGroup
    } else if (count === 1) {
      result = usageGroup.one
    } else {
      result = usageGroup.other.replace('{{count}}', count)
    }

    if (options.addSuffix) {
      if (options.comparison > 0) {
        return 'in ' + result
      } else {
        return 'vor ' + result
      }
    }

    return result
  }

  return {
    localize: localize
  }
}

module.exports = buildDistanceInWordsLocale


/***/ }),
/* 379 */
/***/ (function(module, exports, __webpack_require__) {

var buildFormattingTokensRegExp = __webpack_require__(15)

function buildFormatLocale () {
  // Note: in German, the names of days of the week and months are capitalized.
  // If you are making a new locale based on this one, check if the same is true for the language you're working on.
  // Generally, formatted dates should look like they are in the middle of a sentence,
  // e.g. in Spanish language the weekdays and months should be in the lowercase.
  var months3char = ['Jan', 'Feb', 'Mär', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dez']
  var monthsFull = ['Januar', 'Februar', 'März', 'April', 'Mai', 'Juni', 'Juli', 'August', 'September', 'Oktober', 'November', 'Dezember']
  var weekdays2char = ['So', 'Mo', 'Di', 'Mi', 'Do', 'Fr', 'Sa']
  var weekdays3char = ['Son', 'Mon', 'Die', 'Mit', 'Don', 'Fre', 'Sam']
  var weekdaysFull = ['Sonntag', 'Montag', 'Dienstag', 'Mittwoch', 'Donnerstag', 'Freitag', 'Samstag']
  var meridiemUppercase = ['AM', 'PM']
  var meridiemLowercase = ['am', 'pm']
  var meridiemFull = ['a.m.', 'p.m.']

  var formatters = {
    // Month: Jan, Feb, ..., Dec
    'MMM': function (date) {
      return months3char[date.getMonth()]
    },

    // Month: January, February, ..., December
    'MMMM': function (date) {
      return monthsFull[date.getMonth()]
    },

    // Day of week: Su, Mo, ..., Sa
    'dd': function (date) {
      return weekdays2char[date.getDay()]
    },

    // Day of week: Sun, Mon, ..., Sat
    'ddd': function (date) {
      return weekdays3char[date.getDay()]
    },

    // Day of week: Sunday, Monday, ..., Saturday
    'dddd': function (date) {
      return weekdaysFull[date.getDay()]
    },

    // AM, PM
    'A': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]
    },

    // am, pm
    'a': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]
    },

    // a.m., p.m.
    'aa': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]
    }
  }

  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.
  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']
  ordinalFormatters.forEach(function (formatterToken) {
    formatters[formatterToken + 'o'] = function (date, formatters) {
      return ordinal(formatters[formatterToken](date))
    }
  })

  return {
    formatters: formatters,
    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)
  }
}

function ordinal (number) {
  return number + '.'
}

module.exports = buildFormatLocale


/***/ }),
/* 380 */
/***/ (function(module, exports) {

function buildDistanceInWordsLocale () {
  var distanceInWordsLocale = {
    lessThanXSeconds: {
      one: 'λιγότερο από ένα δευτερόλεπτο',
      other: 'λιγότερο από {{count}} δευτερόλεπτα'
    },

    xSeconds: {
      one: '1 δευτερόλεπτο',
      other: '{{count}} δευτερόλεπτα'
    },

    halfAMinute: 'μισό λεπτό',

    lessThanXMinutes: {
      one: 'λιγότερο από ένα λεπτό',
      other: 'λιγότερο από {{count}} λεπτά'
    },

    xMinutes: {
      one: '1 λεπτό',
      other: '{{count}} λεπτά'
    },

    aboutXHours: {
      one: 'περίπου 1 ώρα',
      other: 'περίπου {{count}} ώρες'
    },

    xHours: {
      one: '1 ώρα',
      other: '{{count}} ώρες'
    },

    xDays: {
      one: '1 ημέρα',
      other: '{{count}} ημέρες'
    },

    aboutXMonths: {
      one: 'περίπου 1 μήνας',
      other: 'περίπου {{count}} μήνες'
    },

    xMonths: {
      one: '1 μήνας',
      other: '{{count}} μήνες'
    },

    aboutXYears: {
      one: 'περίπου 1 χρόνο',
      other: 'περίπου {{count}} χρόνια'
    },

    xYears: {
      one: '1 χρόνο',
      other: '{{count}} χρόνια'
    },

    overXYears: {
      one: 'πάνω από 1 χρόνο',
      other: 'πάνω από {{count}} χρόνια'
    },

    almostXYears: {
      one: 'περίπου 1 χρόνο',
      other: 'περίπου {{count}} χρόνια'
    }
  }

  function localize (token, count, options) {
    options = options || {}

    var result
    if (typeof distanceInWordsLocale[token] === 'string') {
      result = distanceInWordsLocale[token]
    } else if (count === 1) {
      result = distanceInWordsLocale[token].one
    } else {
      result = distanceInWordsLocale[token].other.replace('{{count}}', count)
    }

    if (options.addSuffix) {
      if (options.comparison > 0) {
        return 'σε ' + result
      } else {
        return result + ' πρίν'
      }
    }

    return result
  }

  return {
    localize: localize
  }
}

module.exports = buildDistanceInWordsLocale


/***/ }),
/* 381 */
/***/ (function(module, exports, __webpack_require__) {

var buildFormattingTokensRegExp = __webpack_require__(15)

function buildFormatLocale () {
  var months3char = ['Ιαν', 'Φεβ', 'Μαρ', 'Απρ', 'Μαϊ', 'Ιουν', 'Ιουλ', 'Αυγ', 'Σεπ', 'Οκτ', 'Νοε', 'Δεκ']
  var monthsFull = ['Ιανουάριος', 'Φεβρουάριος', 'Μάρτιος', 'Απρίλιος', 'Μάιος', 'Ιούνιος', 'Ιούλιος', 'Αύγουστος', 'Σεπτέμβριος', 'Οκτώβριος', 'Νοέμβριος', 'Δεκέμβριος']
  var monthsGenitive = ['Ιανουαρίου', 'Φεβρουαρίου', 'Μαρτίου', 'Απριλίου', 'Μαΐου', 'Ιουνίου', 'Ιουλίου', 'Αυγούστου', 'Σεπτεμβρίου', 'Οκτωβρίου', 'Νοεμβρίου', 'Δεκεμβρίου']
  var weekdays2char = ['Κυ', 'Δε', 'Τρ', 'Τε', 'Πέ', 'Πα', 'Σά']
  var weekdays3char = ['Κυρ', 'Δευ', 'Τρί', 'Τετ', 'Πέμ', 'Παρ', 'Σάβ']
  var weekdaysFull = ['Κυριακή', 'Δευτέρα', 'Τρίτη', 'Τετάρτη', 'Πέμπτη', 'Παρασκευή', 'Σάββατο']
  var meridiemUppercase = ['ΠΜ', 'ΜΜ']
  var meridiemLowercase = ['πμ', 'μμ']
  var meridiemFull = ['π.μ.', 'μ.μ.']

  var formatters = {
    // Month: Jan, Feb, ..., Dec
    'MMM': function (date) {
      return months3char[date.getMonth()]
    },

    // Month: January, February, ..., December
    'MMMM': function (date) {
      return monthsFull[date.getMonth()]
    },

    // Day of week: Su, Mo, ..., Sa
    'dd': function (date) {
      return weekdays2char[date.getDay()]
    },

    // Day of week: Sun, Mon, ..., Sat
    'ddd': function (date) {
      return weekdays3char[date.getDay()]
    },

    // Day of week: Sunday, Monday, ..., Saturday
    'dddd': function (date) {
      return weekdaysFull[date.getDay()]
    },

    // AM, PM
    'A': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]
    },

    // am, pm
    'a': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]
    },

    // a.m., p.m.
    'aa': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]
    }
  }

  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.
  var ordinalGenders = {
    'M': 'ος',
    'D': 'η',
    'DDD': 'η',
    'd': 'η',
    'Q': 'ο',
    'W': 'η'
  }
  var ordinalKeys = ['M', 'D', 'DDD', 'd', 'Q', 'W']
  ordinalKeys.forEach(function (formatterToken) {
    formatters[formatterToken + 'o'] = function (date, formatters) {
      return formatters[formatterToken](date) + ordinalGenders[formatterToken]
    }
  })

  // Generate genitive variant of full months
  var formatsWithGenitive = ['D', 'Do', 'DD']
  formatsWithGenitive.forEach(function (formatterToken) {
    formatters[formatterToken + ' MMMM'] = function (date, commonFormatters) {
      var formatter = formatters[formatterToken] || commonFormatters[formatterToken]
      return formatter(date, commonFormatters) + ' ' + monthsGenitive[date.getMonth()]
    }
  })

  return {
    formatters: formatters,
    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)
  }
}

module.exports = buildFormatLocale


/***/ }),
/* 382 */
/***/ (function(module, exports) {

function buildDistanceInWordsLocale () {
  var distanceInWordsLocale = {
    lessThanXSeconds: {
      one: 'malpli ol sekundo',
      other: 'malpli ol {{count}} sekundoj'
    },

    xSeconds: {
      one: '1 sekundo',
      other: '{{count}} sekundoj'
    },

    halfAMinute: 'duonminuto',

    lessThanXMinutes: {
      one: 'malpli ol minuto',
      other: 'malpli ol {{count}} minutoj'
    },

    xMinutes: {
      one: '1 minuto',
      other: '{{count}} minutoj'
    },

    aboutXHours: {
      one: 'proksimume 1 horo',
      other: 'proksimume {{count}} horoj'
    },

    xHours: {
      one: '1 horo',
      other: '{{count}} horoj'
    },

    xDays: {
      one: '1 tago',
      other: '{{count}} tagoj'
    },

    aboutXMonths: {
      one: 'proksimume 1 monato',
      other: 'proksimume {{count}} monatoj'
    },

    xMonths: {
      one: '1 monato',
      other: '{{count}} monatoj'
    },

    aboutXYears: {
      one: 'proksimume 1 jaro',
      other: 'proksimume {{count}} jaroj'
    },

    xYears: {
      one: '1 jaro',
      other: '{{count}} jaroj'
    },

    overXYears: {
      one: 'pli ol 1 jaro',
      other: 'pli ol {{count}} jaroj'
    },

    almostXYears: {
      one: 'preskaŭ 1 jaro',
      other: 'preskaŭ {{count}} jaroj'
    }
  }

  function localize (token, count, options) {
    options = options || {}

    var result
    if (typeof distanceInWordsLocale[token] === 'string') {
      result = distanceInWordsLocale[token]
    } else if (count === 1) {
      result = distanceInWordsLocale[token].one
    } else {
      result = distanceInWordsLocale[token].other.replace('{{count}}', count)
    }

    if (options.addSuffix) {
      if (options.comparison > 0) {
        return 'post ' + result
      } else {
        return 'antaŭ ' + result
      }
    }

    return result
  }

  return {
    localize: localize
  }
}

module.exports = buildDistanceInWordsLocale


/***/ }),
/* 383 */
/***/ (function(module, exports, __webpack_require__) {

var buildFormattingTokensRegExp = __webpack_require__(15)

function buildFormatLocale () {
  var months3char = ['jan', 'feb', 'mar', 'apr', 'maj', 'jun', 'jul', 'aŭg', 'sep', 'okt', 'nov', 'dec']
  var monthsFull = ['januaro', 'februaro', 'marto', 'aprilo', 'majo', 'junio', 'julio', 'aŭgusto', 'septembro', 'oktobro', 'novembro', 'decembro']
  var weekdays2char = ['di', 'lu', 'ma', 'me', 'ĵa', 've', 'sa']
  var weekdays3char = ['dim', 'lun', 'mar', 'mer', 'ĵaŭ', 'ven', 'sab']
  var weekdaysFull = ['dimanĉo', 'lundo', 'mardo', 'merkredo', 'ĵaŭdo', 'vendredo', 'sabato']
  var meridiemUppercase = ['A.T.M.', 'P.T.M.']
  var meridiemLowercase = ['a.t.m.', 'p.t.m.']
  var meridiemFull = ['antaŭtagmeze', 'posttagmeze']

  var formatters = {
    // Month: jan, feb, ..., deс
    'MMM': function (date) {
      return months3char[date.getMonth()]
    },

    // Month: januaro, februaro, ..., decembro
    'MMMM': function (date) {
      return monthsFull[date.getMonth()]
    },

    // Day of week: di, lu, ..., sa
    'dd': function (date) {
      return weekdays2char[date.getDay()]
    },

    // Day of week: dim, lun, ..., sab
    'ddd': function (date) {
      return weekdays3char[date.getDay()]
    },

    // Day of week: dimanĉo, lundo, ..., sabato
    'dddd': function (date) {
      return weekdaysFull[date.getDay()]
    },

    // A.T.M., P.T.M.
    'A': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]
    },

    // a.t.m., p.t.m.
    'a': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]
    },

    // antaŭtagmeze, posttagmeze
    'aa': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]
    }
  }

  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.
  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']
  ordinalFormatters.forEach(function (formatterToken) {
    formatters[formatterToken + 'o'] = function (date, formatters) {
      return formatters[formatterToken](date) + '-a'
    }
  })

  return {
    formatters: formatters,
    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)
  }
}

module.exports = buildFormatLocale


/***/ }),
/* 384 */
/***/ (function(module, exports) {

function buildDistanceInWordsLocale () {
  var distanceInWordsLocale = {
    lessThanXSeconds: {
      one: 'menos de un segundo',
      other: 'menos de {{count}} segundos'
    },

    xSeconds: {
      one: '1 segundo',
      other: '{{count}} segundos'
    },

    halfAMinute: 'medio minuto',

    lessThanXMinutes: {
      one: 'menos de un minuto',
      other: 'menos de {{count}} minutos'
    },

    xMinutes: {
      one: '1 minuto',
      other: '{{count}} minutos'
    },

    aboutXHours: {
      one: 'alrededor de 1 hora',
      other: 'alrededor de {{count}} horas'
    },

    xHours: {
      one: '1 hora',
      other: '{{count}} horas'
    },

    xDays: {
      one: '1 día',
      other: '{{count}} días'
    },

    aboutXMonths: {
      one: 'alrededor de 1 mes',
      other: 'alrededor de {{count}} meses'
    },

    xMonths: {
      one: '1 mes',
      other: '{{count}} meses'
    },

    aboutXYears: {
      one: 'alrededor de 1 año',
      other: 'alrededor de {{count}} años'
    },

    xYears: {
      one: '1 año',
      other: '{{count}} años'
    },

    overXYears: {
      one: 'más de 1 año',
      other: 'más de {{count}} años'
    },

    almostXYears: {
      one: 'casi 1 año',
      other: 'casi {{count}} años'
    }
  }

  function localize (token, count, options) {
    options = options || {}

    var result
    if (typeof distanceInWordsLocale[token] === 'string') {
      result = distanceInWordsLocale[token]
    } else if (count === 1) {
      result = distanceInWordsLocale[token].one
    } else {
      result = distanceInWordsLocale[token].other.replace('{{count}}', count)
    }

    if (options.addSuffix) {
      if (options.comparison > 0) {
        return 'en ' + result
      } else {
        return 'hace ' + result
      }
    }

    return result
  }

  return {
    localize: localize
  }
}

module.exports = buildDistanceInWordsLocale


/***/ }),
/* 385 */
/***/ (function(module, exports, __webpack_require__) {

var buildFormattingTokensRegExp = __webpack_require__(15)

function buildFormatLocale () {
  var months3char = ['ene', 'feb', 'mar', 'abr', 'may', 'jun', 'jul', 'ago', 'sep', 'oct', 'nov', 'dic']
  var monthsFull = ['enero', 'febrero', 'marzo', 'abril', 'mayo', 'junio', 'julio', 'agosto', 'septiembre', 'octubre', 'noviembre', 'diciembre']
  var weekdays2char = ['do', 'lu', 'ma', 'mi', 'ju', 'vi', 'sa']
  var weekdays3char = ['dom', 'lun', 'mar', 'mié', 'jue', 'vie', 'sáb']
  var weekdaysFull = ['domingo', 'lunes', 'martes', 'miércoles', 'jueves', 'viernes', 'sábado']
  var meridiemUppercase = ['AM', 'PM']
  var meridiemLowercase = ['am', 'pm']
  var meridiemFull = ['a.m.', 'p.m.']

  var formatters = {
    // Month: Jan, Feb, ..., Dec
    'MMM': function (date) {
      return months3char[date.getMonth()]
    },

    // Month: January, February, ..., December
    'MMMM': function (date) {
      return monthsFull[date.getMonth()]
    },

    // Day of week: Su, Mo, ..., Sa
    'dd': function (date) {
      return weekdays2char[date.getDay()]
    },

    // Day of week: Sun, Mon, ..., Sat
    'ddd': function (date) {
      return weekdays3char[date.getDay()]
    },

    // Day of week: Sunday, Monday, ..., Saturday
    'dddd': function (date) {
      return weekdaysFull[date.getDay()]
    },

    // AM, PM
    'A': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]
    },

    // am, pm
    'a': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]
    },

    // a.m., p.m.
    'aa': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]
    }
  }

  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.
  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']
  ordinalFormatters.forEach(function (formatterToken) {
    formatters[formatterToken + 'o'] = function (date, formatters) {
      return ordinal(formatters[formatterToken](date))
    }
  })

  return {
    formatters: formatters,
    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)
  }
}

function ordinal (number) {
  return number + 'º'
}

module.exports = buildFormatLocale


/***/ }),
/* 386 */
/***/ (function(module, exports) {

function buildDistanceInWordsLocale () {
  function futureSeconds (text) {
    return text.replace(/sekuntia?/, 'sekunnin')
  }

  function futureMinutes (text) {
    return text.replace(/minuuttia?/, 'minuutin')
  }

  function futureHours (text) {
    return text.replace(/tuntia?/, 'tunnin')
  }

  function futureDays (text) {
    return text.replace(/päivää?/, 'päivän')
  }

  function futureMonths (text) {
    return text.replace(/(kuukausi|kuukautta)/, 'kuukauden')
  }

  function futureYears (text) {
    return text.replace(/(vuosi|vuotta)/, 'vuoden')
  }

  var distanceInWordsLocale = {
    lessThanXSeconds: {
      one: 'alle sekunti',
      other: 'alle {{count}} sekuntia',
      futureTense: futureSeconds
    },

    xSeconds: {
      one: 'sekunti',
      other: '{{count}} sekuntia',
      futureTense: futureSeconds
    },

    halfAMinute: {
      one: 'puoli minuuttia',
      other: 'puoli minuuttia',
      futureTense: function (text) {
        return 'puolen minuutin'
      }
    },

    lessThanXMinutes: {
      one: 'alle minuutti',
      other: 'alle {{count}} minuuttia',
      futureTense: futureMinutes
    },

    xMinutes: {
      one: 'minuutti',
      other: '{{count}} minuuttia',
      futureTense: futureMinutes
    },

    aboutXHours: {
      one: 'noin tunti',
      other: 'noin {{count}} tuntia',
      futureTense: futureHours
    },

    xHours: {
      one: 'tunti',
      other: '{{count}} tuntia',
      futureTense: futureHours
    },

    xDays: {
      one: 'päivä',
      other: '{{count}} päivää',
      futureTense: futureDays
    },

    aboutXMonths: {
      one: 'noin kuukausi',
      other: 'noin {{count}} kuukautta',
      futureTense: futureMonths
    },

    xMonths: {
      one: 'kuukausi',
      other: '{{count}} kuukautta',
      futureTense: futureMonths
    },

    aboutXYears: {
      one: 'noin vuosi',
      other: 'noin {{count}} vuotta',
      futureTense: futureYears
    },

    xYears: {
      one: 'vuosi',
      other: '{{count}} vuotta',
      futureTense: futureYears
    },

    overXYears: {
      one: 'yli vuosi',
      other: 'yli {{count}} vuotta',
      futureTense: futureYears
    },

    almostXYears: {
      one: 'lähes vuosi',
      other: 'lähes {{count}} vuotta',
      futureTense: futureYears
    }
  }

  function localize (token, count, options) {
    options = options || {}

    var distance = distanceInWordsLocale[token]
    var result = count === 1 ? distance.one : distance.other.replace('{{count}}', count)

    if (options.addSuffix) {
      if (options.comparison > 0) {
        return distance.futureTense(result) + ' kuluttua'
      } else {
        return result + ' sitten'
      }
    }

    return result
  }

  return {
    localize: localize
  }
}

module.exports = buildDistanceInWordsLocale


/***/ }),
/* 387 */
/***/ (function(module, exports, __webpack_require__) {

var buildFormattingTokensRegExp = __webpack_require__(15)

function buildFormatLocale () {
  var months3char = ['tammi', 'helmi', 'maalis', 'huhti', 'touko', 'kesä', 'heinä', 'elo', 'syys', 'loka', 'marras', 'joulu']
  var monthsFull = ['tammikuu', 'helmikuu', 'maaliskuu', 'huhtikuu', 'toukokuu', 'kesäkuu', 'heinäkuu', 'elokuu', 'syyskuu', 'lokakuu', 'marraskuu', 'joulukuu']
  var weekdays2char = ['su', 'ma', 'ti', 'ke', 'to', 'pe', 'la']
  var weekdaysFull = ['sunnuntai', 'maanantai', 'tiistai', 'keskiviikko', 'torstai', 'perjantai', 'lauantai']

  // In Finnish `a.m.` / `p.m.` are virtually never used, but it seems `AP` (aamupäivä) / `IP` (iltapäivä) are acknowleded terms:
  // https://fi.wikipedia.org/wiki/24_tunnin_kello
  function meridiem (date) {
    return date.getHours() < 12 ? 'AP' : 'IP'
  }

  var formatters = {
    // Month: Jan, Feb, ..., Dec
    'MMM': function (date) {
      return months3char[date.getMonth()]
    },

    // Month: January, February, ..., December
    'MMMM': function (date) {
      return monthsFull[date.getMonth()]
    },

    // Day of week: Su, Mo, ..., Sa
    'dd': function (date) {
      return weekdays2char[date.getDay()]
    },

    // Day of week: Sun, Mon, ..., Sat
    'ddd': function (date) {
      // Finnish doesn't use two-char weekdays
      return weekdays2char[date.getDay()]
    },

    // Day of week: Sunday, Monday, ..., Saturday
    'dddd': function (date) {
      return weekdaysFull[date.getDay()]
    },

    // AM, PM
    'A': meridiem,

    // am, pm
    'a': meridiem,

    // a.m., p.m.
    'aa': meridiem
  }

  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.
  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']
  ordinalFormatters.forEach(function (formatterToken) {
    formatters[formatterToken + 'o'] = function (date, formatters) {
      return formatters[formatterToken](date).toString() + '.'
    }
  })

  return {
    formatters: formatters,
    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)
  }
}

module.exports = buildFormatLocale


/***/ }),
/* 388 */
/***/ (function(module, exports) {

function buildDistanceInWordsLocale () {
  var distanceInWordsLocale = {
    lessThanXSeconds: {
      one: 'mas maliit sa isang segundo',
      other: 'mas maliit sa {{count}} segundo'
    },

    xSeconds: {
      one: '1 segundo',
      other: '{{count}} segundo'
    },

    halfAMinute: 'kalahating minuto',

    lessThanXMinutes: {
      one: 'mas maliit sa isang minuto',
      other: 'mas maliit sa {{count}} minuto'
    },

    xMinutes: {
      one: '1 minuto',
      other: '{{count}} minuto'
    },

    aboutXHours: {
      one: 'mga 1 oras',
      other: 'mga {{count}} oras'
    },

    xHours: {
      one: '1 oras',
      other: '{{count}} oras'
    },

    xDays: {
      one: '1 araw',
      other: '{{count}} araw'
    },

    aboutXMonths: {
      one: 'mga 1 buwan',
      other: 'mga {{count}} buwan'
    },

    xMonths: {
      one: '1 buwan',
      other: '{{count}} buwan'
    },

    aboutXYears: {
      one: 'mga 1 taon',
      other: 'mga {{count}} taon'
    },

    xYears: {
      one: '1 taon',
      other: '{{count}} taon'
    },

    overXYears: {
      one: 'higit sa 1 taon',
      other: 'higit sa {{count}} taon'
    },

    almostXYears: {
      one: 'halos 1 taon',
      other: 'halos {{count}} taon'
    }
  }

  function localize (token, count, options) {
    options = options || {}

    var result
    if (typeof distanceInWordsLocale[token] === 'string') {
      result = distanceInWordsLocale[token]
    } else if (count === 1) {
      result = distanceInWordsLocale[token].one
    } else {
      result = distanceInWordsLocale[token].other.replace('{{count}}', count)
    }

    if (options.addSuffix) {
      if (options.comparison > 0) {
        return 'sa loob ng ' + result
      } else {
        return result + ' ang nakalipas'
      }
    }

    return result
  }

  return {
    localize: localize
  }
}

module.exports = buildDistanceInWordsLocale


/***/ }),
/* 389 */
/***/ (function(module, exports, __webpack_require__) {

var buildFormattingTokensRegExp = __webpack_require__(15)

function buildFormatLocale () {
  var months3char = ['Ene', 'Peb', 'Mar', 'Abr', 'May', 'Hun', 'Hul', 'Ago', 'Set', 'Okt', 'Nob', 'Dis']
  var monthsFull = ['Enero', 'Pebrero', 'Marso', 'Abril', 'Mayo', 'Hunyo', 'Hulyo', 'Agosto', 'Setyembre', 'Oktubre', 'Nobyembre', 'Disyembre']
  var weekdays2char = ['Li', 'Lu', 'Ma', 'Mi', 'Hu', 'Bi', 'Sa']
  var weekdays3char = ['Lin', 'Lun', 'Mar', 'Miy', 'Huw', 'Biy', 'Sab']
  var weekdaysFull = ['Linggo', 'Lunes', 'Martes', 'Miyerkules', 'Huwebes', 'Biyernes', 'Sabado']
  var meridiemUppercase = ['NU', 'NT', 'NH', 'NG']
  var meridiemLowercase = ['nu', 'nt', 'nh', 'ng']
  var meridiemFull = ['ng umaga', 'ng tanghali', 'ng hapon', 'ng gabi']

  var formatters = {
    // Month: Jan, Feb, ..., Dec
    'MMM': function (date) {
      return months3char[date.getMonth()]
    },

    // Month: January, February, ..., December
    'MMMM': function (date) {
      return monthsFull[date.getMonth()]
    },

    // Day of week: Su, Mo, ..., Sa
    'dd': function (date) {
      return weekdays2char[date.getDay()]
    },

    // Day of week: Sun, Mon, ..., Sat
    'ddd': function (date) {
      return weekdays3char[date.getDay()]
    },

    // Day of week: Sunday, Monday, ..., Saturday
    'dddd': function (date) {
      return weekdaysFull[date.getDay()]
    },

    // AM, PM
    'A': function (date) {
      if (date.getHours() > 12) {
        var modulo = date.getHours() % 12
        if (modulo < 6) {
          return meridiemUppercase[2]
        } else {
          return meridiemUppercase[3]
        }
      } else if (date.getHours() < 12) {
        return meridiemUppercase[0]
      } else {
        return meridiemUppercase[1]
      }
    },

    // am, pm
    'a': function (date) {
      if (date.getHours() > 12) {
        var modulo = date.getHours() % 12
        if (modulo < 6) {
          return meridiemLowercase[2]
        } else {
          return meridiemLowercase[3]
        }
      } else if (date.getHours() < 12) {
        return meridiemLowercase[0]
      } else {
        return meridiemLowercase[1]
      }
    },

    // a.m., p.m.
    'aa': function (date) {
      if (date.getHours() > 12) {
        var modulo = date.getHours() % 12
        if (modulo < 6) {
          return meridiemFull[2]
        } else {
          return meridiemFull[3]
        }
      } else if (date.getHours() < 12) {
        return meridiemFull[0]
      } else {
        return meridiemFull[1]
      }
    }
  }

  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.
  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']
  ordinalFormatters.forEach(function (formatterToken) {
    formatters[formatterToken + 'o'] = function (date, formatters) {
      return ordinal(formatters[formatterToken](date))
    }
  })

  return {
    formatters: formatters,
    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)
  }
}

function ordinal (number) {
  return 'ika-' + number
}

module.exports = buildFormatLocale


/***/ }),
/* 390 */
/***/ (function(module, exports) {

function buildDistanceInWordsLocale () {
  var distanceInWordsLocale = {
    lessThanXSeconds: {
      one: 'moins d’une seconde',
      other: 'moins de {{count}} secondes'
    },

    xSeconds: {
      one: '1 seconde',
      other: '{{count}} secondes'
    },

    halfAMinute: '30 secondes',

    lessThanXMinutes: {
      one: 'moins d’une minute',
      other: 'moins de {{count}} minutes'
    },

    xMinutes: {
      one: '1 minute',
      other: '{{count}} minutes'
    },

    aboutXHours: {
      one: 'environ 1 heure',
      other: 'environ {{count}} heures'
    },

    xHours: {
      one: '1 heure',
      other: '{{count}} heures'
    },

    xDays: {
      one: '1 jour',
      other: '{{count}} jours'
    },

    aboutXMonths: {
      one: 'environ 1 mois',
      other: 'environ {{count}} mois'
    },

    xMonths: {
      one: '1 mois',
      other: '{{count}} mois'
    },

    aboutXYears: {
      one: 'environ 1 an',
      other: 'environ {{count}} ans'
    },

    xYears: {
      one: '1 an',
      other: '{{count}} ans'
    },

    overXYears: {
      one: 'plus d’un an',
      other: 'plus de {{count}} ans'
    },

    almostXYears: {
      one: 'presqu’un an',
      other: 'presque {{count}} ans'
    }
  }

  function localize (token, count, options) {
    options = options || {}

    var result
    if (typeof distanceInWordsLocale[token] === 'string') {
      result = distanceInWordsLocale[token]
    } else if (count === 1) {
      result = distanceInWordsLocale[token].one
    } else {
      result = distanceInWordsLocale[token].other.replace('{{count}}', count)
    }

    if (options.addSuffix) {
      if (options.comparison > 0) {
        return 'dans ' + result
      } else {
        return 'il y a ' + result
      }
    }

    return result
  }

  return {
    localize: localize
  }
}

module.exports = buildDistanceInWordsLocale


/***/ }),
/* 391 */
/***/ (function(module, exports, __webpack_require__) {

var buildFormattingTokensRegExp = __webpack_require__(15)

function buildFormatLocale () {
  var months3char = ['janv.', 'févr.', 'mars', 'avr.', 'mai', 'juin', 'juill.', 'août', 'sept.', 'oct.', 'nov.', 'déc.']
  var monthsFull = ['janvier', 'février', 'mars', 'avril', 'mai', 'juin', 'juillet', 'août', 'septembre', 'octobre', 'novembre', 'décembre']
  var weekdays2char = ['di', 'lu', 'ma', 'me', 'je', 've', 'sa']
  var weekdays3char = ['dim.', 'lun.', 'mar.', 'mer.', 'jeu.', 'ven.', 'sam.']
  var weekdaysFull = ['dimanche', 'lundi', 'mardi', 'mercredi', 'jeudi', 'vendredi', 'samedi']
  var meridiemUppercase = ['AM', 'PM']
  var meridiemLowercase = ['am', 'pm']
  var meridiemFull = ['du matin', 'de l’après-midi', 'du soir']

  var formatters = {
    // Month: Jan, Feb, …, Dec
    'MMM': function (date) {
      return months3char[date.getMonth()]
    },

    // Month: January, February, …, December
    'MMMM': function (date) {
      return monthsFull[date.getMonth()]
    },

    // Day of week: Su, Mo, …, Sa
    'dd': function (date) {
      return weekdays2char[date.getDay()]
    },

    // Day of week: Sun, Mon, …, Sat
    'ddd': function (date) {
      return weekdays3char[date.getDay()]
    },

    // Day of week: Sunday, Monday, …, Saturday
    'dddd': function (date) {
      return weekdaysFull[date.getDay()]
    },

    // AM, PM
    'A': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]
    },

    // am, pm
    'a': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]
    },

    // a.m., p.m.
    'aa': function (date) {
      var hours = date.getHours()

      if (hours <= 12) {
        return meridiemFull[0]
      }

      if (hours <= 16) {
        return meridiemFull[1]
      }

      return meridiemFull[2]
    },

    // ISO week, ordinal version: 1st, 2nd, …, 53rd
    // NOTE: Week has feminine grammatical gender in French: semaine
    'Wo': function (date, formatters) {
      return feminineOrdinal(formatters.W(date))
    }
  }

  // Generate ordinal version of formatters: M → Mo, D → Do, etc.
  // NOTE: For words with masculine grammatical gender in French: mois, jour, trimestre
  var formatterTokens = ['M', 'D', 'DDD', 'd', 'Q']
  formatterTokens.forEach(function (formatterToken) {
    formatters[formatterToken + 'o'] = function (date, formatters) {
      return masculineOrdinal(formatters[formatterToken](date))
    }
  })

  // Special case for day of month ordinals in long date format context:
  // 1er mars, 2 mars, 3 mars, …
  // See https://github.com/date-fns/date-fns/issues/437
  //
  // NOTE: The below implementation works because parsing of tokens inside a
  // format string is done by a greedy regular expression, i.e. longer tokens
  // have priority. E.g. formatter for "Do MMMM" has priority over individual
  // formatters for "Do" and "MMMM".
  var monthsTokens = ['MMM', 'MMMM']
  monthsTokens.forEach(function (monthToken) {
    formatters['Do ' + monthToken] = function (date, commonFormatters) {
      var dayOfMonthToken = date.getDate() === 1
        ? 'Do'
        : 'D'
      var dayOfMonthFormatter = formatters[dayOfMonthToken] || commonFormatters[dayOfMonthToken]

      return dayOfMonthFormatter(date, commonFormatters) + ' ' + formatters[monthToken](date)
    }
  })

  return {
    formatters: formatters,
    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)
  }
}

function masculineOrdinal (number) {
  if (number === 1) {
    return '1er'
  }

  return number + 'e'
}

function feminineOrdinal (number) {
  if (number === 1) {
    return '1re'
  }

  return number + 'e'
}

module.exports = buildFormatLocale


/***/ }),
/* 392 */
/***/ (function(module, exports) {

function buildDistanceInWordsLocale () {
  var distanceInWordsLocale = {
    lessThanXSeconds: {
      one: {
        standalone: 'manje od 1 sekunde',
        withPrepositionAgo: 'manje od 1 sekunde',
        withPrepositionIn: 'manje od 1 sekundu'
      },
      dual: 'manje od {{count}} sekunde',
      other: 'manje od {{count}} sekundi'
    },

    xSeconds: {
      one: {
        standalone: '1 sekunda',
        withPrepositionAgo: '1 sekunde',
        withPrepositionIn: '1 sekundu'
      },
      dual: '{{count}} sekunde',
      other: '{{count}} sekundi'
    },

    halfAMinute: 'pola minute',

    lessThanXMinutes: {
      one: {
        standalone: 'manje od 1 minute',
        withPrepositionAgo: 'manje od 1 minute',
        withPrepositionIn: 'manje od 1 minutu'
      },
      dual: 'manje od {{count}} minute',
      other: 'manje od {{count}} minuta'
    },

    xMinutes: {
      one: {
        standalone: '1 minuta',
        withPrepositionAgo: '1 minute',
        withPrepositionIn: '1 minutu'
      },
      dual: '{{count}} minute',
      other: '{{count}} minuta'
    },

    aboutXHours: {
      one: {
        standalone: 'oko 1 sat',
        withPrepositionAgo: 'oko 1 sat',
        withPrepositionIn: 'oko 1 sat'
      },
      dual: 'oko {{count}} sata',
      other: 'oko {{count}} sati'
    },

    xHours: {
      one: {
        standalone: '1 sat',
        withPrepositionAgo: '1 sat',
        withPrepositionIn: '1 sat'
      },
      dual: '{{count}} sata',
      other: '{{count}} sati'
    },

    xDays: {
      one: {
        standalone: '1 dan',
        withPrepositionAgo: '1 dan',
        withPrepositionIn: '1 dan'
      },
      dual: '{{count}} dana',
      other: '{{count}} dana'
    },

    aboutXMonths: {
      one: {
        standalone: 'oko 1 mjesec',
        withPrepositionAgo: 'oko 1 mjesec',
        withPrepositionIn: 'oko 1 mjesec'
      },
      dual: 'oko {{count}} mjeseca',
      other: 'oko {{count}} mjeseci'
    },

    xMonths: {
      one: {
        standalone: '1 mjesec',
        withPrepositionAgo: '1 mjesec',
        withPrepositionIn: '1 mjesec'
      },
      dual: '{{count}} mjeseca',
      other: '{{count}} mjeseci'
    },

    aboutXYears: {
      one: {
        standalone: 'oko 1 godinu',
        withPrepositionAgo: 'oko 1 godinu',
        withPrepositionIn: 'oko 1 godinu'
      },
      dual: 'oko {{count}} godine',
      other: 'oko {{count}} godina'
    },

    xYears: {
      one: {
        standalone: '1 godina',
        withPrepositionAgo: '1 godine',
        withPrepositionIn: '1 godinu'
      },
      dual: '{{count}} godine',
      other: '{{count}} godina'
    },

    overXYears: {
      one: {
        standalone: 'preko 1 godinu',
        withPrepositionAgo: 'preko 1 godinu',
        withPrepositionIn: 'preko 1 godinu'
      },
      dual: 'preko {{count}} godine',
      other: 'preko {{count}} godina'
    },

    almostXYears: {
      one: {
        standalone: 'gotovo 1 godinu',
        withPrepositionAgo: 'gotovo 1 godinu',
        withPrepositionIn: 'gotovo 1 godinu'
      },
      dual: 'gotovo {{count}} godine',
      other: 'gotovo {{count}} godina'
    }
  }

  function localize (token, count, options) {
    options = options || {}

    var result

    if (typeof distanceInWordsLocale[token] === 'string') {
      result = distanceInWordsLocale[token]
    } else if (count === 1) {
      if (options.addSuffix) {
        if (options.comparison > 0) {
          result = distanceInWordsLocale[token].one.withPrepositionIn
        } else {
          result = distanceInWordsLocale[token].one.withPrepositionAgo
        }
      } else {
        result = distanceInWordsLocale[token].one.standalone
      }
    } else if (
      count % 10 > 1 && count % 10 < 5 && // if last digit is between 2 and 4
      String(count).substr(-2, 1) !== '1' // unless the 2nd to last digit is "1"
    ) {
      result = distanceInWordsLocale[token].dual.replace('{{count}}', count)
    } else {
      result = distanceInWordsLocale[token].other.replace('{{count}}', count)
    }

    if (options.addSuffix) {
      if (options.comparison > 0) {
        return 'za ' + result
      } else {
        return 'prije ' + result
      }
    }

    return result
  }

  return {
    localize: localize
  }
}

module.exports = buildDistanceInWordsLocale


/***/ }),
/* 393 */
/***/ (function(module, exports, __webpack_require__) {

var buildFormattingTokensRegExp = __webpack_require__(15)

function buildFormatLocale () {
  var months3char = ['sij', 'velj', 'ožu', 'tra', 'svi', 'lip', 'srp', 'kol', 'ruj', 'lis', 'stu', 'pro']
  var monthsFull = ['siječanj', 'veljača', 'ožujak', 'travanj', 'svibanj', 'lipanj', 'srpanj', 'kolovoz', 'rujan', 'listopad', 'studeni', 'prosinac']
  var monthsGenitive = ['siječnja', 'veljače', 'ožujka', 'travnja', 'svibnja', 'lipnja', 'srpnja', 'kolovoza', 'rujna', 'listopada', 'studenog', 'prosinca']
  var weekdays2char = ['ne', 'po', 'ut', 'sr', 'če', 'pe', 'su']
  var weekdays3char = ['ned', 'pon', 'uto', 'sri', 'čet', 'pet', 'sub']
  var weekdaysFull = ['nedjelja', 'ponedjeljak', 'utorak', 'srijeda', 'četvrtak', 'petak', 'subota']
  var meridiemUppercase = ['ujutro', 'popodne']
  var meridiemLowercase = ['ujutro', 'popodne']
  var meridiemFull = ['ujutro', 'popodne']

  var formatters = {
    // Month: Jan, Feb, ..., Dec
    'MMM': function (date) {
      return months3char[date.getMonth()]
    },

    // Month: January, February, ..., December
    'MMMM': function (date) {
      return monthsFull[date.getMonth()]
    },

    // Day of week: Su, Mo, ..., Sa
    'dd': function (date) {
      return weekdays2char[date.getDay()]
    },

    // Day of week: Sun, Mon, ..., Sat
    'ddd': function (date) {
      return weekdays3char[date.getDay()]
    },

    // Day of week: Sunday, Monday, ..., Saturday
    'dddd': function (date) {
      return weekdaysFull[date.getDay()]
    },

    // AM, PM
    'A': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]
    },

    // am, pm
    'a': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]
    },

    // a.m., p.m.
    'aa': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]
    }
  }

  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.
  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']
  ordinalFormatters.forEach(function (formatterToken) {
    formatters[formatterToken + 'o'] = function (date, formatters) {
      return ordinal(formatters[formatterToken](date))
    }
  })

  // Generate formatters like 'D MMMM', where the month is in the genitive case
  var monthsGenitiveFormatters = ['D', 'Do', 'DD']
  monthsGenitiveFormatters.forEach(function (formatterToken) {
    formatters[formatterToken + ' MMM'] = function (date, commonFormatters) {
      var formatter = formatters[formatterToken] || commonFormatters[formatterToken]
      return formatter(date, commonFormatters) + ' ' + monthsGenitive[date.getMonth()]
    }
  })

  return {
    formatters: formatters,
    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)
  }
}

function ordinal (number) {
  return number + '.'
}

module.exports = buildFormatLocale


/***/ }),
/* 394 */
/***/ (function(module, exports) {

function buildDistanceInWordsLocale () {
  var distanceInWordsLocale = {
    lessThanXSeconds: {
      one: 'kevesebb, mint egy másodperce',
      other: 'kevesebb, mint {{count}} másodperce'
    },

    xSeconds: {
      one: '1 másodperce',
      other: '{{count}} másodperce'
    },

    halfAMinute: 'fél perce',

    lessThanXMinutes: {
      one: 'kevesebb, mint egy perce',
      other: 'kevesebb, mint {{count}} perce'
    },

    xMinutes: {
      one: '1 perce',
      other: '{{count}} perce'
    },

    aboutXHours: {
      one: 'közel 1 órája',
      other: 'közel {{count}} órája'
    },

    xHours: {
      one: '1 órája',
      other: '{{count}} órája'
    },

    xDays: {
      one: '1 napja',
      other: '{{count}} napja'
    },

    aboutXMonths: {
      one: 'közel 1 hónapja',
      other: 'közel {{count}} hónapja'
    },

    xMonths: {
      one: '1 hónapja',
      other: '{{count}} hónapja'
    },

    aboutXYears: {
      one: 'közel 1 éve',
      other: 'közel {{count}} éve'
    },

    xYears: {
      one: '1 éve',
      other: '{{count}} éve'
    },

    overXYears: {
      one: 'több, mint 1 éve',
      other: 'több, mint {{count}} éve'
    },

    almostXYears: {
      one: 'majdnem 1 éve',
      other: 'majdnem {{count}} éve'
    }
  }

  function localize (token, count, options) {
    options = options || {}

    var result
    if (typeof distanceInWordsLocale[token] === 'string') {
      result = distanceInWordsLocale[token]
    } else if (count === 1) {
      result = distanceInWordsLocale[token].one
    } else {
      result = distanceInWordsLocale[token].other.replace('{{count}}', count)
    }

    if (options.addSuffix) {
      if (options.comparison > 0) {
        return '' + result
      } else {
        return result + ''
      }
    }

    return result
  }

  return {
    localize: localize
  }
}

module.exports = buildDistanceInWordsLocale


/***/ }),
/* 395 */
/***/ (function(module, exports, __webpack_require__) {

var buildFormattingTokensRegExp = __webpack_require__(15)

function buildFormatLocale () {
  // Note: in English, the names of days of the week and months are capitalized.
  // If you are making a new locale based on this one, check if the same is true for the language you're working on.
  // Generally, formatted dates should look like they are in the middle of a sentence,
  // e.g. in Spanish language the weekdays and months should be in the lowercase.
  var months3char = ['Jan', 'Feb', 'Már', 'Ápr', 'Máj', 'Jún', 'Júl', 'Aug', 'Sze', 'Okt', 'Nov', 'Dec']
  var monthsFull = ['Január', 'Február', 'Március', 'Április', 'Május', 'Június', 'Július', 'Augusztus', 'Szeptember', 'Október', 'November', 'December']
  var weekdays2char = ['Va', 'Hé', 'Ke', 'Sze', 'Cs', 'Pé', 'Szo']
  var weekdays3char = ['Vas', 'Hét', 'Ked', 'Sze', 'Csü', 'Pén', 'Szo']
  var weekdaysFull = ['Vasárnap', 'Hétfő', 'Kedd', 'Szerda', 'Csütörtök', 'Péntek', 'Szombat']
  var meridiemUppercase = ['DE', 'DU']
  var meridiemLowercase = ['de', 'du']
  var meridiemFull = ['délelőtt', 'délután']

  var formatters = {
    // Month: Jan, Feb, ..., Dec
    'MMM': function (date) {
      return months3char[date.getMonth()]
    },

    // Month: January, February, ..., December
    'MMMM': function (date) {
      return monthsFull[date.getMonth()]
    },

    // Day of week: Su, Mo, ..., Sa
    'dd': function (date) {
      return weekdays2char[date.getDay()]
    },

    // Day of week: Sun, Mon, ..., Sat
    'ddd': function (date) {
      return weekdays3char[date.getDay()]
    },

    // Day of week: Sunday, Monday, ..., Saturday
    'dddd': function (date) {
      return weekdaysFull[date.getDay()]
    },

    // AM, PM
    'A': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]
    },

    // am, pm
    'a': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]
    },

    // a.m., p.m.
    'aa': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]
    }
  }

  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.
  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']
  ordinalFormatters.forEach(function (formatterToken) {
    formatters[formatterToken + 'o'] = function (date, formatters) {
      return ordinal(formatters[formatterToken](date))
    }
  })

  return {
    formatters: formatters,
    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)
  }
}

function ordinal (number) {
  var rem100 = number % 100
  if (rem100 > 20 || rem100 < 10) {
    switch (rem100 % 10) {
      case 1:
        return number + 'st'
      case 2:
        return number + 'nd'
      case 3:
        return number + 'rd'
    }
  }
  return number + 'th'
}

module.exports = buildFormatLocale


/***/ }),
/* 396 */
/***/ (function(module, exports) {

function buildDistanceInWordsLocale () {
  var distanceInWordsLocale = {
    lessThanXSeconds: {
      one: 'kurang dari 1 detik',
      other: 'kurang dari {{count}} detik'
    },

    xSeconds: {
      one: '1 detik',
      other: '{{count}} detik'
    },

    halfAMinute: 'setengah menit',

    lessThanXMinutes: {
      one: 'kurang dari 1 menit',
      other: 'kurang dari {{count}} menit'
    },

    xMinutes: {
      one: '1 menit',
      other: '{{count}} menit'
    },

    aboutXHours: {
      one: 'sekitar 1 jam',
      other: 'sekitar {{count}} jam'
    },

    xHours: {
      one: '1 jam',
      other: '{{count}} jam'
    },

    xDays: {
      one: '1 hari',
      other: '{{count}} hari'
    },

    aboutXMonths: {
      one: 'sekitar 1 bulan',
      other: 'sekitar {{count}} bulan'
    },

    xMonths: {
      one: '1 bulan',
      other: '{{count}} bulan'
    },

    aboutXYears: {
      one: 'sekitar 1 tahun',
      other: 'sekitar {{count}} tahun'
    },

    xYears: {
      one: '1 tahun',
      other: '{{count}} tahun'
    },

    overXYears: {
      one: 'lebih dari 1 tahun',
      other: 'lebih dari {{count}} tahun'
    },

    almostXYears: {
      one: 'hampir 1 tahun',
      other: 'hampir {{count}} tahun'
    }
  }

  function localize (token, count, options) {
    options = options || {}

    var result
    if (typeof distanceInWordsLocale[token] === 'string') {
      result = distanceInWordsLocale[token]
    } else if (count === 1) {
      result = distanceInWordsLocale[token].one
    } else {
      result = distanceInWordsLocale[token].other.replace('{{count}}', count)
    }

    if (options.addSuffix) {
      if (options.comparison > 0) {
        return 'dalam waktu ' + result
      } else {
        return result + ' yang lalu'
      }
    }

    return result
  }

  return {
    localize: localize
  }
}

module.exports = buildDistanceInWordsLocale


/***/ }),
/* 397 */
/***/ (function(module, exports, __webpack_require__) {

var buildFormattingTokensRegExp = __webpack_require__(15)

function buildFormatLocale () {
  // Note: in Indonesian, the names of days of the week and months are capitalized.
  // If you are making a new locale based on this one, check if the same is true for the language you're working on.
  // Generally, formatted dates should look like they are in the middle of a sentence,
  // e.g. in Spanish language the weekdays and months should be in the lowercase.
  var months3char = ['Jan', 'Feb', 'Mar', 'Apr', 'Mei', 'Jun', 'Jul', 'Agu', 'Sep', 'Okt', 'Nov', 'Des']
  var monthsFull = ['Januari', 'Februari', 'Maret', 'April', 'Mei', 'Juni', 'Juli', 'Agustus', 'September', 'Oktober', 'November', 'Desember']
  var weekdays2char = ['Mi', 'Sn', 'Sl', 'Ra', 'Ka', 'Ju', 'Sa']
  var weekdays3char = ['Min', 'Sen', 'Sel', 'Rab', 'Kam', 'Jum', 'Sab']
  var weekdaysFull = ['Minggu', 'Senin', 'Selasa', 'Rabu', 'Kamis', 'Jumat', 'Sabtu']
  var meridiemUppercase = ['AM', 'PM']
  var meridiemLowercase = ['am', 'pm']
  var meridiemFull = ['a.m.', 'p.m.']

  var formatters = {
    // Month: Jan, Feb, ..., Dec
    'MMM': function (date) {
      return months3char[date.getMonth()]
    },

    // Month: January, February, ..., December
    'MMMM': function (date) {
      return monthsFull[date.getMonth()]
    },

    // Day of week: Su, Mo, ..., Sa
    'dd': function (date) {
      return weekdays2char[date.getDay()]
    },

    // Day of week: Sun, Mon, ..., Sat
    'ddd': function (date) {
      return weekdays3char[date.getDay()]
    },

    // Day of week: Sunday, Monday, ..., Saturday
    'dddd': function (date) {
      return weekdaysFull[date.getDay()]
    },

    // AM, PM
    'A': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]
    },

    // am, pm
    'a': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]
    },

    // a.m., p.m.
    'aa': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]
    }
  }

  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.
  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']
  ordinalFormatters.forEach(function (formatterToken) {
    formatters[formatterToken + 'o'] = function (date, formatters) {
      return ordinal(formatters[formatterToken](date))
    }
  })

  return {
    formatters: formatters,
    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)
  }
}

function ordinal (number) {
  switch (number) {
    case 1:
      return 'pertama'
    case 2:
      return 'kedua'
    case 3:
      return 'ketiga'
    default:
      return 'ke-' + number
  }
}

module.exports = buildFormatLocale


/***/ }),
/* 398 */
/***/ (function(module, exports) {

function buildDistanceInWordsLocale () {
  var distanceInWordsLocale = {
    lessThanXSeconds: {
      one: 'minna en 1 sekúnda',
      other: 'minna en {{count}} sekúndur'
    },

    xSeconds: {
      one: '1 sekúnda',
      other: '{{count}} sekúndur'
    },

    halfAMinute: 'hálf mínúta',

    lessThanXMinutes: {
      one: 'minna en 1 mínúta',
      other: 'minna en {{count}} mínútur'
    },

    xMinutes: {
      one: '1 mínúta',
      other: '{{count}} mínútur'
    },

    aboutXHours: {
      one: 'u.þ.b. 1 klukkustund',
      other: 'u.þ.b. {{count}} klukkustundir'
    },

    xHours: {
      one: '1 klukkustund',
      other: '{{count}} klukkustundir'
    },

    xDays: {
      one: '1 dagur',
      other: '{{count}} dagar'
    },

    aboutXMonths: {
      one: 'u.þ.b. 1 mánuður',
      other: 'u.þ.b. {{count}} mánuðir'
    },

    xMonths: {
      one: '1 mánuður',
      other: '{{count}} mánuðir'
    },

    aboutXYears: {
      one: 'u.þ.b. 1 ár',
      other: 'u.þ.b. {{count}} ár'
    },

    xYears: {
      one: '1 ár',
      other: '{{count}} ár'
    },

    overXYears: {
      one: 'meira en 1 ár',
      other: 'meira en {{count}} ár'
    },

    almostXYears: {
      one: 'næstum 1 ár',
      other: 'næstum {{count}} ár'
    }
  }

  function localize (token, count, options) {
    options = options || {}

    var result
    if (typeof distanceInWordsLocale[token] === 'string') {
      result = distanceInWordsLocale[token]
    } else if (count === 1) {
      result = distanceInWordsLocale[token].one
    } else {
      result = distanceInWordsLocale[token].other.replace('{{count}}', count)
    }

    if (options.addSuffix) {
      if (options.comparison > 0) {
        return 'í ' + result
      } else {
        return result + ' síðan'
      }
    }

    return result
  }

  return {
    localize: localize
  }
}

module.exports = buildDistanceInWordsLocale


/***/ }),
/* 399 */
/***/ (function(module, exports, __webpack_require__) {

var buildFormattingTokensRegExp = __webpack_require__(15)

function buildFormatLocale () {
  var months3char = ['jan', 'feb', 'mar', 'apr', 'maí', 'jún', 'júl', 'ágú', 'sep', 'okt', 'nóv', 'des']
  var monthsFull = ['janúar', 'febrúar', 'mars', 'apríl', 'maí', 'júní', 'júlí', 'ágúst', 'september', 'október', 'nóvember', 'desember']
  var weekdays2char = ['su', 'má', 'þr', 'mi', 'fi', 'fö', 'la']
  var weekdays3char = ['sun', 'mán', 'þri', 'mið', 'fim', 'fös', 'lau']
  var weekdaysFull = ['sunnudaginn', 'mánudaginn', 'þriðjudaginn', 'miðvikudaginn', 'fimmtudaginn', 'föstudaginn', 'laugardaginn']
  var meridiemUppercase = ['AM', 'PM']
  var meridiemLowercase = ['am', 'pm']
  var meridiemFull = ['a.m.', 'p.m.']

  var formatters = {
    // Month: Jan, Feb, ..., Dec
    'MMM': function (date) {
      return months3char[date.getMonth()]
    },

    // Month: January, February, ..., December
    'MMMM': function (date) {
      return monthsFull[date.getMonth()]
    },

    // Day of week: Su, Mo, ..., Sa
    'dd': function (date) {
      return weekdays2char[date.getDay()]
    },

    // Day of week: Sun, Mon, ..., Sat
    'ddd': function (date) {
      return weekdays3char[date.getDay()]
    },

    // Day of week: Sunday, Monday, ..., Saturday
    'dddd': function (date) {
      return weekdaysFull[date.getDay()]
    },

    // AM, PM
    'A': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]
    },

    // am, pm
    'a': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]
    },

    // a.m., p.m.
    'aa': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]
    }
  }

  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.
  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']
  ordinalFormatters.forEach(function (formatterToken) {
    formatters[formatterToken + 'o'] = function (date, formatters) {
      return ordinal(formatters[formatterToken](date))
    }
  })

  return {
    formatters: formatters,
    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)
  }
}

function ordinal (number) {
  return '' + number
}

module.exports = buildFormatLocale


/***/ }),
/* 400 */
/***/ (function(module, exports) {

function buildDistanceInWordsLocale () {
  var distanceInWordsLocale = {
    lessThanXSeconds: {
      one: 'meno di un secondo',
      other: 'meno di {{count}} secondi'
    },

    xSeconds: {
      one: 'un secondo',
      other: '{{count}} secondi'
    },

    halfAMinute: 'alcuni secondi',

    lessThanXMinutes: {
      one: 'meno di un minuto',
      other: 'meno di {{count}} minuti'
    },

    xMinutes: {
      one: 'un minuto',
      other: '{{count}} minuti'
    },

    aboutXHours: {
      one: 'circa un\'ora',
      other: 'circa {{count}} ore'
    },

    xHours: {
      one: 'un\'ora',
      other: '{{count}} ore'
    },

    xDays: {
      one: 'un giorno',
      other: '{{count}} giorni'
    },

    aboutXMonths: {
      one: 'circa un mese',
      other: 'circa {{count}} mesi'
    },

    xMonths: {
      one: 'un mese',
      other: '{{count}} mesi'
    },

    aboutXYears: {
      one: 'circa un anno',
      other: 'circa {{count}} anni'
    },

    xYears: {
      one: 'un anno',
      other: '{{count}} anni'
    },

    overXYears: {
      one: 'più di un anno',
      other: 'più di {{count}} anni'
    },

    almostXYears: {
      one: 'quasi un anno',
      other: 'quasi {{count}} anni'
    }
  }

  function localize (token, count, options) {
    options = options || {}

    var result
    if (typeof distanceInWordsLocale[token] === 'string') {
      result = distanceInWordsLocale[token]
    } else if (count === 1) {
      result = distanceInWordsLocale[token].one
    } else {
      result = distanceInWordsLocale[token].other.replace('{{count}}', count)
    }

    if (options.addSuffix) {
      if (options.comparison > 0) {
        return 'tra ' + result
      } else {
        return result + ' fa'
      }
    }

    return result
  }

  return {
    localize: localize
  }
}

module.exports = buildDistanceInWordsLocale


/***/ }),
/* 401 */
/***/ (function(module, exports, __webpack_require__) {

var buildFormattingTokensRegExp = __webpack_require__(15)

function buildFormatLocale () {
  var months3char = ['gen', 'feb', 'mar', 'apr', 'mag', 'giu', 'lug', 'ago', 'set', 'ott', 'nov', 'dic']
  var monthsFull = ['gennaio', 'febbraio', 'marzo', 'aprile', 'maggio', 'giugno', 'luglio', 'agosto', 'settembre', 'ottobre', 'novembre', 'dicembre']
  var weekdays2char = ['do', 'lu', 'ma', 'me', 'gi', 've', 'sa']
  var weekdays3char = ['dom', 'lun', 'mar', 'mer', 'gio', 'ven', 'sab']
  var weekdaysFull = ['domenica', 'lunedì', 'martedì', 'mercoledì', 'giovedì', 'venerdì', 'sabato']
  var meridiemUppercase = ['AM', 'PM']
  var meridiemLowercase = ['am', 'pm']
  var meridiemFull = ['a.m.', 'p.m.']

  var formatters = {
    // Month: Jan, Feb, ..., Dec
    'MMM': function (date) {
      return months3char[date.getMonth()]
    },

    // Month: January, February, ..., December
    'MMMM': function (date) {
      return monthsFull[date.getMonth()]
    },

    // Day of week: Su, Mo, ..., Sa
    'dd': function (date) {
      return weekdays2char[date.getDay()]
    },

    // Day of week: Sun, Mon, ..., Sat
    'ddd': function (date) {
      return weekdays3char[date.getDay()]
    },

    // Day of week: Sunday, Monday, ..., Saturday
    'dddd': function (date) {
      return weekdaysFull[date.getDay()]
    },

    // AM, PM
    'A': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]
    },

    // am, pm
    'a': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]
    },

    // a.m., p.m.
    'aa': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]
    }
  }

  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.
  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']
  ordinalFormatters.forEach(function (formatterToken) {
    formatters[formatterToken + 'o'] = function (date, formatters) {
      return ordinal(formatters[formatterToken](date))
    }
  })

  return {
    formatters: formatters,
    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)
  }
}

function ordinal (number) {
  return number + 'º'
}

module.exports = buildFormatLocale


/***/ }),
/* 402 */
/***/ (function(module, exports) {

function buildDistanceInWordsLocale () {
  var distanceInWordsLocale = {
    lessThanXSeconds: {
      one: '1秒以下',
      other: '{{count}}秒以下'
    },

    xSeconds: {
      one: '1秒',
      other: '{{count}}秒'
    },

    halfAMinute: '30秒ぐらい',

    lessThanXMinutes: {
      one: '1分以下',
      other: '{{count}}分以下'
    },

    xMinutes: {
      one: '1分',
      other: '{{count}}分'
    },

    aboutXHours: {
      one: '1時間ぐらい',
      other: '{{count}}時間ぐらい'
    },

    xHours: {
      one: '1時間',
      other: '{{count}}時間'
    },

    xDays: {
      one: '1日',
      other: '{{count}}日'
    },

    aboutXMonths: {
      one: '1ヶ月ぐらい',
      other: '{{count}}ヶ月ぐらい'
    },

    xMonths: {
      one: '1ヶ月',
      other: '{{count}}ヶ月'
    },

    aboutXYears: {
      one: '1年ぐらい',
      other: '{{count}}年ぐらい'
    },

    xYears: {
      one: '1年',
      other: '{{count}}年'
    },

    overXYears: {
      one: '1年以上',
      other: '{{count}}年以上'
    },

    almostXYears: {
      one: '1年以下',
      other: '{{count}}年以下',
      oneWithSuffix: '1年ぐらい',
      otherWithSuffix: '{{count}}年ぐらい'
    }
  }

  function localize (token, count, options) {
    options = options || {}

    var result
    if (typeof distanceInWordsLocale[token] === 'string') {
      result = distanceInWordsLocale[token]
    } else if (count === 1) {
      if (options.addSuffix && distanceInWordsLocale[token].oneWithSuffix) {
        result = distanceInWordsLocale[token].oneWithSuffix
      } else {
        result = distanceInWordsLocale[token].one
      }
    } else {
      if (options.addSuffix && distanceInWordsLocale[token].otherWithSuffix) {
        result = distanceInWordsLocale[token].otherWithSuffix.replace('{{count}}', count)
      } else {
        result = distanceInWordsLocale[token].other.replace('{{count}}', count)
      }
    }

    if (options.addSuffix) {
      if (options.comparison > 0) {
        return result + '後'
      } else {
        return result + '前'
      }
    }

    return result
  }

  return {
    localize: localize
  }
}

module.exports = buildDistanceInWordsLocale


/***/ }),
/* 403 */
/***/ (function(module, exports, __webpack_require__) {

var buildFormattingTokensRegExp = __webpack_require__(15)

function buildFormatLocale () {
  var months3char = ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月']
  var monthsFull = ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月']
  var weekdays2char = ['日', '月', '火', '水', '木', '金', '土']
  var weekdays3char = ['日曜', '月曜', '火曜', '水曜', '木曜', '金曜', '土曜']
  var weekdaysFull = ['日曜日', '月曜日', '火曜日', '水曜日', '木曜日', '金曜日', '土曜日']
  var meridiemUppercase = ['午前', '午後']
  var meridiemLowercase = ['午前', '午後']
  var meridiemFull = ['午前', '午後']

  var formatters = {
    // Month: Jan, Feb, ..., Dec
    'MMM': function (date) {
      return months3char[date.getMonth()]
    },

    // Month: January, February, ..., December
    'MMMM': function (date) {
      return monthsFull[date.getMonth()]
    },

    // Day of week: Su, Mo, ..., Sa
    'dd': function (date) {
      return weekdays2char[date.getDay()]
    },

    // Day of week: Sun, Mon, ..., Sat
    'ddd': function (date) {
      return weekdays3char[date.getDay()]
    },

    // Day of week: Sunday, Monday, ..., Saturday
    'dddd': function (date) {
      return weekdaysFull[date.getDay()]
    },

    // AM, PM
    'A': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]
    },

    // am, pm
    'a': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]
    },

    // a.m., p.m.
    'aa': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]
    }
  }

  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.
  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']
  ordinalFormatters.forEach(function (formatterToken) {
    formatters[formatterToken + 'o'] = function (date, formatters) {
      return ordinal(formatters[formatterToken](date))
    }
  })

  return {
    formatters: formatters,
    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)
  }
}

function ordinal (number) {
  return number + '日'
}

module.exports = buildFormatLocale


/***/ }),
/* 404 */
/***/ (function(module, exports) {

function buildDistanceInWordsLocale () {
  var distanceInWordsLocale = {
    lessThanXSeconds: {
      one: '1초 미만',
      other: '{{count}}초 미만'
    },

    xSeconds: {
      one: '1초',
      other: '{{count}}초'
    },

    halfAMinute: '30초',

    lessThanXMinutes: {
      one: '1분 미만',
      other: '{{count}}분 미만'
    },

    xMinutes: {
      one: '1분',
      other: '{{count}}분'
    },

    aboutXHours: {
      one: '약 1시간',
      other: '약 {{count}}시간'
    },

    xHours: {
      one: '1시간',
      other: '{{count}}시간'
    },

    xDays: {
      one: '1일',
      other: '{{count}}일'
    },

    aboutXMonths: {
      one: '약 1개월',
      other: '약 {{count}}개월'
    },

    xMonths: {
      one: '1개월',
      other: '{{count}}개월'
    },

    aboutXYears: {
      one: '약 1년',
      other: '약 {{count}}년'
    },

    xYears: {
      one: '1년',
      other: '{{count}}년'
    },

    overXYears: {
      one: '1년 이상',
      other: '{{count}}년 이상'
    },

    almostXYears: {
      one: '거의 1년',
      other: '거의 {{count}}년'
    }
  }

  function localize (token, count, options) {
    options = options || {}

    var result
    if (typeof distanceInWordsLocale[token] === 'string') {
      result = distanceInWordsLocale[token]
    } else if (count === 1) {
      result = distanceInWordsLocale[token].one
    } else {
      result = distanceInWordsLocale[token].other.replace('{{count}}', count)
    }

    if (options.addSuffix) {
      if (options.comparison > 0) {
        return result + ' 후'
      } else {
        return result + ' 전'
      }
    }

    return result
  }

  return {
    localize: localize
  }
}

module.exports = buildDistanceInWordsLocale


/***/ }),
/* 405 */
/***/ (function(module, exports, __webpack_require__) {

var buildFormattingTokensRegExp = __webpack_require__(15)

function buildFormatLocale () {
  var months3char = ['1월', '2월', '3월', '4월', '5월', '6월', '7월', '8월', '9월', '10월', '11월', '12월']
  var monthsFull = ['1월', '2월', '3월', '4월', '5월', '6월', '7월', '8월', '9월', '10월', '11월', '12월']
  var weekdays2char = ['일', '월', '화', '수', '목', '금', '토']
  var weekdays3char = ['일', '월', '화', '수', '목', '금', '토']
  var weekdaysFull = ['일요일', '월요일', '화요일', '수요일', '목요일', '금요일', '토요일']
  var meridiemUppercase = ['오전', '오후']
  var meridiemLowercase = ['오전', '오후']
  var meridiemFull = ['오전', '오후']

  var formatters = {
    // Month: Jan, Feb, ..., Dec
    'MMM': function (date) {
      return months3char[date.getMonth()]
    },

    // Month: January, February, ..., December
    'MMMM': function (date) {
      return monthsFull[date.getMonth()]
    },

    // Day of week: Su, Mo, ..., Sa
    'dd': function (date) {
      return weekdays2char[date.getDay()]
    },

    // Day of week: Sun, Mon, ..., Sat
    'ddd': function (date) {
      return weekdays3char[date.getDay()]
    },

    // Day of week: Sunday, Monday, ..., Saturday
    'dddd': function (date) {
      return weekdaysFull[date.getDay()]
    },

    // AM, PM
    'A': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]
    },

    // am, pm
    'a': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]
    },

    // a.m., p.m.
    'aa': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]
    }
  }

  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.
  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']
  ordinalFormatters.forEach(function (formatterToken) {
    formatters[formatterToken + 'o'] = function (date, formatters) {
      return ordinal(formatters[formatterToken](date))
    }
  })

  return {
    formatters: formatters,
    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)
  }
}

function ordinal (number) {
  return number + '일'
}

module.exports = buildFormatLocale


/***/ }),
/* 406 */
/***/ (function(module, exports) {

function buildDistanceInWordsLocale () {
  var distanceInWordsLocale = {
    lessThanXSeconds: {
      one: 'помалку од секунда',
      other: 'помалку од {{count}} секунди'
    },

    xSeconds: {
      one: '1 секунда',
      other: '{{count}} секунди'
    },

    halfAMinute: 'половина минута',

    lessThanXMinutes: {
      one: 'помалку од минута',
      other: 'помалку од {{count}} минути'
    },

    xMinutes: {
      one: '1 минута',
      other: '{{count}} минути'
    },

    aboutXHours: {
      one: 'околу 1 час',
      other: 'околу {{count}} часа'
    },

    xHours: {
      one: '1 час',
      other: '{{count}} часа'
    },

    xDays: {
      one: '1 ден',
      other: '{{count}} дена'
    },

    aboutXMonths: {
      one: 'околу 1 месец',
      other: 'околу {{count}} месеци'
    },

    xMonths: {
      one: '1 месец',
      other: '{{count}} месеци'
    },

    aboutXYears: {
      one: 'околу 1 година',
      other: 'околу {{count}} години'
    },

    xYears: {
      one: '1 година',
      other: '{{count}} години'
    },

    overXYears: {
      one: 'повеќе од 1 година',
      other: 'повеќе од {{count}} години'
    },

    almostXYears: {
      one: 'безмалку 1 година',
      other: 'безмалку {{count}} години'
    }
  }

  function localize (token, count, options) {
    options = options || {}

    var result
    if (typeof distanceInWordsLocale[token] === 'string') {
      result = distanceInWordsLocale[token]
    } else if (count === 1) {
      result = distanceInWordsLocale[token].one
    } else {
      result = distanceInWordsLocale[token].other.replace('{{count}}', count)
    }

    if (options.addSuffix) {
      if (options.comparison > 0) {
        return 'за ' + result
      } else {
        return 'пред ' + result
      }
    }

    return result
  }

  return {
    localize: localize
  }
}

module.exports = buildDistanceInWordsLocale


/***/ }),
/* 407 */
/***/ (function(module, exports, __webpack_require__) {

var buildFormattingTokensRegExp = __webpack_require__(15)

function buildFormatLocale () {
  var months3char = ['јан', 'фев', 'мар', 'апр', 'мај', 'јун', 'јул', 'авг', 'сеп', 'окт', 'ное', 'дек']
  var monthsFull = ['јануари', 'февруари', 'март', 'април', 'мај', 'јуни', 'јули', 'август', 'септември', 'октомври', 'ноември', 'декември']
  var weekdays2char = ['не', 'по', 'вт', 'ср', 'че', 'пе', 'са']
  var weekdays3char = ['нед', 'пон', 'вто', 'сре', 'чет', 'пет', 'саб']
  var weekdaysFull = ['недела', 'понеделник', 'вторник', 'среда', 'четврток', 'петок', 'сабота']
  var meridiem = ['претпладне', 'попладне']

  var formatters = {
    // Month: Jan, Feb, ..., Dec
    'MMM': function (date) {
      return months3char[date.getMonth()]
    },

    // Month: January, February, ..., December
    'MMMM': function (date) {
      return monthsFull[date.getMonth()]
    },

    // Day of week: Su, Mo, ..., Sa
    'dd': function (date) {
      return weekdays2char[date.getDay()]
    },

    // Day of week: Sun, Mon, ..., Sat
    'ddd': function (date) {
      return weekdays3char[date.getDay()]
    },

    // Day of week: Sunday, Monday, ..., Saturday
    'dddd': function (date) {
      return weekdaysFull[date.getDay()]
    },

    // AM, PM
    'A': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiem[1] : meridiem[0]
    },

    // am, pm
    'a': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiem[1] : meridiem[0]
    },

    // a.m., p.m.
    'aa': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiem[1] : meridiem[0]
    }
  }

  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.
  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']
  ordinalFormatters.forEach(function (formatterToken) {
    formatters[formatterToken + 'o'] = function (date, formatters) {
      return ordinal(formatters[formatterToken](date))
    }
  })

  return {
    formatters: formatters,
    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)
  }
}

function ordinal (number) {
  var rem100 = number % 100
  if (rem100 > 20 || rem100 < 10) {
    switch (rem100 % 10) {
      case 1:
        return number + '-ви'
      case 2:
        return number + '-ри'
      case 7:
      case 8:
        return number + '-ми'
    }
  }
  return number + '-ти'
}

module.exports = buildFormatLocale


/***/ }),
/* 408 */
/***/ (function(module, exports) {

function buildDistanceInWordsLocale () {
  var distanceInWordsLocale = {
    lessThanXSeconds: {
      one: 'mindre enn ett sekund',
      other: 'mindre enn {{count}} sekunder'
    },

    xSeconds: {
      one: 'ett sekund',
      other: '{{count}} sekunder'
    },

    halfAMinute: 'et halvt minutt',

    lessThanXMinutes: {
      one: 'mindre enn ett minutt',
      other: 'mindre enn {{count}} minutter'
    },

    xMinutes: {
      one: 'ett minutt',
      other: '{{count}} minutter'
    },

    aboutXHours: {
      one: 'rundt en time',
      other: 'rundt {{count}} timer'
    },

    xHours: {
      one: 'en time',
      other: '{{count}} timer'
    },

    xDays: {
      one: 'en dag',
      other: '{{count}} dager'
    },

    aboutXMonths: {
      one: 'rundt en måned',
      other: 'rundt {{count}} måneder'
    },

    xMonths: {
      one: 'en måned',
      other: '{{count}} måneder'
    },

    aboutXYears: {
      one: 'rundt ett år',
      other: 'rundt {{count}} år'
    },

    xYears: {
      one: 'ett år',
      other: '{{count}} år'
    },

    overXYears: {
      one: 'over ett år',
      other: 'over {{count}} år'
    },

    almostXYears: {
      one: 'nesten ett år',
      other: 'nesten {{count}} år'
    }
  }

  function localize (token, count, options) {
    options = options || {}

    var result
    if (typeof distanceInWordsLocale[token] === 'string') {
      result = distanceInWordsLocale[token]
    } else if (count === 1) {
      result = distanceInWordsLocale[token].one
    } else {
      result = distanceInWordsLocale[token].other.replace('{{count}}', count)
    }

    if (options.addSuffix) {
      if (options.comparison > 0) {
        return 'om ' + result
      } else {
        return result + ' siden'
      }
    }

    return result
  }

  return {
    localize: localize
  }
}

module.exports = buildDistanceInWordsLocale


/***/ }),
/* 409 */
/***/ (function(module, exports, __webpack_require__) {

var buildFormattingTokensRegExp = __webpack_require__(15)

function buildFormatLocale () {
  var months3char = ['jan.', 'feb.', 'mars', 'april', 'mai', 'juni', 'juli', 'aug.', 'sep.', 'okt.', 'nov.', 'des.']
  var monthsFull = ['januar', 'februar', 'mars', 'april', 'mai', 'juni', 'juli', 'august', 'september', 'oktober', 'november', 'desember']
  var weekdays2char = ['sø', 'ma', 'ti', 'on', 'to', 'fr', 'lø']
  var weekdays3char = ['sø.', 'ma.', 'ti.', 'on.', 'to.', 'fr.', 'lø.']
  var weekdaysFull = ['søndag', 'mandag', 'tirsdag', 'onsdag', 'torsdag', 'fredag', 'lørdag']
  var meridiemUppercase = ['AM', 'PM']
  var meridiemLowercase = ['am', 'pm']
  var meridiemFull = ['a.m.', 'p.m.']

  var formatters = {
    // Month: Jan, Feb, ..., Dec
    'MMM': function (date) {
      return months3char[date.getMonth()]
    },

    // Month: January, February, ..., December
    'MMMM': function (date) {
      return monthsFull[date.getMonth()]
    },

    // Day of week: Su, Mo, ..., Sa
    'dd': function (date) {
      return weekdays2char[date.getDay()]
    },

    // Day of week: Sun, Mon, ..., Sat
    'ddd': function (date) {
      return weekdays3char[date.getDay()]
    },

    // Day of week: Sunday, Monday, ..., Saturday
    'dddd': function (date) {
      return weekdaysFull[date.getDay()]
    },

    // AM, PM
    'A': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]
    },

    // am, pm
    'a': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]
    },

    // a.m., p.m.
    'aa': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]
    }
  }

  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.
  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']
  ordinalFormatters.forEach(function (formatterToken) {
    formatters[formatterToken + 'o'] = function (date, formatters) {
      return ordinal(formatters[formatterToken](date))
    }
  })

  return {
    formatters: formatters,
    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)
  }
}

function ordinal (number) {
  return number + '.'
}

module.exports = buildFormatLocale


/***/ }),
/* 410 */
/***/ (function(module, exports) {

function buildDistanceInWordsLocale () {
  var distanceInWordsLocale = {
    lessThanXSeconds: {
      one: 'minder dan een seconde',
      other: 'minder dan {{count}} seconden'
    },

    xSeconds: {
      one: '1 seconde',
      other: '{{count}} seconden'
    },

    halfAMinute: 'een halve minuut',

    lessThanXMinutes: {
      one: 'minder dan een minuut',
      other: 'minder dan {{count}} minuten'
    },

    xMinutes: {
      one: 'een minuut',
      other: '{{count}} minuten'
    },

    aboutXHours: {
      one: 'ongeveer 1 uur',
      other: 'ongeveer {{count}} uur'
    },

    xHours: {
      one: '1 uur',
      other: '{{count}} uur'
    },

    xDays: {
      one: '1 dag',
      other: '{{count}} dagen'
    },

    aboutXMonths: {
      one: 'ongeveer 1 maand',
      other: 'ongeveer {{count}} maanden'
    },

    xMonths: {
      one: '1 maand',
      other: '{{count}} maanden'
    },

    aboutXYears: {
      one: 'ongeveer 1 jaar',
      other: 'ongeveer {{count}} jaar'
    },

    xYears: {
      one: '1 jaar',
      other: '{{count}} jaar'
    },

    overXYears: {
      one: 'meer dan 1 jaar',
      other: 'meer dan {{count}} jaar'
    },

    almostXYears: {
      one: 'bijna 1 jaar',
      other: 'bijna {{count}} jaar'
    }
  }

  function localize (token, count, options) {
    options = options || {}

    var result
    if (typeof distanceInWordsLocale[token] === 'string') {
      result = distanceInWordsLocale[token]
    } else if (count === 1) {
      result = distanceInWordsLocale[token].one
    } else {
      result = distanceInWordsLocale[token].other.replace('{{count}}', count)
    }

    if (options.addSuffix) {
      if (options.comparison > 0) {
        return 'over ' + result
      } else {
        return result + ' geleden'
      }
    }

    return result
  }

  return {
    localize: localize
  }
}

module.exports = buildDistanceInWordsLocale


/***/ }),
/* 411 */
/***/ (function(module, exports, __webpack_require__) {

var buildFormattingTokensRegExp = __webpack_require__(15)

function buildFormatLocale () {
  var months3char = ['jan', 'feb', 'mar', 'apr', 'mei', 'jun', 'jul', 'aug', 'sep', 'okt', 'nov', 'dec']
  var monthsFull = ['januari', 'februari', 'maart', 'april', 'mei', 'juni', 'juli', 'augustus', 'september', 'oktober', 'november', 'december']
  var weekdays2char = ['zo', 'ma', 'di', 'wo', 'do', 'vr', 'za']
  var weekdays3char = ['zon', 'maa', 'din', 'woe', 'don', 'vri', 'zat']
  var weekdaysFull = ['zondag', 'maandag', 'dinsdag', 'woensdag', 'donderdag', 'vrijdag', 'zaterdag']
  var meridiemUppercase = ['AM', 'PM']
  var meridiemLowercase = ['am', 'pm']
  var meridiemFull = ['a.m.', 'p.m.']

  var formatters = {
    // Month: Jan, Feb, ..., Dec
    'MMM': function (date) {
      return months3char[date.getMonth()]
    },

    // Month: January, February, ..., December
    'MMMM': function (date) {
      return monthsFull[date.getMonth()]
    },

    // Day of week: Su, Mo, ..., Sa
    'dd': function (date) {
      return weekdays2char[date.getDay()]
    },

    // Day of week: Sun, Mon, ..., Sat
    'ddd': function (date) {
      return weekdays3char[date.getDay()]
    },

    // Day of week: Sunday, Monday, ..., Saturday
    'dddd': function (date) {
      return weekdaysFull[date.getDay()]
    },

    // AM, PM
    'A': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]
    },

    // am, pm
    'a': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]
    },

    // a.m., p.m.
    'aa': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]
    }
  }

  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.
  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']
  ordinalFormatters.forEach(function (formatterToken) {
    formatters[formatterToken + 'o'] = function (date, formatters) {
      return ordinal(formatters[formatterToken](date))
    }
  })

  return {
    formatters: formatters,
    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)
  }
}

function ordinal (number) {
  return number + 'e'
}

module.exports = buildFormatLocale


/***/ }),
/* 412 */
/***/ (function(module, exports) {

function declensionGroup (scheme, count) {
  if (count === 1) {
    return scheme.one
  }

  var rem100 = count % 100

  // ends with 11-20
  if (rem100 <= 20 && rem100 > 10) {
    return scheme.other
  }

  var rem10 = rem100 % 10

  // ends with 2, 3, 4
  if (rem10 >= 2 && rem10 <= 4) {
    return scheme.twoFour
  }

  return scheme.other
}

function declension (scheme, count, time) {
  time = time || 'regular'
  var group = declensionGroup(scheme, count)
  var finalText = group[time] || group
  return finalText.replace('{{count}}', count)
}

function buildDistanceInWordsLocale () {
  var distanceInWordsLocale = {
    lessThanXSeconds: {
      one: {
        regular: 'mniej niż sekunda',
        past: 'mniej niż sekundę',
        future: 'mniej niż sekundę'
      },
      twoFour: 'mniej niż {{count}} sekundy',
      other: 'mniej niż {{count}} sekund'
    },

    xSeconds: {
      one: {
        regular: 'sekunda',
        past: 'sekundę',
        future: 'sekundę'
      },
      twoFour: '{{count}} sekundy',
      other: '{{count}} sekund'
    },

    halfAMinute: {
      one: 'pół minuty',
      twoFour: 'pół minuty',
      other: 'pół minuty'
    },

    lessThanXMinutes: {
      one: {
        regular: 'mniej niż minuta',
        past: 'mniej niż minutę',
        future: 'mniej niż minutę'
      },
      twoFour: 'mniej niż {{count}} minuty',
      other: 'mniej niż {{count}} minut'
    },

    xMinutes: {
      one: {
        regular: 'minuta',
        past: 'minutę',
        future: 'minutę'
      },
      twoFour: '{{count}} minuty',
      other: '{{count}} minut'
    },

    aboutXHours: {
      one: {
        regular: 'około godzina',
        past: 'około godziny',
        future: 'około godzinę'
      },
      twoFour: 'około {{count}} godziny',
      other: 'około {{count}} godzin'
    },

    xHours: {
      one: {
        regular: 'godzina',
        past: 'godzinę',
        future: 'godzinę'
      },
      twoFour: '{{count}} godziny',
      other: '{{count}} godzin'
    },

    xDays: {
      one: {
        regular: 'dzień',
        past: 'dzień',
        future: '1 dzień'
      },
      twoFour: '{{count}} dni',
      other: '{{count}} dni'
    },

    aboutXMonths: {
      one: 'około miesiąc',
      twoFour: 'około {{count}} miesiące',
      other: 'około {{count}} miesięcy'
    },

    xMonths: {
      one: 'miesiąc',
      twoFour: '{{count}} miesiące',
      other: '{{count}} miesięcy'
    },

    aboutXYears: {
      one: 'około rok',
      twoFour: 'około {{count}} lata',
      other: 'około {{count}} lat'
    },

    xYears: {
      one: 'rok',
      twoFour: '{{count}} lata',
      other: '{{count}} lat'
    },

    overXYears: {
      one: 'ponad rok',
      twoFour: 'ponad {{count}} lata',
      other: 'ponad {{count}} lat'
    },

    almostXYears: {
      one: 'prawie rok',
      twoFour: 'prawie {{count}} lata',
      other: 'prawie {{count}} lat'
    }
  }

  function localize (token, count, options) {
    options = options || {}

    var scheme = distanceInWordsLocale[token]
    if (!options.addSuffix) {
      return declension(scheme, count)
    }

    if (options.comparison > 0) {
      return 'za ' + declension(scheme, count, 'future')
    } else {
      return declension(scheme, count, 'past') + ' temu'
    }
  }

  return {
    localize: localize
  }
}

module.exports = buildDistanceInWordsLocale


/***/ }),
/* 413 */
/***/ (function(module, exports, __webpack_require__) {

var buildFormattingTokensRegExp = __webpack_require__(15)

function buildFormatLocale () {
  var months3char = ['sty', 'lut', 'mar', 'kwi', 'maj', 'cze', 'lip', 'sie', 'wrz', 'paź', 'lis', 'gru']
  var monthsFull = ['styczeń', 'luty', 'marzec', 'kwiecień', 'maj', 'czerwiec', 'lipiec', 'sierpień', 'wrzesień', 'październik', 'listopad', 'grudzień']
  var weekdays2char = ['nd', 'pn', 'wt', 'śr', 'cz', 'pt', 'sb']
  var weekdays3char = ['niedz.', 'pon.', 'wt.', 'śr.', 'czw.', 'piąt.', 'sob.']
  var weekdaysFull = ['niedziela', 'poniedziałek', 'wtorek', 'środa', 'czwartek', 'piątek', 'sobota']
  var meridiem = ['w nocy', 'rano', 'po południu', 'wieczorem']

  var formatters = {
    // Month: Jan, Feb, ..., Dec
    'MMM': function (date) {
      return months3char[date.getMonth()]
    },

    // Month: January, February, ..., December
    'MMMM': function (date) {
      return monthsFull[date.getMonth()]
    },

    // Day of week: Su, Mo, ..., Sa
    'dd': function (date) {
      return weekdays2char[date.getDay()]
    },

    // Day of week: Sun, Mon, ..., Sat
    'ddd': function (date) {
      return weekdays3char[date.getDay()]
    },

    // Day of week: Sunday, Monday, ..., Saturday
    'dddd': function (date) {
      return weekdaysFull[date.getDay()]
    },

    // Time of day
    'A': function (date) {
      var hours = date.getHours()
      if (hours >= 17) {
        return meridiem[3]
      } else if (hours >= 12) {
        return meridiem[2]
      } else if (hours >= 4) {
        return meridiem[1]
      } else {
        return meridiem[0]
      }
    }
  }

  formatters.a = formatters.A
  formatters.aa = formatters.A

  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.
  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']
  ordinalFormatters.forEach(function (formatterToken) {
    formatters[formatterToken + 'o'] = function (date, formatters) {
      // Well, it should be just a number without any suffix
      return formatters[formatterToken](date).toString()
    }
  })

  return {
    formatters: formatters,
    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)
  }
}

module.exports = buildFormatLocale


/***/ }),
/* 414 */
/***/ (function(module, exports) {

function buildDistanceInWordsLocale () {
  var distanceInWordsLocale = {
    lessThanXSeconds: {
      one: 'menos de um segundo',
      other: 'menos de {{count}} segundos'
    },

    xSeconds: {
      one: '1 segundo',
      other: '{{count}} segundos'
    },

    halfAMinute: 'meio minuto',

    lessThanXMinutes: {
      one: 'menos de um minuto',
      other: 'menos de {{count}} minutos'
    },

    xMinutes: {
      one: '1 minuto',
      other: '{{count}} minutos'
    },

    aboutXHours: {
      one: 'aproximadamente 1 hora',
      other: 'aproximadamente {{count}} horas'
    },

    xHours: {
      one: '1 hora',
      other: '{{count}} horas'
    },

    xDays: {
      one: '1 dia',
      other: '{{count}} dias'
    },

    aboutXMonths: {
      one: 'aproximadamente 1 mês',
      other: 'aproximadamente {{count}} meses'
    },

    xMonths: {
      one: '1 mês',
      other: '{{count}} meses'
    },

    aboutXYears: {
      one: 'aproximadamente 1 ano',
      other: 'aproximadamente {{count}} anos'
    },

    xYears: {
      one: '1 ano',
      other: '{{count}} anos'
    },

    overXYears: {
      one: 'mais de 1 ano',
      other: 'mais de {{count}} anos'
    },

    almostXYears: {
      one: 'quase 1 ano',
      other: 'quase {{count}} anos'
    }
  }

  function localize (token, count, options) {
    options = options || {}

    var result
    if (typeof distanceInWordsLocale[token] === 'string') {
      result = distanceInWordsLocale[token]
    } else if (count === 1) {
      result = distanceInWordsLocale[token].one
    } else {
      result = distanceInWordsLocale[token].other.replace('{{count}}', count)
    }

    if (options.addSuffix) {
      if (options.comparison > 0) {
        return 'daqui a ' + result
      } else {
        return 'há ' + result
      }
    }

    return result
  }

  return {
    localize: localize
  }
}

module.exports = buildDistanceInWordsLocale


/***/ }),
/* 415 */
/***/ (function(module, exports, __webpack_require__) {

var buildFormattingTokensRegExp = __webpack_require__(15)

function buildFormatLocale () {
  var months3char = ['jan', 'fev', 'mar', 'abr', 'mai', 'jun', 'jul', 'ago', 'set', 'out', 'nov', 'dez']
  var monthsFull = ['janeiro', 'fevereiro', 'março', 'abril', 'maio', 'junho', 'julho', 'agosto', 'setembro', 'outubro', 'novembro', 'dezembro']
  var weekdays2char = ['do', 'se', 'te', 'qa', 'qi', 'se', 'sa']
  var weekdays3char = ['dom', 'seg', 'ter', 'qua', 'qui', 'sex', 'sáb']
  var weekdaysFull = ['domingo', 'segunda-feira', 'terça-feira', 'quarta-feira', 'quinta-feira', 'sexta-feira', 'sábado']
  var meridiemUppercase = ['AM', 'PM']
  var meridiemLowercase = ['am', 'pm']
  var meridiemFull = ['a.m.', 'p.m.']

  var formatters = {
    // Month: Jan, Feb, ..., Dec
    'MMM': function (date) {
      return months3char[date.getMonth()]
    },

    // Month: January, February, ..., December
    'MMMM': function (date) {
      return monthsFull[date.getMonth()]
    },

    // Day of week: Su, Mo, ..., Sa
    'dd': function (date) {
      return weekdays2char[date.getDay()]
    },

    // Day of week: Sun, Mon, ..., Sat
    'ddd': function (date) {
      return weekdays3char[date.getDay()]
    },

    // Day of week: Sunday, Monday, ..., Saturday
    'dddd': function (date) {
      return weekdaysFull[date.getDay()]
    },

    // AM, PM
    'A': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]
    },

    // am, pm
    'a': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]
    },

    // a.m., p.m.
    'aa': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]
    }
  }

  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.
  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']
  ordinalFormatters.forEach(function (formatterToken) {
    formatters[formatterToken + 'o'] = function (date, formatters) {
      return ordinal(formatters[formatterToken](date))
    }
  })

  return {
    formatters: formatters,
    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)
  }
}

function ordinal (number) {
  return number + 'º'
}

module.exports = buildFormatLocale


/***/ }),
/* 416 */
/***/ (function(module, exports) {

function buildDistanceInWordsLocale () {
  var distanceInWordsLocale = {
    lessThanXSeconds: {
      one: 'mai puțin de o secundă',
      other: 'mai puțin de {{count}} secunde'
    },

    xSeconds: {
      one: '1 secundă',
      other: '{{count}} secunde'
    },

    halfAMinute: 'jumătate de minut',

    lessThanXMinutes: {
      one: 'mai puțin de un minut',
      other: 'mai puțin de {{count}} minute'
    },

    xMinutes: {
      one: '1 minut',
      other: '{{count}} minute'
    },

    aboutXHours: {
      one: 'circa 1 oră',
      other: 'circa {{count}} ore'
    },

    xHours: {
      one: '1 oră',
      other: '{{count}} ore'
    },

    xDays: {
      one: '1 zi',
      other: '{{count}} zile'
    },

    aboutXMonths: {
      one: 'circa 1 lună',
      other: 'circa {{count}} luni'
    },

    xMonths: {
      one: '1 lună',
      other: '{{count}} luni'
    },

    aboutXYears: {
      one: 'circa 1 an',
      other: 'circa {{count}} ani'
    },

    xYears: {
      one: '1 an',
      other: '{{count}} ani'
    },

    overXYears: {
      one: 'peste 1 an',
      other: 'peste {{count}} ani'
    },

    almostXYears: {
      one: 'aproape 1 an',
      other: 'aproape {{count}} ani'
    }
  }

  function localize (token, count, options) {
    options = options || {}

    var result
    if (typeof distanceInWordsLocale[token] === 'string') {
      result = distanceInWordsLocale[token]
    } else if (count === 1) {
      result = distanceInWordsLocale[token].one
    } else {
      result = distanceInWordsLocale[token].other.replace('{{count}}', count)
    }

    if (options.addSuffix) {
      if (options.comparison > 0) {
        return 'în ' + result
      } else {
        return result + ' în urmă'
      }
    }

    return result
  }

  return {
    localize: localize
  }
}

module.exports = buildDistanceInWordsLocale


/***/ }),
/* 417 */
/***/ (function(module, exports, __webpack_require__) {

var buildFormattingTokensRegExp = __webpack_require__(15)

function buildFormatLocale () {
  // Note: in Romanian language the weekdays and months should be in the lowercase.
  var months3char = ['ian', 'feb', 'mar', 'apr', 'mai', 'iun', 'iul', 'aug', 'sep', 'oct', 'noi', 'dec']
  var monthsFull = ['ianuarie', 'februarie', 'martie', 'aprilie', 'mai', 'iunie', 'iulie', 'august', 'septembrie', 'octombrie', 'noiembrie', 'decembrie']
  var weekdays2char = ['du', 'lu', 'ma', 'mi', 'jo', 'vi', 'sâ']
  var weekdays3char = ['dum', 'lun', 'mar', 'mie', 'joi', 'vin', 'sâm']
  var weekdaysFull = ['duminică', 'luni', 'marți', 'miercuri', 'joi', 'vineri', 'sâmbăta']
  var meridiemUppercase = ['AM', 'PM']
  var meridiemLowercase = ['am', 'pm']
  var meridiemFull = ['a.m.', 'p.m.']

  var formatters = {
    // Month: Jan, Feb, ..., Dec
    'MMM': function (date) {
      return months3char[date.getMonth()]
    },

    // Month: January, February, ..., December
    'MMMM': function (date) {
      return monthsFull[date.getMonth()]
    },

    // Day of week: Su, Mo, ..., Sa
    'dd': function (date) {
      return weekdays2char[date.getDay()]
    },

    // Day of week: Sun, Mon, ..., Sat
    'ddd': function (date) {
      return weekdays3char[date.getDay()]
    },

    // Day of week: Sunday, Monday, ..., Saturday
    'dddd': function (date) {
      return weekdaysFull[date.getDay()]
    },

    // AM, PM
    'A': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]
    },

    // am, pm
    'a': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]
    },

    // a.m., p.m.
    'aa': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]
    }
  }

  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.
  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']
  ordinalFormatters.forEach(function (formatterToken) {
    formatters[formatterToken + 'o'] = function (date, formatters) {
      return ordinal(formatters[formatterToken](date))
    }
  })

  return {
    formatters: formatters,
    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)
  }
}

function ordinal (number) {
  return number.toString()
}

module.exports = buildFormatLocale


/***/ }),
/* 418 */
/***/ (function(module, exports) {

function declension (scheme, count) {
  // scheme for count=1 exists
  if (scheme.one !== undefined && count === 1) {
    return scheme.one
  }

  var rem10 = count % 10
  var rem100 = count % 100

  // 1, 21, 31, ...
  if (rem10 === 1 && rem100 !== 11) {
    return scheme.singularNominative.replace('{{count}}', count)

  // 2, 3, 4, 22, 23, 24, 32 ...
  } else if ((rem10 >= 2 && rem10 <= 4) && (rem100 < 10 || rem100 > 20)) {
    return scheme.singularGenitive.replace('{{count}}', count)

  // 5, 6, 7, 8, 9, 10, 11, ...
  } else {
    return scheme.pluralGenitive.replace('{{count}}', count)
  }
}

function buildLocalizeTokenFn (scheme) {
  return function (count, options) {
    if (options.addSuffix) {
      if (options.comparison > 0) {
        if (scheme.future) {
          return declension(scheme.future, count)
        } else {
          return 'через ' + declension(scheme.regular, count)
        }
      } else {
        if (scheme.past) {
          return declension(scheme.past, count)
        } else {
          return declension(scheme.regular, count) + ' назад'
        }
      }
    } else {
      return declension(scheme.regular, count)
    }
  }
}

function buildDistanceInWordsLocale () {
  var distanceInWordsLocale = {
    lessThanXSeconds: buildLocalizeTokenFn({
      regular: {
        one: 'меньше секунды',
        singularNominative: 'меньше {{count}} секунды',
        singularGenitive: 'меньше {{count}} секунд',
        pluralGenitive: 'меньше {{count}} секунд'
      },
      future: {
        one: 'меньше, чем через секунду',
        singularNominative: 'меньше, чем через {{count}} секунду',
        singularGenitive: 'меньше, чем через {{count}} секунды',
        pluralGenitive: 'меньше, чем через {{count}} секунд'
      }
    }),

    xSeconds: buildLocalizeTokenFn({
      regular: {
        singularNominative: '{{count}} секунда',
        singularGenitive: '{{count}} секунды',
        pluralGenitive: '{{count}} секунд'
      },
      past: {
        singularNominative: '{{count}} секунду назад',
        singularGenitive: '{{count}} секунды назад',
        pluralGenitive: '{{count}} секунд назад'
      },
      future: {
        singularNominative: 'через {{count}} секунду',
        singularGenitive: 'через {{count}} секунды',
        pluralGenitive: 'через {{count}} секунд'
      }
    }),

    halfAMinute: function (_, options) {
      if (options.addSuffix) {
        if (options.comparison > 0) {
          return 'через полминуты'
        } else {
          return 'полминуты назад'
        }
      }

      return 'полминуты'
    },

    lessThanXMinutes: buildLocalizeTokenFn({
      regular: {
        one: 'меньше минуты',
        singularNominative: 'меньше {{count}} минуты',
        singularGenitive: 'меньше {{count}} минут',
        pluralGenitive: 'меньше {{count}} минут'
      },
      future: {
        one: 'меньше, чем через минуту',
        singularNominative: 'меньше, чем через {{count}} минуту',
        singularGenitive: 'меньше, чем через {{count}} минуты',
        pluralGenitive: 'меньше, чем через {{count}} минут'
      }
    }),

    xMinutes: buildLocalizeTokenFn({
      regular: {
        singularNominative: '{{count}} минута',
        singularGenitive: '{{count}} минуты',
        pluralGenitive: '{{count}} минут'
      },
      past: {
        singularNominative: '{{count}} минуту назад',
        singularGenitive: '{{count}} минуты назад',
        pluralGenitive: '{{count}} минут назад'
      },
      future: {
        singularNominative: 'через {{count}} минуту',
        singularGenitive: 'через {{count}} минуты',
        pluralGenitive: 'через {{count}} минут'
      }
    }),

    aboutXHours: buildLocalizeTokenFn({
      regular: {
        singularNominative: 'около {{count}} часа',
        singularGenitive: 'около {{count}} часов',
        pluralGenitive: 'около {{count}} часов'
      },
      future: {
        singularNominative: 'приблизительно через {{count}} час',
        singularGenitive: 'приблизительно через {{count}} часа',
        pluralGenitive: 'приблизительно через {{count}} часов'
      }
    }),

    xHours: buildLocalizeTokenFn({
      regular: {
        singularNominative: '{{count}} час',
        singularGenitive: '{{count}} часа',
        pluralGenitive: '{{count}} часов'
      }
    }),

    xDays: buildLocalizeTokenFn({
      regular: {
        singularNominative: '{{count}} день',
        singularGenitive: '{{count}} дня',
        pluralGenitive: '{{count}} дней'
      }
    }),

    aboutXMonths: buildLocalizeTokenFn({
      regular: {
        singularNominative: 'около {{count}} месяца',
        singularGenitive: 'около {{count}} месяцев',
        pluralGenitive: 'около {{count}} месяцев'
      },
      future: {
        singularNominative: 'приблизительно через {{count}} месяц',
        singularGenitive: 'приблизительно через {{count}} месяца',
        pluralGenitive: 'приблизительно через {{count}} месяцев'
      }
    }),

    xMonths: buildLocalizeTokenFn({
      regular: {
        singularNominative: '{{count}} месяц',
        singularGenitive: '{{count}} месяца',
        pluralGenitive: '{{count}} месяцев'
      }
    }),

    aboutXYears: buildLocalizeTokenFn({
      regular: {
        singularNominative: 'около {{count}} года',
        singularGenitive: 'около {{count}} лет',
        pluralGenitive: 'около {{count}} лет'
      },
      future: {
        singularNominative: 'приблизительно через {{count}} год',
        singularGenitive: 'приблизительно через {{count}} года',
        pluralGenitive: 'приблизительно через {{count}} лет'
      }
    }),

    xYears: buildLocalizeTokenFn({
      regular: {
        singularNominative: '{{count}} год',
        singularGenitive: '{{count}} года',
        pluralGenitive: '{{count}} лет'
      }
    }),

    overXYears: buildLocalizeTokenFn({
      regular: {
        singularNominative: 'больше {{count}} года',
        singularGenitive: 'больше {{count}} лет',
        pluralGenitive: 'больше {{count}} лет'
      },
      future: {
        singularNominative: 'больше, чем через {{count}} год',
        singularGenitive: 'больше, чем через {{count}} года',
        pluralGenitive: 'больше, чем через {{count}} лет'
      }
    }),

    almostXYears: buildLocalizeTokenFn({
      regular: {
        singularNominative: 'почти {{count}} год',
        singularGenitive: 'почти {{count}} года',
        pluralGenitive: 'почти {{count}} лет'
      },
      future: {
        singularNominative: 'почти через {{count}} год',
        singularGenitive: 'почти через {{count}} года',
        pluralGenitive: 'почти через {{count}} лет'
      }
    })
  }

  function localize (token, count, options) {
    options = options || {}
    return distanceInWordsLocale[token](count, options)
  }

  return {
    localize: localize
  }
}

module.exports = buildDistanceInWordsLocale


/***/ }),
/* 419 */
/***/ (function(module, exports, __webpack_require__) {

var buildFormattingTokensRegExp = __webpack_require__(15)

function buildFormatLocale () {
  // http://new.gramota.ru/spravka/buro/search-answer?s=242637
  var monthsShort = ['янв.', 'фев.', 'март', 'апр.', 'май', 'июнь', 'июль', 'авг.', 'сент.', 'окт.', 'нояб.', 'дек.']
  var monthsFull = ['январь', 'февраль', 'март', 'апрель', 'май', 'июнь', 'июль', 'август', 'сентябрь', 'октябрь', 'ноябрь', 'декабрь']
  var monthsGenitive = ['января', 'февраля', 'марта', 'апреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря']
  var weekdays2char = ['вс', 'пн', 'вт', 'ср', 'чт', 'пт', 'сб']
  var weekdays3char = ['вск', 'пнд', 'втр', 'срд', 'чтв', 'птн', 'суб']
  var weekdaysFull = ['воскресенье', 'понедельник', 'вторник', 'среда', 'четверг', 'пятница', 'суббота']
  var meridiem = ['ночи', 'утра', 'дня', 'вечера']

  var formatters = {
    // Month: янв., фев., ..., дек.
    'MMM': function (date) {
      return monthsShort[date.getMonth()]
    },

    // Month: январь, февраль, ..., декабрь
    'MMMM': function (date) {
      return monthsFull[date.getMonth()]
    },

    // Day of week: вс, пн, ..., сб
    'dd': function (date) {
      return weekdays2char[date.getDay()]
    },

    // Day of week: вск, пнд, ..., суб
    'ddd': function (date) {
      return weekdays3char[date.getDay()]
    },

    // Day of week: воскресенье, понедельник, ..., суббота
    'dddd': function (date) {
      return weekdaysFull[date.getDay()]
    },

    // Time of day: ночи, утра, дня, вечера
    'A': function (date) {
      var hours = date.getHours()
      if (hours >= 17) {
        return meridiem[3]
      } else if (hours >= 12) {
        return meridiem[2]
      } else if (hours >= 4) {
        return meridiem[1]
      } else {
        return meridiem[0]
      }
    },

    'Do': function (date, formatters) {
      return formatters.D(date) + '-е'
    },

    'Wo': function (date, formatters) {
      return formatters.W(date) + '-я'
    }
  }

  formatters.a = formatters.A
  formatters.aa = formatters.A

  // Generate ordinal version of formatters: M -> Mo, DDD -> DDDo, etc.
  var ordinalFormatters = ['M', 'DDD', 'd', 'Q']
  ordinalFormatters.forEach(function (formatterToken) {
    formatters[formatterToken + 'o'] = function (date, formatters) {
      return formatters[formatterToken](date) + '-й'
    }
  })

  // Generate formatters like 'D MMMM',
  // where month is in the genitive case: января, февраля, ..., декабря
  var monthsGenitiveFormatters = ['D', 'Do', 'DD']
  monthsGenitiveFormatters.forEach(function (formatterToken) {
    formatters[formatterToken + ' MMMM'] = function (date, commonFormatters) {
      var formatter = formatters[formatterToken] || commonFormatters[formatterToken]
      return formatter(date, commonFormatters) + ' ' + monthsGenitive[date.getMonth()]
    }
  })

  return {
    formatters: formatters,
    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)
  }
}

module.exports = buildFormatLocale


/***/ }),
/* 420 */
/***/ (function(module, exports) {

function declensionGroup (scheme, count) {
  if (count === 1) {
    return scheme.one
  }

  if (count >= 2 && count <= 4) {
    return scheme.twoFour
  }

  // if count === null || count === 0 || count >= 5
  return scheme.other
}

function declension (scheme, count, time) {
  var group = declensionGroup(scheme, count)
  var finalText = group[time] || group
  return finalText.replace('{{count}}', count)
}

function extractPreposition (token) {
  var result = ['lessThan', 'about', 'over', 'almost'].filter(function (preposition) {
    return !!token.match(new RegExp('^' + preposition))
  })

  return result[0]
}

function prefixPreposition (preposition) {
  var translation = ''

  if (preposition === 'almost') {
    translation = 'takmer'
  }

  if (preposition === 'about') {
    translation = 'približne'
  }

  return translation.length > 0 ? translation + ' ' : ''
}

function suffixPreposition (preposition) {
  var translation = ''

  if (preposition === 'lessThan') {
    translation = 'menej než'
  }

  if (preposition === 'over') {
    translation = 'viac než'
  }

  return translation.length > 0 ? translation + ' ' : ''
}

function lowercaseFirstLetter (string) {
  return string.charAt(0).toLowerCase() + string.slice(1)
}

function buildDistanceInWordsLocale () {
  var distanceInWordsLocale = {
    xSeconds: {
      one: {
        regular: 'sekunda',
        past: 'sekundou',
        future: 'sekundu'
      },
      twoFour: {
        regular: '{{count}} sekundy',
        past: '{{count}} sekundami',
        future: '{{count}} sekundy'
      },
      other: {
        regular: '{{count}} sekúnd',
        past: '{{count}} sekundami',
        future: '{{count}} sekúnd'
      }
    },

    halfAMinute: {
      other: {
        regular: 'pol minúty',
        past: 'pol minútou',
        future: 'pol minúty'
      }
    },

    xMinutes: {
      one: {
        regular: 'minúta',
        past: 'minútou',
        future: 'minútu'
      },
      twoFour: {
        regular: '{{count}} minúty',
        past: '{{count}} minútami',
        future: '{{count}} minúty'
      },
      other: {
        regular: '{{count}} minút',
        past: '{{count}} minútami',
        future: '{{count}} minút'
      }
    },

    xHours: {
      one: {
        regular: 'hodina',
        past: 'hodinou',
        future: 'hodinu'
      },
      twoFour: {
        regular: '{{count}} hodiny',
        past: '{{count}} hodinami',
        future: '{{count}} hodiny'
      },
      other: {
        regular: '{{count}} hodín',
        past: '{{count}} hodinami',
        future: '{{count}} hodín'
      }
    },

    xDays: {
      one: {
        regular: 'deň',
        past: 'dňom',
        future: 'deň'
      },
      twoFour: {
        regular: '{{count}} dni',
        past: '{{count}} dňami',
        future: '{{count}} dni'
      },
      other: {
        regular: '{{count}} dní',
        past: '{{count}} dňami',
        future: '{{count}} dní'
      }
    },

    xMonths: {
      one: {
        regular: 'mesiac',
        past: 'mesiacom',
        future: 'mesiac'
      },
      twoFour: {
        regular: '{{count}} mesiace',
        past: '{{count}} mesiacmi',
        future: '{{count}} mesiace'
      },
      other: {
        regular: '{{count}} mesiacov',
        past: '{{count}} mesiacmi',
        future: '{{count}} mesiacov'
      }
    },

    xYears: {
      one: {
        regular: 'rok',
        past: 'rokom',
        future: 'rok'
      },
      twoFour: {
        regular: '{{count}} roky',
        past: '{{count}} rokmi',
        future: '{{count}} roky'
      },
      other: {
        regular: '{{count}} rokov',
        past: '{{count}} rokmi',
        future: '{{count}} rokov'
      }
    }
  }

  function localize (token, count, options) {
    options = options || {}

    var preposition = extractPreposition(token) || ''
    var key = lowercaseFirstLetter(token.substring(preposition.length))
    var scheme = distanceInWordsLocale[key]

    if (!options.addSuffix) {
      return prefixPreposition(preposition) + suffixPreposition(preposition) + declension(scheme, count, 'regular')
    }

    if (options.comparison > 0) {
      return prefixPreposition(preposition) + 'za ' + suffixPreposition(preposition) + declension(scheme, count, 'future')
    } else {
      return prefixPreposition(preposition) + 'pred ' + suffixPreposition(preposition) + declension(scheme, count, 'past')
    }
  }

  return {
    localize: localize
  }
}

module.exports = buildDistanceInWordsLocale


/***/ }),
/* 421 */
/***/ (function(module, exports, __webpack_require__) {

var buildFormattingTokensRegExp = __webpack_require__(15)

function buildFormatLocale () {
  var months3char = ['jan', 'feb', 'mar', 'apr', 'máj', 'jún', 'júl', 'aug', 'sep', 'okt', 'nov', 'dec']
  var monthsFull = ['január', 'február', 'marec', 'apríl', 'máj', 'jún', 'júl', 'august', 'september', 'október', 'november', 'december']
  var weekdays2char = ['ne', 'po', 'ut', 'st', 'št', 'pi', 'so']
  var weekdays3char = ['neď', 'pon', 'uto', 'str', 'štv', 'pia', 'sob']
  var weekdaysFull = ['nedeľa', 'pondelok', 'utorok', 'streda', 'štvrtok', 'piatok', 'sobota']
  var meridiemUppercase = ['AM', 'PM']
  var meridiemLowercase = ['am', 'pm']
  var meridiemFull = ['a.m.', 'p.m.']

  var formatters = {
    // Month: jan, feb, ..., dec
    'MMM': function (date) {
      return months3char[date.getMonth()]
    },

    // Month: január, február, ..., december
    'MMMM': function (date) {
      return monthsFull[date.getMonth()]
    },

    // Day of week: ne, po, ..., so
    'dd': function (date) {
      return weekdays2char[date.getDay()]
    },

    // Day of week: neď, pon, ..., sob
    'ddd': function (date) {
      return weekdays3char[date.getDay()]
    },

    // Day of week: neďeľa, pondelok, ..., sobota
    'dddd': function (date) {
      return weekdaysFull[date.getDay()]
    },

    // AM, PM
    'A': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]
    },

    // am, pm
    'a': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]
    },

    // a.m., p.m.
    'aa': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]
    }
  }

  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.
  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']
  ordinalFormatters.forEach(function (formatterToken) {
    formatters[formatterToken + 'o'] = function (date, formatters) {
      return ordinal(formatters[formatterToken](date))
    }
  })

  return {
    formatters: formatters,
    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)
  }
}

function ordinal (number) {
  return number + '.'
}

module.exports = buildFormatLocale


/***/ }),
/* 422 */
/***/ (function(module, exports) {

function buildDistanceInWordsLocale () {
  var distanceInWordsLocale = {
    lessThanXSeconds: {
      one: 'manj kot sekunda',
      two: 'manj kot 2 sekundi',
      three: 'manj kot {{count}} sekunde',
      other: 'manj kot {{count}} sekund'
    },

    xSeconds: {
      one: '1 sekunda',
      two: '2 sekundi',
      three: '{{count}} sekunde',
      other: '{{count}} sekund'
    },

    halfAMinute: 'pol minute',

    lessThanXMinutes: {
      one: 'manj kot minuta',
      two: 'manj kot 2 minuti',
      three: 'manj kot {{count}} minute',
      other: 'manj kot {{count}} minut'
    },

    xMinutes: {
      one: '1 minuta',
      two: '2 minuti',
      three: '{{count}} minute',
      other: '{{count}} minut'
    },

    aboutXHours: {
      one: 'približno 1 ura',
      two: 'približno 2 uri',
      three: 'približno {{count}} ure',
      other: 'približno {{count}} ur'
    },

    xHours: {
      one: '1 ura',
      two: '2 uri',
      three: '{{count}} ure',
      other: '{{count}} ur'
    },

    xDays: {
      one: '1 dan',
      two: '2 dni',
      three: '{{count}} dni',
      other: '{{count}} dni'
    },

    aboutXMonths: {
      one: 'približno 1 mesec',
      two: 'približno 2 meseca',
      three: 'približno {{count}} mesece',
      other: 'približno {{count}} mesecev'
    },

    xMonths: {
      one: '1 mesec',
      two: '2 meseca',
      three: '{{count}} meseci',
      other: '{{count}} mesecev'
    },

    aboutXYears: {
      one: 'približno 1 leto',
      two: 'približno 2 leti',
      three: 'približno {{count}} leta',
      other: 'približno {{count}} let'
    },

    xYears: {
      one: '1 leto',
      two: '2 leti',
      three: '{{count}} leta',
      other: '{{count}} let'
    },

    overXYears: {
      one: 'več kot 1 leto',
      two: 'več kot 2 leti',
      three: 'več kot {{count}} leta',
      other: 'več kot {{count}} let'
    },

    almostXYears: {
      one: 'skoraj 1 leto',
      two: 'skoraj 2 leti',
      three: 'skoraj {{count}} leta',
      other: 'skoraj {{count}} let'
    }
  }

  function localize (token, count, options) {
    options = options || {}

    var result
    if (typeof distanceInWordsLocale[token] === 'string') {
      result = distanceInWordsLocale[token]
    } else if (count === 1) {
      result = distanceInWordsLocale[token].one
    } else if (count === 2) {
      result = distanceInWordsLocale[token].two
    } else if (count === 3 || count === 4) {
      result = distanceInWordsLocale[token].three.replace('{{count}}', count)
    } else {
      result = distanceInWordsLocale[token].other.replace('{{count}}', count)
    }

    if (options.addSuffix) {
      result = result.replace(/(minut|sekund|ur)(a)/, '$1o')
      if (token === 'xMonths') {
        result = result.replace(/(mesec)(i)/, '$1e')
      }
      if (options.comparison > 0) {
        return 'čez ' + result
      } else {
        return result + ' nazaj'
      }
    }

    return result
  }

  return {
    localize: localize
  }
}

module.exports = buildDistanceInWordsLocale


/***/ }),
/* 423 */
/***/ (function(module, exports, __webpack_require__) {

var buildFormattingTokensRegExp = __webpack_require__(15)

function buildFormatLocale () {
  var months3char = ['jan', 'feb', 'mar', 'apr', 'maj', 'jun', 'jul', 'avg', 'sep', 'okt', 'nov', 'dec']
  var monthsFull = ['januar', 'februar', 'marec', 'april', 'maj', 'junij', 'julij', 'avgust', 'september', 'oktober', 'november', 'december']
  var weekdays2char = ['ne', 'po', 'to', 'sr', 'če', 'pe', 'so']
  var weekdays3char = ['ned', 'pon', 'tor', 'sre', 'čet', 'pet', 'sob']
  var weekdaysFull = ['nedelja', 'ponedeljek', 'torek', 'sreda', 'četrtek', 'petek', 'sobota']
  var meridiemUppercase = ['AM', 'PM']
  var meridiemLowercase = ['am', 'pm']
  var meridiemFull = ['a.m.', 'p.m.']

  var formatters = {
    // Month: Jan, Feb, ..., Dec
    'MMM': function (date) {
      return months3char[date.getMonth()]
    },

    // Month: January, February, ..., December
    'MMMM': function (date) {
      return monthsFull[date.getMonth()]
    },

    // Day of week: Su, Mo, ..., Sa
    'dd': function (date) {
      return weekdays2char[date.getDay()]
    },

    // Day of week: Sun, Mon, ..., Sat
    'ddd': function (date) {
      return weekdays3char[date.getDay()]
    },

    // Day of week: Sunday, Monday, ..., Saturday
    'dddd': function (date) {
      return weekdaysFull[date.getDay()]
    },

    // AM, PM
    'A': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]
    },

    // am, pm
    'a': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]
    },

    // a.m., p.m.
    'aa': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]
    }
  }

  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.
  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']
  ordinalFormatters.forEach(function (formatterToken) {
    formatters[formatterToken + 'o'] = function (date, formatters) {
      return ordinal(formatters[formatterToken](date))
    }
  })

  return {
    formatters: formatters,
    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)
  }
}

function ordinal (number) {
  return number + '.'
}

module.exports = buildFormatLocale


/***/ }),
/* 424 */
/***/ (function(module, exports) {

function buildDistanceInWordsLocale () {
  var distanceInWordsLocale = {
    lessThanXSeconds: {
      one: 'manje od sekunde',
      other: 'manje od {{count}} sekundi'
    },

    xSeconds: {
      one: '1 sekund',
      other: '{{count}} sekunde'
    },

    halfAMinute: 'pola minuta',

    lessThanXMinutes: {
      one: 'manje od minute',
      other: 'manje od {{count}} minuta'
    },

    xMinutes: {
      one: '1 minut',
      other: '{{count}} minute'
    },

    aboutXHours: {
      one: 'oko 1 sat',
      other: 'oko {{count}} sata'
    },

    xHours: {
      one: '1 sat',
      other: '{{count}} sati'
    },

    xDays: {
      one: '1 dan',
      other: '{{count}} dani'
    },

    aboutXMonths: {
      one: 'oko 1 mesec',
      other: 'oko {{count}} meseca'
    },

    xMonths: {
      one: '1 mesec',
      other: '{{count}} meseci'
    },

    aboutXYears: {
      one: 'oko 1 godine',
      other: 'oko {{count}} godina'
    },

    xYears: {
      one: '1 godina',
      other: '{{count}} godine'
    },

    overXYears: {
      one: 'više od 1 godine',
      other: 'više od {{count}} godina'
    },

    almostXYears: {
      one: 'skoro 1 godinu',
      other: 'skoro {{count}} godina'
    }
  }

  function localize (token, count, options) {
    options = options || {}

    var result
    if (typeof distanceInWordsLocale[token] === 'string') {
      result = distanceInWordsLocale[token]
    } else if (count === 1) {
      result = distanceInWordsLocale[token].one
    } else {
      result = distanceInWordsLocale[token].other.replace('{{count}}', count)
    }

    if (options.addSuffix) {
      if (options.comparison > 0) {
        return 'za ' + result
      } else {
        return result + ' pre'
      }
    }

    return result
  }

  return {
    localize: localize
  }
}

module.exports = buildDistanceInWordsLocale


/***/ }),
/* 425 */
/***/ (function(module, exports, __webpack_require__) {

var buildFormattingTokensRegExp = __webpack_require__(15)

function buildFormatLocale () {
  var months3char = ['jan', 'feb', 'mar', 'apr', 'maj', 'jun', 'jul', 'avg', 'sep', 'okt', 'nov', 'dec']
  var monthsFull = ['januar', 'februar', 'mart', 'april', 'maj', 'jun', 'jul', 'avgust', 'septembar', 'oktobar', 'novembar', 'decembar']
  var weekdays2char = ['ne', 'po', 'ut', 'sr', 'če', 'pe', 'su']
  var weekdays3char = ['ned', 'pon', 'uto', 'sre', 'čet', 'pet', 'sub']
  var weekdaysFull = ['nedelja', 'ponedeljak', 'utorak', 'sreda', 'četvrtak', 'petak', 'subota']
  var meridiemUppercase = ['AM', 'PM']
  var meridiemLowercase = ['am', 'pm']
  var meridiemFull = ['a.m.', 'p.m.']

  var formatters = {
    // Month: Jan, Feb, ..., Dec
    'MMM': function (date) {
      return months3char[date.getMonth()]
    },

    // Month: January, February, ..., December
    'MMMM': function (date) {
      return monthsFull[date.getMonth()]
    },

    // Day of week: Su, Mo, ..., Sa
    'dd': function (date) {
      return weekdays2char[date.getDay()]
    },

    // Day of week: Sun, Mon, ..., Sat
    'ddd': function (date) {
      return weekdays3char[date.getDay()]
    },

    // Day of week: Sunday, Monday, ..., Saturday
    'dddd': function (date) {
      return weekdaysFull[date.getDay()]
    },

    // AM, PM
    'A': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]
    },

    // am, pm
    'a': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]
    },

    // a.m., p.m.
    'aa': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]
    }
  }

  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.
  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']
  ordinalFormatters.forEach(function (formatterToken) {
    formatters[formatterToken + 'o'] = function (date, formatters) {
      return ordinal(formatters[formatterToken](date))
    }
  })

  return {
    formatters: formatters,
    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)
  }
}

function ordinal (number) {
  return number + '.'
}

module.exports = buildFormatLocale


/***/ }),
/* 426 */
/***/ (function(module, exports) {

function buildDistanceInWordsLocale () {
  var distanceInWordsLocale = {
    lessThanXSeconds: {
      singular: 'mindre än en sekund',
      plural: 'mindre än {{count}} sekunder'
    },

    xSeconds: {
      singular: 'en sekund',
      plural: '{{count}} sekunder'
    },

    halfAMinute: 'en halv minut',

    lessThanXMinutes: {
      singular: 'mindre än en minut',
      plural: 'mindre än {{count}} minuter'
    },

    xMinutes: {
      singular: 'en minut',
      plural: '{{count}} minuter'
    },

    aboutXHours: {
      singular: 'ungefär en timme',
      plural: 'ungefär {{count}} timmar'
    },

    xHours: {
      singular: 'en timme',
      plural: '{{count}} timmar'
    },

    xDays: {
      singular: 'en dag',
      plural: '{{count}} dagar'
    },

    aboutXMonths: {
      singular: 'ungefär en månad',
      plural: 'ungefär {{count}} månader'
    },

    xMonths: {
      singular: 'en månad',
      plural: '{{count}} månader'
    },

    aboutXYears: {
      singular: 'ungefär ett år',
      plural: 'ungefär {{count}} år'
    },

    xYears: {
      singular: 'ett år',
      plural: '{{count}} år'
    },

    overXYears: {
      singular: 'över ett år',
      plural: 'över {{count}} år'
    },

    almostXYears: {
      singular: 'nästan ett år',
      plural: 'nästan {{count}} år'
    }
  }

  var wordMapping = [
    'noll',
    'en',
    'två',
    'tre',
    'fyra',
    'fem',
    'sex',
    'sju',
    'åtta',
    'nio',
    'tio',
    'elva',
    'tolv'
  ]

  function localize (token, count, options) {
    options = options || {}

    var translation = distanceInWordsLocale[token]
    var result
    if (typeof translation === 'string') {
      result = translation
    } else if (count === 0 || count > 1) {
      result = translation.plural.replace('{{count}}', count < 13 ? wordMapping[count] : count)
    } else {
      result = translation.singular
    }

    if (options.addSuffix) {
      if (options.comparison > 0) {
        return 'om ' + result
      } else {
        return result + ' sedan'
      }
    }

    return result
  }

  return {
    localize: localize
  }
}

module.exports = buildDistanceInWordsLocale


/***/ }),
/* 427 */
/***/ (function(module, exports, __webpack_require__) {

var buildFormattingTokensRegExp = __webpack_require__(15)

function buildFormatLocale () {
  var months3char = ['jan', 'feb', 'mar', 'apr', 'maj', 'jun', 'jul', 'aug', 'sep', 'okt', 'nov', 'dec']
  var monthsFull = ['januari', 'februari', 'mars', 'april', 'maj', 'juni', 'juli', 'augusti', 'september', 'oktober', 'november', 'december']
  var weekdays2char = ['sö', 'må', 'ti', 'on', 'to', 'fr', 'lö']
  var weekdays3char = ['sön', 'mån', 'tis', 'ons', 'tor', 'fre', 'lör']
  var weekdaysFull = ['söndag', 'måndag', 'tisdag', 'onsdag', 'torsdag', 'fredag', 'lördag']
  var meridiemFull = ['f.m.', 'e.m.']

  var formatters = {
    // Month: Jan, Feb, ..., Dec
    'MMM': function (date) {
      return months3char[date.getMonth()]
    },

    // Month: January, February, ..., December
    'MMMM': function (date) {
      return monthsFull[date.getMonth()]
    },

    // Day of week: Su, Mo, ..., Sa
    'dd': function (date) {
      return weekdays2char[date.getDay()]
    },

    // Day of week: Sun, Mon, ..., Sat
    'ddd': function (date) {
      return weekdays3char[date.getDay()]
    },

    // Day of week: Sunday, Monday, ..., Saturday
    'dddd': function (date) {
      return weekdaysFull[date.getDay()]
    },

    // a.m., p.m.
    'aa': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]
    }
  }

  formatters.A = formatters.aa
  formatters.a = formatters.aa

  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.
  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']
  ordinalFormatters.forEach(function (formatterToken) {
    formatters[formatterToken + 'o'] = function (date, formatters) {
      return ordinal(formatters[formatterToken](date))
    }
  })

  return {
    formatters: formatters,
    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)
  }
}

function ordinal (number) {
  var rem100 = number % 100
  if (rem100 > 20 || rem100 < 10) {
    switch (rem100 % 10) {
      case 1:
      case 2:
        return number + ':a'
    }
  }
  return number + ':e'
}

module.exports = buildFormatLocale


/***/ }),
/* 428 */
/***/ (function(module, exports) {

function buildDistanceInWordsLocale () {
  var distanceInWordsLocale = {
    lessThanXSeconds: {
      one: 'น้อยกว่า 1 วินาที',
      other: 'น้อยกว่า {{count}} วินาที'
    },

    xSeconds: {
      one: '1 วินาที',
      other: '{{count}} วินาที'
    },

    halfAMinute: 'ครึ่งนาที',

    lessThanXMinutes: {
      one: 'น้อยกว่า 1 นาที',
      other: 'น้อยกว่า {{count}} นาที'
    },

    xMinutes: {
      one: '1 นาที',
      other: '{{count}} นาที'
    },

    aboutXHours: {
      one: 'ประมาณ 1 ชั่วโมง',
      other: 'ประมาณ {{count}} ชั่วโมง'
    },

    xHours: {
      one: '1 ชั่วโมง',
      other: '{{count}} ชั่วโมง'
    },

    xDays: {
      one: '1 วัน',
      other: '{{count}} วัน'
    },

    aboutXMonths: {
      one: 'ประมาณ 1 เดือน',
      other: 'ประมาณ {{count}} เดือน'
    },

    xMonths: {
      one: '1 เดือน',
      other: '{{count}} เดือน'
    },

    aboutXYears: {
      one: 'ประมาณ 1 ปี',
      other: 'ประมาณ {{count}} ปี'
    },

    xYears: {
      one: '1 ปี',
      other: '{{count}} ปี'
    },

    overXYears: {
      one: 'มากกว่า 1 ปี',
      other: 'มากกว่า {{count}} ปี'
    },

    almostXYears: {
      one: 'เกือบ 1 ปี',
      other: 'เกือบ {{count}} ปี'
    }
  }

  function localize (token, count, options) {
    options = options || {}

    var result
    if (typeof distanceInWordsLocale[token] === 'string') {
      result = distanceInWordsLocale[token]
    } else if (count === 1) {
      result = distanceInWordsLocale[token].one
    } else {
      result = distanceInWordsLocale[token].other.replace('{{count}}', count)
    }

    if (options.addSuffix) {
      if (options.comparison > 0) {
        if (token === 'halfAMinute') {
          return 'ใน' + result
        } else {
          return 'ใน ' + result
        }
      } else {
        return result + 'ที่ผ่านมา'
      }
    }

    return result
  }

  return {
    localize: localize
  }
}

module.exports = buildDistanceInWordsLocale


/***/ }),
/* 429 */
/***/ (function(module, exports, __webpack_require__) {

var buildFormattingTokensRegExp = __webpack_require__(15)

function buildFormatLocale () {
  var months3char = ['ม.ค.', 'ก.พ.', 'มี.ค.', 'เม.ย.', 'พ.ค.', 'มิ.ย.', 'ก.ค.', 'ส.ค.', 'ก.ย.', 'ต.ค.', 'พ.ย.', 'ธ.ค.']
  var monthsFull = ['มกราคม', 'กุมภาพันธ์', 'มีนาคม', 'เมษายน', 'พฤษภาคม', 'มิถุนายน', 'กรกฎาคม', 'สิงหาคม', 'กันยายน', 'ตุลาคม', 'พฤศจิกายน', 'ธันวาคม']
  var weekdays2char = ['อา.', 'จ.', 'อ.', 'พ.', 'พฤ.', 'ศ.', 'ส.']
  var weekdays3char = ['อา.', 'จ.', 'อ.', 'พ.', 'พฤ.', 'ศ.', 'ส.']
  var weekdaysFull = ['อาทิตย์', 'จันทร์', 'อังคาร', 'พุธ', 'พฤหัสบดี', 'ศุกร์', 'เสาร์']
  var meridiemUppercase = ['น.']
  var meridiemLowercase = ['น.']
  var meridiemFull = ['นาฬิกา']

  var formatters = {
    // Month: Jan, Feb, ..., Dec
    'MMM': function (date) {
      return months3char[date.getMonth()]
    },

    // Month: January, February, ..., December
    'MMMM': function (date) {
      return monthsFull[date.getMonth()]
    },

    // Day of week: Su, Mo, ..., Sa
    'dd': function (date) {
      return weekdays2char[date.getDay()]
    },

    // Day of week: Sun, Mon, ..., Sat
    'ddd': function (date) {
      return weekdays3char[date.getDay()]
    },

    // Day of week: Sunday, Monday, ..., Saturday
    'dddd': function (date) {
      return weekdaysFull[date.getDay()]
    },

    // AM, PM
    'A': function (date) {
      return meridiemUppercase[0]
    },

    // am, pm
    'a': function (date) {
      return meridiemLowercase[0]
    },

    // a.m., p.m.
    'aa': function (date) {
      return meridiemFull[0]
    }
  }

  return {
    formatters: formatters,
    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)
  }
}

module.exports = buildFormatLocale


/***/ }),
/* 430 */
/***/ (function(module, exports) {

function buildDistanceInWordsLocale () {
  var distanceInWordsLocale = {
    lessThanXSeconds: {
      one: 'bir saniyeden az',
      other: '{{count}} saniyeden az'
    },

    xSeconds: {
      one: '1 saniye',
      other: '{{count}} saniye'
    },

    halfAMinute: 'yarım dakika',

    lessThanXMinutes: {
      one: 'bir dakikadan az',
      other: '{{count}} dakikadan az'
    },

    xMinutes: {
      one: '1 dakika',
      other: '{{count}} dakika'
    },

    aboutXHours: {
      one: 'yaklaşık 1 saat',
      other: 'yaklaşık {{count}} saat'
    },

    xHours: {
      one: '1 saat',
      other: '{{count}} saat'
    },

    xDays: {
      one: '1 gün',
      other: '{{count}} gün'
    },

    aboutXMonths: {
      one: 'yaklaşık 1 ay',
      other: 'yaklaşık {{count}} ay'
    },

    xMonths: {
      one: '1 ay',
      other: '{{count}} ay'
    },

    aboutXYears: {
      one: 'yaklaşık 1 yıl',
      other: 'yaklaşık {{count}} yıl'
    },

    xYears: {
      one: '1 yıl',
      other: '{{count}} yıl'
    },

    overXYears: {
      one: '1 yıldan fazla',
      other: '{{count}} yıldan fazla'
    },

    almostXYears: {
      one: 'neredeyse 1 yıl',
      other: 'neredeyse {{count}} yıl'
    }
  }

  var extraWordTokens = [
    'lessThanXSeconds',
    'lessThanXMinutes',
    'overXYears'
  ]

  function localize (token, count, options) {
    options = options || {}

    var result
    if (typeof distanceInWordsLocale[token] === 'string') {
      result = distanceInWordsLocale[token]
    } else if (count === 1) {
      result = distanceInWordsLocale[token].one
    } else {
      result = distanceInWordsLocale[token].other.replace('{{count}}', count)
    }

    if (options.addSuffix) {
      var extraWord = ''
      if (extraWordTokens.indexOf(token) > -1) {
        extraWord = ' bir süre'
      }

      if (options.comparison > 0) {
        return result + extraWord + ' içinde'
      } else {
        return result + extraWord + ' önce'
      }
    }

    return result
  }

  return {
    localize: localize
  }
}

module.exports = buildDistanceInWordsLocale


/***/ }),
/* 431 */
/***/ (function(module, exports, __webpack_require__) {

var buildFormattingTokensRegExp = __webpack_require__(15)

function buildFormatLocale () {
  // Note: in Turkish, the names of days of the week and months are capitalized.
  // If you are making a new locale based on this one, check if the same is true for the language you're working on.
  // Generally, formatted dates should look like they are in the middle of a sentence,
  // e.g. in Spanish language the weekdays and months should be in the lowercase.
  var months3char = ['Oca', 'Şub', 'Mar', 'Nis', 'May', 'Haz', 'Tem', 'Ağu', 'Eyl', 'Eki', 'Kas', 'Ara']
  var monthsFull = ['Ocak', 'Şubat', 'Mart', 'Nisan', 'Mayıs', 'Haziran', 'Temmuz', 'Ağustos', 'Eylül', 'Ekim', 'Kasım', 'Aralık']
  var weekdays2char = ['Pz', 'Pt', 'Sa', 'Ça', 'Pe', 'Cu', 'Ct']
  var weekdays3char = ['Paz', 'Pts', 'Sal', 'Çar', 'Per', 'Cum', 'Cts']
  var weekdaysFull = ['Pazar', 'Pazartesi', 'Salı', 'Çarşamba', 'Perşembe', 'Cuma', 'Cumartesi']
  var meridiemUppercase = ['ÖÖ', 'ÖS']
  var meridiemLowercase = ['öö', 'ös']
  var meridiemFull = ['ö.ö.', 'ö.s.']

  var formatters = {
    // Month: Jan, Feb, ..., Dec
    'MMM': function (date) {
      return months3char[date.getMonth()]
    },

    // Month: January, February, ..., December
    'MMMM': function (date) {
      return monthsFull[date.getMonth()]
    },

    // Day of week: Su, Mo, ..., Sa
    'dd': function (date) {
      return weekdays2char[date.getDay()]
    },

    // Day of week: Sun, Mon, ..., Sat
    'ddd': function (date) {
      return weekdays3char[date.getDay()]
    },

    // Day of week: Sunday, Monday, ..., Saturday
    'dddd': function (date) {
      return weekdaysFull[date.getDay()]
    },

    // AM, PM
    'A': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]
    },

    // am, pm
    'a': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]
    },

    // a.m., p.m.
    'aa': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]
    }
  }

  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.
  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']
  ordinalFormatters.forEach(function (formatterToken) {
    formatters[formatterToken + 'o'] = function (date, formatters) {
      return ordinal(formatters[formatterToken](date))
    }
  })

  return {
    formatters: formatters,
    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)
  }
}

function ordinal (number) {
  var suffixes = {
    1: '\'inci',
    2: '\'inci',
    3: '\'üncü',
    4: '\'üncü',
    5: '\'inci',
    6: '\'ıncı',
    7: '\'inci',
    8: '\'inci',
    9: '\'uncu',
    10: '\'uncu',
    20: '\'inci',
    30: '\'uncu',
    50: '\'inci',
    60: '\'ıncı',
    70: '\'inci',
    80: '\'inci',
    90: '\'ıncı',
    100: '\'üncü'
  }

  if (number === 0) {
    return '0\'ıncı'
  }

  var x = number % 10
  var y = number % 100 - x
  var z = number >= 100 ? 100 : null

  return number + (suffixes[x] || suffixes[y] || suffixes[z])
}

module.exports = buildFormatLocale


/***/ }),
/* 432 */
/***/ (function(module, exports) {

function buildDistanceInWordsLocale () {
  var distanceInWordsLocale = {
    lessThanXSeconds: {
      one: '不到 1 秒',
      other: '不到 {{count}} 秒'
    },

    xSeconds: {
      one: '1 秒',
      other: '{{count}} 秒'
    },

    halfAMinute: '半分钟',

    lessThanXMinutes: {
      one: '不到 1 分钟',
      other: '不到 {{count}} 分钟'
    },

    xMinutes: {
      one: '1 分钟',
      other: '{{count}} 分钟'
    },

    xHours: {
      one: '1 小时',
      other: '{{count}} 小时'
    },

    aboutXHours: {
      one: '大约 1 小时',
      other: '大约 {{count}} 小时'
    },

    xDays: {
      one: '1 天',
      other: '{{count}} 天'
    },

    aboutXMonths: {
      one: '大约 1 个月',
      other: '大约 {{count}} 个月'
    },

    xMonths: {
      one: '1 个月',
      other: '{{count}} 个月'
    },

    aboutXYears: {
      one: '大约 1 年',
      other: '大约 {{count}} 年'
    },

    xYears: {
      one: '1 年',
      other: '{{count}} 年'
    },

    overXYears: {
      one: '超过 1 年',
      other: '超过 {{count}} 年'
    },

    almostXYears: {
      one: '将近 1 年',
      other: '将近 {{count}} 年'
    }
  }

  function localize (token, count, options) {
    options = options || {}

    var result
    if (typeof distanceInWordsLocale[token] === 'string') {
      result = distanceInWordsLocale[token]
    } else if (count === 1) {
      result = distanceInWordsLocale[token].one
    } else {
      result = distanceInWordsLocale[token].other.replace('{{count}}', count)
    }

    if (options.addSuffix) {
      if (options.comparison > 0) {
        return result + '内'
      } else {
        return result + '前'
      }
    }

    return result
  }

  return {
    localize: localize
  }
}

module.exports = buildDistanceInWordsLocale


/***/ }),
/* 433 */
/***/ (function(module, exports, __webpack_require__) {

var buildFormattingTokensRegExp = __webpack_require__(15)

function buildFormatLocale () {
  var months3char = ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月']
  var monthsFull = ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月']
  var weekdays2char = ['日', '一', '二', '三', '四', '五', '六']
  var weekdays3char = ['周日', '周一', '周二', '周三', '周四', '周五', '周六']
  var weekdaysFull = ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六']
  var meridiemFull = ['上午', '下午']

  var formatters = {
    // Month: Jan, Feb, ..., Dec
    'MMM': function (date) {
      return months3char[date.getMonth()]
    },

    // Month: January, February, ..., December
    'MMMM': function (date) {
      return monthsFull[date.getMonth()]
    },

    // Day of week: Su, Mo, ..., Sa
    'dd': function (date) {
      return weekdays2char[date.getDay()]
    },

    // Day of week: Sun, Mon, ..., Sat
    'ddd': function (date) {
      return weekdays3char[date.getDay()]
    },

    // Day of week: Sunday, Monday, ..., Saturday
    'dddd': function (date) {
      return weekdaysFull[date.getDay()]
    }
  }

  // AM, PM / am, pm / a.m., p.m. all translates to 上午, 下午
  formatters.a = formatters.aa = formatters.A = function (date) {
    return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]
  }

  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.
  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']
  ordinalFormatters.forEach(function (formatterToken) {
    formatters[formatterToken + 'o'] = function (date, formatters) {
      return ordinal(formatters[formatterToken](date))
    }
  })

  return {
    formatters: formatters,
    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)
  }
}

function ordinal (number) {
  return number.toString()
}

module.exports = buildFormatLocale


/***/ }),
/* 434 */
/***/ (function(module, exports) {

function buildDistanceInWordsLocale () {
  var distanceInWordsLocale = {
    lessThanXSeconds: {
      one: '少於 1 秒',
      other: '少於 {{count}} 秒'
    },

    xSeconds: {
      one: '1 秒',
      other: '{{count}} 秒'
    },

    halfAMinute: '半分鐘',

    lessThanXMinutes: {
      one: '少於 1 分鐘',
      other: '少於 {{count}} 分鐘'
    },

    xMinutes: {
      one: '1 分鐘',
      other: '{{count}} 分鐘'
    },

    xHours: {
      one: '1 小時',
      other: '{{count}} 小時'
    },

    aboutXHours: {
      one: '大約 1 小時',
      other: '大約 {{count}} 小時'
    },

    xDays: {
      one: '1 天',
      other: '{{count}} 天'
    },

    aboutXMonths: {
      one: '大約 1 個月',
      other: '大約 {{count}} 個月'
    },

    xMonths: {
      one: '1 個月',
      other: '{{count}} 個月'
    },

    aboutXYears: {
      one: '大約 1 年',
      other: '大約 {{count}} 年'
    },

    xYears: {
      one: '1 年',
      other: '{{count}} 年'
    },

    overXYears: {
      one: '超過 1 年',
      other: '超過 {{count}} 年'
    },

    almostXYears: {
      one: '將近 1 年',
      other: '將近 {{count}} 年'
    }
  }

  function localize (token, count, options) {
    options = options || {}

    var result
    if (typeof distanceInWordsLocale[token] === 'string') {
      result = distanceInWordsLocale[token]
    } else if (count === 1) {
      result = distanceInWordsLocale[token].one
    } else {
      result = distanceInWordsLocale[token].other.replace('{{count}}', count)
    }

    if (options.addSuffix) {
      if (options.comparison > 0) {
        return result + '內'
      } else {
        return result + '前'
      }
    }

    return result
  }

  return {
    localize: localize
  }
}

module.exports = buildDistanceInWordsLocale


/***/ }),
/* 435 */
/***/ (function(module, exports, __webpack_require__) {

var buildFormattingTokensRegExp = __webpack_require__(15)

function buildFormatLocale () {
  var months3char = ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月']
  var monthsFull = ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月']
  var weekdays2char = ['日', '一', '二', '三', '四', '五', '六']
  var weekdays3char = ['周日', '周一', '周二', '周三', '周四', '周五', '周六']
  var weekdaysFull = ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六']
  var meridiemUppercase = ['AM', 'PM']
  var meridiemLowercase = ['am', 'pm']
  var meridiemFull = ['上午', '下午']

  var formatters = {
    // Month: Jan, Feb, ..., Dec
    'MMM': function (date) {
      return months3char[date.getMonth()]
    },

    // Month: January, February, ..., December
    'MMMM': function (date) {
      return monthsFull[date.getMonth()]
    },

    // Day of week: Su, Mo, ..., Sa
    'dd': function (date) {
      return weekdays2char[date.getDay()]
    },

    // Day of week: Sun, Mon, ..., Sat
    'ddd': function (date) {
      return weekdays3char[date.getDay()]
    },

    // Day of week: Sunday, Monday, ..., Saturday
    'dddd': function (date) {
      return weekdaysFull[date.getDay()]
    },

    // AM, PM
    'A': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]
    },

    // am, pm
    'a': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]
    },

    // a.m., p.m.
    'aa': function (date) {
      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]
    }
  }

  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.
  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']
  ordinalFormatters.forEach(function (formatterToken) {
    formatters[formatterToken + 'o'] = function (date, formatters) {
      return ordinal(formatters[formatterToken](date))
    }
  })

  return {
    formatters: formatters,
    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)
  }
}

function ordinal (number) {
  return number.toString()
}

module.exports = buildFormatLocale


/***/ }),
/* 436 */,
/* 437 */
/***/ (function(module, exports, __webpack_require__) {

var baseIteratee = __webpack_require__(47),
    baseSum = __webpack_require__(741);

/**
 * This method is like `_.sum` except that it accepts `iteratee` which is
 * invoked for each element in `array` to generate the value to be summed.
 * The iteratee is invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Math
 * @param {Array} array The array to iterate over.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {number} Returns the sum.
 * @example
 *
 * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
 *
 * _.sumBy(objects, function(o) { return o.n; });
 * // => 20
 *
 * // The `_.property` iteratee shorthand.
 * _.sumBy(objects, 'n');
 * // => 20
 */
function sumBy(array, iteratee) {
  return (array && array.length)
    ? baseSum(array, baseIteratee(iteratee, 2))
    : 0;
}

module.exports = sumBy;


/***/ }),
/* 438 */
/***/ (function(module, exports, __webpack_require__) {

var createToPairs = __webpack_require__(742),
    keys = __webpack_require__(66);

/**
 * Creates an array of own enumerable string keyed-value pairs for `object`
 * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
 * entries are returned.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @alias entries
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the key-value pairs.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.toPairs(new Foo);
 * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
 */
var toPairs = createToPairs(keys);

module.exports = toPairs;


/***/ }),
/* 439 */
/***/ (function(module, exports, __webpack_require__) {

var baseUnset = __webpack_require__(327);

/**
 * Removes the property at `path` of `object`.
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The object to modify.
 * @param {Array|string} path The path of the property to unset.
 * @returns {boolean} Returns `true` if the property is deleted, else `false`.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 7 } }] };
 * _.unset(object, 'a[0].b.c');
 * // => true
 *
 * console.log(object);
 * // => { 'a': [{ 'b': {} }] };
 *
 * _.unset(object, ['a', '0', 'b', 'c']);
 * // => true
 *
 * console.log(object);
 * // => { 'a': [{ 'b': {} }] };
 */
function unset(object, path) {
  return object == null ? true : baseUnset(object, path);
}

module.exports = unset;


/***/ }),
/* 440 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_RESULT__;// HumanizeDuration.js - https://git.io/j0HgmQ

/* global define, module */

(function () {
  // This has to be defined separately because of a bug: we want to alias
  // `gr` and `el` for backwards-compatiblity. In a breaking change, we can
  // remove `gr` entirely.
  // See https://github.com/EvanHahn/HumanizeDuration.js/issues/143 for more.
  var greek = {
    y: function (c) {
      return c === 1 ? "χρόνος" : "χρόνια";
    },
    mo: function (c) {
      return c === 1 ? "μήνας" : "μήνες";
    },
    w: function (c) {
      return c === 1 ? "εβδομάδα" : "εβδομάδες";
    },
    d: function (c) {
      return c === 1 ? "μέρα" : "μέρες";
    },
    h: function (c) {
      return c === 1 ? "ώρα" : "ώρες";
    },
    m: function (c) {
      return c === 1 ? "λεπτό" : "λεπτά";
    },
    s: function (c) {
      return c === 1 ? "δευτερόλεπτο" : "δευτερόλεπτα";
    },
    ms: function (c) {
      return c === 1
        ? "χιλιοστό του δευτερολέπτου"
        : "χιλιοστά του δευτερολέπτου";
    },
    decimal: ","
  };

  var ARABIC_DIGITS = ["۰", "١", "٢", "٣", "٤", "٥", "٦", "٧", "٨", "٩"];

  var LANGUAGES = {
    af: {
      y: "jaar",
      mo: function (c) {
        return "maand" + (c === 1 ? "" : "e");
      },
      w: function (c) {
        return c === 1 ? "week" : "weke";
      },
      d: function (c) {
        return c === 1 ? "dag" : "dae";
      },
      h: function (c) {
        return c === 1 ? "uur" : "ure";
      },
      m: function (c) {
        return c === 1 ? "minuut" : "minute";
      },
      s: function (c) {
        return "sekonde" + (c === 1 ? "" : "s");
      },
      ms: function (c) {
        return "millisekonde" + (c === 1 ? "" : "s");
      },
      decimal: ","
    },
    ar: {
      y: function (c) {
        return ["سنة", "سنتان", "سنوات"][getArabicForm(c)];
      },
      mo: function (c) {
        return ["شهر", "شهران", "أشهر"][getArabicForm(c)];
      },
      w: function (c) {
        return ["أسبوع", "أسبوعين", "أسابيع"][getArabicForm(c)];
      },
      d: function (c) {
        return ["يوم", "يومين", "أيام"][getArabicForm(c)];
      },
      h: function (c) {
        return ["ساعة", "ساعتين", "ساعات"][getArabicForm(c)];
      },
      m: function (c) {
        return ["دقيقة", "دقيقتان", "دقائق"][getArabicForm(c)];
      },
      s: function (c) {
        return ["ثانية", "ثانيتان", "ثواني"][getArabicForm(c)];
      },
      ms: function (c) {
        return ["جزء من الثانية", "جزآن من الثانية", "أجزاء من الثانية"][
          getArabicForm(c)
        ];
      },
      decimal: ",",
      delimiter: " و ",
      _formatCount: function (count, decimal) {
        var replacements = assign(ARABIC_DIGITS, { ".": decimal });
        var characters = count.toString().split("");
        for (var i = 0; i < characters.length; i++) {
          var character = characters[i];
          if (has(replacements, character)) {
            characters[i] = replacements[character];
          }
        }
        return characters.join("");
      }
    },
    bg: {
      y: function (c) {
        return ["години", "година", "години"][getSlavicForm(c)];
      },
      mo: function (c) {
        return ["месеца", "месец", "месеца"][getSlavicForm(c)];
      },
      w: function (c) {
        return ["седмици", "седмица", "седмици"][getSlavicForm(c)];
      },
      d: function (c) {
        return ["дни", "ден", "дни"][getSlavicForm(c)];
      },
      h: function (c) {
        return ["часа", "час", "часа"][getSlavicForm(c)];
      },
      m: function (c) {
        return ["минути", "минута", "минути"][getSlavicForm(c)];
      },
      s: function (c) {
        return ["секунди", "секунда", "секунди"][getSlavicForm(c)];
      },
      ms: function (c) {
        return ["милисекунди", "милисекунда", "милисекунди"][getSlavicForm(c)];
      },
      decimal: ","
    },
    bn: {
      y: "বছর",
      mo: "মাস",
      w: "সপ্তাহ",
      d: "দিন",
      h: "ঘন্টা",
      m: "মিনিট",
      s: "সেকেন্ড",
      ms: "মিলিসেকেন্ড"
    },
    ca: {
      y: function (c) {
        return "any" + (c === 1 ? "" : "s");
      },
      mo: function (c) {
        return "mes" + (c === 1 ? "" : "os");
      },
      w: function (c) {
        return "setman" + (c === 1 ? "a" : "es");
      },
      d: function (c) {
        return "di" + (c === 1 ? "a" : "es");
      },
      h: function (c) {
        return "hor" + (c === 1 ? "a" : "es");
      },
      m: function (c) {
        return "minut" + (c === 1 ? "" : "s");
      },
      s: function (c) {
        return "segon" + (c === 1 ? "" : "s");
      },
      ms: function (c) {
        return "milisegon" + (c === 1 ? "" : "s");
      },
      decimal: ","
    },
    cs: {
      y: function (c) {
        return ["rok", "roku", "roky", "let"][getCzechOrSlovakForm(c)];
      },
      mo: function (c) {
        return ["měsíc", "měsíce", "měsíce", "měsíců"][getCzechOrSlovakForm(c)];
      },
      w: function (c) {
        return ["týden", "týdne", "týdny", "týdnů"][getCzechOrSlovakForm(c)];
      },
      d: function (c) {
        return ["den", "dne", "dny", "dní"][getCzechOrSlovakForm(c)];
      },
      h: function (c) {
        return ["hodina", "hodiny", "hodiny", "hodin"][getCzechOrSlovakForm(c)];
      },
      m: function (c) {
        return ["minuta", "minuty", "minuty", "minut"][getCzechOrSlovakForm(c)];
      },
      s: function (c) {
        return ["sekunda", "sekundy", "sekundy", "sekund"][
          getCzechOrSlovakForm(c)
        ];
      },
      ms: function (c) {
        return ["milisekunda", "milisekundy", "milisekundy", "milisekund"][
          getCzechOrSlovakForm(c)
        ];
      },
      decimal: ","
    },
    cy: {
      y: "flwyddyn",
      mo: "mis",
      w: "wythnos",
      d: "diwrnod",
      h: "awr",
      m: "munud",
      s: "eiliad",
      ms: "milieiliad"
    },
    da: {
      y: "år",
      mo: function (c) {
        return "måned" + (c === 1 ? "" : "er");
      },
      w: function (c) {
        return "uge" + (c === 1 ? "" : "r");
      },
      d: function (c) {
        return "dag" + (c === 1 ? "" : "e");
      },
      h: function (c) {
        return "time" + (c === 1 ? "" : "r");
      },
      m: function (c) {
        return "minut" + (c === 1 ? "" : "ter");
      },
      s: function (c) {
        return "sekund" + (c === 1 ? "" : "er");
      },
      ms: function (c) {
        return "millisekund" + (c === 1 ? "" : "er");
      },
      decimal: ","
    },
    de: {
      y: function (c) {
        return "Jahr" + (c === 1 ? "" : "e");
      },
      mo: function (c) {
        return "Monat" + (c === 1 ? "" : "e");
      },
      w: function (c) {
        return "Woche" + (c === 1 ? "" : "n");
      },
      d: function (c) {
        return "Tag" + (c === 1 ? "" : "e");
      },
      h: function (c) {
        return "Stunde" + (c === 1 ? "" : "n");
      },
      m: function (c) {
        return "Minute" + (c === 1 ? "" : "n");
      },
      s: function (c) {
        return "Sekunde" + (c === 1 ? "" : "n");
      },
      ms: function (c) {
        return "Millisekunde" + (c === 1 ? "" : "n");
      },
      decimal: ","
    },
    el: greek,
    en: {
      y: function (c) {
        return "year" + (c === 1 ? "" : "s");
      },
      mo: function (c) {
        return "month" + (c === 1 ? "" : "s");
      },
      w: function (c) {
        return "week" + (c === 1 ? "" : "s");
      },
      d: function (c) {
        return "day" + (c === 1 ? "" : "s");
      },
      h: function (c) {
        return "hour" + (c === 1 ? "" : "s");
      },
      m: function (c) {
        return "minute" + (c === 1 ? "" : "s");
      },
      s: function (c) {
        return "second" + (c === 1 ? "" : "s");
      },
      ms: function (c) {
        return "millisecond" + (c === 1 ? "" : "s");
      },
      decimal: "."
    },
    eo: {
      y: function (c) {
        return "jaro" + (c === 1 ? "" : "j");
      },
      mo: function (c) {
        return "monato" + (c === 1 ? "" : "j");
      },
      w: function (c) {
        return "semajno" + (c === 1 ? "" : "j");
      },
      d: function (c) {
        return "tago" + (c === 1 ? "" : "j");
      },
      h: function (c) {
        return "horo" + (c === 1 ? "" : "j");
      },
      m: function (c) {
        return "minuto" + (c === 1 ? "" : "j");
      },
      s: function (c) {
        return "sekundo" + (c === 1 ? "" : "j");
      },
      ms: function (c) {
        return "milisekundo" + (c === 1 ? "" : "j");
      },
      decimal: ","
    },
    es: {
      y: function (c) {
        return "año" + (c === 1 ? "" : "s");
      },
      mo: function (c) {
        return "mes" + (c === 1 ? "" : "es");
      },
      w: function (c) {
        return "semana" + (c === 1 ? "" : "s");
      },
      d: function (c) {
        return "día" + (c === 1 ? "" : "s");
      },
      h: function (c) {
        return "hora" + (c === 1 ? "" : "s");
      },
      m: function (c) {
        return "minuto" + (c === 1 ? "" : "s");
      },
      s: function (c) {
        return "segundo" + (c === 1 ? "" : "s");
      },
      ms: function (c) {
        return "milisegundo" + (c === 1 ? "" : "s");
      },
      decimal: ","
    },
    et: {
      y: function (c) {
        return "aasta" + (c === 1 ? "" : "t");
      },
      mo: function (c) {
        return "kuu" + (c === 1 ? "" : "d");
      },
      w: function (c) {
        return "nädal" + (c === 1 ? "" : "at");
      },
      d: function (c) {
        return "päev" + (c === 1 ? "" : "a");
      },
      h: function (c) {
        return "tund" + (c === 1 ? "" : "i");
      },
      m: function (c) {
        return "minut" + (c === 1 ? "" : "it");
      },
      s: function (c) {
        return "sekund" + (c === 1 ? "" : "it");
      },
      ms: function (c) {
        return "millisekund" + (c === 1 ? "" : "it");
      },
      decimal: ","
    },
    eu: {
      y: "urte",
      mo: "hilabete",
      w: "aste",
      d: "egun",
      h: "ordu",
      m: "minutu",
      s: "segundo",
      ms: "milisegundo",
      decimal: ","
    },
    fa: {
      y: "سال",
      mo: "ماه",
      w: "هفته",
      d: "روز",
      h: "ساعت",
      m: "دقیقه",
      s: "ثانیه",
      ms: "میلی ثانیه",
      decimal: "."
    },
    fi: {
      y: function (c) {
        return c === 1 ? "vuosi" : "vuotta";
      },
      mo: function (c) {
        return c === 1 ? "kuukausi" : "kuukautta";
      },
      w: function (c) {
        return "viikko" + (c === 1 ? "" : "a");
      },
      d: function (c) {
        return "päivä" + (c === 1 ? "" : "ä");
      },
      h: function (c) {
        return "tunti" + (c === 1 ? "" : "a");
      },
      m: function (c) {
        return "minuutti" + (c === 1 ? "" : "a");
      },
      s: function (c) {
        return "sekunti" + (c === 1 ? "" : "a");
      },
      ms: function (c) {
        return "millisekunti" + (c === 1 ? "" : "a");
      },
      decimal: ","
    },
    fo: {
      y: "ár",
      mo: function (c) {
        return c === 1 ? "mánaður" : "mánaðir";
      },
      w: function (c) {
        return c === 1 ? "vika" : "vikur";
      },
      d: function (c) {
        return c === 1 ? "dagur" : "dagar";
      },
      h: function (c) {
        return c === 1 ? "tími" : "tímar";
      },
      m: function (c) {
        return c === 1 ? "minuttur" : "minuttir";
      },
      s: "sekund",
      ms: "millisekund",
      decimal: ","
    },
    fr: {
      y: function (c) {
        return "an" + (c >= 2 ? "s" : "");
      },
      mo: "mois",
      w: function (c) {
        return "semaine" + (c >= 2 ? "s" : "");
      },
      d: function (c) {
        return "jour" + (c >= 2 ? "s" : "");
      },
      h: function (c) {
        return "heure" + (c >= 2 ? "s" : "");
      },
      m: function (c) {
        return "minute" + (c >= 2 ? "s" : "");
      },
      s: function (c) {
        return "seconde" + (c >= 2 ? "s" : "");
      },
      ms: function (c) {
        return "milliseconde" + (c >= 2 ? "s" : "");
      },
      decimal: ","
    },
    gr: greek,
    he: {
      y: function (c) {
        return c === 1 ? "שנה" : "שנים";
      },
      mo: function (c) {
        return c === 1 ? "חודש" : "חודשים";
      },
      w: function (c) {
        return c === 1 ? "שבוע" : "שבועות";
      },
      d: function (c) {
        return c === 1 ? "יום" : "ימים";
      },
      h: function (c) {
        return c === 1 ? "שעה" : "שעות";
      },
      m: function (c) {
        return c === 1 ? "דקה" : "דקות";
      },
      s: function (c) {
        return c === 1 ? "שניה" : "שניות";
      },
      ms: function (c) {
        return c === 1 ? "מילישנייה" : "מילישניות";
      },
      decimal: "."
    },
    hr: {
      y: function (c) {
        if (c % 10 === 2 || c % 10 === 3 || c % 10 === 4) {
          return "godine";
        }
        return "godina";
      },
      mo: function (c) {
        if (c === 1) {
          return "mjesec";
        } else if (c === 2 || c === 3 || c === 4) {
          return "mjeseca";
        }
        return "mjeseci";
      },
      w: function (c) {
        if (c % 10 === 1 && c !== 11) {
          return "tjedan";
        }
        return "tjedna";
      },
      d: function (c) {
        return c === 1 ? "dan" : "dana";
      },
      h: function (c) {
        if (c === 1) {
          return "sat";
        } else if (c === 2 || c === 3 || c === 4) {
          return "sata";
        }
        return "sati";
      },
      m: function (c) {
        var mod10 = c % 10;
        if ((mod10 === 2 || mod10 === 3 || mod10 === 4) && (c < 10 || c > 14)) {
          return "minute";
        }
        return "minuta";
      },
      s: function (c) {
        var mod10 = c % 10;
        if (mod10 === 5 || (Math.floor(c) === c && c >= 10 && c <= 19)) {
          return "sekundi";
        } else if (mod10 === 1) {
          return "sekunda";
        } else if (mod10 === 2 || mod10 === 3 || mod10 === 4) {
          return "sekunde";
        }
        return "sekundi";
      },
      ms: function (c) {
        if (c === 1) {
          return "milisekunda";
        } else if (c % 10 === 2 || c % 10 === 3 || c % 10 === 4) {
          return "milisekunde";
        }
        return "milisekundi";
      },
      decimal: ","
    },
    hi: {
      y: "साल",
      mo: function (c) {
        return c === 1 ? "महीना" : "महीने";
      },
      w: function (c) {
        return c === 1 ? "हफ़्ता" : "हफ्ते";
      },
      d: "दिन",
      h: function (c) {
        return c === 1 ? "घंटा" : "घंटे";
      },
      m: "मिनट",
      s: "सेकंड",
      ms: "मिलीसेकंड",
      decimal: "."
    },
    hu: {
      y: "év",
      mo: "hónap",
      w: "hét",
      d: "nap",
      h: "óra",
      m: "perc",
      s: "másodperc",
      ms: "ezredmásodperc",
      decimal: ","
    },
    id: {
      y: "tahun",
      mo: "bulan",
      w: "minggu",
      d: "hari",
      h: "jam",
      m: "menit",
      s: "detik",
      ms: "milidetik",
      decimal: "."
    },
    is: {
      y: "ár",
      mo: function (c) {
        return "mánuð" + (c === 1 ? "ur" : "ir");
      },
      w: function (c) {
        return "vik" + (c === 1 ? "a" : "ur");
      },
      d: function (c) {
        return "dag" + (c === 1 ? "ur" : "ar");
      },
      h: function (c) {
        return "klukkutím" + (c === 1 ? "i" : "ar");
      },
      m: function (c) {
        return "mínút" + (c === 1 ? "a" : "ur");
      },
      s: function (c) {
        return "sekúnd" + (c === 1 ? "a" : "ur");
      },
      ms: function (c) {
        return "millisekúnd" + (c === 1 ? "a" : "ur");
      },
      decimal: "."
    },
    it: {
      y: function (c) {
        return "ann" + (c === 1 ? "o" : "i");
      },
      mo: function (c) {
        return "mes" + (c === 1 ? "e" : "i");
      },
      w: function (c) {
        return "settiman" + (c === 1 ? "a" : "e");
      },
      d: function (c) {
        return "giorn" + (c === 1 ? "o" : "i");
      },
      h: function (c) {
        return "or" + (c === 1 ? "a" : "e");
      },
      m: function (c) {
        return "minut" + (c === 1 ? "o" : "i");
      },
      s: function (c) {
        return "second" + (c === 1 ? "o" : "i");
      },
      ms: function (c) {
        return "millisecond" + (c === 1 ? "o" : "i");
      },
      decimal: ","
    },
    ja: {
      y: "年",
      mo: "ヶ月",
      w: "週",
      d: "日",
      h: "時間",
      m: "分",
      s: "秒",
      ms: "ミリ秒",
      decimal: "."
    },
    km: {
      y: "ឆ្នាំ",
      mo: "ខែ",
      w: "សប្តាហ៍",
      d: "ថ្ងៃ",
      h: "ម៉ោង",
      m: "នាទី",
      s: "វិនាទី",
      ms: "មិល្លីវិនាទី"
    },
    kn: {
      y: function (c) {
        return c === 1 ? "ವರ್ಷ" : "ವರ್ಷಗಳು";
      },
      mo: function (c) {
        return c === 1 ? "ತಿಂಗಳು" : "ತಿಂಗಳುಗಳು";
      },
      w: function (c) {
        return c === 1 ? "ವಾರ" : "ವಾರಗಳು";
      },
      d: function (c) {
        return c === 1 ? "ದಿನ" : "ದಿನಗಳು";
      },
      h: function (c) {
        return c === 1 ? "ಗಂಟೆ" : "ಗಂಟೆಗಳು";
      },
      m: function (c) {
        return c === 1 ? "ನಿಮಿಷ" : "ನಿಮಿಷಗಳು";
      },
      s: function (c) {
        return c === 1 ? "ಸೆಕೆಂಡ್" : "ಸೆಕೆಂಡುಗಳು";
      },
      ms: function (c) {
        return c === 1 ? "ಮಿಲಿಸೆಕೆಂಡ್" : "ಮಿಲಿಸೆಕೆಂಡುಗಳು";
      }
    },
    ko: {
      y: "년",
      mo: "개월",
      w: "주일",
      d: "일",
      h: "시간",
      m: "분",
      s: "초",
      ms: "밀리 초",
      decimal: "."
    },
    ku: {
      y: "sal",
      mo: "meh",
      w: "hefte",
      d: "roj",
      h: "seet",
      m: "deqe",
      s: "saniye",
      ms: "mîlîçirk",
      decimal: ","
    },
    lo: {
      y: "ປີ",
      mo: "ເດືອນ",
      w: "ອາທິດ",
      d: "ມື້",
      h: "ຊົ່ວໂມງ",
      m: "ນາທີ",
      s: "ວິນາທີ",
      ms: "ມິນລິວິນາທີ",
      decimal: ","
    },
    lt: {
      y: function (c) {
        return c % 10 === 0 || (c % 100 >= 10 && c % 100 <= 20)
          ? "metų"
          : "metai";
      },
      mo: function (c) {
        return ["mėnuo", "mėnesiai", "mėnesių"][getLithuanianForm(c)];
      },
      w: function (c) {
        return ["savaitė", "savaitės", "savaičių"][getLithuanianForm(c)];
      },
      d: function (c) {
        return ["diena", "dienos", "dienų"][getLithuanianForm(c)];
      },
      h: function (c) {
        return ["valanda", "valandos", "valandų"][getLithuanianForm(c)];
      },
      m: function (c) {
        return ["minutė", "minutės", "minučių"][getLithuanianForm(c)];
      },
      s: function (c) {
        return ["sekundė", "sekundės", "sekundžių"][getLithuanianForm(c)];
      },
      ms: function (c) {
        return ["milisekundė", "milisekundės", "milisekundžių"][
          getLithuanianForm(c)
        ];
      },
      decimal: ","
    },
    lv: {
      y: function (c) {
        return getLatvianForm(c) ? "gads" : "gadi";
      },
      mo: function (c) {
        return getLatvianForm(c) ? "mēnesis" : "mēneši";
      },
      w: function (c) {
        return getLatvianForm(c) ? "nedēļa" : "nedēļas";
      },
      d: function (c) {
        return getLatvianForm(c) ? "diena" : "dienas";
      },
      h: function (c) {
        return getLatvianForm(c) ? "stunda" : "stundas";
      },
      m: function (c) {
        return getLatvianForm(c) ? "minūte" : "minūtes";
      },
      s: function (c) {
        return getLatvianForm(c) ? "sekunde" : "sekundes";
      },
      ms: function (c) {
        return getLatvianForm(c) ? "milisekunde" : "milisekundes";
      },
      decimal: ","
    },
    mk: {
      y: function (c) {
        return c === 1 ? "година" : "години";
      },
      mo: function (c) {
        return c === 1 ? "месец" : "месеци";
      },
      w: function (c) {
        return c === 1 ? "недела" : "недели";
      },
      d: function (c) {
        return c === 1 ? "ден" : "дена";
      },
      h: function (c) {
        return c === 1 ? "час" : "часа";
      },
      m: function (c) {
        return c === 1 ? "минута" : "минути";
      },
      s: function (c) {
        return c === 1 ? "секунда" : "секунди";
      },
      ms: function (c) {
        return c === 1 ? "милисекунда" : "милисекунди";
      },
      decimal: ","
    },
    mr: {
      y: function (c) {
        return c === 1 ? "वर्ष" : "वर्षे";
      },
      mo: function (c) {
        return c === 1 ? "महिना" : "महिने";
      },
      w: function (c) {
        return c === 1 ? "आठवडा" : "आठवडे";
      },
      d: "दिवस",
      h: "तास",
      m: function (c) {
        return c === 1 ? "मिनिट" : "मिनिटे";
      },
      s: "सेकंद",
      ms: "मिलिसेकंद"
    },
    ms: {
      y: "tahun",
      mo: "bulan",
      w: "minggu",
      d: "hari",
      h: "jam",
      m: "minit",
      s: "saat",
      ms: "milisaat",
      decimal: "."
    },
    nl: {
      y: "jaar",
      mo: function (c) {
        return c === 1 ? "maand" : "maanden";
      },
      w: function (c) {
        return c === 1 ? "week" : "weken";
      },
      d: function (c) {
        return c === 1 ? "dag" : "dagen";
      },
      h: "uur",
      m: function (c) {
        return c === 1 ? "minuut" : "minuten";
      },
      s: function (c) {
        return c === 1 ? "seconde" : "seconden";
      },
      ms: function (c) {
        return c === 1 ? "milliseconde" : "milliseconden";
      },
      decimal: ","
    },
    no: {
      y: "år",
      mo: function (c) {
        return "måned" + (c === 1 ? "" : "er");
      },
      w: function (c) {
        return "uke" + (c === 1 ? "" : "r");
      },
      d: function (c) {
        return "dag" + (c === 1 ? "" : "er");
      },
      h: function (c) {
        return "time" + (c === 1 ? "" : "r");
      },
      m: function (c) {
        return "minutt" + (c === 1 ? "" : "er");
      },
      s: function (c) {
        return "sekund" + (c === 1 ? "" : "er");
      },
      ms: function (c) {
        return "millisekund" + (c === 1 ? "" : "er");
      },
      decimal: ","
    },
    pl: {
      y: function (c) {
        return ["rok", "roku", "lata", "lat"][getPolishForm(c)];
      },
      mo: function (c) {
        return ["miesiąc", "miesiąca", "miesiące", "miesięcy"][
          getPolishForm(c)
        ];
      },
      w: function (c) {
        return ["tydzień", "tygodnia", "tygodnie", "tygodni"][getPolishForm(c)];
      },
      d: function (c) {
        return ["dzień", "dnia", "dni", "dni"][getPolishForm(c)];
      },
      h: function (c) {
        return ["godzina", "godziny", "godziny", "godzin"][getPolishForm(c)];
      },
      m: function (c) {
        return ["minuta", "minuty", "minuty", "minut"][getPolishForm(c)];
      },
      s: function (c) {
        return ["sekunda", "sekundy", "sekundy", "sekund"][getPolishForm(c)];
      },
      ms: function (c) {
        return ["milisekunda", "milisekundy", "milisekundy", "milisekund"][
          getPolishForm(c)
        ];
      },
      decimal: ","
    },
    pt: {
      y: function (c) {
        return "ano" + (c === 1 ? "" : "s");
      },
      mo: function (c) {
        return c === 1 ? "mês" : "meses";
      },
      w: function (c) {
        return "semana" + (c === 1 ? "" : "s");
      },
      d: function (c) {
        return "dia" + (c === 1 ? "" : "s");
      },
      h: function (c) {
        return "hora" + (c === 1 ? "" : "s");
      },
      m: function (c) {
        return "minuto" + (c === 1 ? "" : "s");
      },
      s: function (c) {
        return "segundo" + (c === 1 ? "" : "s");
      },
      ms: function (c) {
        return "milissegundo" + (c === 1 ? "" : "s");
      },
      decimal: ","
    },
    ro: {
      y: function (c) {
        return c === 1 ? "an" : "ani";
      },
      mo: function (c) {
        return c === 1 ? "lună" : "luni";
      },
      w: function (c) {
        return c === 1 ? "săptămână" : "săptămâni";
      },
      d: function (c) {
        return c === 1 ? "zi" : "zile";
      },
      h: function (c) {
        return c === 1 ? "oră" : "ore";
      },
      m: function (c) {
        return c === 1 ? "minut" : "minute";
      },
      s: function (c) {
        return c === 1 ? "secundă" : "secunde";
      },
      ms: function (c) {
        return c === 1 ? "milisecundă" : "milisecunde";
      },
      decimal: ","
    },
    ru: {
      y: function (c) {
        return ["лет", "год", "года"][getSlavicForm(c)];
      },
      mo: function (c) {
        return ["месяцев", "месяц", "месяца"][getSlavicForm(c)];
      },
      w: function (c) {
        return ["недель", "неделя", "недели"][getSlavicForm(c)];
      },
      d: function (c) {
        return ["дней", "день", "дня"][getSlavicForm(c)];
      },
      h: function (c) {
        return ["часов", "час", "часа"][getSlavicForm(c)];
      },
      m: function (c) {
        return ["минут", "минута", "минуты"][getSlavicForm(c)];
      },
      s: function (c) {
        return ["секунд", "секунда", "секунды"][getSlavicForm(c)];
      },
      ms: function (c) {
        return ["миллисекунд", "миллисекунда", "миллисекунды"][
          getSlavicForm(c)
        ];
      },
      decimal: ","
    },
    sq: {
      y: function (c) {
        return c === 1 ? "vit" : "vjet";
      },
      mo: "muaj",
      w: "javë",
      d: "ditë",
      h: "orë",
      m: function (c) {
        return "minut" + (c === 1 ? "ë" : "a");
      },
      s: function (c) {
        return "sekond" + (c === 1 ? "ë" : "a");
      },
      ms: function (c) {
        return "milisekond" + (c === 1 ? "ë" : "a");
      },
      decimal: ","
    },
    sr: {
      y: function (c) {
        return ["години", "година", "године"][getSlavicForm(c)];
      },
      mo: function (c) {
        return ["месеци", "месец", "месеца"][getSlavicForm(c)];
      },
      w: function (c) {
        return ["недељи", "недеља", "недеље"][getSlavicForm(c)];
      },
      d: function (c) {
        return ["дани", "дан", "дана"][getSlavicForm(c)];
      },
      h: function (c) {
        return ["сати", "сат", "сата"][getSlavicForm(c)];
      },
      m: function (c) {
        return ["минута", "минут", "минута"][getSlavicForm(c)];
      },
      s: function (c) {
        return ["секунди", "секунда", "секунде"][getSlavicForm(c)];
      },
      ms: function (c) {
        return ["милисекунди", "милисекунда", "милисекунде"][getSlavicForm(c)];
      },
      decimal: ","
    },
    ta: {
      y: function (c) {
        return c === 1 ? "வருடம்" : "ஆண்டுகள்";
      },
      mo: function (c) {
        return c === 1 ? "மாதம்" : "மாதங்கள்";
      },
      w: function (c) {
        return c === 1 ? "வாரம்" : "வாரங்கள்";
      },
      d: function (c) {
        return c === 1 ? "நாள்" : "நாட்கள்";
      },
      h: function (c) {
        return c === 1 ? "மணி" : "மணிநேரம்";
      },
      m: function (c) {
        return "நிமிட" + (c === 1 ? "ம்" : "ங்கள்");
      },
      s: function (c) {
        return "வினாடி" + (c === 1 ? "" : "கள்");
      },
      ms: function (c) {
        return "மில்லி விநாடி" + (c === 1 ? "" : "கள்");
      }
    },
    te: {
      y: function (c) {
        return "సంవత్స" + (c === 1 ? "రం" : "రాల");
      },
      mo: function (c) {
        return "నెల" + (c === 1 ? "" : "ల");
      },
      w: function (c) {
        return c === 1 ? "వారం" : "వారాలు";
      },
      d: function (c) {
        return "రోజు" + (c === 1 ? "" : "లు");
      },
      h: function (c) {
        return "గంట" + (c === 1 ? "" : "లు");
      },
      m: function (c) {
        return c === 1 ? "నిమిషం" : "నిమిషాలు";
      },
      s: function (c) {
        return c === 1 ? "సెకను" : "సెకన్లు";
      },
      ms: function (c) {
        return c === 1 ? "మిల్లీసెకన్" : "మిల్లీసెకన్లు";
      }
    },
    uk: {
      y: function (c) {
        return ["років", "рік", "роки"][getSlavicForm(c)];
      },
      mo: function (c) {
        return ["місяців", "місяць", "місяці"][getSlavicForm(c)];
      },
      w: function (c) {
        return ["тижнів", "тиждень", "тижні"][getSlavicForm(c)];
      },
      d: function (c) {
        return ["днів", "день", "дні"][getSlavicForm(c)];
      },
      h: function (c) {
        return ["годин", "година", "години"][getSlavicForm(c)];
      },
      m: function (c) {
        return ["хвилин", "хвилина", "хвилини"][getSlavicForm(c)];
      },
      s: function (c) {
        return ["секунд", "секунда", "секунди"][getSlavicForm(c)];
      },
      ms: function (c) {
        return ["мілісекунд", "мілісекунда", "мілісекунди"][getSlavicForm(c)];
      },
      decimal: ","
    },
    ur: {
      y: "سال",
      mo: function (c) {
        return c === 1 ? "مہینہ" : "مہینے";
      },
      w: function (c) {
        return c === 1 ? "ہفتہ" : "ہفتے";
      },
      d: "دن",
      h: function (c) {
        return c === 1 ? "گھنٹہ" : "گھنٹے";
      },
      m: "منٹ",
      s: "سیکنڈ",
      ms: "ملی سیکنڈ",
      decimal: "."
    },
    sk: {
      y: function (c) {
        return ["rok", "roky", "roky", "rokov"][getCzechOrSlovakForm(c)];
      },
      mo: function (c) {
        return ["mesiac", "mesiace", "mesiace", "mesiacov"][
          getCzechOrSlovakForm(c)
        ];
      },
      w: function (c) {
        return ["týždeň", "týždne", "týždne", "týždňov"][
          getCzechOrSlovakForm(c)
        ];
      },
      d: function (c) {
        return ["deň", "dni", "dni", "dní"][getCzechOrSlovakForm(c)];
      },
      h: function (c) {
        return ["hodina", "hodiny", "hodiny", "hodín"][getCzechOrSlovakForm(c)];
      },
      m: function (c) {
        return ["minúta", "minúty", "minúty", "minút"][getCzechOrSlovakForm(c)];
      },
      s: function (c) {
        return ["sekunda", "sekundy", "sekundy", "sekúnd"][
          getCzechOrSlovakForm(c)
        ];
      },
      ms: function (c) {
        return ["milisekunda", "milisekundy", "milisekundy", "milisekúnd"][
          getCzechOrSlovakForm(c)
        ];
      },
      decimal: ","
    },
    sl: {
      y: function (c) {
        if (c % 10 === 1) {
          return "leto";
        } else if (c % 100 === 2) {
          return "leti";
        } else if (
          c % 100 === 3 ||
          c % 100 === 4 ||
          (Math.floor(c) !== c && c % 100 <= 5)
        ) {
          return "leta";
        } else {
          return "let";
        }
      },
      mo: function (c) {
        if (c % 10 === 1) {
          return "mesec";
        } else if (c % 100 === 2 || (Math.floor(c) !== c && c % 100 <= 5)) {
          return "meseca";
        } else if (c % 10 === 3 || c % 10 === 4) {
          return "mesece";
        } else {
          return "mesecev";
        }
      },
      w: function (c) {
        if (c % 10 === 1) {
          return "teden";
        } else if (c % 10 === 2 || (Math.floor(c) !== c && c % 100 <= 4)) {
          return "tedna";
        } else if (c % 10 === 3 || c % 10 === 4) {
          return "tedne";
        } else {
          return "tednov";
        }
      },
      d: function (c) {
        return c % 100 === 1 ? "dan" : "dni";
      },
      h: function (c) {
        if (c % 10 === 1) {
          return "ura";
        } else if (c % 100 === 2) {
          return "uri";
        } else if (c % 10 === 3 || c % 10 === 4 || Math.floor(c) !== c) {
          return "ure";
        } else {
          return "ur";
        }
      },
      m: function (c) {
        if (c % 10 === 1) {
          return "minuta";
        } else if (c % 10 === 2) {
          return "minuti";
        } else if (
          c % 10 === 3 ||
          c % 10 === 4 ||
          (Math.floor(c) !== c && c % 100 <= 4)
        ) {
          return "minute";
        } else {
          return "minut";
        }
      },
      s: function (c) {
        if (c % 10 === 1) {
          return "sekunda";
        } else if (c % 100 === 2) {
          return "sekundi";
        } else if (c % 100 === 3 || c % 100 === 4 || Math.floor(c) !== c) {
          return "sekunde";
        } else {
          return "sekund";
        }
      },
      ms: function (c) {
        if (c % 10 === 1) {
          return "milisekunda";
        } else if (c % 100 === 2) {
          return "milisekundi";
        } else if (c % 100 === 3 || c % 100 === 4 || Math.floor(c) !== c) {
          return "milisekunde";
        } else {
          return "milisekund";
        }
      },
      decimal: ","
    },
    sv: {
      y: "år",
      mo: function (c) {
        return "månad" + (c === 1 ? "" : "er");
      },
      w: function (c) {
        return "veck" + (c === 1 ? "a" : "or");
      },
      d: function (c) {
        return "dag" + (c === 1 ? "" : "ar");
      },
      h: function (c) {
        return "timm" + (c === 1 ? "e" : "ar");
      },
      m: function (c) {
        return "minut" + (c === 1 ? "" : "er");
      },
      s: function (c) {
        return "sekund" + (c === 1 ? "" : "er");
      },
      ms: function (c) {
        return "millisekund" + (c === 1 ? "" : "er");
      },
      decimal: ","
    },
    sw: {
      y: function (c) {
        return c === 1 ? "mwaka" : "miaka";
      },
      mo: function (c) {
        return c === 1 ? "mwezi" : "miezi";
      },
      w: "wiki",
      d: function (c) {
        return c === 1 ? "siku" : "masiku";
      },
      h: function (c) {
        return c === 1 ? "saa" : "masaa";
      },
      m: "dakika",
      s: "sekunde",
      ms: "milisekunde",
      decimal: "."
    },
    tr: {
      y: "yıl",
      mo: "ay",
      w: "hafta",
      d: "gün",
      h: "saat",
      m: "dakika",
      s: "saniye",
      ms: "milisaniye",
      decimal: ","
    },
    th: {
      y: "ปี",
      mo: "เดือน",
      w: "สัปดาห์",
      d: "วัน",
      h: "ชั่วโมง",
      m: "นาที",
      s: "วินาที",
      ms: "มิลลิวินาที",
      decimal: "."
    },
    vi: {
      y: "năm",
      mo: "tháng",
      w: "tuần",
      d: "ngày",
      h: "giờ",
      m: "phút",
      s: "giây",
      ms: "mili giây",
      decimal: ","
    },
    zh_CN: {
      y: "年",
      mo: "个月",
      w: "周",
      d: "天",
      h: "小时",
      m: "分钟",
      s: "秒",
      ms: "毫秒",
      decimal: "."
    },
    zh_TW: {
      y: "年",
      mo: "個月",
      w: "周",
      d: "天",
      h: "小時",
      m: "分鐘",
      s: "秒",
      ms: "毫秒",
      decimal: "."
    }
  };

  // You can create a humanizer, which returns a function with default
  // parameters.
  function humanizer(passedOptions) {
    var result = function humanizer(ms, humanizerOptions) {
      var options = assign({}, result, humanizerOptions || {});
      return doHumanization(ms, options);
    };

    return assign(
      result,
      {
        language: "en",
        spacer: " ",
        conjunction: "",
        serialComma: true,
        units: ["y", "mo", "w", "d", "h", "m", "s"],
        languages: {},
        round: false,
        unitMeasures: {
          y: 31557600000,
          mo: 2629800000,
          w: 604800000,
          d: 86400000,
          h: 3600000,
          m: 60000,
          s: 1000,
          ms: 1
        }
      },
      passedOptions
    );
  }

  // The main function is just a wrapper around a default humanizer.
  var humanizeDuration = humanizer({});

  // Build dictionary from options
  function getDictionary(options) {
    var languagesFromOptions = [options.language];

    if (has(options, "fallbacks")) {
      if (isArray(options.fallbacks) && options.fallbacks.length) {
        languagesFromOptions = languagesFromOptions.concat(options.fallbacks);
      } else {
        throw new Error("fallbacks must be an array with at least one element");
      }
    }

    for (var i = 0; i < languagesFromOptions.length; i++) {
      var languageToTry = languagesFromOptions[i];
      if (has(options.languages, languageToTry)) {
        return options.languages[languageToTry];
      } else if (has(LANGUAGES, languageToTry)) {
        return LANGUAGES[languageToTry];
      }
    }

    throw new Error("No language found.");
  }

  // doHumanization does the bulk of the work.
  function doHumanization(ms, options) {
    var i, len, piece;

    // Make sure we have a positive number.
    // Has the nice sideffect of turning Number objects into primitives.
    ms = Math.abs(ms);

    var dictionary = getDictionary(options);
    var pieces = [];

    // Start at the top and keep removing units, bit by bit.
    var unitName, unitMS, unitCount;
    for (i = 0, len = options.units.length; i < len; i++) {
      unitName = options.units[i];
      unitMS = options.unitMeasures[unitName];

      // What's the number of full units we can fit?
      if (i + 1 === len) {
        if (has(options, "maxDecimalPoints")) {
          // We need to use this expValue to avoid rounding functionality of toFixed call
          var expValue = Math.pow(10, options.maxDecimalPoints);
          var unitCountFloat = ms / unitMS;
          unitCount = parseFloat(
            (Math.floor(expValue * unitCountFloat) / expValue).toFixed(
              options.maxDecimalPoints
            )
          );
        } else {
          unitCount = ms / unitMS;
        }
      } else {
        unitCount = Math.floor(ms / unitMS);
      }

      // Add the string.
      pieces.push({
        unitCount: unitCount,
        unitName: unitName
      });

      // Remove what we just figured out.
      ms -= unitCount * unitMS;
    }

    var firstOccupiedUnitIndex = 0;
    for (i = 0; i < pieces.length; i++) {
      if (pieces[i].unitCount) {
        firstOccupiedUnitIndex = i;
        break;
      }
    }

    if (options.round) {
      var ratioToLargerUnit, previousPiece;
      for (i = pieces.length - 1; i >= 0; i--) {
        piece = pieces[i];
        piece.unitCount = Math.round(piece.unitCount);

        if (i === 0) {
          break;
        }

        previousPiece = pieces[i - 1];

        ratioToLargerUnit =
          options.unitMeasures[previousPiece.unitName] /
          options.unitMeasures[piece.unitName];
        if (
          piece.unitCount % ratioToLargerUnit === 0 ||
          (options.largest && options.largest - 1 < i - firstOccupiedUnitIndex)
        ) {
          previousPiece.unitCount += piece.unitCount / ratioToLargerUnit;
          piece.unitCount = 0;
        }
      }
    }

    var result = [];
    for (i = 0, pieces.length; i < len; i++) {
      piece = pieces[i];
      if (piece.unitCount) {
        result.push(
          render(piece.unitCount, piece.unitName, dictionary, options)
        );
      }

      if (result.length === options.largest) {
        break;
      }
    }

    if (result.length) {
      var delimiter;
      if (has(options, "delimiter")) {
        delimiter = options.delimiter;
      } else if (has(dictionary, "delimiter")) {
        delimiter = dictionary.delimiter;
      } else {
        delimiter = ", ";
      }

      if (!options.conjunction || result.length === 1) {
        return result.join(delimiter);
      } else if (result.length === 2) {
        return result.join(options.conjunction);
      } else if (result.length > 2) {
        return (
          result.slice(0, -1).join(delimiter) +
          (options.serialComma ? "," : "") +
          options.conjunction +
          result.slice(-1)
        );
      }
    } else {
      return render(
        0,
        options.units[options.units.length - 1],
        dictionary,
        options
      );
    }
  }

  function render(count, type, dictionary, options) {
    var decimal;
    if (has(options, "decimal")) {
      decimal = options.decimal;
    } else if (has(dictionary, "decimal")) {
      decimal = dictionary.decimal;
    } else {
      decimal = ".";
    }

    var countStr;
    if (typeof dictionary._formatCount === "function") {
      countStr = dictionary._formatCount(count, decimal);
    } else {
      countStr = count.toString().replace(".", decimal);
    }

    var dictionaryValue = dictionary[type];
    var word;
    if (typeof dictionaryValue === "function") {
      word = dictionaryValue(count);
    } else {
      word = dictionaryValue;
    }

    return countStr + options.spacer + word;
  }

  function assign(destination) {
    var source;
    for (var i = 1; i < arguments.length; i++) {
      source = arguments[i];
      for (var prop in source) {
        if (has(source, prop)) {
          destination[prop] = source[prop];
        }
      }
    }
    return destination;
  }

  function getArabicForm(c) {
    if (c === 1) {
      return 0;
    }
    if (c === 2) {
      return 1;
    }
    if (c > 2 && c < 11) {
      return 2;
    }
    return 0;
  }

  function getPolishForm(c) {
    if (c === 1) {
      return 0;
    } else if (Math.floor(c) !== c) {
      return 1;
    } else if (c % 10 >= 2 && c % 10 <= 4 && !(c % 100 > 10 && c % 100 < 20)) {
      return 2;
    } else {
      return 3;
    }
  }

  function getSlavicForm(c) {
    if (Math.floor(c) !== c) {
      return 2;
    } else if (
      (c % 100 >= 5 && c % 100 <= 20) ||
      (c % 10 >= 5 && c % 10 <= 9) ||
      c % 10 === 0
    ) {
      return 0;
    } else if (c % 10 === 1) {
      return 1;
    } else if (c > 1) {
      return 2;
    } else {
      return 0;
    }
  }

  function getCzechOrSlovakForm(c) {
    if (c === 1) {
      return 0;
    } else if (Math.floor(c) !== c) {
      return 1;
    } else if (c % 10 >= 2 && c % 10 <= 4 && c % 100 < 10) {
      return 2;
    } else {
      return 3;
    }
  }

  function getLithuanianForm(c) {
    if (c === 1 || (c % 10 === 1 && c % 100 > 20)) {
      return 0;
    } else if (
      Math.floor(c) !== c ||
      (c % 10 >= 2 && c % 100 > 20) ||
      (c % 10 >= 2 && c % 100 < 10)
    ) {
      return 1;
    } else {
      return 2;
    }
  }

  function getLatvianForm(c) {
    return c % 10 === 1 && c % 100 !== 11;
  }

  // We need to make sure we support browsers that don't have
  // `Array.isArray`, so we define a fallback here.
  var isArray =
    Array.isArray ||
    function (arg) {
      return Object.prototype.toString.call(arg) === "[object Array]";
    };

  function has(obj, key) {
    return Object.prototype.hasOwnProperty.call(obj, key);
  }

  humanizeDuration.getSupportedLanguages = function getSupportedLanguages() {
    var result = [];
    for (var language in LANGUAGES) {
      if (has(LANGUAGES, language) && language !== "gr") {
        result.push(language);
      }
    }
    return result;
  };

  humanizeDuration.humanizer = humanizer;

  if (true) {
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {
      return humanizeDuration;
    }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})();


/***/ }),
/* 441 */
/***/ (function(module, exports) {

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
module.exports = _classCallCheck, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 442 */
/***/ (function(module, exports, __webpack_require__) {

var toPropertyKey = __webpack_require__(358);
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}
module.exports = _createClass, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 443 */
/***/ (function(module, exports, __webpack_require__) {

var setPrototypeOf = __webpack_require__(793);
function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  Object.defineProperty(subClass, "prototype", {
    writable: false
  });
  if (superClass) setPrototypeOf(subClass, superClass);
}
module.exports = _inherits, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 444 */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__(205)["default"];
var assertThisInitialized = __webpack_require__(208);
function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return assertThisInitialized(self);
}
module.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 445 */
/***/ (function(module, exports, __webpack_require__) {

var toPropertyKey = __webpack_require__(358);
function _defineProperty(obj, key, value) {
  key = toPropertyKey(key);
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
module.exports = _defineProperty, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 446 */
/***/ (function(module, exports, __webpack_require__) {

var getDayOfYear = __webpack_require__(794)
var getISOWeek = __webpack_require__(798)
var getISOYear = __webpack_require__(360)
var parse = __webpack_require__(29)
var isValid = __webpack_require__(801)
var enLocale = __webpack_require__(147)

/**
 * @category Common Helpers
 * @summary Format the date.
 *
 * @description
 * Return the formatted date string in the given format.
 *
 * Accepted tokens:
 * | Unit                    | Token | Result examples                  |
 * |-------------------------|-------|----------------------------------|
 * | Month                   | M     | 1, 2, ..., 12                    |
 * |                         | Mo    | 1st, 2nd, ..., 12th              |
 * |                         | MM    | 01, 02, ..., 12                  |
 * |                         | MMM   | Jan, Feb, ..., Dec               |
 * |                         | MMMM  | January, February, ..., December |
 * | Quarter                 | Q     | 1, 2, 3, 4                       |
 * |                         | Qo    | 1st, 2nd, 3rd, 4th               |
 * | Day of month            | D     | 1, 2, ..., 31                    |
 * |                         | Do    | 1st, 2nd, ..., 31st              |
 * |                         | DD    | 01, 02, ..., 31                  |
 * | Day of year             | DDD   | 1, 2, ..., 366                   |
 * |                         | DDDo  | 1st, 2nd, ..., 366th             |
 * |                         | DDDD  | 001, 002, ..., 366               |
 * | Day of week             | d     | 0, 1, ..., 6                     |
 * |                         | do    | 0th, 1st, ..., 6th               |
 * |                         | dd    | Su, Mo, ..., Sa                  |
 * |                         | ddd   | Sun, Mon, ..., Sat               |
 * |                         | dddd  | Sunday, Monday, ..., Saturday    |
 * | Day of ISO week         | E     | 1, 2, ..., 7                     |
 * | ISO week                | W     | 1, 2, ..., 53                    |
 * |                         | Wo    | 1st, 2nd, ..., 53rd              |
 * |                         | WW    | 01, 02, ..., 53                  |
 * | Year                    | YY    | 00, 01, ..., 99                  |
 * |                         | YYYY  | 1900, 1901, ..., 2099            |
 * | ISO week-numbering year | GG    | 00, 01, ..., 99                  |
 * |                         | GGGG  | 1900, 1901, ..., 2099            |
 * | AM/PM                   | A     | AM, PM                           |
 * |                         | a     | am, pm                           |
 * |                         | aa    | a.m., p.m.                       |
 * | Hour                    | H     | 0, 1, ... 23                     |
 * |                         | HH    | 00, 01, ... 23                   |
 * |                         | h     | 1, 2, ..., 12                    |
 * |                         | hh    | 01, 02, ..., 12                  |
 * | Minute                  | m     | 0, 1, ..., 59                    |
 * |                         | mm    | 00, 01, ..., 59                  |
 * | Second                  | s     | 0, 1, ..., 59                    |
 * |                         | ss    | 00, 01, ..., 59                  |
 * | 1/10 of second          | S     | 0, 1, ..., 9                     |
 * | 1/100 of second         | SS    | 00, 01, ..., 99                  |
 * | Millisecond             | SSS   | 000, 001, ..., 999               |
 * | Timezone                | Z     | -01:00, +00:00, ... +12:00       |
 * |                         | ZZ    | -0100, +0000, ..., +1200         |
 * | Seconds timestamp       | X     | 512969520                        |
 * | Milliseconds timestamp  | x     | 512969520900                     |
 *
 * The characters wrapped in square brackets are escaped.
 *
 * The result may vary by locale.
 *
 * @param {Date|String|Number} date - the original date
 * @param {String} [format='YYYY-MM-DDTHH:mm:ss.SSSZ'] - the string of tokens
 * @param {Object} [options] - the object with options
 * @param {Object} [options.locale=enLocale] - the locale object
 * @returns {String} the formatted date string
 *
 * @example
 * // Represent 11 February 2014 in middle-endian format:
 * var result = format(
 *   new Date(2014, 1, 11),
 *   'MM/DD/YYYY'
 * )
 * //=> '02/11/2014'
 *
 * @example
 * // Represent 2 July 2014 in Esperanto:
 * var eoLocale = require('date-fns/locale/eo')
 * var result = format(
 *   new Date(2014, 6, 2),
 *   'Do [de] MMMM YYYY',
 *   {locale: eoLocale}
 * )
 * //=> '2-a de julio 2014'
 */
function format (dirtyDate, dirtyFormatStr, dirtyOptions) {
  var formatStr = dirtyFormatStr ? String(dirtyFormatStr) : 'YYYY-MM-DDTHH:mm:ss.SSSZ'
  var options = dirtyOptions || {}

  var locale = options.locale
  var localeFormatters = enLocale.format.formatters
  var formattingTokensRegExp = enLocale.format.formattingTokensRegExp
  if (locale && locale.format && locale.format.formatters) {
    localeFormatters = locale.format.formatters

    if (locale.format.formattingTokensRegExp) {
      formattingTokensRegExp = locale.format.formattingTokensRegExp
    }
  }

  var date = parse(dirtyDate)

  if (!isValid(date)) {
    return 'Invalid Date'
  }

  var formatFn = buildFormatFn(formatStr, localeFormatters, formattingTokensRegExp)

  return formatFn(date)
}

var formatters = {
  // Month: 1, 2, ..., 12
  'M': function (date) {
    return date.getMonth() + 1
  },

  // Month: 01, 02, ..., 12
  'MM': function (date) {
    return addLeadingZeros(date.getMonth() + 1, 2)
  },

  // Quarter: 1, 2, 3, 4
  'Q': function (date) {
    return Math.ceil((date.getMonth() + 1) / 3)
  },

  // Day of month: 1, 2, ..., 31
  'D': function (date) {
    return date.getDate()
  },

  // Day of month: 01, 02, ..., 31
  'DD': function (date) {
    return addLeadingZeros(date.getDate(), 2)
  },

  // Day of year: 1, 2, ..., 366
  'DDD': function (date) {
    return getDayOfYear(date)
  },

  // Day of year: 001, 002, ..., 366
  'DDDD': function (date) {
    return addLeadingZeros(getDayOfYear(date), 3)
  },

  // Day of week: 0, 1, ..., 6
  'd': function (date) {
    return date.getDay()
  },

  // Day of ISO week: 1, 2, ..., 7
  'E': function (date) {
    return date.getDay() || 7
  },

  // ISO week: 1, 2, ..., 53
  'W': function (date) {
    return getISOWeek(date)
  },

  // ISO week: 01, 02, ..., 53
  'WW': function (date) {
    return addLeadingZeros(getISOWeek(date), 2)
  },

  // Year: 00, 01, ..., 99
  'YY': function (date) {
    return addLeadingZeros(date.getFullYear(), 4).substr(2)
  },

  // Year: 1900, 1901, ..., 2099
  'YYYY': function (date) {
    return addLeadingZeros(date.getFullYear(), 4)
  },

  // ISO week-numbering year: 00, 01, ..., 99
  'GG': function (date) {
    return String(getISOYear(date)).substr(2)
  },

  // ISO week-numbering year: 1900, 1901, ..., 2099
  'GGGG': function (date) {
    return getISOYear(date)
  },

  // Hour: 0, 1, ... 23
  'H': function (date) {
    return date.getHours()
  },

  // Hour: 00, 01, ..., 23
  'HH': function (date) {
    return addLeadingZeros(date.getHours(), 2)
  },

  // Hour: 1, 2, ..., 12
  'h': function (date) {
    var hours = date.getHours()
    if (hours === 0) {
      return 12
    } else if (hours > 12) {
      return hours % 12
    } else {
      return hours
    }
  },

  // Hour: 01, 02, ..., 12
  'hh': function (date) {
    return addLeadingZeros(formatters['h'](date), 2)
  },

  // Minute: 0, 1, ..., 59
  'm': function (date) {
    return date.getMinutes()
  },

  // Minute: 00, 01, ..., 59
  'mm': function (date) {
    return addLeadingZeros(date.getMinutes(), 2)
  },

  // Second: 0, 1, ..., 59
  's': function (date) {
    return date.getSeconds()
  },

  // Second: 00, 01, ..., 59
  'ss': function (date) {
    return addLeadingZeros(date.getSeconds(), 2)
  },

  // 1/10 of second: 0, 1, ..., 9
  'S': function (date) {
    return Math.floor(date.getMilliseconds() / 100)
  },

  // 1/100 of second: 00, 01, ..., 99
  'SS': function (date) {
    return addLeadingZeros(Math.floor(date.getMilliseconds() / 10), 2)
  },

  // Millisecond: 000, 001, ..., 999
  'SSS': function (date) {
    return addLeadingZeros(date.getMilliseconds(), 3)
  },

  // Timezone: -01:00, +00:00, ... +12:00
  'Z': function (date) {
    return formatTimezone(date.getTimezoneOffset(), ':')
  },

  // Timezone: -0100, +0000, ... +1200
  'ZZ': function (date) {
    return formatTimezone(date.getTimezoneOffset())
  },

  // Seconds timestamp: 512969520
  'X': function (date) {
    return Math.floor(date.getTime() / 1000)
  },

  // Milliseconds timestamp: 512969520900
  'x': function (date) {
    return date.getTime()
  }
}

function buildFormatFn (formatStr, localeFormatters, formattingTokensRegExp) {
  var array = formatStr.match(formattingTokensRegExp)
  var length = array.length

  var i
  var formatter
  for (i = 0; i < length; i++) {
    formatter = localeFormatters[array[i]] || formatters[array[i]]
    if (formatter) {
      array[i] = formatter
    } else {
      array[i] = removeFormattingTokens(array[i])
    }
  }

  return function (date) {
    var output = ''
    for (var i = 0; i < length; i++) {
      if (array[i] instanceof Function) {
        output += array[i](date, formatters)
      } else {
        output += array[i]
      }
    }
    return output
  }
}

function removeFormattingTokens (input) {
  if (input.match(/\[[\s\S]/)) {
    return input.replace(/^\[|]$/g, '')
  }
  return input.replace(/\\/g, '')
}

function formatTimezone (offset, delimeter) {
  delimeter = delimeter || ''
  var sign = offset > 0 ? '-' : '+'
  var absOffset = Math.abs(offset)
  var hours = Math.floor(absOffset / 60)
  var minutes = absOffset % 60
  return sign + addLeadingZeros(hours, 2) + delimeter + addLeadingZeros(minutes, 2)
}

function addLeadingZeros (number, targetLength) {
  var output = Math.abs(number).toString()
  while (output.length < targetLength) {
    output = '0' + output
  }
  return output
}

module.exports = format


/***/ }),
/* 447 */
/***/ (function(module, exports, __webpack_require__) {

var distanceInWords = __webpack_require__(802)

/**
 * @category Common Helpers
 * @summary Return the distance between the given date and now in words.
 *
 * @description
 * Return the distance between the given date and now in words.
 *
 * | Distance to now                                                   | Result              |
 * |-------------------------------------------------------------------|---------------------|
 * | 0 ... 30 secs                                                     | less than a minute  |
 * | 30 secs ... 1 min 30 secs                                         | 1 minute            |
 * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |
 * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |
 * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |
 * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |
 * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |
 * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |
 * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |
 * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |
 * | 1 yr ... 1 yr 3 months                                            | about 1 year        |
 * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |
 * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |
 * | N yrs ... N yrs 3 months                                          | about N years       |
 * | N yrs 3 months ... N yrs 9 months                                 | over N years        |
 * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |
 *
 * With `options.includeSeconds == true`:
 * | Distance to now     | Result               |
 * |---------------------|----------------------|
 * | 0 secs ... 5 secs   | less than 5 seconds  |
 * | 5 secs ... 10 secs  | less than 10 seconds |
 * | 10 secs ... 20 secs | less than 20 seconds |
 * | 20 secs ... 40 secs | half a minute        |
 * | 40 secs ... 60 secs | less than a minute   |
 * | 60 secs ... 90 secs | 1 minute             |
 *
 * @param {Date|String|Number} date - the given date
 * @param {Object} [options] - the object with options
 * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed
 * @param {Boolean} [options.addSuffix=false] - result specifies if the second date is earlier or later than the first
 * @param {Object} [options.locale=enLocale] - the locale object
 * @returns {String} the distance in words
 *
 * @example
 * // If today is 1 January 2015, what is the distance to 2 July 2014?
 * var result = distanceInWordsToNow(
 *   new Date(2014, 6, 2)
 * )
 * //=> '6 months'
 *
 * @example
 * // If now is 1 January 2015 00:00:00,
 * // what is the distance to 1 January 2015 00:00:15, including seconds?
 * var result = distanceInWordsToNow(
 *   new Date(2015, 0, 1, 0, 0, 15),
 *   {includeSeconds: true}
 * )
 * //=> 'less than 20 seconds'
 *
 * @example
 * // If today is 1 January 2015,
 * // what is the distance to 1 January 2016, with a suffix?
 * var result = distanceInWordsToNow(
 *   new Date(2016, 0, 1),
 *   {addSuffix: true}
 * )
 * //=> 'in about 1 year'
 *
 * @example
 * // If today is 1 January 2015,
 * // what is the distance to 1 August 2016 in Esperanto?
 * var eoLocale = require('date-fns/locale/eo')
 * var result = distanceInWordsToNow(
 *   new Date(2016, 7, 1),
 *   {locale: eoLocale}
 * )
 * //=> 'pli ol 1 jaro'
 */
function distanceInWordsToNow (dirtyDate, dirtyOptions) {
  return distanceInWords(Date.now(), dirtyDate, dirtyOptions)
}

module.exports = distanceInWordsToNow


/***/ }),
/* 448 */
/***/ (function(module, exports, __webpack_require__) {

var compareDesc = __webpack_require__(363)
var parse = __webpack_require__(29)
var differenceInSeconds = __webpack_require__(364)
var enLocale = __webpack_require__(147)

var MINUTES_IN_DAY = 1440
var MINUTES_IN_MONTH = 43200
var MINUTES_IN_YEAR = 525600

/**
 * @category Common Helpers
 * @summary Return the distance between the given dates in words.
 *
 * @description
 * Return the distance between the given dates in words, using strict units.
 * This is like `distanceInWords`, but does not use helpers like 'almost', 'over',
 * 'less than' and the like.
 *
 * | Distance between dates | Result              |
 * |------------------------|---------------------|
 * | 0 ... 59 secs          | [0..59] seconds     |
 * | 1 ... 59 mins          | [1..59] minutes     |
 * | 1 ... 23 hrs           | [1..23] hours       |
 * | 1 ... 29 days          | [1..29] days        |
 * | 1 ... 11 months        | [1..11] months      |
 * | 1 ... N years          | [1..N]  years       |
 *
 * @param {Date|String|Number} dateToCompare - the date to compare with
 * @param {Date|String|Number} date - the other date
 * @param {Object} [options] - the object with options
 * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first
 * @param {'s'|'m'|'h'|'d'|'M'|'Y'} [options.unit] - if specified, will force a unit
 * @param {'floor'|'ceil'|'round'} [options.partialMethod='floor'] - which way to round partial units
 * @param {Object} [options.locale=enLocale] - the locale object
 * @returns {String} the distance in words
 *
 * @example
 * // What is the distance between 2 July 2014 and 1 January 2015?
 * var result = distanceInWordsStrict(
 *   new Date(2014, 6, 2),
 *   new Date(2015, 0, 2)
 * )
 * //=> '6 months'
 *
 * @example
 * // What is the distance between 1 January 2015 00:00:15
 * // and 1 January 2015 00:00:00?
 * var result = distanceInWordsStrict(
 *   new Date(2015, 0, 1, 0, 0, 15),
 *   new Date(2015, 0, 1, 0, 0, 0),
 * )
 * //=> '15 seconds'
 *
 * @example
 * // What is the distance from 1 January 2016
 * // to 1 January 2015, with a suffix?
 * var result = distanceInWordsStrict(
 *   new Date(2016, 0, 1),
 *   new Date(2015, 0, 1),
 *   {addSuffix: true}
 * )
 * //=> '1 year ago'
 *
 * @example
 * // What is the distance from 1 January 2016
 * // to 1 January 2015, in minutes?
 * var result = distanceInWordsStrict(
 *   new Date(2016, 0, 1),
 *   new Date(2015, 0, 1),
 *   {unit: 'm'}
 * )
 * //=> '525600 minutes'
 *
 * @example
 * // What is the distance from 1 January 2016
 * // to 28 January 2015, in months, rounded up?
 * var result = distanceInWordsStrict(
 *   new Date(2015, 0, 28),
 *   new Date(2015, 0, 1),
 *   {unit: 'M', partialMethod: 'ceil'}
 * )
 * //=> '1 month'
 *
 * @example
 * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?
 * var eoLocale = require('date-fns/locale/eo')
 * var result = distanceInWordsStrict(
 *   new Date(2016, 7, 1),
 *   new Date(2015, 0, 1),
 *   {locale: eoLocale}
 * )
 * //=> '1 jaro'
 */
function distanceInWordsStrict (dirtyDateToCompare, dirtyDate, dirtyOptions) {
  var options = dirtyOptions || {}

  var comparison = compareDesc(dirtyDateToCompare, dirtyDate)

  var locale = options.locale
  var localize = enLocale.distanceInWords.localize
  if (locale && locale.distanceInWords && locale.distanceInWords.localize) {
    localize = locale.distanceInWords.localize
  }

  var localizeOptions = {
    addSuffix: Boolean(options.addSuffix),
    comparison: comparison
  }

  var dateLeft, dateRight
  if (comparison > 0) {
    dateLeft = parse(dirtyDateToCompare)
    dateRight = parse(dirtyDate)
  } else {
    dateLeft = parse(dirtyDate)
    dateRight = parse(dirtyDateToCompare)
  }

  var unit
  var mathPartial = Math[options.partialMethod ? String(options.partialMethod) : 'floor']
  var seconds = differenceInSeconds(dateRight, dateLeft)
  var offset = dateRight.getTimezoneOffset() - dateLeft.getTimezoneOffset()
  var minutes = mathPartial(seconds / 60) - offset
  var hours, days, months, years

  if (options.unit) {
    unit = String(options.unit)
  } else {
    if (minutes < 1) {
      unit = 's'
    } else if (minutes < 60) {
      unit = 'm'
    } else if (minutes < MINUTES_IN_DAY) {
      unit = 'h'
    } else if (minutes < MINUTES_IN_MONTH) {
      unit = 'd'
    } else if (minutes < MINUTES_IN_YEAR) {
      unit = 'M'
    } else {
      unit = 'Y'
    }
  }

  // 0 up to 60 seconds
  if (unit === 's') {
    return localize('xSeconds', seconds, localizeOptions)

  // 1 up to 60 mins
  } else if (unit === 'm') {
    return localize('xMinutes', minutes, localizeOptions)

  // 1 up to 24 hours
  } else if (unit === 'h') {
    hours = mathPartial(minutes / 60)
    return localize('xHours', hours, localizeOptions)

  // 1 up to 30 days
  } else if (unit === 'd') {
    days = mathPartial(minutes / MINUTES_IN_DAY)
    return localize('xDays', days, localizeOptions)

  // 1 up to 12 months
  } else if (unit === 'M') {
    months = mathPartial(minutes / MINUTES_IN_MONTH)
    return localize('xMonths', months, localizeOptions)

  // 1 year up to max Date
  } else if (unit === 'Y') {
    years = mathPartial(minutes / MINUTES_IN_YEAR)
    return localize('xYears', years, localizeOptions)
  }

  throw new Error('Unknown unit: ' + unit)
}

module.exports = distanceInWordsStrict


/***/ }),
/* 449 */
/***/ (function(module, exports, __webpack_require__) {

var parse = __webpack_require__(29)

/**
 * @category Day Helpers
 * @summary Add the specified number of days to the given date.
 *
 * @description
 * Add the specified number of days to the given date.
 *
 * @param {Date|String|Number} date - the date to be changed
 * @param {Number} amount - the amount of days to be added
 * @returns {Date} the new date with the days added
 *
 * @example
 * // Add 10 days to 1 September 2014:
 * var result = addDays(new Date(2014, 8, 1), 10)
 * //=> Thu Sep 11 2014 00:00:00
 */
function addDays (dirtyDate, dirtyAmount) {
  var date = parse(dirtyDate)
  var amount = Number(dirtyAmount)
  date.setDate(date.getDate() + amount)
  return date
}

module.exports = addDays


/***/ }),
/* 450 */,
/* 451 */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.findIndex` and `_.findLastIndex` without
 * support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} predicate The function invoked per iteration.
 * @param {number} fromIndex The index to search from.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseFindIndex(array, predicate, fromIndex, fromRight) {
  var length = array.length,
      index = fromIndex + (fromRight ? 1 : -1);

  while ((fromRight ? index-- : ++index < length)) {
    if (predicate(array[index], index, array)) {
      return index;
    }
  }
  return -1;
}

module.exports = baseFindIndex;


/***/ }),
/* 452 */
/***/ (function(module, exports, __webpack_require__) {

var baseRest = __webpack_require__(59),
    isIterateeCall = __webpack_require__(202);

/**
 * Creates a function like `_.assign`.
 *
 * @private
 * @param {Function} assigner The function to assign values.
 * @returns {Function} Returns the new assigner function.
 */
function createAssigner(assigner) {
  return baseRest(function(object, sources) {
    var index = -1,
        length = sources.length,
        customizer = length > 1 ? sources[length - 1] : undefined,
        guard = length > 2 ? sources[2] : undefined;

    customizer = (assigner.length > 3 && typeof customizer == 'function')
      ? (length--, customizer)
      : undefined;

    if (guard && isIterateeCall(sources[0], sources[1], guard)) {
      customizer = length < 3 ? undefined : customizer;
      length = 1;
    }
    object = Object(object);
    while (++index < length) {
      var source = sources[index];
      if (source) {
        assigner(object, source, index, customizer);
      }
    }
    return object;
  });
}

module.exports = createAssigner;


/***/ }),
/* 453 */,
/* 454 */
/***/ (function(module, exports) {

/** Used to detect hot functions by number of calls within a span of milliseconds. */
var HOT_COUNT = 800,
    HOT_SPAN = 16;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeNow = Date.now;

/**
 * Creates a function that'll short out and invoke `identity` instead
 * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
 * milliseconds.
 *
 * @private
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new shortable function.
 */
function shortOut(func) {
  var count = 0,
      lastCalled = 0;

  return function() {
    var stamp = nativeNow(),
        remaining = HOT_SPAN - (stamp - lastCalled);

    lastCalled = stamp;
    if (remaining > 0) {
      if (++count >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count = 0;
    }
    return func.apply(undefined, arguments);
  };
}

module.exports = shortOut;


/***/ }),
/* 455 */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.some` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 */
function arraySome(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (predicate(array[index], index, array)) {
      return true;
    }
  }
  return false;
}

module.exports = arraySome;


/***/ }),
/* 456 */
/***/ (function(module, exports, __webpack_require__) {

var memoizeCapped = __webpack_require__(528);

/** Used to match property names within property paths. */
var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

/** Used to match backslashes in property paths. */
var reEscapeChar = /\\(\\)?/g;

/**
 * Converts `string` to a property path array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the property path array.
 */
var stringToPath = memoizeCapped(function(string) {
  var result = [];
  if (string.charCodeAt(0) === 46 /* . */) {
    result.push('');
  }
  string.replace(rePropName, function(match, number, quote, subString) {
    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
  });
  return result;
});

module.exports = stringToPath;


/***/ }),
/* 457 */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(68),
    keys = __webpack_require__(66);

/**
 * The base implementation of `_.assign` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
function baseAssign(object, source) {
  return object && copyObject(source, keys(source), object);
}

module.exports = baseAssign;


/***/ }),
/* 458 */
/***/ (function(module, exports, __webpack_require__) {

var toNumber = __webpack_require__(579);

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0,
    MAX_INTEGER = 1.7976931348623157e+308;

/**
 * Converts `value` to a finite number.
 *
 * @static
 * @memberOf _
 * @since 4.12.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted number.
 * @example
 *
 * _.toFinite(3.2);
 * // => 3.2
 *
 * _.toFinite(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toFinite(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toFinite('3.2');
 * // => 3.2
 */
function toFinite(value) {
  if (!value) {
    return value === 0 ? value : 0;
  }
  value = toNumber(value);
  if (value === INFINITY || value === -INFINITY) {
    var sign = (value < 0 ? -1 : 1);
    return sign * MAX_INTEGER;
  }
  return value === value ? value : 0;
}

module.exports = toFinite;


/***/ }),
/* 459 */
/***/ (function(module, exports, __webpack_require__) {

var arrayPush = __webpack_require__(123),
    baseFlatten = __webpack_require__(122),
    copyArray = __webpack_require__(110),
    isArray = __webpack_require__(21);

/**
 * Creates a new array concatenating `array` with any additional arrays
 * and/or values.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to concatenate.
 * @param {...*} [values] The values to concatenate.
 * @returns {Array} Returns the new concatenated array.
 * @example
 *
 * var array = [1];
 * var other = _.concat(array, 2, [3], [[4]]);
 *
 * console.log(other);
 * // => [1, 2, 3, [4]]
 *
 * console.log(array);
 * // => [1]
 */
function concat() {
  var length = arguments.length;
  if (!length) {
    return [];
  }
  var args = Array(length - 1),
      array = arguments[0],
      index = length;

  while (index--) {
    args[index - 1] = arguments[index];
  }
  return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
}

module.exports = concat;


/***/ }),
/* 460 */
/***/ (function(module, exports, __webpack_require__) {

var baseEach = __webpack_require__(145),
    isArrayLike = __webpack_require__(53);

/**
 * The base implementation of `_.map` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
function baseMap(collection, iteratee) {
  var index = -1,
      result = isArrayLike(collection) ? Array(collection.length) : [];

  baseEach(collection, function(value, key, collection) {
    result[++index] = iteratee(value, key, collection);
  });
  return result;
}

module.exports = baseMap;


/***/ }),
/* 461 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var matchOperatorsRe = /[|\\{}()[\]^$+*?.]/g;

module.exports = function (str) {
	if (typeof str !== 'string') {
		throw new TypeError('Expected a string');
	}

	return str.replace(matchOperatorsRe, '\\$&');
};


/***/ }),
/* 462 */
/***/ (function(module, exports) {

exports = module.exports = stringify
exports.getSerialize = serializer

function stringify(obj, replacer, spaces, cycleReplacer) {
  return JSON.stringify(obj, serializer(replacer, cycleReplacer), spaces)
}

function serializer(replacer, cycleReplacer) {
  var stack = [], keys = []

  if (cycleReplacer == null) cycleReplacer = function(key, value) {
    if (stack[0] === value) return "[Circular ~]"
    return "[Circular ~." + keys.slice(0, stack.indexOf(value)).join(".") + "]"
  }

  return function(key, value) {
    if (stack.length > 0) {
      var thisPos = stack.indexOf(this)
      ~thisPos ? stack.splice(thisPos + 1) : stack.push(this)
      ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key)
      if (~stack.indexOf(value)) value = cycleReplacer.call(this, key, value)
    }
    else stack.push(value)

    return replacer == null ? value : replacer.call(this, key, value)
  }
}


/***/ }),
/* 463 */
/***/ (function(module, exports, __webpack_require__) {

var WeakMap = __webpack_require__(245);

/** Used to store function metadata. */
var metaMap = WeakMap && new WeakMap;

module.exports = metaMap;


/***/ }),
/* 464 */
/***/ (function(module, exports, __webpack_require__) {

var LazyWrapper = __webpack_require__(192),
    getData = __webpack_require__(224),
    getFuncName = __webpack_require__(306),
    lodash = __webpack_require__(668);

/**
 * Checks if `func` has a lazy counterpart.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
 *  else `false`.
 */
function isLaziable(func) {
  var funcName = getFuncName(func),
      other = lodash[funcName];

  if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
    return false;
  }
  if (func === other) {
    return true;
  }
  var data = getData(other);
  return !!data && func === data[0];
}

module.exports = isLaziable;


/***/ }),
/* 465 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
//     (c) 2012-2018 Airbnb, Inc.
//
//     polyglot.js may be freely distributed under the terms of the BSD
//     license. For all licensing information, details, and documentation:
//     http://airbnb.github.com/polyglot.js
//
//
// Polyglot.js is an I18n helper library written in JavaScript, made to
// work both in the browser and in Node. It provides a simple solution for
// interpolation and pluralization, based off of Airbnb's
// experience adding I18n functionality to its Backbone.js and Node apps.
//
// Polylglot is agnostic to your translation backend. It doesn't perform any
// translation; it simply gives you a way to manage translated phrases from
// your client- or server-side JavaScript application.
//



var forEach = __webpack_require__(686);
var entries = __webpack_require__(714);
var warning = __webpack_require__(333);
var has = __webpack_require__(105);
var trim = __webpack_require__(716);

var warn = function warn(message) {
  warning(false, message);
};

var replace = String.prototype.replace;
var split = String.prototype.split;

// #### Pluralization methods
// The string that separates the different phrase possibilities.
var delimiter = '||||';

var russianPluralGroups = function (n) {
  var lastTwo = n % 100;
  var end = lastTwo % 10;
  if (lastTwo !== 11 && end === 1) {
    return 0;
  }
  if (2 <= end && end <= 4 && !(lastTwo >= 12 && lastTwo <= 14)) {
    return 1;
  }
  return 2;
};

var defaultPluralRules = {
  // Mapping from pluralization group plural logic.
  pluralTypes: {
    arabic: function (n) {
      // http://www.arabeyes.org/Plural_Forms
      if (n < 3) { return n; }
      var lastTwo = n % 100;
      if (lastTwo >= 3 && lastTwo <= 10) return 3;
      return lastTwo >= 11 ? 4 : 5;
    },
    bosnian_serbian: russianPluralGroups,
    chinese: function () { return 0; },
    croatian: russianPluralGroups,
    french: function (n) { return n >= 2 ? 1 : 0; },
    german: function (n) { return n !== 1 ? 1 : 0; },
    russian: russianPluralGroups,
    lithuanian: function (n) {
      if (n % 10 === 1 && n % 100 !== 11) { return 0; }
      return n % 10 >= 2 && n % 10 <= 9 && (n % 100 < 11 || n % 100 > 19) ? 1 : 2;
    },
    czech: function (n) {
      if (n === 1) { return 0; }
      return (n >= 2 && n <= 4) ? 1 : 2;
    },
    polish: function (n) {
      if (n === 1) { return 0; }
      var end = n % 10;
      return 2 <= end && end <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2;
    },
    icelandic: function (n) { return (n % 10 !== 1 || n % 100 === 11) ? 1 : 0; },
    slovenian: function (n) {
      var lastTwo = n % 100;
      if (lastTwo === 1) {
        return 0;
      }
      if (lastTwo === 2) {
        return 1;
      }
      if (lastTwo === 3 || lastTwo === 4) {
        return 2;
      }
      return 3;
    }
  },

  // Mapping from pluralization group to individual language codes/locales.
  // Will look up based on exact match, if not found and it's a locale will parse the locale
  // for language code, and if that does not exist will default to 'en'
  pluralTypeToLanguages: {
    arabic: ['ar'],
    bosnian_serbian: ['bs-Latn-BA', 'bs-Cyrl-BA', 'srl-RS', 'sr-RS'],
    chinese: ['id', 'id-ID', 'ja', 'ko', 'ko-KR', 'lo', 'ms', 'th', 'th-TH', 'zh'],
    croatian: ['hr', 'hr-HR'],
    german: ['fa', 'da', 'de', 'en', 'es', 'fi', 'el', 'he', 'hi-IN', 'hu', 'hu-HU', 'it', 'nl', 'no', 'pt', 'sv', 'tr'],
    french: ['fr', 'tl', 'pt-br'],
    russian: ['ru', 'ru-RU'],
    lithuanian: ['lt'],
    czech: ['cs', 'cs-CZ', 'sk'],
    polish: ['pl'],
    icelandic: ['is'],
    slovenian: ['sl-SL']
  }
};

function langToTypeMap(mapping) {
  var ret = {};
  forEach(entries(mapping), function (entry) {
    var type = entry[0];
    var langs = entry[1];
    forEach(langs, function (lang) {
      ret[lang] = type;
    });
  });
  return ret;
}

function pluralTypeName(pluralRules, locale) {
  var langToPluralType = langToTypeMap(pluralRules.pluralTypeToLanguages);
  return langToPluralType[locale]
    || langToPluralType[split.call(locale, /-/, 1)[0]]
    || langToPluralType.en;
}

function pluralTypeIndex(pluralRules, pluralType, count) {
  return pluralRules.pluralTypes[pluralType](count);
}

function createMemoizedPluralTypeNameSelector() {
  var localePluralTypeStorage = {};

  return function (pluralRules, locale) {
    var pluralType = localePluralTypeStorage[locale];

    if (pluralType && !pluralRules.pluralTypes[pluralType]) {
      pluralType = null;
      localePluralTypeStorage[locale] = pluralType;
    }

    if (!pluralType) {
      pluralType = pluralTypeName(pluralRules, locale);

      if (pluralType) {
        localePluralTypeStorage[locale] = pluralType;
      }
    }

    return pluralType;
  };
}

function escape(token) {
  return token.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
}

function constructTokenRegex(opts) {
  var prefix = (opts && opts.prefix) || '%{';
  var suffix = (opts && opts.suffix) || '}';

  if (prefix === delimiter || suffix === delimiter) {
    throw new RangeError('"' + delimiter + '" token is reserved for pluralization');
  }

  return new RegExp(escape(prefix) + '(.*?)' + escape(suffix), 'g');
}

var memoizedPluralTypeName = createMemoizedPluralTypeNameSelector();

var defaultTokenRegex = /%\{(.*?)\}/g;

// ### transformPhrase(phrase, substitutions, locale)
//
// Takes a phrase string and transforms it by choosing the correct
// plural form and interpolating it.
//
//     transformPhrase('Hello, %{name}!', {name: 'Spike'});
//     // "Hello, Spike!"
//
// The correct plural form is selected if substitutions.smart_count
// is set. You can pass in a number instead of an Object as `substitutions`
// as a shortcut for `smart_count`.
//
//     transformPhrase('%{smart_count} new messages |||| 1 new message', {smart_count: 1}, 'en');
//     // "1 new message"
//
//     transformPhrase('%{smart_count} new messages |||| 1 new message', {smart_count: 2}, 'en');
//     // "2 new messages"
//
//     transformPhrase('%{smart_count} new messages |||| 1 new message', 5, 'en');
//     // "5 new messages"
//
// You should pass in a third argument, the locale, to specify the correct plural type.
// It defaults to `'en'` with 2 plural forms.
function transformPhrase(phrase, substitutions, locale, tokenRegex, pluralRules) {
  if (typeof phrase !== 'string') {
    throw new TypeError('Polyglot.transformPhrase expects argument #1 to be string');
  }

  if (substitutions == null) {
    return phrase;
  }

  var result = phrase;
  var interpolationRegex = tokenRegex || defaultTokenRegex;

  // allow number as a pluralization shortcut
  var options = typeof substitutions === 'number' ? { smart_count: substitutions } : substitutions;

  // Select plural form: based on a phrase text that contains `n`
  // plural forms separated by `delimiter`, a `locale`, and a `substitutions.smart_count`,
  // choose the correct plural form. This is only done if `count` is set.
  if (options.smart_count != null && phrase) {
    var pluralRulesOrDefault = pluralRules || defaultPluralRules;
    var texts = split.call(phrase, delimiter);
    var bestLocale = locale || 'en';
    var pluralType = memoizedPluralTypeName(pluralRulesOrDefault, bestLocale);
    var pluralTypeWithCount = pluralTypeIndex(
      pluralRulesOrDefault,
      pluralType,
      options.smart_count
    );

    result = trim(texts[pluralTypeWithCount] || texts[0]);
  }

  // Interpolate: Creates a `RegExp` object for each interpolation placeholder.
  result = replace.call(result, interpolationRegex, function (expression, argument) {
    if (!has(options, argument) || options[argument] == null) { return expression; }
    return options[argument];
  });

  return result;
}

// ### Polyglot class constructor
function Polyglot(options) {
  var opts = options || {};
  this.phrases = {};
  this.extend(opts.phrases || {});
  this.currentLocale = opts.locale || 'en';
  var allowMissing = opts.allowMissing ? transformPhrase : null;
  this.onMissingKey = typeof opts.onMissingKey === 'function' ? opts.onMissingKey : allowMissing;
  this.warn = opts.warn || warn;
  this.tokenRegex = constructTokenRegex(opts.interpolation);
  this.pluralRules = opts.pluralRules || defaultPluralRules;
}

// ### polyglot.locale([locale])
//
// Get or set locale. Internally, Polyglot only uses locale for pluralization.
Polyglot.prototype.locale = function (newLocale) {
  if (newLocale) this.currentLocale = newLocale;
  return this.currentLocale;
};

// ### polyglot.extend(phrases)
//
// Use `extend` to tell Polyglot how to translate a given key.
//
//     polyglot.extend({
//       "hello": "Hello",
//       "hello_name": "Hello, %{name}"
//     });
//
// The key can be any string.  Feel free to call `extend` multiple times;
// it will override any phrases with the same key, but leave existing phrases
// untouched.
//
// It is also possible to pass nested phrase objects, which get flattened
// into an object with the nested keys concatenated using dot notation.
//
//     polyglot.extend({
//       "nav": {
//         "hello": "Hello",
//         "hello_name": "Hello, %{name}",
//         "sidebar": {
//           "welcome": "Welcome"
//         }
//       }
//     });
//
//     console.log(polyglot.phrases);
//     // {
//     //   'nav.hello': 'Hello',
//     //   'nav.hello_name': 'Hello, %{name}',
//     //   'nav.sidebar.welcome': 'Welcome'
//     // }
//
// `extend` accepts an optional second argument, `prefix`, which can be used
// to prefix every key in the phrases object with some string, using dot
// notation.
//
//     polyglot.extend({
//       "hello": "Hello",
//       "hello_name": "Hello, %{name}"
//     }, "nav");
//
//     console.log(polyglot.phrases);
//     // {
//     //   'nav.hello': 'Hello',
//     //   'nav.hello_name': 'Hello, %{name}'
//     // }
//
// This feature is used internally to support nested phrase objects.
Polyglot.prototype.extend = function (morePhrases, prefix) {
  forEach(entries(morePhrases || {}), function (entry) {
    var key = entry[0];
    var phrase = entry[1];
    var prefixedKey = prefix ? prefix + '.' + key : key;
    if (typeof phrase === 'object') {
      this.extend(phrase, prefixedKey);
    } else {
      this.phrases[prefixedKey] = phrase;
    }
  }, this);
};

// ### polyglot.unset(phrases)
// Use `unset` to selectively remove keys from a polyglot instance.
//
//     polyglot.unset("some_key");
//     polyglot.unset({
//       "hello": "Hello",
//       "hello_name": "Hello, %{name}"
//     });
//
// The unset method can take either a string (for the key), or an object hash with
// the keys that you would like to unset.
Polyglot.prototype.unset = function (morePhrases, prefix) {
  if (typeof morePhrases === 'string') {
    delete this.phrases[morePhrases];
  } else {
    forEach(entries(morePhrases || {}), function (entry) {
      var key = entry[0];
      var phrase = entry[1];
      var prefixedKey = prefix ? prefix + '.' + key : key;
      if (typeof phrase === 'object') {
        this.unset(phrase, prefixedKey);
      } else {
        delete this.phrases[prefixedKey];
      }
    }, this);
  }
};

// ### polyglot.clear()
//
// Clears all phrases. Useful for special cases, such as freeing
// up memory if you have lots of phrases but no longer need to
// perform any translation. Also used internally by `replace`.
Polyglot.prototype.clear = function () {
  this.phrases = {};
};

// ### polyglot.replace(phrases)
//
// Completely replace the existing phrases with a new set of phrases.
// Normally, just use `extend` to add more phrases, but under certain
// circumstances, you may want to make sure no old phrases are lying around.
Polyglot.prototype.replace = function (newPhrases) {
  this.clear();
  this.extend(newPhrases);
};

// ### polyglot.t(key, options)
//
// The most-used method. Provide a key, and `t` will return the
// phrase.
//
//     polyglot.t("hello");
//     => "Hello"
//
// The phrase value is provided first by a call to `polyglot.extend()` or
// `polyglot.replace()`.
//
// Pass in an object as the second argument to perform interpolation.
//
//     polyglot.t("hello_name", {name: "Spike"});
//     => "Hello, Spike"
//
// If you like, you can provide a default value in case the phrase is missing.
// Use the special option key "_" to specify a default.
//
//     polyglot.t("i_like_to_write_in_language", {
//       _: "I like to write in %{language}.",
//       language: "JavaScript"
//     });
//     => "I like to write in JavaScript."
//
Polyglot.prototype.t = function (key, options) {
  var phrase, result;
  var opts = options == null ? {} : options;
  if (typeof this.phrases[key] === 'string') {
    phrase = this.phrases[key];
  } else if (typeof opts._ === 'string') {
    phrase = opts._;
  } else if (this.onMissingKey) {
    var onMissingKey = this.onMissingKey;
    result = onMissingKey(key, opts, this.currentLocale, this.tokenRegex, this.pluralRules);
  } else {
    this.warn('Missing translation for key: "' + key + '"');
    result = key;
  }
  if (typeof phrase === 'string') {
    result = transformPhrase(phrase, opts, this.currentLocale, this.tokenRegex, this.pluralRules);
  }
  return result;
};

// ### polyglot.has(key)
//
// Check if polyglot has a translation for given key
Polyglot.prototype.has = function (key) {
  return has(this.phrases, key);
};

// export transformPhrase
Polyglot.transformPhrase = function transform(phrase, substitutions, locale) {
  return transformPhrase(phrase, substitutions, locale);
};

module.exports = Polyglot;


/***/ }),
/* 466 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const conversions = __webpack_require__(467);
const utils = __webpack_require__(468);
const Impl = __webpack_require__(469);

const impl = utils.implSymbol;

function URL(url) {
  if (!this || this[impl] || !(this instanceof URL)) {
    throw new TypeError("Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.");
  }
  if (arguments.length < 1) {
    throw new TypeError("Failed to construct 'URL': 1 argument required, but only " + arguments.length + " present.");
  }
  const args = [];
  for (let i = 0; i < arguments.length && i < 2; ++i) {
    args[i] = arguments[i];
  }
  args[0] = conversions["USVString"](args[0]);
  if (args[1] !== undefined) {
  args[1] = conversions["USVString"](args[1]);
  }

  module.exports.setup(this, args);
}

URL.prototype.toJSON = function toJSON() {
  if (!this || !module.exports.is(this)) {
    throw new TypeError("Illegal invocation");
  }
  const args = [];
  for (let i = 0; i < arguments.length && i < 0; ++i) {
    args[i] = arguments[i];
  }
  return this[impl].toJSON.apply(this[impl], args);
};
Object.defineProperty(URL.prototype, "href", {
  get() {
    return this[impl].href;
  },
  set(V) {
    V = conversions["USVString"](V);
    this[impl].href = V;
  },
  enumerable: true,
  configurable: true
});

URL.prototype.toString = function () {
  if (!this || !module.exports.is(this)) {
    throw new TypeError("Illegal invocation");
  }
  return this.href;
};

Object.defineProperty(URL.prototype, "origin", {
  get() {
    return this[impl].origin;
  },
  enumerable: true,
  configurable: true
});

Object.defineProperty(URL.prototype, "protocol", {
  get() {
    return this[impl].protocol;
  },
  set(V) {
    V = conversions["USVString"](V);
    this[impl].protocol = V;
  },
  enumerable: true,
  configurable: true
});

Object.defineProperty(URL.prototype, "username", {
  get() {
    return this[impl].username;
  },
  set(V) {
    V = conversions["USVString"](V);
    this[impl].username = V;
  },
  enumerable: true,
  configurable: true
});

Object.defineProperty(URL.prototype, "password", {
  get() {
    return this[impl].password;
  },
  set(V) {
    V = conversions["USVString"](V);
    this[impl].password = V;
  },
  enumerable: true,
  configurable: true
});

Object.defineProperty(URL.prototype, "host", {
  get() {
    return this[impl].host;
  },
  set(V) {
    V = conversions["USVString"](V);
    this[impl].host = V;
  },
  enumerable: true,
  configurable: true
});

Object.defineProperty(URL.prototype, "hostname", {
  get() {
    return this[impl].hostname;
  },
  set(V) {
    V = conversions["USVString"](V);
    this[impl].hostname = V;
  },
  enumerable: true,
  configurable: true
});

Object.defineProperty(URL.prototype, "port", {
  get() {
    return this[impl].port;
  },
  set(V) {
    V = conversions["USVString"](V);
    this[impl].port = V;
  },
  enumerable: true,
  configurable: true
});

Object.defineProperty(URL.prototype, "pathname", {
  get() {
    return this[impl].pathname;
  },
  set(V) {
    V = conversions["USVString"](V);
    this[impl].pathname = V;
  },
  enumerable: true,
  configurable: true
});

Object.defineProperty(URL.prototype, "search", {
  get() {
    return this[impl].search;
  },
  set(V) {
    V = conversions["USVString"](V);
    this[impl].search = V;
  },
  enumerable: true,
  configurable: true
});

Object.defineProperty(URL.prototype, "hash", {
  get() {
    return this[impl].hash;
  },
  set(V) {
    V = conversions["USVString"](V);
    this[impl].hash = V;
  },
  enumerable: true,
  configurable: true
});


module.exports = {
  is(obj) {
    return !!obj && obj[impl] instanceof Impl.implementation;
  },
  create(constructorArgs, privateData) {
    let obj = Object.create(URL.prototype);
    this.setup(obj, constructorArgs, privateData);
    return obj;
  },
  setup(obj, constructorArgs, privateData) {
    if (!privateData) privateData = {};
    privateData.wrapper = obj;

    obj[impl] = new Impl.implementation(constructorArgs, privateData);
    obj[impl][utils.wrapperSymbol] = obj;
  },
  interface: URL,
  expose: {
    Window: { URL: URL },
    Worker: { URL: URL }
  }
};



/***/ }),
/* 467 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var conversions = {};
module.exports = conversions;

function sign(x) {
    return x < 0 ? -1 : 1;
}

function evenRound(x) {
    // Round x to the nearest integer, choosing the even integer if it lies halfway between two.
    if ((x % 1) === 0.5 && (x & 1) === 0) { // [even number].5; round down (i.e. floor)
        return Math.floor(x);
    } else {
        return Math.round(x);
    }
}

function createNumberConversion(bitLength, typeOpts) {
    if (!typeOpts.unsigned) {
        --bitLength;
    }
    const lowerBound = typeOpts.unsigned ? 0 : -Math.pow(2, bitLength);
    const upperBound = Math.pow(2, bitLength) - 1;

    const moduloVal = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength) : Math.pow(2, bitLength);
    const moduloBound = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength - 1) : Math.pow(2, bitLength - 1);

    return function(V, opts) {
        if (!opts) opts = {};

        let x = +V;

        if (opts.enforceRange) {
            if (!Number.isFinite(x)) {
                throw new TypeError("Argument is not a finite number");
            }

            x = sign(x) * Math.floor(Math.abs(x));
            if (x < lowerBound || x > upperBound) {
                throw new TypeError("Argument is not in byte range");
            }

            return x;
        }

        if (!isNaN(x) && opts.clamp) {
            x = evenRound(x);

            if (x < lowerBound) x = lowerBound;
            if (x > upperBound) x = upperBound;
            return x;
        }

        if (!Number.isFinite(x) || x === 0) {
            return 0;
        }

        x = sign(x) * Math.floor(Math.abs(x));
        x = x % moduloVal;

        if (!typeOpts.unsigned && x >= moduloBound) {
            return x - moduloVal;
        } else if (typeOpts.unsigned) {
            if (x < 0) {
              x += moduloVal;
            } else if (x === -0) { // don't return negative zero
              return 0;
            }
        }

        return x;
    }
}

conversions["void"] = function () {
    return undefined;
};

conversions["boolean"] = function (val) {
    return !!val;
};

conversions["byte"] = createNumberConversion(8, { unsigned: false });
conversions["octet"] = createNumberConversion(8, { unsigned: true });

conversions["short"] = createNumberConversion(16, { unsigned: false });
conversions["unsigned short"] = createNumberConversion(16, { unsigned: true });

conversions["long"] = createNumberConversion(32, { unsigned: false });
conversions["unsigned long"] = createNumberConversion(32, { unsigned: true });

conversions["long long"] = createNumberConversion(32, { unsigned: false, moduloBitLength: 64 });
conversions["unsigned long long"] = createNumberConversion(32, { unsigned: true, moduloBitLength: 64 });

conversions["double"] = function (V) {
    const x = +V;

    if (!Number.isFinite(x)) {
        throw new TypeError("Argument is not a finite floating-point value");
    }

    return x;
};

conversions["unrestricted double"] = function (V) {
    const x = +V;

    if (isNaN(x)) {
        throw new TypeError("Argument is NaN");
    }

    return x;
};

// not quite valid, but good enough for JS
conversions["float"] = conversions["double"];
conversions["unrestricted float"] = conversions["unrestricted double"];

conversions["DOMString"] = function (V, opts) {
    if (!opts) opts = {};

    if (opts.treatNullAsEmptyString && V === null) {
        return "";
    }

    return String(V);
};

conversions["ByteString"] = function (V, opts) {
    const x = String(V);
    let c = undefined;
    for (let i = 0; (c = x.codePointAt(i)) !== undefined; ++i) {
        if (c > 255) {
            throw new TypeError("Argument is not a valid bytestring");
        }
    }

    return x;
};

conversions["USVString"] = function (V) {
    const S = String(V);
    const n = S.length;
    const U = [];
    for (let i = 0; i < n; ++i) {
        const c = S.charCodeAt(i);
        if (c < 0xD800 || c > 0xDFFF) {
            U.push(String.fromCodePoint(c));
        } else if (0xDC00 <= c && c <= 0xDFFF) {
            U.push(String.fromCodePoint(0xFFFD));
        } else {
            if (i === n - 1) {
                U.push(String.fromCodePoint(0xFFFD));
            } else {
                const d = S.charCodeAt(i + 1);
                if (0xDC00 <= d && d <= 0xDFFF) {
                    const a = c & 0x3FF;
                    const b = d & 0x3FF;
                    U.push(String.fromCodePoint((2 << 15) + (2 << 9) * a + b));
                    ++i;
                } else {
                    U.push(String.fromCodePoint(0xFFFD));
                }
            }
        }
    }

    return U.join('');
};

conversions["Date"] = function (V, opts) {
    if (!(V instanceof Date)) {
        throw new TypeError("Argument is not a Date object");
    }
    if (isNaN(V)) {
        return undefined;
    }

    return V;
};

conversions["RegExp"] = function (V, opts) {
    if (!(V instanceof RegExp)) {
        V = new RegExp(V);
    }

    return V;
};


/***/ }),
/* 468 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports.mixin = function mixin(target, source) {
  const keys = Object.getOwnPropertyNames(source);
  for (let i = 0; i < keys.length; ++i) {
    Object.defineProperty(target, keys[i], Object.getOwnPropertyDescriptor(source, keys[i]));
  }
};

module.exports.wrapperSymbol = Symbol("wrapper");
module.exports.implSymbol = Symbol("impl");

module.exports.wrapperForImpl = function (impl) {
  return impl[module.exports.wrapperSymbol];
};

module.exports.implForWrapper = function (wrapper) {
  return wrapper[module.exports.implSymbol];
};



/***/ }),
/* 469 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

const usm = __webpack_require__(49);

exports.implementation = class URLImpl {
  constructor(constructorArgs) {
    const url = constructorArgs[0];
    const base = constructorArgs[1];

    let parsedBase = null;
    if (base !== undefined) {
      parsedBase = usm.basicURLParse(base);
      if (parsedBase === "failure") {
        throw new TypeError("Invalid base URL");
      }
    }

    const parsedURL = usm.basicURLParse(url, { baseURL: parsedBase });
    if (parsedURL === "failure") {
      throw new TypeError("Invalid URL");
    }

    this._url = parsedURL;

    // TODO: query stuff
  }

  get href() {
    return usm.serializeURL(this._url);
  }

  set href(v) {
    const parsedURL = usm.basicURLParse(v);
    if (parsedURL === "failure") {
      throw new TypeError("Invalid URL");
    }

    this._url = parsedURL;
  }

  get origin() {
    return usm.serializeURLOrigin(this._url);
  }

  get protocol() {
    return this._url.scheme + ":";
  }

  set protocol(v) {
    usm.basicURLParse(v + ":", { url: this._url, stateOverride: "scheme start" });
  }

  get username() {
    return this._url.username;
  }

  set username(v) {
    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {
      return;
    }

    usm.setTheUsername(this._url, v);
  }

  get password() {
    return this._url.password;
  }

  set password(v) {
    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {
      return;
    }

    usm.setThePassword(this._url, v);
  }

  get host() {
    const url = this._url;

    if (url.host === null) {
      return "";
    }

    if (url.port === null) {
      return usm.serializeHost(url.host);
    }

    return usm.serializeHost(url.host) + ":" + usm.serializeInteger(url.port);
  }

  set host(v) {
    if (this._url.cannotBeABaseURL) {
      return;
    }

    usm.basicURLParse(v, { url: this._url, stateOverride: "host" });
  }

  get hostname() {
    if (this._url.host === null) {
      return "";
    }

    return usm.serializeHost(this._url.host);
  }

  set hostname(v) {
    if (this._url.cannotBeABaseURL) {
      return;
    }

    usm.basicURLParse(v, { url: this._url, stateOverride: "hostname" });
  }

  get port() {
    if (this._url.port === null) {
      return "";
    }

    return usm.serializeInteger(this._url.port);
  }

  set port(v) {
    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {
      return;
    }

    if (v === "") {
      this._url.port = null;
    } else {
      usm.basicURLParse(v, { url: this._url, stateOverride: "port" });
    }
  }

  get pathname() {
    if (this._url.cannotBeABaseURL) {
      return this._url.path[0];
    }

    if (this._url.path.length === 0) {
      return "";
    }

    return "/" + this._url.path.join("/");
  }

  set pathname(v) {
    if (this._url.cannotBeABaseURL) {
      return;
    }

    this._url.path = [];
    usm.basicURLParse(v, { url: this._url, stateOverride: "path start" });
  }

  get search() {
    if (this._url.query === null || this._url.query === "") {
      return "";
    }

    return "?" + this._url.query;
  }

  set search(v) {
    // TODO: query stuff

    const url = this._url;

    if (v === "") {
      url.query = null;
      return;
    }

    const input = v[0] === "?" ? v.substring(1) : v;
    url.query = "";
    usm.basicURLParse(input, { url, stateOverride: "query" });
  }

  get hash() {
    if (this._url.fragment === null || this._url.fragment === "") {
      return "";
    }

    return "#" + this._url.fragment;
  }

  set hash(v) {
    if (v === "") {
      this._url.fragment = null;
      return;
    }

    const input = v[0] === "#" ? v.substring(1) : v;
    this._url.fragment = "";
    usm.basicURLParse(input, { url: this._url, stateOverride: "fragment" });
  }

  toJSON() {
    return this.href;
  }
};


/***/ }),
/* 470 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var punycode = __webpack_require__(214);
var mappingTable = __webpack_require__(471);

var PROCESSING_OPTIONS = {
  TRANSITIONAL: 0,
  NONTRANSITIONAL: 1
};

function normalize(str) { // fix bug in v8
  return str.split('\u0000').map(function (s) { return s.normalize('NFC'); }).join('\u0000');
}

function findStatus(val) {
  var start = 0;
  var end = mappingTable.length - 1;

  while (start <= end) {
    var mid = Math.floor((start + end) / 2);

    var target = mappingTable[mid];
    if (target[0][0] <= val && target[0][1] >= val) {
      return target;
    } else if (target[0][0] > val) {
      end = mid - 1;
    } else {
      start = mid + 1;
    }
  }

  return null;
}

var regexAstralSymbols = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g;

function countSymbols(string) {
  return string
    // replace every surrogate pair with a BMP symbol
    .replace(regexAstralSymbols, '_')
    // then get the length
    .length;
}

function mapChars(domain_name, useSTD3, processing_option) {
  var hasError = false;
  var processed = "";

  var len = countSymbols(domain_name);
  for (var i = 0; i < len; ++i) {
    var codePoint = domain_name.codePointAt(i);
    var status = findStatus(codePoint);

    switch (status[1]) {
      case "disallowed":
        hasError = true;
        processed += String.fromCodePoint(codePoint);
        break;
      case "ignored":
        break;
      case "mapped":
        processed += String.fromCodePoint.apply(String, status[2]);
        break;
      case "deviation":
        if (processing_option === PROCESSING_OPTIONS.TRANSITIONAL) {
          processed += String.fromCodePoint.apply(String, status[2]);
        } else {
          processed += String.fromCodePoint(codePoint);
        }
        break;
      case "valid":
        processed += String.fromCodePoint(codePoint);
        break;
      case "disallowed_STD3_mapped":
        if (useSTD3) {
          hasError = true;
          processed += String.fromCodePoint(codePoint);
        } else {
          processed += String.fromCodePoint.apply(String, status[2]);
        }
        break;
      case "disallowed_STD3_valid":
        if (useSTD3) {
          hasError = true;
        }

        processed += String.fromCodePoint(codePoint);
        break;
    }
  }

  return {
    string: processed,
    error: hasError
  };
}

var combiningMarksRegex = /[\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08E4-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0C00-\u0C03\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D01-\u0D03\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F\u109A-\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u180B-\u180D\u18A9\u1920-\u192B\u1930-\u193B\u19B0-\u19C0\u19C8\u19C9\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F\u1AB0-\u1ABE\u1B00-\u1B04\u1B34-\u1B44\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BE6-\u1BF3\u1C24-\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF2-\u1CF4\u1CF8\u1CF9\u1DC0-\u1DF5\u1DFC-\u1DFF\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C4\uA8E0-\uA8F1\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9E5\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2D]|\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD804[\uDC00-\uDC02\uDC38-\uDC46\uDC7F-\uDC82\uDCB0-\uDCBA\uDD00-\uDD02\uDD27-\uDD34\uDD73\uDD80-\uDD82\uDDB3-\uDDC0\uDE2C-\uDE37\uDEDF-\uDEEA\uDF01-\uDF03\uDF3C\uDF3E-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF62\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDCB0-\uDCC3\uDDAF-\uDDB5\uDDB8-\uDDC0\uDE30-\uDE40\uDEAB-\uDEB7]|\uD81A[\uDEF0-\uDEF4\uDF30-\uDF36]|\uD81B[\uDF51-\uDF7E\uDF8F-\uDF92]|\uD82F[\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD83A[\uDCD0-\uDCD6]|\uDB40[\uDD00-\uDDEF]/;

function validateLabel(label, processing_option) {
  if (label.substr(0, 4) === "xn--") {
    label = punycode.toUnicode(label);
    processing_option = PROCESSING_OPTIONS.NONTRANSITIONAL;
  }

  var error = false;

  if (normalize(label) !== label ||
      (label[3] === "-" && label[4] === "-") ||
      label[0] === "-" || label[label.length - 1] === "-" ||
      label.indexOf(".") !== -1 ||
      label.search(combiningMarksRegex) === 0) {
    error = true;
  }

  var len = countSymbols(label);
  for (var i = 0; i < len; ++i) {
    var status = findStatus(label.codePointAt(i));
    if ((processing === PROCESSING_OPTIONS.TRANSITIONAL && status[1] !== "valid") ||
        (processing === PROCESSING_OPTIONS.NONTRANSITIONAL &&
         status[1] !== "valid" && status[1] !== "deviation")) {
      error = true;
      break;
    }
  }

  return {
    label: label,
    error: error
  };
}

function processing(domain_name, useSTD3, processing_option) {
  var result = mapChars(domain_name, useSTD3, processing_option);
  result.string = normalize(result.string);

  var labels = result.string.split(".");
  for (var i = 0; i < labels.length; ++i) {
    try {
      var validation = validateLabel(labels[i]);
      labels[i] = validation.label;
      result.error = result.error || validation.error;
    } catch(e) {
      result.error = true;
    }
  }

  return {
    string: labels.join("."),
    error: result.error
  };
}

module.exports.toASCII = function(domain_name, useSTD3, processing_option, verifyDnsLength) {
  var result = processing(domain_name, useSTD3, processing_option);
  var labels = result.string.split(".");
  labels = labels.map(function(l) {
    try {
      return punycode.toASCII(l);
    } catch(e) {
      result.error = true;
      return l;
    }
  });

  if (verifyDnsLength) {
    var total = labels.slice(0, labels.length - 1).join(".").length;
    if (total.length > 253 || total.length === 0) {
      result.error = true;
    }

    for (var i=0; i < labels.length; ++i) {
      if (labels.length > 63 || labels.length === 0) {
        result.error = true;
        break;
      }
    }
  }

  if (result.error) return null;
  return labels.join(".");
};

module.exports.toUnicode = function(domain_name, useSTD3) {
  var result = processing(domain_name, useSTD3, PROCESSING_OPTIONS.NONTRANSITIONAL);

  return {
    domain: result.string,
    error: result.error
  };
};

module.exports.PROCESSING_OPTIONS = PROCESSING_OPTIONS;


/***/ }),
/* 471 */
/***/ (function(module) {

module.exports = JSON.parse("[[[0,44],\"disallowed_STD3_valid\"],[[45,46],\"valid\"],[[47,47],\"disallowed_STD3_valid\"],[[48,57],\"valid\"],[[58,64],\"disallowed_STD3_valid\"],[[65,65],\"mapped\",[97]],[[66,66],\"mapped\",[98]],[[67,67],\"mapped\",[99]],[[68,68],\"mapped\",[100]],[[69,69],\"mapped\",[101]],[[70,70],\"mapped\",[102]],[[71,71],\"mapped\",[103]],[[72,72],\"mapped\",[104]],[[73,73],\"mapped\",[105]],[[74,74],\"mapped\",[106]],[[75,75],\"mapped\",[107]],[[76,76],\"mapped\",[108]],[[77,77],\"mapped\",[109]],[[78,78],\"mapped\",[110]],[[79,79],\"mapped\",[111]],[[80,80],\"mapped\",[112]],[[81,81],\"mapped\",[113]],[[82,82],\"mapped\",[114]],[[83,83],\"mapped\",[115]],[[84,84],\"mapped\",[116]],[[85,85],\"mapped\",[117]],[[86,86],\"mapped\",[118]],[[87,87],\"mapped\",[119]],[[88,88],\"mapped\",[120]],[[89,89],\"mapped\",[121]],[[90,90],\"mapped\",[122]],[[91,96],\"disallowed_STD3_valid\"],[[97,122],\"valid\"],[[123,127],\"disallowed_STD3_valid\"],[[128,159],\"disallowed\"],[[160,160],\"disallowed_STD3_mapped\",[32]],[[161,167],\"valid\",[],\"NV8\"],[[168,168],\"disallowed_STD3_mapped\",[32,776]],[[169,169],\"valid\",[],\"NV8\"],[[170,170],\"mapped\",[97]],[[171,172],\"valid\",[],\"NV8\"],[[173,173],\"ignored\"],[[174,174],\"valid\",[],\"NV8\"],[[175,175],\"disallowed_STD3_mapped\",[32,772]],[[176,177],\"valid\",[],\"NV8\"],[[178,178],\"mapped\",[50]],[[179,179],\"mapped\",[51]],[[180,180],\"disallowed_STD3_mapped\",[32,769]],[[181,181],\"mapped\",[956]],[[182,182],\"valid\",[],\"NV8\"],[[183,183],\"valid\"],[[184,184],\"disallowed_STD3_mapped\",[32,807]],[[185,185],\"mapped\",[49]],[[186,186],\"mapped\",[111]],[[187,187],\"valid\",[],\"NV8\"],[[188,188],\"mapped\",[49,8260,52]],[[189,189],\"mapped\",[49,8260,50]],[[190,190],\"mapped\",[51,8260,52]],[[191,191],\"valid\",[],\"NV8\"],[[192,192],\"mapped\",[224]],[[193,193],\"mapped\",[225]],[[194,194],\"mapped\",[226]],[[195,195],\"mapped\",[227]],[[196,196],\"mapped\",[228]],[[197,197],\"mapped\",[229]],[[198,198],\"mapped\",[230]],[[199,199],\"mapped\",[231]],[[200,200],\"mapped\",[232]],[[201,201],\"mapped\",[233]],[[202,202],\"mapped\",[234]],[[203,203],\"mapped\",[235]],[[204,204],\"mapped\",[236]],[[205,205],\"mapped\",[237]],[[206,206],\"mapped\",[238]],[[207,207],\"mapped\",[239]],[[208,208],\"mapped\",[240]],[[209,209],\"mapped\",[241]],[[210,210],\"mapped\",[242]],[[211,211],\"mapped\",[243]],[[212,212],\"mapped\",[244]],[[213,213],\"mapped\",[245]],[[214,214],\"mapped\",[246]],[[215,215],\"valid\",[],\"NV8\"],[[216,216],\"mapped\",[248]],[[217,217],\"mapped\",[249]],[[218,218],\"mapped\",[250]],[[219,219],\"mapped\",[251]],[[220,220],\"mapped\",[252]],[[221,221],\"mapped\",[253]],[[222,222],\"mapped\",[254]],[[223,223],\"deviation\",[115,115]],[[224,246],\"valid\"],[[247,247],\"valid\",[],\"NV8\"],[[248,255],\"valid\"],[[256,256],\"mapped\",[257]],[[257,257],\"valid\"],[[258,258],\"mapped\",[259]],[[259,259],\"valid\"],[[260,260],\"mapped\",[261]],[[261,261],\"valid\"],[[262,262],\"mapped\",[263]],[[263,263],\"valid\"],[[264,264],\"mapped\",[265]],[[265,265],\"valid\"],[[266,266],\"mapped\",[267]],[[267,267],\"valid\"],[[268,268],\"mapped\",[269]],[[269,269],\"valid\"],[[270,270],\"mapped\",[271]],[[271,271],\"valid\"],[[272,272],\"mapped\",[273]],[[273,273],\"valid\"],[[274,274],\"mapped\",[275]],[[275,275],\"valid\"],[[276,276],\"mapped\",[277]],[[277,277],\"valid\"],[[278,278],\"mapped\",[279]],[[279,279],\"valid\"],[[280,280],\"mapped\",[281]],[[281,281],\"valid\"],[[282,282],\"mapped\",[283]],[[283,283],\"valid\"],[[284,284],\"mapped\",[285]],[[285,285],\"valid\"],[[286,286],\"mapped\",[287]],[[287,287],\"valid\"],[[288,288],\"mapped\",[289]],[[289,289],\"valid\"],[[290,290],\"mapped\",[291]],[[291,291],\"valid\"],[[292,292],\"mapped\",[293]],[[293,293],\"valid\"],[[294,294],\"mapped\",[295]],[[295,295],\"valid\"],[[296,296],\"mapped\",[297]],[[297,297],\"valid\"],[[298,298],\"mapped\",[299]],[[299,299],\"valid\"],[[300,300],\"mapped\",[301]],[[301,301],\"valid\"],[[302,302],\"mapped\",[303]],[[303,303],\"valid\"],[[304,304],\"mapped\",[105,775]],[[305,305],\"valid\"],[[306,307],\"mapped\",[105,106]],[[308,308],\"mapped\",[309]],[[309,309],\"valid\"],[[310,310],\"mapped\",[311]],[[311,312],\"valid\"],[[313,313],\"mapped\",[314]],[[314,314],\"valid\"],[[315,315],\"mapped\",[316]],[[316,316],\"valid\"],[[317,317],\"mapped\",[318]],[[318,318],\"valid\"],[[319,320],\"mapped\",[108,183]],[[321,321],\"mapped\",[322]],[[322,322],\"valid\"],[[323,323],\"mapped\",[324]],[[324,324],\"valid\"],[[325,325],\"mapped\",[326]],[[326,326],\"valid\"],[[327,327],\"mapped\",[328]],[[328,328],\"valid\"],[[329,329],\"mapped\",[700,110]],[[330,330],\"mapped\",[331]],[[331,331],\"valid\"],[[332,332],\"mapped\",[333]],[[333,333],\"valid\"],[[334,334],\"mapped\",[335]],[[335,335],\"valid\"],[[336,336],\"mapped\",[337]],[[337,337],\"valid\"],[[338,338],\"mapped\",[339]],[[339,339],\"valid\"],[[340,340],\"mapped\",[341]],[[341,341],\"valid\"],[[342,342],\"mapped\",[343]],[[343,343],\"valid\"],[[344,344],\"mapped\",[345]],[[345,345],\"valid\"],[[346,346],\"mapped\",[347]],[[347,347],\"valid\"],[[348,348],\"mapped\",[349]],[[349,349],\"valid\"],[[350,350],\"mapped\",[351]],[[351,351],\"valid\"],[[352,352],\"mapped\",[353]],[[353,353],\"valid\"],[[354,354],\"mapped\",[355]],[[355,355],\"valid\"],[[356,356],\"mapped\",[357]],[[357,357],\"valid\"],[[358,358],\"mapped\",[359]],[[359,359],\"valid\"],[[360,360],\"mapped\",[361]],[[361,361],\"valid\"],[[362,362],\"mapped\",[363]],[[363,363],\"valid\"],[[364,364],\"mapped\",[365]],[[365,365],\"valid\"],[[366,366],\"mapped\",[367]],[[367,367],\"valid\"],[[368,368],\"mapped\",[369]],[[369,369],\"valid\"],[[370,370],\"mapped\",[371]],[[371,371],\"valid\"],[[372,372],\"mapped\",[373]],[[373,373],\"valid\"],[[374,374],\"mapped\",[375]],[[375,375],\"valid\"],[[376,376],\"mapped\",[255]],[[377,377],\"mapped\",[378]],[[378,378],\"valid\"],[[379,379],\"mapped\",[380]],[[380,380],\"valid\"],[[381,381],\"mapped\",[382]],[[382,382],\"valid\"],[[383,383],\"mapped\",[115]],[[384,384],\"valid\"],[[385,385],\"mapped\",[595]],[[386,386],\"mapped\",[387]],[[387,387],\"valid\"],[[388,388],\"mapped\",[389]],[[389,389],\"valid\"],[[390,390],\"mapped\",[596]],[[391,391],\"mapped\",[392]],[[392,392],\"valid\"],[[393,393],\"mapped\",[598]],[[394,394],\"mapped\",[599]],[[395,395],\"mapped\",[396]],[[396,397],\"valid\"],[[398,398],\"mapped\",[477]],[[399,399],\"mapped\",[601]],[[400,400],\"mapped\",[603]],[[401,401],\"mapped\",[402]],[[402,402],\"valid\"],[[403,403],\"mapped\",[608]],[[404,404],\"mapped\",[611]],[[405,405],\"valid\"],[[406,406],\"mapped\",[617]],[[407,407],\"mapped\",[616]],[[408,408],\"mapped\",[409]],[[409,411],\"valid\"],[[412,412],\"mapped\",[623]],[[413,413],\"mapped\",[626]],[[414,414],\"valid\"],[[415,415],\"mapped\",[629]],[[416,416],\"mapped\",[417]],[[417,417],\"valid\"],[[418,418],\"mapped\",[419]],[[419,419],\"valid\"],[[420,420],\"mapped\",[421]],[[421,421],\"valid\"],[[422,422],\"mapped\",[640]],[[423,423],\"mapped\",[424]],[[424,424],\"valid\"],[[425,425],\"mapped\",[643]],[[426,427],\"valid\"],[[428,428],\"mapped\",[429]],[[429,429],\"valid\"],[[430,430],\"mapped\",[648]],[[431,431],\"mapped\",[432]],[[432,432],\"valid\"],[[433,433],\"mapped\",[650]],[[434,434],\"mapped\",[651]],[[435,435],\"mapped\",[436]],[[436,436],\"valid\"],[[437,437],\"mapped\",[438]],[[438,438],\"valid\"],[[439,439],\"mapped\",[658]],[[440,440],\"mapped\",[441]],[[441,443],\"valid\"],[[444,444],\"mapped\",[445]],[[445,451],\"valid\"],[[452,454],\"mapped\",[100,382]],[[455,457],\"mapped\",[108,106]],[[458,460],\"mapped\",[110,106]],[[461,461],\"mapped\",[462]],[[462,462],\"valid\"],[[463,463],\"mapped\",[464]],[[464,464],\"valid\"],[[465,465],\"mapped\",[466]],[[466,466],\"valid\"],[[467,467],\"mapped\",[468]],[[468,468],\"valid\"],[[469,469],\"mapped\",[470]],[[470,470],\"valid\"],[[471,471],\"mapped\",[472]],[[472,472],\"valid\"],[[473,473],\"mapped\",[474]],[[474,474],\"valid\"],[[475,475],\"mapped\",[476]],[[476,477],\"valid\"],[[478,478],\"mapped\",[479]],[[479,479],\"valid\"],[[480,480],\"mapped\",[481]],[[481,481],\"valid\"],[[482,482],\"mapped\",[483]],[[483,483],\"valid\"],[[484,484],\"mapped\",[485]],[[485,485],\"valid\"],[[486,486],\"mapped\",[487]],[[487,487],\"valid\"],[[488,488],\"mapped\",[489]],[[489,489],\"valid\"],[[490,490],\"mapped\",[491]],[[491,491],\"valid\"],[[492,492],\"mapped\",[493]],[[493,493],\"valid\"],[[494,494],\"mapped\",[495]],[[495,496],\"valid\"],[[497,499],\"mapped\",[100,122]],[[500,500],\"mapped\",[501]],[[501,501],\"valid\"],[[502,502],\"mapped\",[405]],[[503,503],\"mapped\",[447]],[[504,504],\"mapped\",[505]],[[505,505],\"valid\"],[[506,506],\"mapped\",[507]],[[507,507],\"valid\"],[[508,508],\"mapped\",[509]],[[509,509],\"valid\"],[[510,510],\"mapped\",[511]],[[511,511],\"valid\"],[[512,512],\"mapped\",[513]],[[513,513],\"valid\"],[[514,514],\"mapped\",[515]],[[515,515],\"valid\"],[[516,516],\"mapped\",[517]],[[517,517],\"valid\"],[[518,518],\"mapped\",[519]],[[519,519],\"valid\"],[[520,520],\"mapped\",[521]],[[521,521],\"valid\"],[[522,522],\"mapped\",[523]],[[523,523],\"valid\"],[[524,524],\"mapped\",[525]],[[525,525],\"valid\"],[[526,526],\"mapped\",[527]],[[527,527],\"valid\"],[[528,528],\"mapped\",[529]],[[529,529],\"valid\"],[[530,530],\"mapped\",[531]],[[531,531],\"valid\"],[[532,532],\"mapped\",[533]],[[533,533],\"valid\"],[[534,534],\"mapped\",[535]],[[535,535],\"valid\"],[[536,536],\"mapped\",[537]],[[537,537],\"valid\"],[[538,538],\"mapped\",[539]],[[539,539],\"valid\"],[[540,540],\"mapped\",[541]],[[541,541],\"valid\"],[[542,542],\"mapped\",[543]],[[543,543],\"valid\"],[[544,544],\"mapped\",[414]],[[545,545],\"valid\"],[[546,546],\"mapped\",[547]],[[547,547],\"valid\"],[[548,548],\"mapped\",[549]],[[549,549],\"valid\"],[[550,550],\"mapped\",[551]],[[551,551],\"valid\"],[[552,552],\"mapped\",[553]],[[553,553],\"valid\"],[[554,554],\"mapped\",[555]],[[555,555],\"valid\"],[[556,556],\"mapped\",[557]],[[557,557],\"valid\"],[[558,558],\"mapped\",[559]],[[559,559],\"valid\"],[[560,560],\"mapped\",[561]],[[561,561],\"valid\"],[[562,562],\"mapped\",[563]],[[563,563],\"valid\"],[[564,566],\"valid\"],[[567,569],\"valid\"],[[570,570],\"mapped\",[11365]],[[571,571],\"mapped\",[572]],[[572,572],\"valid\"],[[573,573],\"mapped\",[410]],[[574,574],\"mapped\",[11366]],[[575,576],\"valid\"],[[577,577],\"mapped\",[578]],[[578,578],\"valid\"],[[579,579],\"mapped\",[384]],[[580,580],\"mapped\",[649]],[[581,581],\"mapped\",[652]],[[582,582],\"mapped\",[583]],[[583,583],\"valid\"],[[584,584],\"mapped\",[585]],[[585,585],\"valid\"],[[586,586],\"mapped\",[587]],[[587,587],\"valid\"],[[588,588],\"mapped\",[589]],[[589,589],\"valid\"],[[590,590],\"mapped\",[591]],[[591,591],\"valid\"],[[592,680],\"valid\"],[[681,685],\"valid\"],[[686,687],\"valid\"],[[688,688],\"mapped\",[104]],[[689,689],\"mapped\",[614]],[[690,690],\"mapped\",[106]],[[691,691],\"mapped\",[114]],[[692,692],\"mapped\",[633]],[[693,693],\"mapped\",[635]],[[694,694],\"mapped\",[641]],[[695,695],\"mapped\",[119]],[[696,696],\"mapped\",[121]],[[697,705],\"valid\"],[[706,709],\"valid\",[],\"NV8\"],[[710,721],\"valid\"],[[722,727],\"valid\",[],\"NV8\"],[[728,728],\"disallowed_STD3_mapped\",[32,774]],[[729,729],\"disallowed_STD3_mapped\",[32,775]],[[730,730],\"disallowed_STD3_mapped\",[32,778]],[[731,731],\"disallowed_STD3_mapped\",[32,808]],[[732,732],\"disallowed_STD3_mapped\",[32,771]],[[733,733],\"disallowed_STD3_mapped\",[32,779]],[[734,734],\"valid\",[],\"NV8\"],[[735,735],\"valid\",[],\"NV8\"],[[736,736],\"mapped\",[611]],[[737,737],\"mapped\",[108]],[[738,738],\"mapped\",[115]],[[739,739],\"mapped\",[120]],[[740,740],\"mapped\",[661]],[[741,745],\"valid\",[],\"NV8\"],[[746,747],\"valid\",[],\"NV8\"],[[748,748],\"valid\"],[[749,749],\"valid\",[],\"NV8\"],[[750,750],\"valid\"],[[751,767],\"valid\",[],\"NV8\"],[[768,831],\"valid\"],[[832,832],\"mapped\",[768]],[[833,833],\"mapped\",[769]],[[834,834],\"valid\"],[[835,835],\"mapped\",[787]],[[836,836],\"mapped\",[776,769]],[[837,837],\"mapped\",[953]],[[838,846],\"valid\"],[[847,847],\"ignored\"],[[848,855],\"valid\"],[[856,860],\"valid\"],[[861,863],\"valid\"],[[864,865],\"valid\"],[[866,866],\"valid\"],[[867,879],\"valid\"],[[880,880],\"mapped\",[881]],[[881,881],\"valid\"],[[882,882],\"mapped\",[883]],[[883,883],\"valid\"],[[884,884],\"mapped\",[697]],[[885,885],\"valid\"],[[886,886],\"mapped\",[887]],[[887,887],\"valid\"],[[888,889],\"disallowed\"],[[890,890],\"disallowed_STD3_mapped\",[32,953]],[[891,893],\"valid\"],[[894,894],\"disallowed_STD3_mapped\",[59]],[[895,895],\"mapped\",[1011]],[[896,899],\"disallowed\"],[[900,900],\"disallowed_STD3_mapped\",[32,769]],[[901,901],\"disallowed_STD3_mapped\",[32,776,769]],[[902,902],\"mapped\",[940]],[[903,903],\"mapped\",[183]],[[904,904],\"mapped\",[941]],[[905,905],\"mapped\",[942]],[[906,906],\"mapped\",[943]],[[907,907],\"disallowed\"],[[908,908],\"mapped\",[972]],[[909,909],\"disallowed\"],[[910,910],\"mapped\",[973]],[[911,911],\"mapped\",[974]],[[912,912],\"valid\"],[[913,913],\"mapped\",[945]],[[914,914],\"mapped\",[946]],[[915,915],\"mapped\",[947]],[[916,916],\"mapped\",[948]],[[917,917],\"mapped\",[949]],[[918,918],\"mapped\",[950]],[[919,919],\"mapped\",[951]],[[920,920],\"mapped\",[952]],[[921,921],\"mapped\",[953]],[[922,922],\"mapped\",[954]],[[923,923],\"mapped\",[955]],[[924,924],\"mapped\",[956]],[[925,925],\"mapped\",[957]],[[926,926],\"mapped\",[958]],[[927,927],\"mapped\",[959]],[[928,928],\"mapped\",[960]],[[929,929],\"mapped\",[961]],[[930,930],\"disallowed\"],[[931,931],\"mapped\",[963]],[[932,932],\"mapped\",[964]],[[933,933],\"mapped\",[965]],[[934,934],\"mapped\",[966]],[[935,935],\"mapped\",[967]],[[936,936],\"mapped\",[968]],[[937,937],\"mapped\",[969]],[[938,938],\"mapped\",[970]],[[939,939],\"mapped\",[971]],[[940,961],\"valid\"],[[962,962],\"deviation\",[963]],[[963,974],\"valid\"],[[975,975],\"mapped\",[983]],[[976,976],\"mapped\",[946]],[[977,977],\"mapped\",[952]],[[978,978],\"mapped\",[965]],[[979,979],\"mapped\",[973]],[[980,980],\"mapped\",[971]],[[981,981],\"mapped\",[966]],[[982,982],\"mapped\",[960]],[[983,983],\"valid\"],[[984,984],\"mapped\",[985]],[[985,985],\"valid\"],[[986,986],\"mapped\",[987]],[[987,987],\"valid\"],[[988,988],\"mapped\",[989]],[[989,989],\"valid\"],[[990,990],\"mapped\",[991]],[[991,991],\"valid\"],[[992,992],\"mapped\",[993]],[[993,993],\"valid\"],[[994,994],\"mapped\",[995]],[[995,995],\"valid\"],[[996,996],\"mapped\",[997]],[[997,997],\"valid\"],[[998,998],\"mapped\",[999]],[[999,999],\"valid\"],[[1000,1000],\"mapped\",[1001]],[[1001,1001],\"valid\"],[[1002,1002],\"mapped\",[1003]],[[1003,1003],\"valid\"],[[1004,1004],\"mapped\",[1005]],[[1005,1005],\"valid\"],[[1006,1006],\"mapped\",[1007]],[[1007,1007],\"valid\"],[[1008,1008],\"mapped\",[954]],[[1009,1009],\"mapped\",[961]],[[1010,1010],\"mapped\",[963]],[[1011,1011],\"valid\"],[[1012,1012],\"mapped\",[952]],[[1013,1013],\"mapped\",[949]],[[1014,1014],\"valid\",[],\"NV8\"],[[1015,1015],\"mapped\",[1016]],[[1016,1016],\"valid\"],[[1017,1017],\"mapped\",[963]],[[1018,1018],\"mapped\",[1019]],[[1019,1019],\"valid\"],[[1020,1020],\"valid\"],[[1021,1021],\"mapped\",[891]],[[1022,1022],\"mapped\",[892]],[[1023,1023],\"mapped\",[893]],[[1024,1024],\"mapped\",[1104]],[[1025,1025],\"mapped\",[1105]],[[1026,1026],\"mapped\",[1106]],[[1027,1027],\"mapped\",[1107]],[[1028,1028],\"mapped\",[1108]],[[1029,1029],\"mapped\",[1109]],[[1030,1030],\"mapped\",[1110]],[[1031,1031],\"mapped\",[1111]],[[1032,1032],\"mapped\",[1112]],[[1033,1033],\"mapped\",[1113]],[[1034,1034],\"mapped\",[1114]],[[1035,1035],\"mapped\",[1115]],[[1036,1036],\"mapped\",[1116]],[[1037,1037],\"mapped\",[1117]],[[1038,1038],\"mapped\",[1118]],[[1039,1039],\"mapped\",[1119]],[[1040,1040],\"mapped\",[1072]],[[1041,1041],\"mapped\",[1073]],[[1042,1042],\"mapped\",[1074]],[[1043,1043],\"mapped\",[1075]],[[1044,1044],\"mapped\",[1076]],[[1045,1045],\"mapped\",[1077]],[[1046,1046],\"mapped\",[1078]],[[1047,1047],\"mapped\",[1079]],[[1048,1048],\"mapped\",[1080]],[[1049,1049],\"mapped\",[1081]],[[1050,1050],\"mapped\",[1082]],[[1051,1051],\"mapped\",[1083]],[[1052,1052],\"mapped\",[1084]],[[1053,1053],\"mapped\",[1085]],[[1054,1054],\"mapped\",[1086]],[[1055,1055],\"mapped\",[1087]],[[1056,1056],\"mapped\",[1088]],[[1057,1057],\"mapped\",[1089]],[[1058,1058],\"mapped\",[1090]],[[1059,1059],\"mapped\",[1091]],[[1060,1060],\"mapped\",[1092]],[[1061,1061],\"mapped\",[1093]],[[1062,1062],\"mapped\",[1094]],[[1063,1063],\"mapped\",[1095]],[[1064,1064],\"mapped\",[1096]],[[1065,1065],\"mapped\",[1097]],[[1066,1066],\"mapped\",[1098]],[[1067,1067],\"mapped\",[1099]],[[1068,1068],\"mapped\",[1100]],[[1069,1069],\"mapped\",[1101]],[[1070,1070],\"mapped\",[1102]],[[1071,1071],\"mapped\",[1103]],[[1072,1103],\"valid\"],[[1104,1104],\"valid\"],[[1105,1116],\"valid\"],[[1117,1117],\"valid\"],[[1118,1119],\"valid\"],[[1120,1120],\"mapped\",[1121]],[[1121,1121],\"valid\"],[[1122,1122],\"mapped\",[1123]],[[1123,1123],\"valid\"],[[1124,1124],\"mapped\",[1125]],[[1125,1125],\"valid\"],[[1126,1126],\"mapped\",[1127]],[[1127,1127],\"valid\"],[[1128,1128],\"mapped\",[1129]],[[1129,1129],\"valid\"],[[1130,1130],\"mapped\",[1131]],[[1131,1131],\"valid\"],[[1132,1132],\"mapped\",[1133]],[[1133,1133],\"valid\"],[[1134,1134],\"mapped\",[1135]],[[1135,1135],\"valid\"],[[1136,1136],\"mapped\",[1137]],[[1137,1137],\"valid\"],[[1138,1138],\"mapped\",[1139]],[[1139,1139],\"valid\"],[[1140,1140],\"mapped\",[1141]],[[1141,1141],\"valid\"],[[1142,1142],\"mapped\",[1143]],[[1143,1143],\"valid\"],[[1144,1144],\"mapped\",[1145]],[[1145,1145],\"valid\"],[[1146,1146],\"mapped\",[1147]],[[1147,1147],\"valid\"],[[1148,1148],\"mapped\",[1149]],[[1149,1149],\"valid\"],[[1150,1150],\"mapped\",[1151]],[[1151,1151],\"valid\"],[[1152,1152],\"mapped\",[1153]],[[1153,1153],\"valid\"],[[1154,1154],\"valid\",[],\"NV8\"],[[1155,1158],\"valid\"],[[1159,1159],\"valid\"],[[1160,1161],\"valid\",[],\"NV8\"],[[1162,1162],\"mapped\",[1163]],[[1163,1163],\"valid\"],[[1164,1164],\"mapped\",[1165]],[[1165,1165],\"valid\"],[[1166,1166],\"mapped\",[1167]],[[1167,1167],\"valid\"],[[1168,1168],\"mapped\",[1169]],[[1169,1169],\"valid\"],[[1170,1170],\"mapped\",[1171]],[[1171,1171],\"valid\"],[[1172,1172],\"mapped\",[1173]],[[1173,1173],\"valid\"],[[1174,1174],\"mapped\",[1175]],[[1175,1175],\"valid\"],[[1176,1176],\"mapped\",[1177]],[[1177,1177],\"valid\"],[[1178,1178],\"mapped\",[1179]],[[1179,1179],\"valid\"],[[1180,1180],\"mapped\",[1181]],[[1181,1181],\"valid\"],[[1182,1182],\"mapped\",[1183]],[[1183,1183],\"valid\"],[[1184,1184],\"mapped\",[1185]],[[1185,1185],\"valid\"],[[1186,1186],\"mapped\",[1187]],[[1187,1187],\"valid\"],[[1188,1188],\"mapped\",[1189]],[[1189,1189],\"valid\"],[[1190,1190],\"mapped\",[1191]],[[1191,1191],\"valid\"],[[1192,1192],\"mapped\",[1193]],[[1193,1193],\"valid\"],[[1194,1194],\"mapped\",[1195]],[[1195,1195],\"valid\"],[[1196,1196],\"mapped\",[1197]],[[1197,1197],\"valid\"],[[1198,1198],\"mapped\",[1199]],[[1199,1199],\"valid\"],[[1200,1200],\"mapped\",[1201]],[[1201,1201],\"valid\"],[[1202,1202],\"mapped\",[1203]],[[1203,1203],\"valid\"],[[1204,1204],\"mapped\",[1205]],[[1205,1205],\"valid\"],[[1206,1206],\"mapped\",[1207]],[[1207,1207],\"valid\"],[[1208,1208],\"mapped\",[1209]],[[1209,1209],\"valid\"],[[1210,1210],\"mapped\",[1211]],[[1211,1211],\"valid\"],[[1212,1212],\"mapped\",[1213]],[[1213,1213],\"valid\"],[[1214,1214],\"mapped\",[1215]],[[1215,1215],\"valid\"],[[1216,1216],\"disallowed\"],[[1217,1217],\"mapped\",[1218]],[[1218,1218],\"valid\"],[[1219,1219],\"mapped\",[1220]],[[1220,1220],\"valid\"],[[1221,1221],\"mapped\",[1222]],[[1222,1222],\"valid\"],[[1223,1223],\"mapped\",[1224]],[[1224,1224],\"valid\"],[[1225,1225],\"mapped\",[1226]],[[1226,1226],\"valid\"],[[1227,1227],\"mapped\",[1228]],[[1228,1228],\"valid\"],[[1229,1229],\"mapped\",[1230]],[[1230,1230],\"valid\"],[[1231,1231],\"valid\"],[[1232,1232],\"mapped\",[1233]],[[1233,1233],\"valid\"],[[1234,1234],\"mapped\",[1235]],[[1235,1235],\"valid\"],[[1236,1236],\"mapped\",[1237]],[[1237,1237],\"valid\"],[[1238,1238],\"mapped\",[1239]],[[1239,1239],\"valid\"],[[1240,1240],\"mapped\",[1241]],[[1241,1241],\"valid\"],[[1242,1242],\"mapped\",[1243]],[[1243,1243],\"valid\"],[[1244,1244],\"mapped\",[1245]],[[1245,1245],\"valid\"],[[1246,1246],\"mapped\",[1247]],[[1247,1247],\"valid\"],[[1248,1248],\"mapped\",[1249]],[[1249,1249],\"valid\"],[[1250,1250],\"mapped\",[1251]],[[1251,1251],\"valid\"],[[1252,1252],\"mapped\",[1253]],[[1253,1253],\"valid\"],[[1254,1254],\"mapped\",[1255]],[[1255,1255],\"valid\"],[[1256,1256],\"mapped\",[1257]],[[1257,1257],\"valid\"],[[1258,1258],\"mapped\",[1259]],[[1259,1259],\"valid\"],[[1260,1260],\"mapped\",[1261]],[[1261,1261],\"valid\"],[[1262,1262],\"mapped\",[1263]],[[1263,1263],\"valid\"],[[1264,1264],\"mapped\",[1265]],[[1265,1265],\"valid\"],[[1266,1266],\"mapped\",[1267]],[[1267,1267],\"valid\"],[[1268,1268],\"mapped\",[1269]],[[1269,1269],\"valid\"],[[1270,1270],\"mapped\",[1271]],[[1271,1271],\"valid\"],[[1272,1272],\"mapped\",[1273]],[[1273,1273],\"valid\"],[[1274,1274],\"mapped\",[1275]],[[1275,1275],\"valid\"],[[1276,1276],\"mapped\",[1277]],[[1277,1277],\"valid\"],[[1278,1278],\"mapped\",[1279]],[[1279,1279],\"valid\"],[[1280,1280],\"mapped\",[1281]],[[1281,1281],\"valid\"],[[1282,1282],\"mapped\",[1283]],[[1283,1283],\"valid\"],[[1284,1284],\"mapped\",[1285]],[[1285,1285],\"valid\"],[[1286,1286],\"mapped\",[1287]],[[1287,1287],\"valid\"],[[1288,1288],\"mapped\",[1289]],[[1289,1289],\"valid\"],[[1290,1290],\"mapped\",[1291]],[[1291,1291],\"valid\"],[[1292,1292],\"mapped\",[1293]],[[1293,1293],\"valid\"],[[1294,1294],\"mapped\",[1295]],[[1295,1295],\"valid\"],[[1296,1296],\"mapped\",[1297]],[[1297,1297],\"valid\"],[[1298,1298],\"mapped\",[1299]],[[1299,1299],\"valid\"],[[1300,1300],\"mapped\",[1301]],[[1301,1301],\"valid\"],[[1302,1302],\"mapped\",[1303]],[[1303,1303],\"valid\"],[[1304,1304],\"mapped\",[1305]],[[1305,1305],\"valid\"],[[1306,1306],\"mapped\",[1307]],[[1307,1307],\"valid\"],[[1308,1308],\"mapped\",[1309]],[[1309,1309],\"valid\"],[[1310,1310],\"mapped\",[1311]],[[1311,1311],\"valid\"],[[1312,1312],\"mapped\",[1313]],[[1313,1313],\"valid\"],[[1314,1314],\"mapped\",[1315]],[[1315,1315],\"valid\"],[[1316,1316],\"mapped\",[1317]],[[1317,1317],\"valid\"],[[1318,1318],\"mapped\",[1319]],[[1319,1319],\"valid\"],[[1320,1320],\"mapped\",[1321]],[[1321,1321],\"valid\"],[[1322,1322],\"mapped\",[1323]],[[1323,1323],\"valid\"],[[1324,1324],\"mapped\",[1325]],[[1325,1325],\"valid\"],[[1326,1326],\"mapped\",[1327]],[[1327,1327],\"valid\"],[[1328,1328],\"disallowed\"],[[1329,1329],\"mapped\",[1377]],[[1330,1330],\"mapped\",[1378]],[[1331,1331],\"mapped\",[1379]],[[1332,1332],\"mapped\",[1380]],[[1333,1333],\"mapped\",[1381]],[[1334,1334],\"mapped\",[1382]],[[1335,1335],\"mapped\",[1383]],[[1336,1336],\"mapped\",[1384]],[[1337,1337],\"mapped\",[1385]],[[1338,1338],\"mapped\",[1386]],[[1339,1339],\"mapped\",[1387]],[[1340,1340],\"mapped\",[1388]],[[1341,1341],\"mapped\",[1389]],[[1342,1342],\"mapped\",[1390]],[[1343,1343],\"mapped\",[1391]],[[1344,1344],\"mapped\",[1392]],[[1345,1345],\"mapped\",[1393]],[[1346,1346],\"mapped\",[1394]],[[1347,1347],\"mapped\",[1395]],[[1348,1348],\"mapped\",[1396]],[[1349,1349],\"mapped\",[1397]],[[1350,1350],\"mapped\",[1398]],[[1351,1351],\"mapped\",[1399]],[[1352,1352],\"mapped\",[1400]],[[1353,1353],\"mapped\",[1401]],[[1354,1354],\"mapped\",[1402]],[[1355,1355],\"mapped\",[1403]],[[1356,1356],\"mapped\",[1404]],[[1357,1357],\"mapped\",[1405]],[[1358,1358],\"mapped\",[1406]],[[1359,1359],\"mapped\",[1407]],[[1360,1360],\"mapped\",[1408]],[[1361,1361],\"mapped\",[1409]],[[1362,1362],\"mapped\",[1410]],[[1363,1363],\"mapped\",[1411]],[[1364,1364],\"mapped\",[1412]],[[1365,1365],\"mapped\",[1413]],[[1366,1366],\"mapped\",[1414]],[[1367,1368],\"disallowed\"],[[1369,1369],\"valid\"],[[1370,1375],\"valid\",[],\"NV8\"],[[1376,1376],\"disallowed\"],[[1377,1414],\"valid\"],[[1415,1415],\"mapped\",[1381,1410]],[[1416,1416],\"disallowed\"],[[1417,1417],\"valid\",[],\"NV8\"],[[1418,1418],\"valid\",[],\"NV8\"],[[1419,1420],\"disallowed\"],[[1421,1422],\"valid\",[],\"NV8\"],[[1423,1423],\"valid\",[],\"NV8\"],[[1424,1424],\"disallowed\"],[[1425,1441],\"valid\"],[[1442,1442],\"valid\"],[[1443,1455],\"valid\"],[[1456,1465],\"valid\"],[[1466,1466],\"valid\"],[[1467,1469],\"valid\"],[[1470,1470],\"valid\",[],\"NV8\"],[[1471,1471],\"valid\"],[[1472,1472],\"valid\",[],\"NV8\"],[[1473,1474],\"valid\"],[[1475,1475],\"valid\",[],\"NV8\"],[[1476,1476],\"valid\"],[[1477,1477],\"valid\"],[[1478,1478],\"valid\",[],\"NV8\"],[[1479,1479],\"valid\"],[[1480,1487],\"disallowed\"],[[1488,1514],\"valid\"],[[1515,1519],\"disallowed\"],[[1520,1524],\"valid\"],[[1525,1535],\"disallowed\"],[[1536,1539],\"disallowed\"],[[1540,1540],\"disallowed\"],[[1541,1541],\"disallowed\"],[[1542,1546],\"valid\",[],\"NV8\"],[[1547,1547],\"valid\",[],\"NV8\"],[[1548,1548],\"valid\",[],\"NV8\"],[[1549,1551],\"valid\",[],\"NV8\"],[[1552,1557],\"valid\"],[[1558,1562],\"valid\"],[[1563,1563],\"valid\",[],\"NV8\"],[[1564,1564],\"disallowed\"],[[1565,1565],\"disallowed\"],[[1566,1566],\"valid\",[],\"NV8\"],[[1567,1567],\"valid\",[],\"NV8\"],[[1568,1568],\"valid\"],[[1569,1594],\"valid\"],[[1595,1599],\"valid\"],[[1600,1600],\"valid\",[],\"NV8\"],[[1601,1618],\"valid\"],[[1619,1621],\"valid\"],[[1622,1624],\"valid\"],[[1625,1630],\"valid\"],[[1631,1631],\"valid\"],[[1632,1641],\"valid\"],[[1642,1645],\"valid\",[],\"NV8\"],[[1646,1647],\"valid\"],[[1648,1652],\"valid\"],[[1653,1653],\"mapped\",[1575,1652]],[[1654,1654],\"mapped\",[1608,1652]],[[1655,1655],\"mapped\",[1735,1652]],[[1656,1656],\"mapped\",[1610,1652]],[[1657,1719],\"valid\"],[[1720,1721],\"valid\"],[[1722,1726],\"valid\"],[[1727,1727],\"valid\"],[[1728,1742],\"valid\"],[[1743,1743],\"valid\"],[[1744,1747],\"valid\"],[[1748,1748],\"valid\",[],\"NV8\"],[[1749,1756],\"valid\"],[[1757,1757],\"disallowed\"],[[1758,1758],\"valid\",[],\"NV8\"],[[1759,1768],\"valid\"],[[1769,1769],\"valid\",[],\"NV8\"],[[1770,1773],\"valid\"],[[1774,1775],\"valid\"],[[1776,1785],\"valid\"],[[1786,1790],\"valid\"],[[1791,1791],\"valid\"],[[1792,1805],\"valid\",[],\"NV8\"],[[1806,1806],\"disallowed\"],[[1807,1807],\"disallowed\"],[[1808,1836],\"valid\"],[[1837,1839],\"valid\"],[[1840,1866],\"valid\"],[[1867,1868],\"disallowed\"],[[1869,1871],\"valid\"],[[1872,1901],\"valid\"],[[1902,1919],\"valid\"],[[1920,1968],\"valid\"],[[1969,1969],\"valid\"],[[1970,1983],\"disallowed\"],[[1984,2037],\"valid\"],[[2038,2042],\"valid\",[],\"NV8\"],[[2043,2047],\"disallowed\"],[[2048,2093],\"valid\"],[[2094,2095],\"disallowed\"],[[2096,2110],\"valid\",[],\"NV8\"],[[2111,2111],\"disallowed\"],[[2112,2139],\"valid\"],[[2140,2141],\"disallowed\"],[[2142,2142],\"valid\",[],\"NV8\"],[[2143,2207],\"disallowed\"],[[2208,2208],\"valid\"],[[2209,2209],\"valid\"],[[2210,2220],\"valid\"],[[2221,2226],\"valid\"],[[2227,2228],\"valid\"],[[2229,2274],\"disallowed\"],[[2275,2275],\"valid\"],[[2276,2302],\"valid\"],[[2303,2303],\"valid\"],[[2304,2304],\"valid\"],[[2305,2307],\"valid\"],[[2308,2308],\"valid\"],[[2309,2361],\"valid\"],[[2362,2363],\"valid\"],[[2364,2381],\"valid\"],[[2382,2382],\"valid\"],[[2383,2383],\"valid\"],[[2384,2388],\"valid\"],[[2389,2389],\"valid\"],[[2390,2391],\"valid\"],[[2392,2392],\"mapped\",[2325,2364]],[[2393,2393],\"mapped\",[2326,2364]],[[2394,2394],\"mapped\",[2327,2364]],[[2395,2395],\"mapped\",[2332,2364]],[[2396,2396],\"mapped\",[2337,2364]],[[2397,2397],\"mapped\",[2338,2364]],[[2398,2398],\"mapped\",[2347,2364]],[[2399,2399],\"mapped\",[2351,2364]],[[2400,2403],\"valid\"],[[2404,2405],\"valid\",[],\"NV8\"],[[2406,2415],\"valid\"],[[2416,2416],\"valid\",[],\"NV8\"],[[2417,2418],\"valid\"],[[2419,2423],\"valid\"],[[2424,2424],\"valid\"],[[2425,2426],\"valid\"],[[2427,2428],\"valid\"],[[2429,2429],\"valid\"],[[2430,2431],\"valid\"],[[2432,2432],\"valid\"],[[2433,2435],\"valid\"],[[2436,2436],\"disallowed\"],[[2437,2444],\"valid\"],[[2445,2446],\"disallowed\"],[[2447,2448],\"valid\"],[[2449,2450],\"disallowed\"],[[2451,2472],\"valid\"],[[2473,2473],\"disallowed\"],[[2474,2480],\"valid\"],[[2481,2481],\"disallowed\"],[[2482,2482],\"valid\"],[[2483,2485],\"disallowed\"],[[2486,2489],\"valid\"],[[2490,2491],\"disallowed\"],[[2492,2492],\"valid\"],[[2493,2493],\"valid\"],[[2494,2500],\"valid\"],[[2501,2502],\"disallowed\"],[[2503,2504],\"valid\"],[[2505,2506],\"disallowed\"],[[2507,2509],\"valid\"],[[2510,2510],\"valid\"],[[2511,2518],\"disallowed\"],[[2519,2519],\"valid\"],[[2520,2523],\"disallowed\"],[[2524,2524],\"mapped\",[2465,2492]],[[2525,2525],\"mapped\",[2466,2492]],[[2526,2526],\"disallowed\"],[[2527,2527],\"mapped\",[2479,2492]],[[2528,2531],\"valid\"],[[2532,2533],\"disallowed\"],[[2534,2545],\"valid\"],[[2546,2554],\"valid\",[],\"NV8\"],[[2555,2555],\"valid\",[],\"NV8\"],[[2556,2560],\"disallowed\"],[[2561,2561],\"valid\"],[[2562,2562],\"valid\"],[[2563,2563],\"valid\"],[[2564,2564],\"disallowed\"],[[2565,2570],\"valid\"],[[2571,2574],\"disallowed\"],[[2575,2576],\"valid\"],[[2577,2578],\"disallowed\"],[[2579,2600],\"valid\"],[[2601,2601],\"disallowed\"],[[2602,2608],\"valid\"],[[2609,2609],\"disallowed\"],[[2610,2610],\"valid\"],[[2611,2611],\"mapped\",[2610,2620]],[[2612,2612],\"disallowed\"],[[2613,2613],\"valid\"],[[2614,2614],\"mapped\",[2616,2620]],[[2615,2615],\"disallowed\"],[[2616,2617],\"valid\"],[[2618,2619],\"disallowed\"],[[2620,2620],\"valid\"],[[2621,2621],\"disallowed\"],[[2622,2626],\"valid\"],[[2627,2630],\"disallowed\"],[[2631,2632],\"valid\"],[[2633,2634],\"disallowed\"],[[2635,2637],\"valid\"],[[2638,2640],\"disallowed\"],[[2641,2641],\"valid\"],[[2642,2648],\"disallowed\"],[[2649,2649],\"mapped\",[2582,2620]],[[2650,2650],\"mapped\",[2583,2620]],[[2651,2651],\"mapped\",[2588,2620]],[[2652,2652],\"valid\"],[[2653,2653],\"disallowed\"],[[2654,2654],\"mapped\",[2603,2620]],[[2655,2661],\"disallowed\"],[[2662,2676],\"valid\"],[[2677,2677],\"valid\"],[[2678,2688],\"disallowed\"],[[2689,2691],\"valid\"],[[2692,2692],\"disallowed\"],[[2693,2699],\"valid\"],[[2700,2700],\"valid\"],[[2701,2701],\"valid\"],[[2702,2702],\"disallowed\"],[[2703,2705],\"valid\"],[[2706,2706],\"disallowed\"],[[2707,2728],\"valid\"],[[2729,2729],\"disallowed\"],[[2730,2736],\"valid\"],[[2737,2737],\"disallowed\"],[[2738,2739],\"valid\"],[[2740,2740],\"disallowed\"],[[2741,2745],\"valid\"],[[2746,2747],\"disallowed\"],[[2748,2757],\"valid\"],[[2758,2758],\"disallowed\"],[[2759,2761],\"valid\"],[[2762,2762],\"disallowed\"],[[2763,2765],\"valid\"],[[2766,2767],\"disallowed\"],[[2768,2768],\"valid\"],[[2769,2783],\"disallowed\"],[[2784,2784],\"valid\"],[[2785,2787],\"valid\"],[[2788,2789],\"disallowed\"],[[2790,2799],\"valid\"],[[2800,2800],\"valid\",[],\"NV8\"],[[2801,2801],\"valid\",[],\"NV8\"],[[2802,2808],\"disallowed\"],[[2809,2809],\"valid\"],[[2810,2816],\"disallowed\"],[[2817,2819],\"valid\"],[[2820,2820],\"disallowed\"],[[2821,2828],\"valid\"],[[2829,2830],\"disallowed\"],[[2831,2832],\"valid\"],[[2833,2834],\"disallowed\"],[[2835,2856],\"valid\"],[[2857,2857],\"disallowed\"],[[2858,2864],\"valid\"],[[2865,2865],\"disallowed\"],[[2866,2867],\"valid\"],[[2868,2868],\"disallowed\"],[[2869,2869],\"valid\"],[[2870,2873],\"valid\"],[[2874,2875],\"disallowed\"],[[2876,2883],\"valid\"],[[2884,2884],\"valid\"],[[2885,2886],\"disallowed\"],[[2887,2888],\"valid\"],[[2889,2890],\"disallowed\"],[[2891,2893],\"valid\"],[[2894,2901],\"disallowed\"],[[2902,2903],\"valid\"],[[2904,2907],\"disallowed\"],[[2908,2908],\"mapped\",[2849,2876]],[[2909,2909],\"mapped\",[2850,2876]],[[2910,2910],\"disallowed\"],[[2911,2913],\"valid\"],[[2914,2915],\"valid\"],[[2916,2917],\"disallowed\"],[[2918,2927],\"valid\"],[[2928,2928],\"valid\",[],\"NV8\"],[[2929,2929],\"valid\"],[[2930,2935],\"valid\",[],\"NV8\"],[[2936,2945],\"disallowed\"],[[2946,2947],\"valid\"],[[2948,2948],\"disallowed\"],[[2949,2954],\"valid\"],[[2955,2957],\"disallowed\"],[[2958,2960],\"valid\"],[[2961,2961],\"disallowed\"],[[2962,2965],\"valid\"],[[2966,2968],\"disallowed\"],[[2969,2970],\"valid\"],[[2971,2971],\"disallowed\"],[[2972,2972],\"valid\"],[[2973,2973],\"disallowed\"],[[2974,2975],\"valid\"],[[2976,2978],\"disallowed\"],[[2979,2980],\"valid\"],[[2981,2983],\"disallowed\"],[[2984,2986],\"valid\"],[[2987,2989],\"disallowed\"],[[2990,2997],\"valid\"],[[2998,2998],\"valid\"],[[2999,3001],\"valid\"],[[3002,3005],\"disallowed\"],[[3006,3010],\"valid\"],[[3011,3013],\"disallowed\"],[[3014,3016],\"valid\"],[[3017,3017],\"disallowed\"],[[3018,3021],\"valid\"],[[3022,3023],\"disallowed\"],[[3024,3024],\"valid\"],[[3025,3030],\"disallowed\"],[[3031,3031],\"valid\"],[[3032,3045],\"disallowed\"],[[3046,3046],\"valid\"],[[3047,3055],\"valid\"],[[3056,3058],\"valid\",[],\"NV8\"],[[3059,3066],\"valid\",[],\"NV8\"],[[3067,3071],\"disallowed\"],[[3072,3072],\"valid\"],[[3073,3075],\"valid\"],[[3076,3076],\"disallowed\"],[[3077,3084],\"valid\"],[[3085,3085],\"disallowed\"],[[3086,3088],\"valid\"],[[3089,3089],\"disallowed\"],[[3090,3112],\"valid\"],[[3113,3113],\"disallowed\"],[[3114,3123],\"valid\"],[[3124,3124],\"valid\"],[[3125,3129],\"valid\"],[[3130,3132],\"disallowed\"],[[3133,3133],\"valid\"],[[3134,3140],\"valid\"],[[3141,3141],\"disallowed\"],[[3142,3144],\"valid\"],[[3145,3145],\"disallowed\"],[[3146,3149],\"valid\"],[[3150,3156],\"disallowed\"],[[3157,3158],\"valid\"],[[3159,3159],\"disallowed\"],[[3160,3161],\"valid\"],[[3162,3162],\"valid\"],[[3163,3167],\"disallowed\"],[[3168,3169],\"valid\"],[[3170,3171],\"valid\"],[[3172,3173],\"disallowed\"],[[3174,3183],\"valid\"],[[3184,3191],\"disallowed\"],[[3192,3199],\"valid\",[],\"NV8\"],[[3200,3200],\"disallowed\"],[[3201,3201],\"valid\"],[[3202,3203],\"valid\"],[[3204,3204],\"disallowed\"],[[3205,3212],\"valid\"],[[3213,3213],\"disallowed\"],[[3214,3216],\"valid\"],[[3217,3217],\"disallowed\"],[[3218,3240],\"valid\"],[[3241,3241],\"disallowed\"],[[3242,3251],\"valid\"],[[3252,3252],\"disallowed\"],[[3253,3257],\"valid\"],[[3258,3259],\"disallowed\"],[[3260,3261],\"valid\"],[[3262,3268],\"valid\"],[[3269,3269],\"disallowed\"],[[3270,3272],\"valid\"],[[3273,3273],\"disallowed\"],[[3274,3277],\"valid\"],[[3278,3284],\"disallowed\"],[[3285,3286],\"valid\"],[[3287,3293],\"disallowed\"],[[3294,3294],\"valid\"],[[3295,3295],\"disallowed\"],[[3296,3297],\"valid\"],[[3298,3299],\"valid\"],[[3300,3301],\"disallowed\"],[[3302,3311],\"valid\"],[[3312,3312],\"disallowed\"],[[3313,3314],\"valid\"],[[3315,3328],\"disallowed\"],[[3329,3329],\"valid\"],[[3330,3331],\"valid\"],[[3332,3332],\"disallowed\"],[[3333,3340],\"valid\"],[[3341,3341],\"disallowed\"],[[3342,3344],\"valid\"],[[3345,3345],\"disallowed\"],[[3346,3368],\"valid\"],[[3369,3369],\"valid\"],[[3370,3385],\"valid\"],[[3386,3386],\"valid\"],[[3387,3388],\"disallowed\"],[[3389,3389],\"valid\"],[[3390,3395],\"valid\"],[[3396,3396],\"valid\"],[[3397,3397],\"disallowed\"],[[3398,3400],\"valid\"],[[3401,3401],\"disallowed\"],[[3402,3405],\"valid\"],[[3406,3406],\"valid\"],[[3407,3414],\"disallowed\"],[[3415,3415],\"valid\"],[[3416,3422],\"disallowed\"],[[3423,3423],\"valid\"],[[3424,3425],\"valid\"],[[3426,3427],\"valid\"],[[3428,3429],\"disallowed\"],[[3430,3439],\"valid\"],[[3440,3445],\"valid\",[],\"NV8\"],[[3446,3448],\"disallowed\"],[[3449,3449],\"valid\",[],\"NV8\"],[[3450,3455],\"valid\"],[[3456,3457],\"disallowed\"],[[3458,3459],\"valid\"],[[3460,3460],\"disallowed\"],[[3461,3478],\"valid\"],[[3479,3481],\"disallowed\"],[[3482,3505],\"valid\"],[[3506,3506],\"disallowed\"],[[3507,3515],\"valid\"],[[3516,3516],\"disallowed\"],[[3517,3517],\"valid\"],[[3518,3519],\"disallowed\"],[[3520,3526],\"valid\"],[[3527,3529],\"disallowed\"],[[3530,3530],\"valid\"],[[3531,3534],\"disallowed\"],[[3535,3540],\"valid\"],[[3541,3541],\"disallowed\"],[[3542,3542],\"valid\"],[[3543,3543],\"disallowed\"],[[3544,3551],\"valid\"],[[3552,3557],\"disallowed\"],[[3558,3567],\"valid\"],[[3568,3569],\"disallowed\"],[[3570,3571],\"valid\"],[[3572,3572],\"valid\",[],\"NV8\"],[[3573,3584],\"disallowed\"],[[3585,3634],\"valid\"],[[3635,3635],\"mapped\",[3661,3634]],[[3636,3642],\"valid\"],[[3643,3646],\"disallowed\"],[[3647,3647],\"valid\",[],\"NV8\"],[[3648,3662],\"valid\"],[[3663,3663],\"valid\",[],\"NV8\"],[[3664,3673],\"valid\"],[[3674,3675],\"valid\",[],\"NV8\"],[[3676,3712],\"disallowed\"],[[3713,3714],\"valid\"],[[3715,3715],\"disallowed\"],[[3716,3716],\"valid\"],[[3717,3718],\"disallowed\"],[[3719,3720],\"valid\"],[[3721,3721],\"disallowed\"],[[3722,3722],\"valid\"],[[3723,3724],\"disallowed\"],[[3725,3725],\"valid\"],[[3726,3731],\"disallowed\"],[[3732,3735],\"valid\"],[[3736,3736],\"disallowed\"],[[3737,3743],\"valid\"],[[3744,3744],\"disallowed\"],[[3745,3747],\"valid\"],[[3748,3748],\"disallowed\"],[[3749,3749],\"valid\"],[[3750,3750],\"disallowed\"],[[3751,3751],\"valid\"],[[3752,3753],\"disallowed\"],[[3754,3755],\"valid\"],[[3756,3756],\"disallowed\"],[[3757,3762],\"valid\"],[[3763,3763],\"mapped\",[3789,3762]],[[3764,3769],\"valid\"],[[3770,3770],\"disallowed\"],[[3771,3773],\"valid\"],[[3774,3775],\"disallowed\"],[[3776,3780],\"valid\"],[[3781,3781],\"disallowed\"],[[3782,3782],\"valid\"],[[3783,3783],\"disallowed\"],[[3784,3789],\"valid\"],[[3790,3791],\"disallowed\"],[[3792,3801],\"valid\"],[[3802,3803],\"disallowed\"],[[3804,3804],\"mapped\",[3755,3737]],[[3805,3805],\"mapped\",[3755,3745]],[[3806,3807],\"valid\"],[[3808,3839],\"disallowed\"],[[3840,3840],\"valid\"],[[3841,3850],\"valid\",[],\"NV8\"],[[3851,3851],\"valid\"],[[3852,3852],\"mapped\",[3851]],[[3853,3863],\"valid\",[],\"NV8\"],[[3864,3865],\"valid\"],[[3866,3871],\"valid\",[],\"NV8\"],[[3872,3881],\"valid\"],[[3882,3892],\"valid\",[],\"NV8\"],[[3893,3893],\"valid\"],[[3894,3894],\"valid\",[],\"NV8\"],[[3895,3895],\"valid\"],[[3896,3896],\"valid\",[],\"NV8\"],[[3897,3897],\"valid\"],[[3898,3901],\"valid\",[],\"NV8\"],[[3902,3906],\"valid\"],[[3907,3907],\"mapped\",[3906,4023]],[[3908,3911],\"valid\"],[[3912,3912],\"disallowed\"],[[3913,3916],\"valid\"],[[3917,3917],\"mapped\",[3916,4023]],[[3918,3921],\"valid\"],[[3922,3922],\"mapped\",[3921,4023]],[[3923,3926],\"valid\"],[[3927,3927],\"mapped\",[3926,4023]],[[3928,3931],\"valid\"],[[3932,3932],\"mapped\",[3931,4023]],[[3933,3944],\"valid\"],[[3945,3945],\"mapped\",[3904,4021]],[[3946,3946],\"valid\"],[[3947,3948],\"valid\"],[[3949,3952],\"disallowed\"],[[3953,3954],\"valid\"],[[3955,3955],\"mapped\",[3953,3954]],[[3956,3956],\"valid\"],[[3957,3957],\"mapped\",[3953,3956]],[[3958,3958],\"mapped\",[4018,3968]],[[3959,3959],\"mapped\",[4018,3953,3968]],[[3960,3960],\"mapped\",[4019,3968]],[[3961,3961],\"mapped\",[4019,3953,3968]],[[3962,3968],\"valid\"],[[3969,3969],\"mapped\",[3953,3968]],[[3970,3972],\"valid\"],[[3973,3973],\"valid\",[],\"NV8\"],[[3974,3979],\"valid\"],[[3980,3983],\"valid\"],[[3984,3986],\"valid\"],[[3987,3987],\"mapped\",[3986,4023]],[[3988,3989],\"valid\"],[[3990,3990],\"valid\"],[[3991,3991],\"valid\"],[[3992,3992],\"disallowed\"],[[3993,3996],\"valid\"],[[3997,3997],\"mapped\",[3996,4023]],[[3998,4001],\"valid\"],[[4002,4002],\"mapped\",[4001,4023]],[[4003,4006],\"valid\"],[[4007,4007],\"mapped\",[4006,4023]],[[4008,4011],\"valid\"],[[4012,4012],\"mapped\",[4011,4023]],[[4013,4013],\"valid\"],[[4014,4016],\"valid\"],[[4017,4023],\"valid\"],[[4024,4024],\"valid\"],[[4025,4025],\"mapped\",[3984,4021]],[[4026,4028],\"valid\"],[[4029,4029],\"disallowed\"],[[4030,4037],\"valid\",[],\"NV8\"],[[4038,4038],\"valid\"],[[4039,4044],\"valid\",[],\"NV8\"],[[4045,4045],\"disallowed\"],[[4046,4046],\"valid\",[],\"NV8\"],[[4047,4047],\"valid\",[],\"NV8\"],[[4048,4049],\"valid\",[],\"NV8\"],[[4050,4052],\"valid\",[],\"NV8\"],[[4053,4056],\"valid\",[],\"NV8\"],[[4057,4058],\"valid\",[],\"NV8\"],[[4059,4095],\"disallowed\"],[[4096,4129],\"valid\"],[[4130,4130],\"valid\"],[[4131,4135],\"valid\"],[[4136,4136],\"valid\"],[[4137,4138],\"valid\"],[[4139,4139],\"valid\"],[[4140,4146],\"valid\"],[[4147,4149],\"valid\"],[[4150,4153],\"valid\"],[[4154,4159],\"valid\"],[[4160,4169],\"valid\"],[[4170,4175],\"valid\",[],\"NV8\"],[[4176,4185],\"valid\"],[[4186,4249],\"valid\"],[[4250,4253],\"valid\"],[[4254,4255],\"valid\",[],\"NV8\"],[[4256,4293],\"disallowed\"],[[4294,4294],\"disallowed\"],[[4295,4295],\"mapped\",[11559]],[[4296,4300],\"disallowed\"],[[4301,4301],\"mapped\",[11565]],[[4302,4303],\"disallowed\"],[[4304,4342],\"valid\"],[[4343,4344],\"valid\"],[[4345,4346],\"valid\"],[[4347,4347],\"valid\",[],\"NV8\"],[[4348,4348],\"mapped\",[4316]],[[4349,4351],\"valid\"],[[4352,4441],\"valid\",[],\"NV8\"],[[4442,4446],\"valid\",[],\"NV8\"],[[4447,4448],\"disallowed\"],[[4449,4514],\"valid\",[],\"NV8\"],[[4515,4519],\"valid\",[],\"NV8\"],[[4520,4601],\"valid\",[],\"NV8\"],[[4602,4607],\"valid\",[],\"NV8\"],[[4608,4614],\"valid\"],[[4615,4615],\"valid\"],[[4616,4678],\"valid\"],[[4679,4679],\"valid\"],[[4680,4680],\"valid\"],[[4681,4681],\"disallowed\"],[[4682,4685],\"valid\"],[[4686,4687],\"disallowed\"],[[4688,4694],\"valid\"],[[4695,4695],\"disallowed\"],[[4696,4696],\"valid\"],[[4697,4697],\"disallowed\"],[[4698,4701],\"valid\"],[[4702,4703],\"disallowed\"],[[4704,4742],\"valid\"],[[4743,4743],\"valid\"],[[4744,4744],\"valid\"],[[4745,4745],\"disallowed\"],[[4746,4749],\"valid\"],[[4750,4751],\"disallowed\"],[[4752,4782],\"valid\"],[[4783,4783],\"valid\"],[[4784,4784],\"valid\"],[[4785,4785],\"disallowed\"],[[4786,4789],\"valid\"],[[4790,4791],\"disallowed\"],[[4792,4798],\"valid\"],[[4799,4799],\"disallowed\"],[[4800,4800],\"valid\"],[[4801,4801],\"disallowed\"],[[4802,4805],\"valid\"],[[4806,4807],\"disallowed\"],[[4808,4814],\"valid\"],[[4815,4815],\"valid\"],[[4816,4822],\"valid\"],[[4823,4823],\"disallowed\"],[[4824,4846],\"valid\"],[[4847,4847],\"valid\"],[[4848,4878],\"valid\"],[[4879,4879],\"valid\"],[[4880,4880],\"valid\"],[[4881,4881],\"disallowed\"],[[4882,4885],\"valid\"],[[4886,4887],\"disallowed\"],[[4888,4894],\"valid\"],[[4895,4895],\"valid\"],[[4896,4934],\"valid\"],[[4935,4935],\"valid\"],[[4936,4954],\"valid\"],[[4955,4956],\"disallowed\"],[[4957,4958],\"valid\"],[[4959,4959],\"valid\"],[[4960,4960],\"valid\",[],\"NV8\"],[[4961,4988],\"valid\",[],\"NV8\"],[[4989,4991],\"disallowed\"],[[4992,5007],\"valid\"],[[5008,5017],\"valid\",[],\"NV8\"],[[5018,5023],\"disallowed\"],[[5024,5108],\"valid\"],[[5109,5109],\"valid\"],[[5110,5111],\"disallowed\"],[[5112,5112],\"mapped\",[5104]],[[5113,5113],\"mapped\",[5105]],[[5114,5114],\"mapped\",[5106]],[[5115,5115],\"mapped\",[5107]],[[5116,5116],\"mapped\",[5108]],[[5117,5117],\"mapped\",[5109]],[[5118,5119],\"disallowed\"],[[5120,5120],\"valid\",[],\"NV8\"],[[5121,5740],\"valid\"],[[5741,5742],\"valid\",[],\"NV8\"],[[5743,5750],\"valid\"],[[5751,5759],\"valid\"],[[5760,5760],\"disallowed\"],[[5761,5786],\"valid\"],[[5787,5788],\"valid\",[],\"NV8\"],[[5789,5791],\"disallowed\"],[[5792,5866],\"valid\"],[[5867,5872],\"valid\",[],\"NV8\"],[[5873,5880],\"valid\"],[[5881,5887],\"disallowed\"],[[5888,5900],\"valid\"],[[5901,5901],\"disallowed\"],[[5902,5908],\"valid\"],[[5909,5919],\"disallowed\"],[[5920,5940],\"valid\"],[[5941,5942],\"valid\",[],\"NV8\"],[[5943,5951],\"disallowed\"],[[5952,5971],\"valid\"],[[5972,5983],\"disallowed\"],[[5984,5996],\"valid\"],[[5997,5997],\"disallowed\"],[[5998,6000],\"valid\"],[[6001,6001],\"disallowed\"],[[6002,6003],\"valid\"],[[6004,6015],\"disallowed\"],[[6016,6067],\"valid\"],[[6068,6069],\"disallowed\"],[[6070,6099],\"valid\"],[[6100,6102],\"valid\",[],\"NV8\"],[[6103,6103],\"valid\"],[[6104,6107],\"valid\",[],\"NV8\"],[[6108,6108],\"valid\"],[[6109,6109],\"valid\"],[[6110,6111],\"disallowed\"],[[6112,6121],\"valid\"],[[6122,6127],\"disallowed\"],[[6128,6137],\"valid\",[],\"NV8\"],[[6138,6143],\"disallowed\"],[[6144,6149],\"valid\",[],\"NV8\"],[[6150,6150],\"disallowed\"],[[6151,6154],\"valid\",[],\"NV8\"],[[6155,6157],\"ignored\"],[[6158,6158],\"disallowed\"],[[6159,6159],\"disallowed\"],[[6160,6169],\"valid\"],[[6170,6175],\"disallowed\"],[[6176,6263],\"valid\"],[[6264,6271],\"disallowed\"],[[6272,6313],\"valid\"],[[6314,6314],\"valid\"],[[6315,6319],\"disallowed\"],[[6320,6389],\"valid\"],[[6390,6399],\"disallowed\"],[[6400,6428],\"valid\"],[[6429,6430],\"valid\"],[[6431,6431],\"disallowed\"],[[6432,6443],\"valid\"],[[6444,6447],\"disallowed\"],[[6448,6459],\"valid\"],[[6460,6463],\"disallowed\"],[[6464,6464],\"valid\",[],\"NV8\"],[[6465,6467],\"disallowed\"],[[6468,6469],\"valid\",[],\"NV8\"],[[6470,6509],\"valid\"],[[6510,6511],\"disallowed\"],[[6512,6516],\"valid\"],[[6517,6527],\"disallowed\"],[[6528,6569],\"valid\"],[[6570,6571],\"valid\"],[[6572,6575],\"disallowed\"],[[6576,6601],\"valid\"],[[6602,6607],\"disallowed\"],[[6608,6617],\"valid\"],[[6618,6618],\"valid\",[],\"XV8\"],[[6619,6621],\"disallowed\"],[[6622,6623],\"valid\",[],\"NV8\"],[[6624,6655],\"valid\",[],\"NV8\"],[[6656,6683],\"valid\"],[[6684,6685],\"disallowed\"],[[6686,6687],\"valid\",[],\"NV8\"],[[6688,6750],\"valid\"],[[6751,6751],\"disallowed\"],[[6752,6780],\"valid\"],[[6781,6782],\"disallowed\"],[[6783,6793],\"valid\"],[[6794,6799],\"disallowed\"],[[6800,6809],\"valid\"],[[6810,6815],\"disallowed\"],[[6816,6822],\"valid\",[],\"NV8\"],[[6823,6823],\"valid\"],[[6824,6829],\"valid\",[],\"NV8\"],[[6830,6831],\"disallowed\"],[[6832,6845],\"valid\"],[[6846,6846],\"valid\",[],\"NV8\"],[[6847,6911],\"disallowed\"],[[6912,6987],\"valid\"],[[6988,6991],\"disallowed\"],[[6992,7001],\"valid\"],[[7002,7018],\"valid\",[],\"NV8\"],[[7019,7027],\"valid\"],[[7028,7036],\"valid\",[],\"NV8\"],[[7037,7039],\"disallowed\"],[[7040,7082],\"valid\"],[[7083,7085],\"valid\"],[[7086,7097],\"valid\"],[[7098,7103],\"valid\"],[[7104,7155],\"valid\"],[[7156,7163],\"disallowed\"],[[7164,7167],\"valid\",[],\"NV8\"],[[7168,7223],\"valid\"],[[7224,7226],\"disallowed\"],[[7227,7231],\"valid\",[],\"NV8\"],[[7232,7241],\"valid\"],[[7242,7244],\"disallowed\"],[[7245,7293],\"valid\"],[[7294,7295],\"valid\",[],\"NV8\"],[[7296,7359],\"disallowed\"],[[7360,7367],\"valid\",[],\"NV8\"],[[7368,7375],\"disallowed\"],[[7376,7378],\"valid\"],[[7379,7379],\"valid\",[],\"NV8\"],[[7380,7410],\"valid\"],[[7411,7414],\"valid\"],[[7415,7415],\"disallowed\"],[[7416,7417],\"valid\"],[[7418,7423],\"disallowed\"],[[7424,7467],\"valid\"],[[7468,7468],\"mapped\",[97]],[[7469,7469],\"mapped\",[230]],[[7470,7470],\"mapped\",[98]],[[7471,7471],\"valid\"],[[7472,7472],\"mapped\",[100]],[[7473,7473],\"mapped\",[101]],[[7474,7474],\"mapped\",[477]],[[7475,7475],\"mapped\",[103]],[[7476,7476],\"mapped\",[104]],[[7477,7477],\"mapped\",[105]],[[7478,7478],\"mapped\",[106]],[[7479,7479],\"mapped\",[107]],[[7480,7480],\"mapped\",[108]],[[7481,7481],\"mapped\",[109]],[[7482,7482],\"mapped\",[110]],[[7483,7483],\"valid\"],[[7484,7484],\"mapped\",[111]],[[7485,7485],\"mapped\",[547]],[[7486,7486],\"mapped\",[112]],[[7487,7487],\"mapped\",[114]],[[7488,7488],\"mapped\",[116]],[[7489,7489],\"mapped\",[117]],[[7490,7490],\"mapped\",[119]],[[7491,7491],\"mapped\",[97]],[[7492,7492],\"mapped\",[592]],[[7493,7493],\"mapped\",[593]],[[7494,7494],\"mapped\",[7426]],[[7495,7495],\"mapped\",[98]],[[7496,7496],\"mapped\",[100]],[[7497,7497],\"mapped\",[101]],[[7498,7498],\"mapped\",[601]],[[7499,7499],\"mapped\",[603]],[[7500,7500],\"mapped\",[604]],[[7501,7501],\"mapped\",[103]],[[7502,7502],\"valid\"],[[7503,7503],\"mapped\",[107]],[[7504,7504],\"mapped\",[109]],[[7505,7505],\"mapped\",[331]],[[7506,7506],\"mapped\",[111]],[[7507,7507],\"mapped\",[596]],[[7508,7508],\"mapped\",[7446]],[[7509,7509],\"mapped\",[7447]],[[7510,7510],\"mapped\",[112]],[[7511,7511],\"mapped\",[116]],[[7512,7512],\"mapped\",[117]],[[7513,7513],\"mapped\",[7453]],[[7514,7514],\"mapped\",[623]],[[7515,7515],\"mapped\",[118]],[[7516,7516],\"mapped\",[7461]],[[7517,7517],\"mapped\",[946]],[[7518,7518],\"mapped\",[947]],[[7519,7519],\"mapped\",[948]],[[7520,7520],\"mapped\",[966]],[[7521,7521],\"mapped\",[967]],[[7522,7522],\"mapped\",[105]],[[7523,7523],\"mapped\",[114]],[[7524,7524],\"mapped\",[117]],[[7525,7525],\"mapped\",[118]],[[7526,7526],\"mapped\",[946]],[[7527,7527],\"mapped\",[947]],[[7528,7528],\"mapped\",[961]],[[7529,7529],\"mapped\",[966]],[[7530,7530],\"mapped\",[967]],[[7531,7531],\"valid\"],[[7532,7543],\"valid\"],[[7544,7544],\"mapped\",[1085]],[[7545,7578],\"valid\"],[[7579,7579],\"mapped\",[594]],[[7580,7580],\"mapped\",[99]],[[7581,7581],\"mapped\",[597]],[[7582,7582],\"mapped\",[240]],[[7583,7583],\"mapped\",[604]],[[7584,7584],\"mapped\",[102]],[[7585,7585],\"mapped\",[607]],[[7586,7586],\"mapped\",[609]],[[7587,7587],\"mapped\",[613]],[[7588,7588],\"mapped\",[616]],[[7589,7589],\"mapped\",[617]],[[7590,7590],\"mapped\",[618]],[[7591,7591],\"mapped\",[7547]],[[7592,7592],\"mapped\",[669]],[[7593,7593],\"mapped\",[621]],[[7594,7594],\"mapped\",[7557]],[[7595,7595],\"mapped\",[671]],[[7596,7596],\"mapped\",[625]],[[7597,7597],\"mapped\",[624]],[[7598,7598],\"mapped\",[626]],[[7599,7599],\"mapped\",[627]],[[7600,7600],\"mapped\",[628]],[[7601,7601],\"mapped\",[629]],[[7602,7602],\"mapped\",[632]],[[7603,7603],\"mapped\",[642]],[[7604,7604],\"mapped\",[643]],[[7605,7605],\"mapped\",[427]],[[7606,7606],\"mapped\",[649]],[[7607,7607],\"mapped\",[650]],[[7608,7608],\"mapped\",[7452]],[[7609,7609],\"mapped\",[651]],[[7610,7610],\"mapped\",[652]],[[7611,7611],\"mapped\",[122]],[[7612,7612],\"mapped\",[656]],[[7613,7613],\"mapped\",[657]],[[7614,7614],\"mapped\",[658]],[[7615,7615],\"mapped\",[952]],[[7616,7619],\"valid\"],[[7620,7626],\"valid\"],[[7627,7654],\"valid\"],[[7655,7669],\"valid\"],[[7670,7675],\"disallowed\"],[[7676,7676],\"valid\"],[[7677,7677],\"valid\"],[[7678,7679],\"valid\"],[[7680,7680],\"mapped\",[7681]],[[7681,7681],\"valid\"],[[7682,7682],\"mapped\",[7683]],[[7683,7683],\"valid\"],[[7684,7684],\"mapped\",[7685]],[[7685,7685],\"valid\"],[[7686,7686],\"mapped\",[7687]],[[7687,7687],\"valid\"],[[7688,7688],\"mapped\",[7689]],[[7689,7689],\"valid\"],[[7690,7690],\"mapped\",[7691]],[[7691,7691],\"valid\"],[[7692,7692],\"mapped\",[7693]],[[7693,7693],\"valid\"],[[7694,7694],\"mapped\",[7695]],[[7695,7695],\"valid\"],[[7696,7696],\"mapped\",[7697]],[[7697,7697],\"valid\"],[[7698,7698],\"mapped\",[7699]],[[7699,7699],\"valid\"],[[7700,7700],\"mapped\",[7701]],[[7701,7701],\"valid\"],[[7702,7702],\"mapped\",[7703]],[[7703,7703],\"valid\"],[[7704,7704],\"mapped\",[7705]],[[7705,7705],\"valid\"],[[7706,7706],\"mapped\",[7707]],[[7707,7707],\"valid\"],[[7708,7708],\"mapped\",[7709]],[[7709,7709],\"valid\"],[[7710,7710],\"mapped\",[7711]],[[7711,7711],\"valid\"],[[7712,7712],\"mapped\",[7713]],[[7713,7713],\"valid\"],[[7714,7714],\"mapped\",[7715]],[[7715,7715],\"valid\"],[[7716,7716],\"mapped\",[7717]],[[7717,7717],\"valid\"],[[7718,7718],\"mapped\",[7719]],[[7719,7719],\"valid\"],[[7720,7720],\"mapped\",[7721]],[[7721,7721],\"valid\"],[[7722,7722],\"mapped\",[7723]],[[7723,7723],\"valid\"],[[7724,7724],\"mapped\",[7725]],[[7725,7725],\"valid\"],[[7726,7726],\"mapped\",[7727]],[[7727,7727],\"valid\"],[[7728,7728],\"mapped\",[7729]],[[7729,7729],\"valid\"],[[7730,7730],\"mapped\",[7731]],[[7731,7731],\"valid\"],[[7732,7732],\"mapped\",[7733]],[[7733,7733],\"valid\"],[[7734,7734],\"mapped\",[7735]],[[7735,7735],\"valid\"],[[7736,7736],\"mapped\",[7737]],[[7737,7737],\"valid\"],[[7738,7738],\"mapped\",[7739]],[[7739,7739],\"valid\"],[[7740,7740],\"mapped\",[7741]],[[7741,7741],\"valid\"],[[7742,7742],\"mapped\",[7743]],[[7743,7743],\"valid\"],[[7744,7744],\"mapped\",[7745]],[[7745,7745],\"valid\"],[[7746,7746],\"mapped\",[7747]],[[7747,7747],\"valid\"],[[7748,7748],\"mapped\",[7749]],[[7749,7749],\"valid\"],[[7750,7750],\"mapped\",[7751]],[[7751,7751],\"valid\"],[[7752,7752],\"mapped\",[7753]],[[7753,7753],\"valid\"],[[7754,7754],\"mapped\",[7755]],[[7755,7755],\"valid\"],[[7756,7756],\"mapped\",[7757]],[[7757,7757],\"valid\"],[[7758,7758],\"mapped\",[7759]],[[7759,7759],\"valid\"],[[7760,7760],\"mapped\",[7761]],[[7761,7761],\"valid\"],[[7762,7762],\"mapped\",[7763]],[[7763,7763],\"valid\"],[[7764,7764],\"mapped\",[7765]],[[7765,7765],\"valid\"],[[7766,7766],\"mapped\",[7767]],[[7767,7767],\"valid\"],[[7768,7768],\"mapped\",[7769]],[[7769,7769],\"valid\"],[[7770,7770],\"mapped\",[7771]],[[7771,7771],\"valid\"],[[7772,7772],\"mapped\",[7773]],[[7773,7773],\"valid\"],[[7774,7774],\"mapped\",[7775]],[[7775,7775],\"valid\"],[[7776,7776],\"mapped\",[7777]],[[7777,7777],\"valid\"],[[7778,7778],\"mapped\",[7779]],[[7779,7779],\"valid\"],[[7780,7780],\"mapped\",[7781]],[[7781,7781],\"valid\"],[[7782,7782],\"mapped\",[7783]],[[7783,7783],\"valid\"],[[7784,7784],\"mapped\",[7785]],[[7785,7785],\"valid\"],[[7786,7786],\"mapped\",[7787]],[[7787,7787],\"valid\"],[[7788,7788],\"mapped\",[7789]],[[7789,7789],\"valid\"],[[7790,7790],\"mapped\",[7791]],[[7791,7791],\"valid\"],[[7792,7792],\"mapped\",[7793]],[[7793,7793],\"valid\"],[[7794,7794],\"mapped\",[7795]],[[7795,7795],\"valid\"],[[7796,7796],\"mapped\",[7797]],[[7797,7797],\"valid\"],[[7798,7798],\"mapped\",[7799]],[[7799,7799],\"valid\"],[[7800,7800],\"mapped\",[7801]],[[7801,7801],\"valid\"],[[7802,7802],\"mapped\",[7803]],[[7803,7803],\"valid\"],[[7804,7804],\"mapped\",[7805]],[[7805,7805],\"valid\"],[[7806,7806],\"mapped\",[7807]],[[7807,7807],\"valid\"],[[7808,7808],\"mapped\",[7809]],[[7809,7809],\"valid\"],[[7810,7810],\"mapped\",[7811]],[[7811,7811],\"valid\"],[[7812,7812],\"mapped\",[7813]],[[7813,7813],\"valid\"],[[7814,7814],\"mapped\",[7815]],[[7815,7815],\"valid\"],[[7816,7816],\"mapped\",[7817]],[[7817,7817],\"valid\"],[[7818,7818],\"mapped\",[7819]],[[7819,7819],\"valid\"],[[7820,7820],\"mapped\",[7821]],[[7821,7821],\"valid\"],[[7822,7822],\"mapped\",[7823]],[[7823,7823],\"valid\"],[[7824,7824],\"mapped\",[7825]],[[7825,7825],\"valid\"],[[7826,7826],\"mapped\",[7827]],[[7827,7827],\"valid\"],[[7828,7828],\"mapped\",[7829]],[[7829,7833],\"valid\"],[[7834,7834],\"mapped\",[97,702]],[[7835,7835],\"mapped\",[7777]],[[7836,7837],\"valid\"],[[7838,7838],\"mapped\",[115,115]],[[7839,7839],\"valid\"],[[7840,7840],\"mapped\",[7841]],[[7841,7841],\"valid\"],[[7842,7842],\"mapped\",[7843]],[[7843,7843],\"valid\"],[[7844,7844],\"mapped\",[7845]],[[7845,7845],\"valid\"],[[7846,7846],\"mapped\",[7847]],[[7847,7847],\"valid\"],[[7848,7848],\"mapped\",[7849]],[[7849,7849],\"valid\"],[[7850,7850],\"mapped\",[7851]],[[7851,7851],\"valid\"],[[7852,7852],\"mapped\",[7853]],[[7853,7853],\"valid\"],[[7854,7854],\"mapped\",[7855]],[[7855,7855],\"valid\"],[[7856,7856],\"mapped\",[7857]],[[7857,7857],\"valid\"],[[7858,7858],\"mapped\",[7859]],[[7859,7859],\"valid\"],[[7860,7860],\"mapped\",[7861]],[[7861,7861],\"valid\"],[[7862,7862],\"mapped\",[7863]],[[7863,7863],\"valid\"],[[7864,7864],\"mapped\",[7865]],[[7865,7865],\"valid\"],[[7866,7866],\"mapped\",[7867]],[[7867,7867],\"valid\"],[[7868,7868],\"mapped\",[7869]],[[7869,7869],\"valid\"],[[7870,7870],\"mapped\",[7871]],[[7871,7871],\"valid\"],[[7872,7872],\"mapped\",[7873]],[[7873,7873],\"valid\"],[[7874,7874],\"mapped\",[7875]],[[7875,7875],\"valid\"],[[7876,7876],\"mapped\",[7877]],[[7877,7877],\"valid\"],[[7878,7878],\"mapped\",[7879]],[[7879,7879],\"valid\"],[[7880,7880],\"mapped\",[7881]],[[7881,7881],\"valid\"],[[7882,7882],\"mapped\",[7883]],[[7883,7883],\"valid\"],[[7884,7884],\"mapped\",[7885]],[[7885,7885],\"valid\"],[[7886,7886],\"mapped\",[7887]],[[7887,7887],\"valid\"],[[7888,7888],\"mapped\",[7889]],[[7889,7889],\"valid\"],[[7890,7890],\"mapped\",[7891]],[[7891,7891],\"valid\"],[[7892,7892],\"mapped\",[7893]],[[7893,7893],\"valid\"],[[7894,7894],\"mapped\",[7895]],[[7895,7895],\"valid\"],[[7896,7896],\"mapped\",[7897]],[[7897,7897],\"valid\"],[[7898,7898],\"mapped\",[7899]],[[7899,7899],\"valid\"],[[7900,7900],\"mapped\",[7901]],[[7901,7901],\"valid\"],[[7902,7902],\"mapped\",[7903]],[[7903,7903],\"valid\"],[[7904,7904],\"mapped\",[7905]],[[7905,7905],\"valid\"],[[7906,7906],\"mapped\",[7907]],[[7907,7907],\"valid\"],[[7908,7908],\"mapped\",[7909]],[[7909,7909],\"valid\"],[[7910,7910],\"mapped\",[7911]],[[7911,7911],\"valid\"],[[7912,7912],\"mapped\",[7913]],[[7913,7913],\"valid\"],[[7914,7914],\"mapped\",[7915]],[[7915,7915],\"valid\"],[[7916,7916],\"mapped\",[7917]],[[7917,7917],\"valid\"],[[7918,7918],\"mapped\",[7919]],[[7919,7919],\"valid\"],[[7920,7920],\"mapped\",[7921]],[[7921,7921],\"valid\"],[[7922,7922],\"mapped\",[7923]],[[7923,7923],\"valid\"],[[7924,7924],\"mapped\",[7925]],[[7925,7925],\"valid\"],[[7926,7926],\"mapped\",[7927]],[[7927,7927],\"valid\"],[[7928,7928],\"mapped\",[7929]],[[7929,7929],\"valid\"],[[7930,7930],\"mapped\",[7931]],[[7931,7931],\"valid\"],[[7932,7932],\"mapped\",[7933]],[[7933,7933],\"valid\"],[[7934,7934],\"mapped\",[7935]],[[7935,7935],\"valid\"],[[7936,7943],\"valid\"],[[7944,7944],\"mapped\",[7936]],[[7945,7945],\"mapped\",[7937]],[[7946,7946],\"mapped\",[7938]],[[7947,7947],\"mapped\",[7939]],[[7948,7948],\"mapped\",[7940]],[[7949,7949],\"mapped\",[7941]],[[7950,7950],\"mapped\",[7942]],[[7951,7951],\"mapped\",[7943]],[[7952,7957],\"valid\"],[[7958,7959],\"disallowed\"],[[7960,7960],\"mapped\",[7952]],[[7961,7961],\"mapped\",[7953]],[[7962,7962],\"mapped\",[7954]],[[7963,7963],\"mapped\",[7955]],[[7964,7964],\"mapped\",[7956]],[[7965,7965],\"mapped\",[7957]],[[7966,7967],\"disallowed\"],[[7968,7975],\"valid\"],[[7976,7976],\"mapped\",[7968]],[[7977,7977],\"mapped\",[7969]],[[7978,7978],\"mapped\",[7970]],[[7979,7979],\"mapped\",[7971]],[[7980,7980],\"mapped\",[7972]],[[7981,7981],\"mapped\",[7973]],[[7982,7982],\"mapped\",[7974]],[[7983,7983],\"mapped\",[7975]],[[7984,7991],\"valid\"],[[7992,7992],\"mapped\",[7984]],[[7993,7993],\"mapped\",[7985]],[[7994,7994],\"mapped\",[7986]],[[7995,7995],\"mapped\",[7987]],[[7996,7996],\"mapped\",[7988]],[[7997,7997],\"mapped\",[7989]],[[7998,7998],\"mapped\",[7990]],[[7999,7999],\"mapped\",[7991]],[[8000,8005],\"valid\"],[[8006,8007],\"disallowed\"],[[8008,8008],\"mapped\",[8000]],[[8009,8009],\"mapped\",[8001]],[[8010,8010],\"mapped\",[8002]],[[8011,8011],\"mapped\",[8003]],[[8012,8012],\"mapped\",[8004]],[[8013,8013],\"mapped\",[8005]],[[8014,8015],\"disallowed\"],[[8016,8023],\"valid\"],[[8024,8024],\"disallowed\"],[[8025,8025],\"mapped\",[8017]],[[8026,8026],\"disallowed\"],[[8027,8027],\"mapped\",[8019]],[[8028,8028],\"disallowed\"],[[8029,8029],\"mapped\",[8021]],[[8030,8030],\"disallowed\"],[[8031,8031],\"mapped\",[8023]],[[8032,8039],\"valid\"],[[8040,8040],\"mapped\",[8032]],[[8041,8041],\"mapped\",[8033]],[[8042,8042],\"mapped\",[8034]],[[8043,8043],\"mapped\",[8035]],[[8044,8044],\"mapped\",[8036]],[[8045,8045],\"mapped\",[8037]],[[8046,8046],\"mapped\",[8038]],[[8047,8047],\"mapped\",[8039]],[[8048,8048],\"valid\"],[[8049,8049],\"mapped\",[940]],[[8050,8050],\"valid\"],[[8051,8051],\"mapped\",[941]],[[8052,8052],\"valid\"],[[8053,8053],\"mapped\",[942]],[[8054,8054],\"valid\"],[[8055,8055],\"mapped\",[943]],[[8056,8056],\"valid\"],[[8057,8057],\"mapped\",[972]],[[8058,8058],\"valid\"],[[8059,8059],\"mapped\",[973]],[[8060,8060],\"valid\"],[[8061,8061],\"mapped\",[974]],[[8062,8063],\"disallowed\"],[[8064,8064],\"mapped\",[7936,953]],[[8065,8065],\"mapped\",[7937,953]],[[8066,8066],\"mapped\",[7938,953]],[[8067,8067],\"mapped\",[7939,953]],[[8068,8068],\"mapped\",[7940,953]],[[8069,8069],\"mapped\",[7941,953]],[[8070,8070],\"mapped\",[7942,953]],[[8071,8071],\"mapped\",[7943,953]],[[8072,8072],\"mapped\",[7936,953]],[[8073,8073],\"mapped\",[7937,953]],[[8074,8074],\"mapped\",[7938,953]],[[8075,8075],\"mapped\",[7939,953]],[[8076,8076],\"mapped\",[7940,953]],[[8077,8077],\"mapped\",[7941,953]],[[8078,8078],\"mapped\",[7942,953]],[[8079,8079],\"mapped\",[7943,953]],[[8080,8080],\"mapped\",[7968,953]],[[8081,8081],\"mapped\",[7969,953]],[[8082,8082],\"mapped\",[7970,953]],[[8083,8083],\"mapped\",[7971,953]],[[8084,8084],\"mapped\",[7972,953]],[[8085,8085],\"mapped\",[7973,953]],[[8086,8086],\"mapped\",[7974,953]],[[8087,8087],\"mapped\",[7975,953]],[[8088,8088],\"mapped\",[7968,953]],[[8089,8089],\"mapped\",[7969,953]],[[8090,8090],\"mapped\",[7970,953]],[[8091,8091],\"mapped\",[7971,953]],[[8092,8092],\"mapped\",[7972,953]],[[8093,8093],\"mapped\",[7973,953]],[[8094,8094],\"mapped\",[7974,953]],[[8095,8095],\"mapped\",[7975,953]],[[8096,8096],\"mapped\",[8032,953]],[[8097,8097],\"mapped\",[8033,953]],[[8098,8098],\"mapped\",[8034,953]],[[8099,8099],\"mapped\",[8035,953]],[[8100,8100],\"mapped\",[8036,953]],[[8101,8101],\"mapped\",[8037,953]],[[8102,8102],\"mapped\",[8038,953]],[[8103,8103],\"mapped\",[8039,953]],[[8104,8104],\"mapped\",[8032,953]],[[8105,8105],\"mapped\",[8033,953]],[[8106,8106],\"mapped\",[8034,953]],[[8107,8107],\"mapped\",[8035,953]],[[8108,8108],\"mapped\",[8036,953]],[[8109,8109],\"mapped\",[8037,953]],[[8110,8110],\"mapped\",[8038,953]],[[8111,8111],\"mapped\",[8039,953]],[[8112,8113],\"valid\"],[[8114,8114],\"mapped\",[8048,953]],[[8115,8115],\"mapped\",[945,953]],[[8116,8116],\"mapped\",[940,953]],[[8117,8117],\"disallowed\"],[[8118,8118],\"valid\"],[[8119,8119],\"mapped\",[8118,953]],[[8120,8120],\"mapped\",[8112]],[[8121,8121],\"mapped\",[8113]],[[8122,8122],\"mapped\",[8048]],[[8123,8123],\"mapped\",[940]],[[8124,8124],\"mapped\",[945,953]],[[8125,8125],\"disallowed_STD3_mapped\",[32,787]],[[8126,8126],\"mapped\",[953]],[[8127,8127],\"disallowed_STD3_mapped\",[32,787]],[[8128,8128],\"disallowed_STD3_mapped\",[32,834]],[[8129,8129],\"disallowed_STD3_mapped\",[32,776,834]],[[8130,8130],\"mapped\",[8052,953]],[[8131,8131],\"mapped\",[951,953]],[[8132,8132],\"mapped\",[942,953]],[[8133,8133],\"disallowed\"],[[8134,8134],\"valid\"],[[8135,8135],\"mapped\",[8134,953]],[[8136,8136],\"mapped\",[8050]],[[8137,8137],\"mapped\",[941]],[[8138,8138],\"mapped\",[8052]],[[8139,8139],\"mapped\",[942]],[[8140,8140],\"mapped\",[951,953]],[[8141,8141],\"disallowed_STD3_mapped\",[32,787,768]],[[8142,8142],\"disallowed_STD3_mapped\",[32,787,769]],[[8143,8143],\"disallowed_STD3_mapped\",[32,787,834]],[[8144,8146],\"valid\"],[[8147,8147],\"mapped\",[912]],[[8148,8149],\"disallowed\"],[[8150,8151],\"valid\"],[[8152,8152],\"mapped\",[8144]],[[8153,8153],\"mapped\",[8145]],[[8154,8154],\"mapped\",[8054]],[[8155,8155],\"mapped\",[943]],[[8156,8156],\"disallowed\"],[[8157,8157],\"disallowed_STD3_mapped\",[32,788,768]],[[8158,8158],\"disallowed_STD3_mapped\",[32,788,769]],[[8159,8159],\"disallowed_STD3_mapped\",[32,788,834]],[[8160,8162],\"valid\"],[[8163,8163],\"mapped\",[944]],[[8164,8167],\"valid\"],[[8168,8168],\"mapped\",[8160]],[[8169,8169],\"mapped\",[8161]],[[8170,8170],\"mapped\",[8058]],[[8171,8171],\"mapped\",[973]],[[8172,8172],\"mapped\",[8165]],[[8173,8173],\"disallowed_STD3_mapped\",[32,776,768]],[[8174,8174],\"disallowed_STD3_mapped\",[32,776,769]],[[8175,8175],\"disallowed_STD3_mapped\",[96]],[[8176,8177],\"disallowed\"],[[8178,8178],\"mapped\",[8060,953]],[[8179,8179],\"mapped\",[969,953]],[[8180,8180],\"mapped\",[974,953]],[[8181,8181],\"disallowed\"],[[8182,8182],\"valid\"],[[8183,8183],\"mapped\",[8182,953]],[[8184,8184],\"mapped\",[8056]],[[8185,8185],\"mapped\",[972]],[[8186,8186],\"mapped\",[8060]],[[8187,8187],\"mapped\",[974]],[[8188,8188],\"mapped\",[969,953]],[[8189,8189],\"disallowed_STD3_mapped\",[32,769]],[[8190,8190],\"disallowed_STD3_mapped\",[32,788]],[[8191,8191],\"disallowed\"],[[8192,8202],\"disallowed_STD3_mapped\",[32]],[[8203,8203],\"ignored\"],[[8204,8205],\"deviation\",[]],[[8206,8207],\"disallowed\"],[[8208,8208],\"valid\",[],\"NV8\"],[[8209,8209],\"mapped\",[8208]],[[8210,8214],\"valid\",[],\"NV8\"],[[8215,8215],\"disallowed_STD3_mapped\",[32,819]],[[8216,8227],\"valid\",[],\"NV8\"],[[8228,8230],\"disallowed\"],[[8231,8231],\"valid\",[],\"NV8\"],[[8232,8238],\"disallowed\"],[[8239,8239],\"disallowed_STD3_mapped\",[32]],[[8240,8242],\"valid\",[],\"NV8\"],[[8243,8243],\"mapped\",[8242,8242]],[[8244,8244],\"mapped\",[8242,8242,8242]],[[8245,8245],\"valid\",[],\"NV8\"],[[8246,8246],\"mapped\",[8245,8245]],[[8247,8247],\"mapped\",[8245,8245,8245]],[[8248,8251],\"valid\",[],\"NV8\"],[[8252,8252],\"disallowed_STD3_mapped\",[33,33]],[[8253,8253],\"valid\",[],\"NV8\"],[[8254,8254],\"disallowed_STD3_mapped\",[32,773]],[[8255,8262],\"valid\",[],\"NV8\"],[[8263,8263],\"disallowed_STD3_mapped\",[63,63]],[[8264,8264],\"disallowed_STD3_mapped\",[63,33]],[[8265,8265],\"disallowed_STD3_mapped\",[33,63]],[[8266,8269],\"valid\",[],\"NV8\"],[[8270,8274],\"valid\",[],\"NV8\"],[[8275,8276],\"valid\",[],\"NV8\"],[[8277,8278],\"valid\",[],\"NV8\"],[[8279,8279],\"mapped\",[8242,8242,8242,8242]],[[8280,8286],\"valid\",[],\"NV8\"],[[8287,8287],\"disallowed_STD3_mapped\",[32]],[[8288,8288],\"ignored\"],[[8289,8291],\"disallowed\"],[[8292,8292],\"ignored\"],[[8293,8293],\"disallowed\"],[[8294,8297],\"disallowed\"],[[8298,8303],\"disallowed\"],[[8304,8304],\"mapped\",[48]],[[8305,8305],\"mapped\",[105]],[[8306,8307],\"disallowed\"],[[8308,8308],\"mapped\",[52]],[[8309,8309],\"mapped\",[53]],[[8310,8310],\"mapped\",[54]],[[8311,8311],\"mapped\",[55]],[[8312,8312],\"mapped\",[56]],[[8313,8313],\"mapped\",[57]],[[8314,8314],\"disallowed_STD3_mapped\",[43]],[[8315,8315],\"mapped\",[8722]],[[8316,8316],\"disallowed_STD3_mapped\",[61]],[[8317,8317],\"disallowed_STD3_mapped\",[40]],[[8318,8318],\"disallowed_STD3_mapped\",[41]],[[8319,8319],\"mapped\",[110]],[[8320,8320],\"mapped\",[48]],[[8321,8321],\"mapped\",[49]],[[8322,8322],\"mapped\",[50]],[[8323,8323],\"mapped\",[51]],[[8324,8324],\"mapped\",[52]],[[8325,8325],\"mapped\",[53]],[[8326,8326],\"mapped\",[54]],[[8327,8327],\"mapped\",[55]],[[8328,8328],\"mapped\",[56]],[[8329,8329],\"mapped\",[57]],[[8330,8330],\"disallowed_STD3_mapped\",[43]],[[8331,8331],\"mapped\",[8722]],[[8332,8332],\"disallowed_STD3_mapped\",[61]],[[8333,8333],\"disallowed_STD3_mapped\",[40]],[[8334,8334],\"disallowed_STD3_mapped\",[41]],[[8335,8335],\"disallowed\"],[[8336,8336],\"mapped\",[97]],[[8337,8337],\"mapped\",[101]],[[8338,8338],\"mapped\",[111]],[[8339,8339],\"mapped\",[120]],[[8340,8340],\"mapped\",[601]],[[8341,8341],\"mapped\",[104]],[[8342,8342],\"mapped\",[107]],[[8343,8343],\"mapped\",[108]],[[8344,8344],\"mapped\",[109]],[[8345,8345],\"mapped\",[110]],[[8346,8346],\"mapped\",[112]],[[8347,8347],\"mapped\",[115]],[[8348,8348],\"mapped\",[116]],[[8349,8351],\"disallowed\"],[[8352,8359],\"valid\",[],\"NV8\"],[[8360,8360],\"mapped\",[114,115]],[[8361,8362],\"valid\",[],\"NV8\"],[[8363,8363],\"valid\",[],\"NV8\"],[[8364,8364],\"valid\",[],\"NV8\"],[[8365,8367],\"valid\",[],\"NV8\"],[[8368,8369],\"valid\",[],\"NV8\"],[[8370,8373],\"valid\",[],\"NV8\"],[[8374,8376],\"valid\",[],\"NV8\"],[[8377,8377],\"valid\",[],\"NV8\"],[[8378,8378],\"valid\",[],\"NV8\"],[[8379,8381],\"valid\",[],\"NV8\"],[[8382,8382],\"valid\",[],\"NV8\"],[[8383,8399],\"disallowed\"],[[8400,8417],\"valid\",[],\"NV8\"],[[8418,8419],\"valid\",[],\"NV8\"],[[8420,8426],\"valid\",[],\"NV8\"],[[8427,8427],\"valid\",[],\"NV8\"],[[8428,8431],\"valid\",[],\"NV8\"],[[8432,8432],\"valid\",[],\"NV8\"],[[8433,8447],\"disallowed\"],[[8448,8448],\"disallowed_STD3_mapped\",[97,47,99]],[[8449,8449],\"disallowed_STD3_mapped\",[97,47,115]],[[8450,8450],\"mapped\",[99]],[[8451,8451],\"mapped\",[176,99]],[[8452,8452],\"valid\",[],\"NV8\"],[[8453,8453],\"disallowed_STD3_mapped\",[99,47,111]],[[8454,8454],\"disallowed_STD3_mapped\",[99,47,117]],[[8455,8455],\"mapped\",[603]],[[8456,8456],\"valid\",[],\"NV8\"],[[8457,8457],\"mapped\",[176,102]],[[8458,8458],\"mapped\",[103]],[[8459,8462],\"mapped\",[104]],[[8463,8463],\"mapped\",[295]],[[8464,8465],\"mapped\",[105]],[[8466,8467],\"mapped\",[108]],[[8468,8468],\"valid\",[],\"NV8\"],[[8469,8469],\"mapped\",[110]],[[8470,8470],\"mapped\",[110,111]],[[8471,8472],\"valid\",[],\"NV8\"],[[8473,8473],\"mapped\",[112]],[[8474,8474],\"mapped\",[113]],[[8475,8477],\"mapped\",[114]],[[8478,8479],\"valid\",[],\"NV8\"],[[8480,8480],\"mapped\",[115,109]],[[8481,8481],\"mapped\",[116,101,108]],[[8482,8482],\"mapped\",[116,109]],[[8483,8483],\"valid\",[],\"NV8\"],[[8484,8484],\"mapped\",[122]],[[8485,8485],\"valid\",[],\"NV8\"],[[8486,8486],\"mapped\",[969]],[[8487,8487],\"valid\",[],\"NV8\"],[[8488,8488],\"mapped\",[122]],[[8489,8489],\"valid\",[],\"NV8\"],[[8490,8490],\"mapped\",[107]],[[8491,8491],\"mapped\",[229]],[[8492,8492],\"mapped\",[98]],[[8493,8493],\"mapped\",[99]],[[8494,8494],\"valid\",[],\"NV8\"],[[8495,8496],\"mapped\",[101]],[[8497,8497],\"mapped\",[102]],[[8498,8498],\"disallowed\"],[[8499,8499],\"mapped\",[109]],[[8500,8500],\"mapped\",[111]],[[8501,8501],\"mapped\",[1488]],[[8502,8502],\"mapped\",[1489]],[[8503,8503],\"mapped\",[1490]],[[8504,8504],\"mapped\",[1491]],[[8505,8505],\"mapped\",[105]],[[8506,8506],\"valid\",[],\"NV8\"],[[8507,8507],\"mapped\",[102,97,120]],[[8508,8508],\"mapped\",[960]],[[8509,8510],\"mapped\",[947]],[[8511,8511],\"mapped\",[960]],[[8512,8512],\"mapped\",[8721]],[[8513,8516],\"valid\",[],\"NV8\"],[[8517,8518],\"mapped\",[100]],[[8519,8519],\"mapped\",[101]],[[8520,8520],\"mapped\",[105]],[[8521,8521],\"mapped\",[106]],[[8522,8523],\"valid\",[],\"NV8\"],[[8524,8524],\"valid\",[],\"NV8\"],[[8525,8525],\"valid\",[],\"NV8\"],[[8526,8526],\"valid\"],[[8527,8527],\"valid\",[],\"NV8\"],[[8528,8528],\"mapped\",[49,8260,55]],[[8529,8529],\"mapped\",[49,8260,57]],[[8530,8530],\"mapped\",[49,8260,49,48]],[[8531,8531],\"mapped\",[49,8260,51]],[[8532,8532],\"mapped\",[50,8260,51]],[[8533,8533],\"mapped\",[49,8260,53]],[[8534,8534],\"mapped\",[50,8260,53]],[[8535,8535],\"mapped\",[51,8260,53]],[[8536,8536],\"mapped\",[52,8260,53]],[[8537,8537],\"mapped\",[49,8260,54]],[[8538,8538],\"mapped\",[53,8260,54]],[[8539,8539],\"mapped\",[49,8260,56]],[[8540,8540],\"mapped\",[51,8260,56]],[[8541,8541],\"mapped\",[53,8260,56]],[[8542,8542],\"mapped\",[55,8260,56]],[[8543,8543],\"mapped\",[49,8260]],[[8544,8544],\"mapped\",[105]],[[8545,8545],\"mapped\",[105,105]],[[8546,8546],\"mapped\",[105,105,105]],[[8547,8547],\"mapped\",[105,118]],[[8548,8548],\"mapped\",[118]],[[8549,8549],\"mapped\",[118,105]],[[8550,8550],\"mapped\",[118,105,105]],[[8551,8551],\"mapped\",[118,105,105,105]],[[8552,8552],\"mapped\",[105,120]],[[8553,8553],\"mapped\",[120]],[[8554,8554],\"mapped\",[120,105]],[[8555,8555],\"mapped\",[120,105,105]],[[8556,8556],\"mapped\",[108]],[[8557,8557],\"mapped\",[99]],[[8558,8558],\"mapped\",[100]],[[8559,8559],\"mapped\",[109]],[[8560,8560],\"mapped\",[105]],[[8561,8561],\"mapped\",[105,105]],[[8562,8562],\"mapped\",[105,105,105]],[[8563,8563],\"mapped\",[105,118]],[[8564,8564],\"mapped\",[118]],[[8565,8565],\"mapped\",[118,105]],[[8566,8566],\"mapped\",[118,105,105]],[[8567,8567],\"mapped\",[118,105,105,105]],[[8568,8568],\"mapped\",[105,120]],[[8569,8569],\"mapped\",[120]],[[8570,8570],\"mapped\",[120,105]],[[8571,8571],\"mapped\",[120,105,105]],[[8572,8572],\"mapped\",[108]],[[8573,8573],\"mapped\",[99]],[[8574,8574],\"mapped\",[100]],[[8575,8575],\"mapped\",[109]],[[8576,8578],\"valid\",[],\"NV8\"],[[8579,8579],\"disallowed\"],[[8580,8580],\"valid\"],[[8581,8584],\"valid\",[],\"NV8\"],[[8585,8585],\"mapped\",[48,8260,51]],[[8586,8587],\"valid\",[],\"NV8\"],[[8588,8591],\"disallowed\"],[[8592,8682],\"valid\",[],\"NV8\"],[[8683,8691],\"valid\",[],\"NV8\"],[[8692,8703],\"valid\",[],\"NV8\"],[[8704,8747],\"valid\",[],\"NV8\"],[[8748,8748],\"mapped\",[8747,8747]],[[8749,8749],\"mapped\",[8747,8747,8747]],[[8750,8750],\"valid\",[],\"NV8\"],[[8751,8751],\"mapped\",[8750,8750]],[[8752,8752],\"mapped\",[8750,8750,8750]],[[8753,8799],\"valid\",[],\"NV8\"],[[8800,8800],\"disallowed_STD3_valid\"],[[8801,8813],\"valid\",[],\"NV8\"],[[8814,8815],\"disallowed_STD3_valid\"],[[8816,8945],\"valid\",[],\"NV8\"],[[8946,8959],\"valid\",[],\"NV8\"],[[8960,8960],\"valid\",[],\"NV8\"],[[8961,8961],\"valid\",[],\"NV8\"],[[8962,9000],\"valid\",[],\"NV8\"],[[9001,9001],\"mapped\",[12296]],[[9002,9002],\"mapped\",[12297]],[[9003,9082],\"valid\",[],\"NV8\"],[[9083,9083],\"valid\",[],\"NV8\"],[[9084,9084],\"valid\",[],\"NV8\"],[[9085,9114],\"valid\",[],\"NV8\"],[[9115,9166],\"valid\",[],\"NV8\"],[[9167,9168],\"valid\",[],\"NV8\"],[[9169,9179],\"valid\",[],\"NV8\"],[[9180,9191],\"valid\",[],\"NV8\"],[[9192,9192],\"valid\",[],\"NV8\"],[[9193,9203],\"valid\",[],\"NV8\"],[[9204,9210],\"valid\",[],\"NV8\"],[[9211,9215],\"disallowed\"],[[9216,9252],\"valid\",[],\"NV8\"],[[9253,9254],\"valid\",[],\"NV8\"],[[9255,9279],\"disallowed\"],[[9280,9290],\"valid\",[],\"NV8\"],[[9291,9311],\"disallowed\"],[[9312,9312],\"mapped\",[49]],[[9313,9313],\"mapped\",[50]],[[9314,9314],\"mapped\",[51]],[[9315,9315],\"mapped\",[52]],[[9316,9316],\"mapped\",[53]],[[9317,9317],\"mapped\",[54]],[[9318,9318],\"mapped\",[55]],[[9319,9319],\"mapped\",[56]],[[9320,9320],\"mapped\",[57]],[[9321,9321],\"mapped\",[49,48]],[[9322,9322],\"mapped\",[49,49]],[[9323,9323],\"mapped\",[49,50]],[[9324,9324],\"mapped\",[49,51]],[[9325,9325],\"mapped\",[49,52]],[[9326,9326],\"mapped\",[49,53]],[[9327,9327],\"mapped\",[49,54]],[[9328,9328],\"mapped\",[49,55]],[[9329,9329],\"mapped\",[49,56]],[[9330,9330],\"mapped\",[49,57]],[[9331,9331],\"mapped\",[50,48]],[[9332,9332],\"disallowed_STD3_mapped\",[40,49,41]],[[9333,9333],\"disallowed_STD3_mapped\",[40,50,41]],[[9334,9334],\"disallowed_STD3_mapped\",[40,51,41]],[[9335,9335],\"disallowed_STD3_mapped\",[40,52,41]],[[9336,9336],\"disallowed_STD3_mapped\",[40,53,41]],[[9337,9337],\"disallowed_STD3_mapped\",[40,54,41]],[[9338,9338],\"disallowed_STD3_mapped\",[40,55,41]],[[9339,9339],\"disallowed_STD3_mapped\",[40,56,41]],[[9340,9340],\"disallowed_STD3_mapped\",[40,57,41]],[[9341,9341],\"disallowed_STD3_mapped\",[40,49,48,41]],[[9342,9342],\"disallowed_STD3_mapped\",[40,49,49,41]],[[9343,9343],\"disallowed_STD3_mapped\",[40,49,50,41]],[[9344,9344],\"disallowed_STD3_mapped\",[40,49,51,41]],[[9345,9345],\"disallowed_STD3_mapped\",[40,49,52,41]],[[9346,9346],\"disallowed_STD3_mapped\",[40,49,53,41]],[[9347,9347],\"disallowed_STD3_mapped\",[40,49,54,41]],[[9348,9348],\"disallowed_STD3_mapped\",[40,49,55,41]],[[9349,9349],\"disallowed_STD3_mapped\",[40,49,56,41]],[[9350,9350],\"disallowed_STD3_mapped\",[40,49,57,41]],[[9351,9351],\"disallowed_STD3_mapped\",[40,50,48,41]],[[9352,9371],\"disallowed\"],[[9372,9372],\"disallowed_STD3_mapped\",[40,97,41]],[[9373,9373],\"disallowed_STD3_mapped\",[40,98,41]],[[9374,9374],\"disallowed_STD3_mapped\",[40,99,41]],[[9375,9375],\"disallowed_STD3_mapped\",[40,100,41]],[[9376,9376],\"disallowed_STD3_mapped\",[40,101,41]],[[9377,9377],\"disallowed_STD3_mapped\",[40,102,41]],[[9378,9378],\"disallowed_STD3_mapped\",[40,103,41]],[[9379,9379],\"disallowed_STD3_mapped\",[40,104,41]],[[9380,9380],\"disallowed_STD3_mapped\",[40,105,41]],[[9381,9381],\"disallowed_STD3_mapped\",[40,106,41]],[[9382,9382],\"disallowed_STD3_mapped\",[40,107,41]],[[9383,9383],\"disallowed_STD3_mapped\",[40,108,41]],[[9384,9384],\"disallowed_STD3_mapped\",[40,109,41]],[[9385,9385],\"disallowed_STD3_mapped\",[40,110,41]],[[9386,9386],\"disallowed_STD3_mapped\",[40,111,41]],[[9387,9387],\"disallowed_STD3_mapped\",[40,112,41]],[[9388,9388],\"disallowed_STD3_mapped\",[40,113,41]],[[9389,9389],\"disallowed_STD3_mapped\",[40,114,41]],[[9390,9390],\"disallowed_STD3_mapped\",[40,115,41]],[[9391,9391],\"disallowed_STD3_mapped\",[40,116,41]],[[9392,9392],\"disallowed_STD3_mapped\",[40,117,41]],[[9393,9393],\"disallowed_STD3_mapped\",[40,118,41]],[[9394,9394],\"disallowed_STD3_mapped\",[40,119,41]],[[9395,9395],\"disallowed_STD3_mapped\",[40,120,41]],[[9396,9396],\"disallowed_STD3_mapped\",[40,121,41]],[[9397,9397],\"disallowed_STD3_mapped\",[40,122,41]],[[9398,9398],\"mapped\",[97]],[[9399,9399],\"mapped\",[98]],[[9400,9400],\"mapped\",[99]],[[9401,9401],\"mapped\",[100]],[[9402,9402],\"mapped\",[101]],[[9403,9403],\"mapped\",[102]],[[9404,9404],\"mapped\",[103]],[[9405,9405],\"mapped\",[104]],[[9406,9406],\"mapped\",[105]],[[9407,9407],\"mapped\",[106]],[[9408,9408],\"mapped\",[107]],[[9409,9409],\"mapped\",[108]],[[9410,9410],\"mapped\",[109]],[[9411,9411],\"mapped\",[110]],[[9412,9412],\"mapped\",[111]],[[9413,9413],\"mapped\",[112]],[[9414,9414],\"mapped\",[113]],[[9415,9415],\"mapped\",[114]],[[9416,9416],\"mapped\",[115]],[[9417,9417],\"mapped\",[116]],[[9418,9418],\"mapped\",[117]],[[9419,9419],\"mapped\",[118]],[[9420,9420],\"mapped\",[119]],[[9421,9421],\"mapped\",[120]],[[9422,9422],\"mapped\",[121]],[[9423,9423],\"mapped\",[122]],[[9424,9424],\"mapped\",[97]],[[9425,9425],\"mapped\",[98]],[[9426,9426],\"mapped\",[99]],[[9427,9427],\"mapped\",[100]],[[9428,9428],\"mapped\",[101]],[[9429,9429],\"mapped\",[102]],[[9430,9430],\"mapped\",[103]],[[9431,9431],\"mapped\",[104]],[[9432,9432],\"mapped\",[105]],[[9433,9433],\"mapped\",[106]],[[9434,9434],\"mapped\",[107]],[[9435,9435],\"mapped\",[108]],[[9436,9436],\"mapped\",[109]],[[9437,9437],\"mapped\",[110]],[[9438,9438],\"mapped\",[111]],[[9439,9439],\"mapped\",[112]],[[9440,9440],\"mapped\",[113]],[[9441,9441],\"mapped\",[114]],[[9442,9442],\"mapped\",[115]],[[9443,9443],\"mapped\",[116]],[[9444,9444],\"mapped\",[117]],[[9445,9445],\"mapped\",[118]],[[9446,9446],\"mapped\",[119]],[[9447,9447],\"mapped\",[120]],[[9448,9448],\"mapped\",[121]],[[9449,9449],\"mapped\",[122]],[[9450,9450],\"mapped\",[48]],[[9451,9470],\"valid\",[],\"NV8\"],[[9471,9471],\"valid\",[],\"NV8\"],[[9472,9621],\"valid\",[],\"NV8\"],[[9622,9631],\"valid\",[],\"NV8\"],[[9632,9711],\"valid\",[],\"NV8\"],[[9712,9719],\"valid\",[],\"NV8\"],[[9720,9727],\"valid\",[],\"NV8\"],[[9728,9747],\"valid\",[],\"NV8\"],[[9748,9749],\"valid\",[],\"NV8\"],[[9750,9751],\"valid\",[],\"NV8\"],[[9752,9752],\"valid\",[],\"NV8\"],[[9753,9753],\"valid\",[],\"NV8\"],[[9754,9839],\"valid\",[],\"NV8\"],[[9840,9841],\"valid\",[],\"NV8\"],[[9842,9853],\"valid\",[],\"NV8\"],[[9854,9855],\"valid\",[],\"NV8\"],[[9856,9865],\"valid\",[],\"NV8\"],[[9866,9873],\"valid\",[],\"NV8\"],[[9874,9884],\"valid\",[],\"NV8\"],[[9885,9885],\"valid\",[],\"NV8\"],[[9886,9887],\"valid\",[],\"NV8\"],[[9888,9889],\"valid\",[],\"NV8\"],[[9890,9905],\"valid\",[],\"NV8\"],[[9906,9906],\"valid\",[],\"NV8\"],[[9907,9916],\"valid\",[],\"NV8\"],[[9917,9919],\"valid\",[],\"NV8\"],[[9920,9923],\"valid\",[],\"NV8\"],[[9924,9933],\"valid\",[],\"NV8\"],[[9934,9934],\"valid\",[],\"NV8\"],[[9935,9953],\"valid\",[],\"NV8\"],[[9954,9954],\"valid\",[],\"NV8\"],[[9955,9955],\"valid\",[],\"NV8\"],[[9956,9959],\"valid\",[],\"NV8\"],[[9960,9983],\"valid\",[],\"NV8\"],[[9984,9984],\"valid\",[],\"NV8\"],[[9985,9988],\"valid\",[],\"NV8\"],[[9989,9989],\"valid\",[],\"NV8\"],[[9990,9993],\"valid\",[],\"NV8\"],[[9994,9995],\"valid\",[],\"NV8\"],[[9996,10023],\"valid\",[],\"NV8\"],[[10024,10024],\"valid\",[],\"NV8\"],[[10025,10059],\"valid\",[],\"NV8\"],[[10060,10060],\"valid\",[],\"NV8\"],[[10061,10061],\"valid\",[],\"NV8\"],[[10062,10062],\"valid\",[],\"NV8\"],[[10063,10066],\"valid\",[],\"NV8\"],[[10067,10069],\"valid\",[],\"NV8\"],[[10070,10070],\"valid\",[],\"NV8\"],[[10071,10071],\"valid\",[],\"NV8\"],[[10072,10078],\"valid\",[],\"NV8\"],[[10079,10080],\"valid\",[],\"NV8\"],[[10081,10087],\"valid\",[],\"NV8\"],[[10088,10101],\"valid\",[],\"NV8\"],[[10102,10132],\"valid\",[],\"NV8\"],[[10133,10135],\"valid\",[],\"NV8\"],[[10136,10159],\"valid\",[],\"NV8\"],[[10160,10160],\"valid\",[],\"NV8\"],[[10161,10174],\"valid\",[],\"NV8\"],[[10175,10175],\"valid\",[],\"NV8\"],[[10176,10182],\"valid\",[],\"NV8\"],[[10183,10186],\"valid\",[],\"NV8\"],[[10187,10187],\"valid\",[],\"NV8\"],[[10188,10188],\"valid\",[],\"NV8\"],[[10189,10189],\"valid\",[],\"NV8\"],[[10190,10191],\"valid\",[],\"NV8\"],[[10192,10219],\"valid\",[],\"NV8\"],[[10220,10223],\"valid\",[],\"NV8\"],[[10224,10239],\"valid\",[],\"NV8\"],[[10240,10495],\"valid\",[],\"NV8\"],[[10496,10763],\"valid\",[],\"NV8\"],[[10764,10764],\"mapped\",[8747,8747,8747,8747]],[[10765,10867],\"valid\",[],\"NV8\"],[[10868,10868],\"disallowed_STD3_mapped\",[58,58,61]],[[10869,10869],\"disallowed_STD3_mapped\",[61,61]],[[10870,10870],\"disallowed_STD3_mapped\",[61,61,61]],[[10871,10971],\"valid\",[],\"NV8\"],[[10972,10972],\"mapped\",[10973,824]],[[10973,11007],\"valid\",[],\"NV8\"],[[11008,11021],\"valid\",[],\"NV8\"],[[11022,11027],\"valid\",[],\"NV8\"],[[11028,11034],\"valid\",[],\"NV8\"],[[11035,11039],\"valid\",[],\"NV8\"],[[11040,11043],\"valid\",[],\"NV8\"],[[11044,11084],\"valid\",[],\"NV8\"],[[11085,11087],\"valid\",[],\"NV8\"],[[11088,11092],\"valid\",[],\"NV8\"],[[11093,11097],\"valid\",[],\"NV8\"],[[11098,11123],\"valid\",[],\"NV8\"],[[11124,11125],\"disallowed\"],[[11126,11157],\"valid\",[],\"NV8\"],[[11158,11159],\"disallowed\"],[[11160,11193],\"valid\",[],\"NV8\"],[[11194,11196],\"disallowed\"],[[11197,11208],\"valid\",[],\"NV8\"],[[11209,11209],\"disallowed\"],[[11210,11217],\"valid\",[],\"NV8\"],[[11218,11243],\"disallowed\"],[[11244,11247],\"valid\",[],\"NV8\"],[[11248,11263],\"disallowed\"],[[11264,11264],\"mapped\",[11312]],[[11265,11265],\"mapped\",[11313]],[[11266,11266],\"mapped\",[11314]],[[11267,11267],\"mapped\",[11315]],[[11268,11268],\"mapped\",[11316]],[[11269,11269],\"mapped\",[11317]],[[11270,11270],\"mapped\",[11318]],[[11271,11271],\"mapped\",[11319]],[[11272,11272],\"mapped\",[11320]],[[11273,11273],\"mapped\",[11321]],[[11274,11274],\"mapped\",[11322]],[[11275,11275],\"mapped\",[11323]],[[11276,11276],\"mapped\",[11324]],[[11277,11277],\"mapped\",[11325]],[[11278,11278],\"mapped\",[11326]],[[11279,11279],\"mapped\",[11327]],[[11280,11280],\"mapped\",[11328]],[[11281,11281],\"mapped\",[11329]],[[11282,11282],\"mapped\",[11330]],[[11283,11283],\"mapped\",[11331]],[[11284,11284],\"mapped\",[11332]],[[11285,11285],\"mapped\",[11333]],[[11286,11286],\"mapped\",[11334]],[[11287,11287],\"mapped\",[11335]],[[11288,11288],\"mapped\",[11336]],[[11289,11289],\"mapped\",[11337]],[[11290,11290],\"mapped\",[11338]],[[11291,11291],\"mapped\",[11339]],[[11292,11292],\"mapped\",[11340]],[[11293,11293],\"mapped\",[11341]],[[11294,11294],\"mapped\",[11342]],[[11295,11295],\"mapped\",[11343]],[[11296,11296],\"mapped\",[11344]],[[11297,11297],\"mapped\",[11345]],[[11298,11298],\"mapped\",[11346]],[[11299,11299],\"mapped\",[11347]],[[11300,11300],\"mapped\",[11348]],[[11301,11301],\"mapped\",[11349]],[[11302,11302],\"mapped\",[11350]],[[11303,11303],\"mapped\",[11351]],[[11304,11304],\"mapped\",[11352]],[[11305,11305],\"mapped\",[11353]],[[11306,11306],\"mapped\",[11354]],[[11307,11307],\"mapped\",[11355]],[[11308,11308],\"mapped\",[11356]],[[11309,11309],\"mapped\",[11357]],[[11310,11310],\"mapped\",[11358]],[[11311,11311],\"disallowed\"],[[11312,11358],\"valid\"],[[11359,11359],\"disallowed\"],[[11360,11360],\"mapped\",[11361]],[[11361,11361],\"valid\"],[[11362,11362],\"mapped\",[619]],[[11363,11363],\"mapped\",[7549]],[[11364,11364],\"mapped\",[637]],[[11365,11366],\"valid\"],[[11367,11367],\"mapped\",[11368]],[[11368,11368],\"valid\"],[[11369,11369],\"mapped\",[11370]],[[11370,11370],\"valid\"],[[11371,11371],\"mapped\",[11372]],[[11372,11372],\"valid\"],[[11373,11373],\"mapped\",[593]],[[11374,11374],\"mapped\",[625]],[[11375,11375],\"mapped\",[592]],[[11376,11376],\"mapped\",[594]],[[11377,11377],\"valid\"],[[11378,11378],\"mapped\",[11379]],[[11379,11379],\"valid\"],[[11380,11380],\"valid\"],[[11381,11381],\"mapped\",[11382]],[[11382,11383],\"valid\"],[[11384,11387],\"valid\"],[[11388,11388],\"mapped\",[106]],[[11389,11389],\"mapped\",[118]],[[11390,11390],\"mapped\",[575]],[[11391,11391],\"mapped\",[576]],[[11392,11392],\"mapped\",[11393]],[[11393,11393],\"valid\"],[[11394,11394],\"mapped\",[11395]],[[11395,11395],\"valid\"],[[11396,11396],\"mapped\",[11397]],[[11397,11397],\"valid\"],[[11398,11398],\"mapped\",[11399]],[[11399,11399],\"valid\"],[[11400,11400],\"mapped\",[11401]],[[11401,11401],\"valid\"],[[11402,11402],\"mapped\",[11403]],[[11403,11403],\"valid\"],[[11404,11404],\"mapped\",[11405]],[[11405,11405],\"valid\"],[[11406,11406],\"mapped\",[11407]],[[11407,11407],\"valid\"],[[11408,11408],\"mapped\",[11409]],[[11409,11409],\"valid\"],[[11410,11410],\"mapped\",[11411]],[[11411,11411],\"valid\"],[[11412,11412],\"mapped\",[11413]],[[11413,11413],\"valid\"],[[11414,11414],\"mapped\",[11415]],[[11415,11415],\"valid\"],[[11416,11416],\"mapped\",[11417]],[[11417,11417],\"valid\"],[[11418,11418],\"mapped\",[11419]],[[11419,11419],\"valid\"],[[11420,11420],\"mapped\",[11421]],[[11421,11421],\"valid\"],[[11422,11422],\"mapped\",[11423]],[[11423,11423],\"valid\"],[[11424,11424],\"mapped\",[11425]],[[11425,11425],\"valid\"],[[11426,11426],\"mapped\",[11427]],[[11427,11427],\"valid\"],[[11428,11428],\"mapped\",[11429]],[[11429,11429],\"valid\"],[[11430,11430],\"mapped\",[11431]],[[11431,11431],\"valid\"],[[11432,11432],\"mapped\",[11433]],[[11433,11433],\"valid\"],[[11434,11434],\"mapped\",[11435]],[[11435,11435],\"valid\"],[[11436,11436],\"mapped\",[11437]],[[11437,11437],\"valid\"],[[11438,11438],\"mapped\",[11439]],[[11439,11439],\"valid\"],[[11440,11440],\"mapped\",[11441]],[[11441,11441],\"valid\"],[[11442,11442],\"mapped\",[11443]],[[11443,11443],\"valid\"],[[11444,11444],\"mapped\",[11445]],[[11445,11445],\"valid\"],[[11446,11446],\"mapped\",[11447]],[[11447,11447],\"valid\"],[[11448,11448],\"mapped\",[11449]],[[11449,11449],\"valid\"],[[11450,11450],\"mapped\",[11451]],[[11451,11451],\"valid\"],[[11452,11452],\"mapped\",[11453]],[[11453,11453],\"valid\"],[[11454,11454],\"mapped\",[11455]],[[11455,11455],\"valid\"],[[11456,11456],\"mapped\",[11457]],[[11457,11457],\"valid\"],[[11458,11458],\"mapped\",[11459]],[[11459,11459],\"valid\"],[[11460,11460],\"mapped\",[11461]],[[11461,11461],\"valid\"],[[11462,11462],\"mapped\",[11463]],[[11463,11463],\"valid\"],[[11464,11464],\"mapped\",[11465]],[[11465,11465],\"valid\"],[[11466,11466],\"mapped\",[11467]],[[11467,11467],\"valid\"],[[11468,11468],\"mapped\",[11469]],[[11469,11469],\"valid\"],[[11470,11470],\"mapped\",[11471]],[[11471,11471],\"valid\"],[[11472,11472],\"mapped\",[11473]],[[11473,11473],\"valid\"],[[11474,11474],\"mapped\",[11475]],[[11475,11475],\"valid\"],[[11476,11476],\"mapped\",[11477]],[[11477,11477],\"valid\"],[[11478,11478],\"mapped\",[11479]],[[11479,11479],\"valid\"],[[11480,11480],\"mapped\",[11481]],[[11481,11481],\"valid\"],[[11482,11482],\"mapped\",[11483]],[[11483,11483],\"valid\"],[[11484,11484],\"mapped\",[11485]],[[11485,11485],\"valid\"],[[11486,11486],\"mapped\",[11487]],[[11487,11487],\"valid\"],[[11488,11488],\"mapped\",[11489]],[[11489,11489],\"valid\"],[[11490,11490],\"mapped\",[11491]],[[11491,11492],\"valid\"],[[11493,11498],\"valid\",[],\"NV8\"],[[11499,11499],\"mapped\",[11500]],[[11500,11500],\"valid\"],[[11501,11501],\"mapped\",[11502]],[[11502,11505],\"valid\"],[[11506,11506],\"mapped\",[11507]],[[11507,11507],\"valid\"],[[11508,11512],\"disallowed\"],[[11513,11519],\"valid\",[],\"NV8\"],[[11520,11557],\"valid\"],[[11558,11558],\"disallowed\"],[[11559,11559],\"valid\"],[[11560,11564],\"disallowed\"],[[11565,11565],\"valid\"],[[11566,11567],\"disallowed\"],[[11568,11621],\"valid\"],[[11622,11623],\"valid\"],[[11624,11630],\"disallowed\"],[[11631,11631],\"mapped\",[11617]],[[11632,11632],\"valid\",[],\"NV8\"],[[11633,11646],\"disallowed\"],[[11647,11647],\"valid\"],[[11648,11670],\"valid\"],[[11671,11679],\"disallowed\"],[[11680,11686],\"valid\"],[[11687,11687],\"disallowed\"],[[11688,11694],\"valid\"],[[11695,11695],\"disallowed\"],[[11696,11702],\"valid\"],[[11703,11703],\"disallowed\"],[[11704,11710],\"valid\"],[[11711,11711],\"disallowed\"],[[11712,11718],\"valid\"],[[11719,11719],\"disallowed\"],[[11720,11726],\"valid\"],[[11727,11727],\"disallowed\"],[[11728,11734],\"valid\"],[[11735,11735],\"disallowed\"],[[11736,11742],\"valid\"],[[11743,11743],\"disallowed\"],[[11744,11775],\"valid\"],[[11776,11799],\"valid\",[],\"NV8\"],[[11800,11803],\"valid\",[],\"NV8\"],[[11804,11805],\"valid\",[],\"NV8\"],[[11806,11822],\"valid\",[],\"NV8\"],[[11823,11823],\"valid\"],[[11824,11824],\"valid\",[],\"NV8\"],[[11825,11825],\"valid\",[],\"NV8\"],[[11826,11835],\"valid\",[],\"NV8\"],[[11836,11842],\"valid\",[],\"NV8\"],[[11843,11903],\"disallowed\"],[[11904,11929],\"valid\",[],\"NV8\"],[[11930,11930],\"disallowed\"],[[11931,11934],\"valid\",[],\"NV8\"],[[11935,11935],\"mapped\",[27597]],[[11936,12018],\"valid\",[],\"NV8\"],[[12019,12019],\"mapped\",[40863]],[[12020,12031],\"disallowed\"],[[12032,12032],\"mapped\",[19968]],[[12033,12033],\"mapped\",[20008]],[[12034,12034],\"mapped\",[20022]],[[12035,12035],\"mapped\",[20031]],[[12036,12036],\"mapped\",[20057]],[[12037,12037],\"mapped\",[20101]],[[12038,12038],\"mapped\",[20108]],[[12039,12039],\"mapped\",[20128]],[[12040,12040],\"mapped\",[20154]],[[12041,12041],\"mapped\",[20799]],[[12042,12042],\"mapped\",[20837]],[[12043,12043],\"mapped\",[20843]],[[12044,12044],\"mapped\",[20866]],[[12045,12045],\"mapped\",[20886]],[[12046,12046],\"mapped\",[20907]],[[12047,12047],\"mapped\",[20960]],[[12048,12048],\"mapped\",[20981]],[[12049,12049],\"mapped\",[20992]],[[12050,12050],\"mapped\",[21147]],[[12051,12051],\"mapped\",[21241]],[[12052,12052],\"mapped\",[21269]],[[12053,12053],\"mapped\",[21274]],[[12054,12054],\"mapped\",[21304]],[[12055,12055],\"mapped\",[21313]],[[12056,12056],\"mapped\",[21340]],[[12057,12057],\"mapped\",[21353]],[[12058,12058],\"mapped\",[21378]],[[12059,12059],\"mapped\",[21430]],[[12060,12060],\"mapped\",[21448]],[[12061,12061],\"mapped\",[21475]],[[12062,12062],\"mapped\",[22231]],[[12063,12063],\"mapped\",[22303]],[[12064,12064],\"mapped\",[22763]],[[12065,12065],\"mapped\",[22786]],[[12066,12066],\"mapped\",[22794]],[[12067,12067],\"mapped\",[22805]],[[12068,12068],\"mapped\",[22823]],[[12069,12069],\"mapped\",[22899]],[[12070,12070],\"mapped\",[23376]],[[12071,12071],\"mapped\",[23424]],[[12072,12072],\"mapped\",[23544]],[[12073,12073],\"mapped\",[23567]],[[12074,12074],\"mapped\",[23586]],[[12075,12075],\"mapped\",[23608]],[[12076,12076],\"mapped\",[23662]],[[12077,12077],\"mapped\",[23665]],[[12078,12078],\"mapped\",[24027]],[[12079,12079],\"mapped\",[24037]],[[12080,12080],\"mapped\",[24049]],[[12081,12081],\"mapped\",[24062]],[[12082,12082],\"mapped\",[24178]],[[12083,12083],\"mapped\",[24186]],[[12084,12084],\"mapped\",[24191]],[[12085,12085],\"mapped\",[24308]],[[12086,12086],\"mapped\",[24318]],[[12087,12087],\"mapped\",[24331]],[[12088,12088],\"mapped\",[24339]],[[12089,12089],\"mapped\",[24400]],[[12090,12090],\"mapped\",[24417]],[[12091,12091],\"mapped\",[24435]],[[12092,12092],\"mapped\",[24515]],[[12093,12093],\"mapped\",[25096]],[[12094,12094],\"mapped\",[25142]],[[12095,12095],\"mapped\",[25163]],[[12096,12096],\"mapped\",[25903]],[[12097,12097],\"mapped\",[25908]],[[12098,12098],\"mapped\",[25991]],[[12099,12099],\"mapped\",[26007]],[[12100,12100],\"mapped\",[26020]],[[12101,12101],\"mapped\",[26041]],[[12102,12102],\"mapped\",[26080]],[[12103,12103],\"mapped\",[26085]],[[12104,12104],\"mapped\",[26352]],[[12105,12105],\"mapped\",[26376]],[[12106,12106],\"mapped\",[26408]],[[12107,12107],\"mapped\",[27424]],[[12108,12108],\"mapped\",[27490]],[[12109,12109],\"mapped\",[27513]],[[12110,12110],\"mapped\",[27571]],[[12111,12111],\"mapped\",[27595]],[[12112,12112],\"mapped\",[27604]],[[12113,12113],\"mapped\",[27611]],[[12114,12114],\"mapped\",[27663]],[[12115,12115],\"mapped\",[27668]],[[12116,12116],\"mapped\",[27700]],[[12117,12117],\"mapped\",[28779]],[[12118,12118],\"mapped\",[29226]],[[12119,12119],\"mapped\",[29238]],[[12120,12120],\"mapped\",[29243]],[[12121,12121],\"mapped\",[29247]],[[12122,12122],\"mapped\",[29255]],[[12123,12123],\"mapped\",[29273]],[[12124,12124],\"mapped\",[29275]],[[12125,12125],\"mapped\",[29356]],[[12126,12126],\"mapped\",[29572]],[[12127,12127],\"mapped\",[29577]],[[12128,12128],\"mapped\",[29916]],[[12129,12129],\"mapped\",[29926]],[[12130,12130],\"mapped\",[29976]],[[12131,12131],\"mapped\",[29983]],[[12132,12132],\"mapped\",[29992]],[[12133,12133],\"mapped\",[30000]],[[12134,12134],\"mapped\",[30091]],[[12135,12135],\"mapped\",[30098]],[[12136,12136],\"mapped\",[30326]],[[12137,12137],\"mapped\",[30333]],[[12138,12138],\"mapped\",[30382]],[[12139,12139],\"mapped\",[30399]],[[12140,12140],\"mapped\",[30446]],[[12141,12141],\"mapped\",[30683]],[[12142,12142],\"mapped\",[30690]],[[12143,12143],\"mapped\",[30707]],[[12144,12144],\"mapped\",[31034]],[[12145,12145],\"mapped\",[31160]],[[12146,12146],\"mapped\",[31166]],[[12147,12147],\"mapped\",[31348]],[[12148,12148],\"mapped\",[31435]],[[12149,12149],\"mapped\",[31481]],[[12150,12150],\"mapped\",[31859]],[[12151,12151],\"mapped\",[31992]],[[12152,12152],\"mapped\",[32566]],[[12153,12153],\"mapped\",[32593]],[[12154,12154],\"mapped\",[32650]],[[12155,12155],\"mapped\",[32701]],[[12156,12156],\"mapped\",[32769]],[[12157,12157],\"mapped\",[32780]],[[12158,12158],\"mapped\",[32786]],[[12159,12159],\"mapped\",[32819]],[[12160,12160],\"mapped\",[32895]],[[12161,12161],\"mapped\",[32905]],[[12162,12162],\"mapped\",[33251]],[[12163,12163],\"mapped\",[33258]],[[12164,12164],\"mapped\",[33267]],[[12165,12165],\"mapped\",[33276]],[[12166,12166],\"mapped\",[33292]],[[12167,12167],\"mapped\",[33307]],[[12168,12168],\"mapped\",[33311]],[[12169,12169],\"mapped\",[33390]],[[12170,12170],\"mapped\",[33394]],[[12171,12171],\"mapped\",[33400]],[[12172,12172],\"mapped\",[34381]],[[12173,12173],\"mapped\",[34411]],[[12174,12174],\"mapped\",[34880]],[[12175,12175],\"mapped\",[34892]],[[12176,12176],\"mapped\",[34915]],[[12177,12177],\"mapped\",[35198]],[[12178,12178],\"mapped\",[35211]],[[12179,12179],\"mapped\",[35282]],[[12180,12180],\"mapped\",[35328]],[[12181,12181],\"mapped\",[35895]],[[12182,12182],\"mapped\",[35910]],[[12183,12183],\"mapped\",[35925]],[[12184,12184],\"mapped\",[35960]],[[12185,12185],\"mapped\",[35997]],[[12186,12186],\"mapped\",[36196]],[[12187,12187],\"mapped\",[36208]],[[12188,12188],\"mapped\",[36275]],[[12189,12189],\"mapped\",[36523]],[[12190,12190],\"mapped\",[36554]],[[12191,12191],\"mapped\",[36763]],[[12192,12192],\"mapped\",[36784]],[[12193,12193],\"mapped\",[36789]],[[12194,12194],\"mapped\",[37009]],[[12195,12195],\"mapped\",[37193]],[[12196,12196],\"mapped\",[37318]],[[12197,12197],\"mapped\",[37324]],[[12198,12198],\"mapped\",[37329]],[[12199,12199],\"mapped\",[38263]],[[12200,12200],\"mapped\",[38272]],[[12201,12201],\"mapped\",[38428]],[[12202,12202],\"mapped\",[38582]],[[12203,12203],\"mapped\",[38585]],[[12204,12204],\"mapped\",[38632]],[[12205,12205],\"mapped\",[38737]],[[12206,12206],\"mapped\",[38750]],[[12207,12207],\"mapped\",[38754]],[[12208,12208],\"mapped\",[38761]],[[12209,12209],\"mapped\",[38859]],[[12210,12210],\"mapped\",[38893]],[[12211,12211],\"mapped\",[38899]],[[12212,12212],\"mapped\",[38913]],[[12213,12213],\"mapped\",[39080]],[[12214,12214],\"mapped\",[39131]],[[12215,12215],\"mapped\",[39135]],[[12216,12216],\"mapped\",[39318]],[[12217,12217],\"mapped\",[39321]],[[12218,12218],\"mapped\",[39340]],[[12219,12219],\"mapped\",[39592]],[[12220,12220],\"mapped\",[39640]],[[12221,12221],\"mapped\",[39647]],[[12222,12222],\"mapped\",[39717]],[[12223,12223],\"mapped\",[39727]],[[12224,12224],\"mapped\",[39730]],[[12225,12225],\"mapped\",[39740]],[[12226,12226],\"mapped\",[39770]],[[12227,12227],\"mapped\",[40165]],[[12228,12228],\"mapped\",[40565]],[[12229,12229],\"mapped\",[40575]],[[12230,12230],\"mapped\",[40613]],[[12231,12231],\"mapped\",[40635]],[[12232,12232],\"mapped\",[40643]],[[12233,12233],\"mapped\",[40653]],[[12234,12234],\"mapped\",[40657]],[[12235,12235],\"mapped\",[40697]],[[12236,12236],\"mapped\",[40701]],[[12237,12237],\"mapped\",[40718]],[[12238,12238],\"mapped\",[40723]],[[12239,12239],\"mapped\",[40736]],[[12240,12240],\"mapped\",[40763]],[[12241,12241],\"mapped\",[40778]],[[12242,12242],\"mapped\",[40786]],[[12243,12243],\"mapped\",[40845]],[[12244,12244],\"mapped\",[40860]],[[12245,12245],\"mapped\",[40864]],[[12246,12271],\"disallowed\"],[[12272,12283],\"disallowed\"],[[12284,12287],\"disallowed\"],[[12288,12288],\"disallowed_STD3_mapped\",[32]],[[12289,12289],\"valid\",[],\"NV8\"],[[12290,12290],\"mapped\",[46]],[[12291,12292],\"valid\",[],\"NV8\"],[[12293,12295],\"valid\"],[[12296,12329],\"valid\",[],\"NV8\"],[[12330,12333],\"valid\"],[[12334,12341],\"valid\",[],\"NV8\"],[[12342,12342],\"mapped\",[12306]],[[12343,12343],\"valid\",[],\"NV8\"],[[12344,12344],\"mapped\",[21313]],[[12345,12345],\"mapped\",[21316]],[[12346,12346],\"mapped\",[21317]],[[12347,12347],\"valid\",[],\"NV8\"],[[12348,12348],\"valid\"],[[12349,12349],\"valid\",[],\"NV8\"],[[12350,12350],\"valid\",[],\"NV8\"],[[12351,12351],\"valid\",[],\"NV8\"],[[12352,12352],\"disallowed\"],[[12353,12436],\"valid\"],[[12437,12438],\"valid\"],[[12439,12440],\"disallowed\"],[[12441,12442],\"valid\"],[[12443,12443],\"disallowed_STD3_mapped\",[32,12441]],[[12444,12444],\"disallowed_STD3_mapped\",[32,12442]],[[12445,12446],\"valid\"],[[12447,12447],\"mapped\",[12424,12426]],[[12448,12448],\"valid\",[],\"NV8\"],[[12449,12542],\"valid\"],[[12543,12543],\"mapped\",[12467,12488]],[[12544,12548],\"disallowed\"],[[12549,12588],\"valid\"],[[12589,12589],\"valid\"],[[12590,12592],\"disallowed\"],[[12593,12593],\"mapped\",[4352]],[[12594,12594],\"mapped\",[4353]],[[12595,12595],\"mapped\",[4522]],[[12596,12596],\"mapped\",[4354]],[[12597,12597],\"mapped\",[4524]],[[12598,12598],\"mapped\",[4525]],[[12599,12599],\"mapped\",[4355]],[[12600,12600],\"mapped\",[4356]],[[12601,12601],\"mapped\",[4357]],[[12602,12602],\"mapped\",[4528]],[[12603,12603],\"mapped\",[4529]],[[12604,12604],\"mapped\",[4530]],[[12605,12605],\"mapped\",[4531]],[[12606,12606],\"mapped\",[4532]],[[12607,12607],\"mapped\",[4533]],[[12608,12608],\"mapped\",[4378]],[[12609,12609],\"mapped\",[4358]],[[12610,12610],\"mapped\",[4359]],[[12611,12611],\"mapped\",[4360]],[[12612,12612],\"mapped\",[4385]],[[12613,12613],\"mapped\",[4361]],[[12614,12614],\"mapped\",[4362]],[[12615,12615],\"mapped\",[4363]],[[12616,12616],\"mapped\",[4364]],[[12617,12617],\"mapped\",[4365]],[[12618,12618],\"mapped\",[4366]],[[12619,12619],\"mapped\",[4367]],[[12620,12620],\"mapped\",[4368]],[[12621,12621],\"mapped\",[4369]],[[12622,12622],\"mapped\",[4370]],[[12623,12623],\"mapped\",[4449]],[[12624,12624],\"mapped\",[4450]],[[12625,12625],\"mapped\",[4451]],[[12626,12626],\"mapped\",[4452]],[[12627,12627],\"mapped\",[4453]],[[12628,12628],\"mapped\",[4454]],[[12629,12629],\"mapped\",[4455]],[[12630,12630],\"mapped\",[4456]],[[12631,12631],\"mapped\",[4457]],[[12632,12632],\"mapped\",[4458]],[[12633,12633],\"mapped\",[4459]],[[12634,12634],\"mapped\",[4460]],[[12635,12635],\"mapped\",[4461]],[[12636,12636],\"mapped\",[4462]],[[12637,12637],\"mapped\",[4463]],[[12638,12638],\"mapped\",[4464]],[[12639,12639],\"mapped\",[4465]],[[12640,12640],\"mapped\",[4466]],[[12641,12641],\"mapped\",[4467]],[[12642,12642],\"mapped\",[4468]],[[12643,12643],\"mapped\",[4469]],[[12644,12644],\"disallowed\"],[[12645,12645],\"mapped\",[4372]],[[12646,12646],\"mapped\",[4373]],[[12647,12647],\"mapped\",[4551]],[[12648,12648],\"mapped\",[4552]],[[12649,12649],\"mapped\",[4556]],[[12650,12650],\"mapped\",[4558]],[[12651,12651],\"mapped\",[4563]],[[12652,12652],\"mapped\",[4567]],[[12653,12653],\"mapped\",[4569]],[[12654,12654],\"mapped\",[4380]],[[12655,12655],\"mapped\",[4573]],[[12656,12656],\"mapped\",[4575]],[[12657,12657],\"mapped\",[4381]],[[12658,12658],\"mapped\",[4382]],[[12659,12659],\"mapped\",[4384]],[[12660,12660],\"mapped\",[4386]],[[12661,12661],\"mapped\",[4387]],[[12662,12662],\"mapped\",[4391]],[[12663,12663],\"mapped\",[4393]],[[12664,12664],\"mapped\",[4395]],[[12665,12665],\"mapped\",[4396]],[[12666,12666],\"mapped\",[4397]],[[12667,12667],\"mapped\",[4398]],[[12668,12668],\"mapped\",[4399]],[[12669,12669],\"mapped\",[4402]],[[12670,12670],\"mapped\",[4406]],[[12671,12671],\"mapped\",[4416]],[[12672,12672],\"mapped\",[4423]],[[12673,12673],\"mapped\",[4428]],[[12674,12674],\"mapped\",[4593]],[[12675,12675],\"mapped\",[4594]],[[12676,12676],\"mapped\",[4439]],[[12677,12677],\"mapped\",[4440]],[[12678,12678],\"mapped\",[4441]],[[12679,12679],\"mapped\",[4484]],[[12680,12680],\"mapped\",[4485]],[[12681,12681],\"mapped\",[4488]],[[12682,12682],\"mapped\",[4497]],[[12683,12683],\"mapped\",[4498]],[[12684,12684],\"mapped\",[4500]],[[12685,12685],\"mapped\",[4510]],[[12686,12686],\"mapped\",[4513]],[[12687,12687],\"disallowed\"],[[12688,12689],\"valid\",[],\"NV8\"],[[12690,12690],\"mapped\",[19968]],[[12691,12691],\"mapped\",[20108]],[[12692,12692],\"mapped\",[19977]],[[12693,12693],\"mapped\",[22235]],[[12694,12694],\"mapped\",[19978]],[[12695,12695],\"mapped\",[20013]],[[12696,12696],\"mapped\",[19979]],[[12697,12697],\"mapped\",[30002]],[[12698,12698],\"mapped\",[20057]],[[12699,12699],\"mapped\",[19993]],[[12700,12700],\"mapped\",[19969]],[[12701,12701],\"mapped\",[22825]],[[12702,12702],\"mapped\",[22320]],[[12703,12703],\"mapped\",[20154]],[[12704,12727],\"valid\"],[[12728,12730],\"valid\"],[[12731,12735],\"disallowed\"],[[12736,12751],\"valid\",[],\"NV8\"],[[12752,12771],\"valid\",[],\"NV8\"],[[12772,12783],\"disallowed\"],[[12784,12799],\"valid\"],[[12800,12800],\"disallowed_STD3_mapped\",[40,4352,41]],[[12801,12801],\"disallowed_STD3_mapped\",[40,4354,41]],[[12802,12802],\"disallowed_STD3_mapped\",[40,4355,41]],[[12803,12803],\"disallowed_STD3_mapped\",[40,4357,41]],[[12804,12804],\"disallowed_STD3_mapped\",[40,4358,41]],[[12805,12805],\"disallowed_STD3_mapped\",[40,4359,41]],[[12806,12806],\"disallowed_STD3_mapped\",[40,4361,41]],[[12807,12807],\"disallowed_STD3_mapped\",[40,4363,41]],[[12808,12808],\"disallowed_STD3_mapped\",[40,4364,41]],[[12809,12809],\"disallowed_STD3_mapped\",[40,4366,41]],[[12810,12810],\"disallowed_STD3_mapped\",[40,4367,41]],[[12811,12811],\"disallowed_STD3_mapped\",[40,4368,41]],[[12812,12812],\"disallowed_STD3_mapped\",[40,4369,41]],[[12813,12813],\"disallowed_STD3_mapped\",[40,4370,41]],[[12814,12814],\"disallowed_STD3_mapped\",[40,44032,41]],[[12815,12815],\"disallowed_STD3_mapped\",[40,45208,41]],[[12816,12816],\"disallowed_STD3_mapped\",[40,45796,41]],[[12817,12817],\"disallowed_STD3_mapped\",[40,46972,41]],[[12818,12818],\"disallowed_STD3_mapped\",[40,47560,41]],[[12819,12819],\"disallowed_STD3_mapped\",[40,48148,41]],[[12820,12820],\"disallowed_STD3_mapped\",[40,49324,41]],[[12821,12821],\"disallowed_STD3_mapped\",[40,50500,41]],[[12822,12822],\"disallowed_STD3_mapped\",[40,51088,41]],[[12823,12823],\"disallowed_STD3_mapped\",[40,52264,41]],[[12824,12824],\"disallowed_STD3_mapped\",[40,52852,41]],[[12825,12825],\"disallowed_STD3_mapped\",[40,53440,41]],[[12826,12826],\"disallowed_STD3_mapped\",[40,54028,41]],[[12827,12827],\"disallowed_STD3_mapped\",[40,54616,41]],[[12828,12828],\"disallowed_STD3_mapped\",[40,51452,41]],[[12829,12829],\"disallowed_STD3_mapped\",[40,50724,51204,41]],[[12830,12830],\"disallowed_STD3_mapped\",[40,50724,54980,41]],[[12831,12831],\"disallowed\"],[[12832,12832],\"disallowed_STD3_mapped\",[40,19968,41]],[[12833,12833],\"disallowed_STD3_mapped\",[40,20108,41]],[[12834,12834],\"disallowed_STD3_mapped\",[40,19977,41]],[[12835,12835],\"disallowed_STD3_mapped\",[40,22235,41]],[[12836,12836],\"disallowed_STD3_mapped\",[40,20116,41]],[[12837,12837],\"disallowed_STD3_mapped\",[40,20845,41]],[[12838,12838],\"disallowed_STD3_mapped\",[40,19971,41]],[[12839,12839],\"disallowed_STD3_mapped\",[40,20843,41]],[[12840,12840],\"disallowed_STD3_mapped\",[40,20061,41]],[[12841,12841],\"disallowed_STD3_mapped\",[40,21313,41]],[[12842,12842],\"disallowed_STD3_mapped\",[40,26376,41]],[[12843,12843],\"disallowed_STD3_mapped\",[40,28779,41]],[[12844,12844],\"disallowed_STD3_mapped\",[40,27700,41]],[[12845,12845],\"disallowed_STD3_mapped\",[40,26408,41]],[[12846,12846],\"disallowed_STD3_mapped\",[40,37329,41]],[[12847,12847],\"disallowed_STD3_mapped\",[40,22303,41]],[[12848,12848],\"disallowed_STD3_mapped\",[40,26085,41]],[[12849,12849],\"disallowed_STD3_mapped\",[40,26666,41]],[[12850,12850],\"disallowed_STD3_mapped\",[40,26377,41]],[[12851,12851],\"disallowed_STD3_mapped\",[40,31038,41]],[[12852,12852],\"disallowed_STD3_mapped\",[40,21517,41]],[[12853,12853],\"disallowed_STD3_mapped\",[40,29305,41]],[[12854,12854],\"disallowed_STD3_mapped\",[40,36001,41]],[[12855,12855],\"disallowed_STD3_mapped\",[40,31069,41]],[[12856,12856],\"disallowed_STD3_mapped\",[40,21172,41]],[[12857,12857],\"disallowed_STD3_mapped\",[40,20195,41]],[[12858,12858],\"disallowed_STD3_mapped\",[40,21628,41]],[[12859,12859],\"disallowed_STD3_mapped\",[40,23398,41]],[[12860,12860],\"disallowed_STD3_mapped\",[40,30435,41]],[[12861,12861],\"disallowed_STD3_mapped\",[40,20225,41]],[[12862,12862],\"disallowed_STD3_mapped\",[40,36039,41]],[[12863,12863],\"disallowed_STD3_mapped\",[40,21332,41]],[[12864,12864],\"disallowed_STD3_mapped\",[40,31085,41]],[[12865,12865],\"disallowed_STD3_mapped\",[40,20241,41]],[[12866,12866],\"disallowed_STD3_mapped\",[40,33258,41]],[[12867,12867],\"disallowed_STD3_mapped\",[40,33267,41]],[[12868,12868],\"mapped\",[21839]],[[12869,12869],\"mapped\",[24188]],[[12870,12870],\"mapped\",[25991]],[[12871,12871],\"mapped\",[31631]],[[12872,12879],\"valid\",[],\"NV8\"],[[12880,12880],\"mapped\",[112,116,101]],[[12881,12881],\"mapped\",[50,49]],[[12882,12882],\"mapped\",[50,50]],[[12883,12883],\"mapped\",[50,51]],[[12884,12884],\"mapped\",[50,52]],[[12885,12885],\"mapped\",[50,53]],[[12886,12886],\"mapped\",[50,54]],[[12887,12887],\"mapped\",[50,55]],[[12888,12888],\"mapped\",[50,56]],[[12889,12889],\"mapped\",[50,57]],[[12890,12890],\"mapped\",[51,48]],[[12891,12891],\"mapped\",[51,49]],[[12892,12892],\"mapped\",[51,50]],[[12893,12893],\"mapped\",[51,51]],[[12894,12894],\"mapped\",[51,52]],[[12895,12895],\"mapped\",[51,53]],[[12896,12896],\"mapped\",[4352]],[[12897,12897],\"mapped\",[4354]],[[12898,12898],\"mapped\",[4355]],[[12899,12899],\"mapped\",[4357]],[[12900,12900],\"mapped\",[4358]],[[12901,12901],\"mapped\",[4359]],[[12902,12902],\"mapped\",[4361]],[[12903,12903],\"mapped\",[4363]],[[12904,12904],\"mapped\",[4364]],[[12905,12905],\"mapped\",[4366]],[[12906,12906],\"mapped\",[4367]],[[12907,12907],\"mapped\",[4368]],[[12908,12908],\"mapped\",[4369]],[[12909,12909],\"mapped\",[4370]],[[12910,12910],\"mapped\",[44032]],[[12911,12911],\"mapped\",[45208]],[[12912,12912],\"mapped\",[45796]],[[12913,12913],\"mapped\",[46972]],[[12914,12914],\"mapped\",[47560]],[[12915,12915],\"mapped\",[48148]],[[12916,12916],\"mapped\",[49324]],[[12917,12917],\"mapped\",[50500]],[[12918,12918],\"mapped\",[51088]],[[12919,12919],\"mapped\",[52264]],[[12920,12920],\"mapped\",[52852]],[[12921,12921],\"mapped\",[53440]],[[12922,12922],\"mapped\",[54028]],[[12923,12923],\"mapped\",[54616]],[[12924,12924],\"mapped\",[52280,44256]],[[12925,12925],\"mapped\",[51452,51032]],[[12926,12926],\"mapped\",[50864]],[[12927,12927],\"valid\",[],\"NV8\"],[[12928,12928],\"mapped\",[19968]],[[12929,12929],\"mapped\",[20108]],[[12930,12930],\"mapped\",[19977]],[[12931,12931],\"mapped\",[22235]],[[12932,12932],\"mapped\",[20116]],[[12933,12933],\"mapped\",[20845]],[[12934,12934],\"mapped\",[19971]],[[12935,12935],\"mapped\",[20843]],[[12936,12936],\"mapped\",[20061]],[[12937,12937],\"mapped\",[21313]],[[12938,12938],\"mapped\",[26376]],[[12939,12939],\"mapped\",[28779]],[[12940,12940],\"mapped\",[27700]],[[12941,12941],\"mapped\",[26408]],[[12942,12942],\"mapped\",[37329]],[[12943,12943],\"mapped\",[22303]],[[12944,12944],\"mapped\",[26085]],[[12945,12945],\"mapped\",[26666]],[[12946,12946],\"mapped\",[26377]],[[12947,12947],\"mapped\",[31038]],[[12948,12948],\"mapped\",[21517]],[[12949,12949],\"mapped\",[29305]],[[12950,12950],\"mapped\",[36001]],[[12951,12951],\"mapped\",[31069]],[[12952,12952],\"mapped\",[21172]],[[12953,12953],\"mapped\",[31192]],[[12954,12954],\"mapped\",[30007]],[[12955,12955],\"mapped\",[22899]],[[12956,12956],\"mapped\",[36969]],[[12957,12957],\"mapped\",[20778]],[[12958,12958],\"mapped\",[21360]],[[12959,12959],\"mapped\",[27880]],[[12960,12960],\"mapped\",[38917]],[[12961,12961],\"mapped\",[20241]],[[12962,12962],\"mapped\",[20889]],[[12963,12963],\"mapped\",[27491]],[[12964,12964],\"mapped\",[19978]],[[12965,12965],\"mapped\",[20013]],[[12966,12966],\"mapped\",[19979]],[[12967,12967],\"mapped\",[24038]],[[12968,12968],\"mapped\",[21491]],[[12969,12969],\"mapped\",[21307]],[[12970,12970],\"mapped\",[23447]],[[12971,12971],\"mapped\",[23398]],[[12972,12972],\"mapped\",[30435]],[[12973,12973],\"mapped\",[20225]],[[12974,12974],\"mapped\",[36039]],[[12975,12975],\"mapped\",[21332]],[[12976,12976],\"mapped\",[22812]],[[12977,12977],\"mapped\",[51,54]],[[12978,12978],\"mapped\",[51,55]],[[12979,12979],\"mapped\",[51,56]],[[12980,12980],\"mapped\",[51,57]],[[12981,12981],\"mapped\",[52,48]],[[12982,12982],\"mapped\",[52,49]],[[12983,12983],\"mapped\",[52,50]],[[12984,12984],\"mapped\",[52,51]],[[12985,12985],\"mapped\",[52,52]],[[12986,12986],\"mapped\",[52,53]],[[12987,12987],\"mapped\",[52,54]],[[12988,12988],\"mapped\",[52,55]],[[12989,12989],\"mapped\",[52,56]],[[12990,12990],\"mapped\",[52,57]],[[12991,12991],\"mapped\",[53,48]],[[12992,12992],\"mapped\",[49,26376]],[[12993,12993],\"mapped\",[50,26376]],[[12994,12994],\"mapped\",[51,26376]],[[12995,12995],\"mapped\",[52,26376]],[[12996,12996],\"mapped\",[53,26376]],[[12997,12997],\"mapped\",[54,26376]],[[12998,12998],\"mapped\",[55,26376]],[[12999,12999],\"mapped\",[56,26376]],[[13000,13000],\"mapped\",[57,26376]],[[13001,13001],\"mapped\",[49,48,26376]],[[13002,13002],\"mapped\",[49,49,26376]],[[13003,13003],\"mapped\",[49,50,26376]],[[13004,13004],\"mapped\",[104,103]],[[13005,13005],\"mapped\",[101,114,103]],[[13006,13006],\"mapped\",[101,118]],[[13007,13007],\"mapped\",[108,116,100]],[[13008,13008],\"mapped\",[12450]],[[13009,13009],\"mapped\",[12452]],[[13010,13010],\"mapped\",[12454]],[[13011,13011],\"mapped\",[12456]],[[13012,13012],\"mapped\",[12458]],[[13013,13013],\"mapped\",[12459]],[[13014,13014],\"mapped\",[12461]],[[13015,13015],\"mapped\",[12463]],[[13016,13016],\"mapped\",[12465]],[[13017,13017],\"mapped\",[12467]],[[13018,13018],\"mapped\",[12469]],[[13019,13019],\"mapped\",[12471]],[[13020,13020],\"mapped\",[12473]],[[13021,13021],\"mapped\",[12475]],[[13022,13022],\"mapped\",[12477]],[[13023,13023],\"mapped\",[12479]],[[13024,13024],\"mapped\",[12481]],[[13025,13025],\"mapped\",[12484]],[[13026,13026],\"mapped\",[12486]],[[13027,13027],\"mapped\",[12488]],[[13028,13028],\"mapped\",[12490]],[[13029,13029],\"mapped\",[12491]],[[13030,13030],\"mapped\",[12492]],[[13031,13031],\"mapped\",[12493]],[[13032,13032],\"mapped\",[12494]],[[13033,13033],\"mapped\",[12495]],[[13034,13034],\"mapped\",[12498]],[[13035,13035],\"mapped\",[12501]],[[13036,13036],\"mapped\",[12504]],[[13037,13037],\"mapped\",[12507]],[[13038,13038],\"mapped\",[12510]],[[13039,13039],\"mapped\",[12511]],[[13040,13040],\"mapped\",[12512]],[[13041,13041],\"mapped\",[12513]],[[13042,13042],\"mapped\",[12514]],[[13043,13043],\"mapped\",[12516]],[[13044,13044],\"mapped\",[12518]],[[13045,13045],\"mapped\",[12520]],[[13046,13046],\"mapped\",[12521]],[[13047,13047],\"mapped\",[12522]],[[13048,13048],\"mapped\",[12523]],[[13049,13049],\"mapped\",[12524]],[[13050,13050],\"mapped\",[12525]],[[13051,13051],\"mapped\",[12527]],[[13052,13052],\"mapped\",[12528]],[[13053,13053],\"mapped\",[12529]],[[13054,13054],\"mapped\",[12530]],[[13055,13055],\"disallowed\"],[[13056,13056],\"mapped\",[12450,12497,12540,12488]],[[13057,13057],\"mapped\",[12450,12523,12501,12449]],[[13058,13058],\"mapped\",[12450,12531,12506,12450]],[[13059,13059],\"mapped\",[12450,12540,12523]],[[13060,13060],\"mapped\",[12452,12491,12531,12464]],[[13061,13061],\"mapped\",[12452,12531,12481]],[[13062,13062],\"mapped\",[12454,12457,12531]],[[13063,13063],\"mapped\",[12456,12473,12463,12540,12489]],[[13064,13064],\"mapped\",[12456,12540,12459,12540]],[[13065,13065],\"mapped\",[12458,12531,12473]],[[13066,13066],\"mapped\",[12458,12540,12512]],[[13067,13067],\"mapped\",[12459,12452,12522]],[[13068,13068],\"mapped\",[12459,12521,12483,12488]],[[13069,13069],\"mapped\",[12459,12525,12522,12540]],[[13070,13070],\"mapped\",[12460,12525,12531]],[[13071,13071],\"mapped\",[12460,12531,12510]],[[13072,13072],\"mapped\",[12462,12460]],[[13073,13073],\"mapped\",[12462,12491,12540]],[[13074,13074],\"mapped\",[12461,12517,12522,12540]],[[13075,13075],\"mapped\",[12462,12523,12480,12540]],[[13076,13076],\"mapped\",[12461,12525]],[[13077,13077],\"mapped\",[12461,12525,12464,12521,12512]],[[13078,13078],\"mapped\",[12461,12525,12513,12540,12488,12523]],[[13079,13079],\"mapped\",[12461,12525,12527,12483,12488]],[[13080,13080],\"mapped\",[12464,12521,12512]],[[13081,13081],\"mapped\",[12464,12521,12512,12488,12531]],[[13082,13082],\"mapped\",[12463,12523,12476,12452,12525]],[[13083,13083],\"mapped\",[12463,12525,12540,12493]],[[13084,13084],\"mapped\",[12465,12540,12473]],[[13085,13085],\"mapped\",[12467,12523,12490]],[[13086,13086],\"mapped\",[12467,12540,12509]],[[13087,13087],\"mapped\",[12469,12452,12463,12523]],[[13088,13088],\"mapped\",[12469,12531,12481,12540,12512]],[[13089,13089],\"mapped\",[12471,12522,12531,12464]],[[13090,13090],\"mapped\",[12475,12531,12481]],[[13091,13091],\"mapped\",[12475,12531,12488]],[[13092,13092],\"mapped\",[12480,12540,12473]],[[13093,13093],\"mapped\",[12487,12471]],[[13094,13094],\"mapped\",[12489,12523]],[[13095,13095],\"mapped\",[12488,12531]],[[13096,13096],\"mapped\",[12490,12494]],[[13097,13097],\"mapped\",[12494,12483,12488]],[[13098,13098],\"mapped\",[12495,12452,12484]],[[13099,13099],\"mapped\",[12497,12540,12475,12531,12488]],[[13100,13100],\"mapped\",[12497,12540,12484]],[[13101,13101],\"mapped\",[12496,12540,12524,12523]],[[13102,13102],\"mapped\",[12500,12450,12473,12488,12523]],[[13103,13103],\"mapped\",[12500,12463,12523]],[[13104,13104],\"mapped\",[12500,12467]],[[13105,13105],\"mapped\",[12499,12523]],[[13106,13106],\"mapped\",[12501,12449,12521,12483,12489]],[[13107,13107],\"mapped\",[12501,12451,12540,12488]],[[13108,13108],\"mapped\",[12502,12483,12471,12455,12523]],[[13109,13109],\"mapped\",[12501,12521,12531]],[[13110,13110],\"mapped\",[12504,12463,12479,12540,12523]],[[13111,13111],\"mapped\",[12506,12477]],[[13112,13112],\"mapped\",[12506,12491,12498]],[[13113,13113],\"mapped\",[12504,12523,12484]],[[13114,13114],\"mapped\",[12506,12531,12473]],[[13115,13115],\"mapped\",[12506,12540,12472]],[[13116,13116],\"mapped\",[12505,12540,12479]],[[13117,13117],\"mapped\",[12509,12452,12531,12488]],[[13118,13118],\"mapped\",[12508,12523,12488]],[[13119,13119],\"mapped\",[12507,12531]],[[13120,13120],\"mapped\",[12509,12531,12489]],[[13121,13121],\"mapped\",[12507,12540,12523]],[[13122,13122],\"mapped\",[12507,12540,12531]],[[13123,13123],\"mapped\",[12510,12452,12463,12525]],[[13124,13124],\"mapped\",[12510,12452,12523]],[[13125,13125],\"mapped\",[12510,12483,12495]],[[13126,13126],\"mapped\",[12510,12523,12463]],[[13127,13127],\"mapped\",[12510,12531,12471,12519,12531]],[[13128,13128],\"mapped\",[12511,12463,12525,12531]],[[13129,13129],\"mapped\",[12511,12522]],[[13130,13130],\"mapped\",[12511,12522,12496,12540,12523]],[[13131,13131],\"mapped\",[12513,12460]],[[13132,13132],\"mapped\",[12513,12460,12488,12531]],[[13133,13133],\"mapped\",[12513,12540,12488,12523]],[[13134,13134],\"mapped\",[12516,12540,12489]],[[13135,13135],\"mapped\",[12516,12540,12523]],[[13136,13136],\"mapped\",[12518,12450,12531]],[[13137,13137],\"mapped\",[12522,12483,12488,12523]],[[13138,13138],\"mapped\",[12522,12521]],[[13139,13139],\"mapped\",[12523,12500,12540]],[[13140,13140],\"mapped\",[12523,12540,12502,12523]],[[13141,13141],\"mapped\",[12524,12512]],[[13142,13142],\"mapped\",[12524,12531,12488,12466,12531]],[[13143,13143],\"mapped\",[12527,12483,12488]],[[13144,13144],\"mapped\",[48,28857]],[[13145,13145],\"mapped\",[49,28857]],[[13146,13146],\"mapped\",[50,28857]],[[13147,13147],\"mapped\",[51,28857]],[[13148,13148],\"mapped\",[52,28857]],[[13149,13149],\"mapped\",[53,28857]],[[13150,13150],\"mapped\",[54,28857]],[[13151,13151],\"mapped\",[55,28857]],[[13152,13152],\"mapped\",[56,28857]],[[13153,13153],\"mapped\",[57,28857]],[[13154,13154],\"mapped\",[49,48,28857]],[[13155,13155],\"mapped\",[49,49,28857]],[[13156,13156],\"mapped\",[49,50,28857]],[[13157,13157],\"mapped\",[49,51,28857]],[[13158,13158],\"mapped\",[49,52,28857]],[[13159,13159],\"mapped\",[49,53,28857]],[[13160,13160],\"mapped\",[49,54,28857]],[[13161,13161],\"mapped\",[49,55,28857]],[[13162,13162],\"mapped\",[49,56,28857]],[[13163,13163],\"mapped\",[49,57,28857]],[[13164,13164],\"mapped\",[50,48,28857]],[[13165,13165],\"mapped\",[50,49,28857]],[[13166,13166],\"mapped\",[50,50,28857]],[[13167,13167],\"mapped\",[50,51,28857]],[[13168,13168],\"mapped\",[50,52,28857]],[[13169,13169],\"mapped\",[104,112,97]],[[13170,13170],\"mapped\",[100,97]],[[13171,13171],\"mapped\",[97,117]],[[13172,13172],\"mapped\",[98,97,114]],[[13173,13173],\"mapped\",[111,118]],[[13174,13174],\"mapped\",[112,99]],[[13175,13175],\"mapped\",[100,109]],[[13176,13176],\"mapped\",[100,109,50]],[[13177,13177],\"mapped\",[100,109,51]],[[13178,13178],\"mapped\",[105,117]],[[13179,13179],\"mapped\",[24179,25104]],[[13180,13180],\"mapped\",[26157,21644]],[[13181,13181],\"mapped\",[22823,27491]],[[13182,13182],\"mapped\",[26126,27835]],[[13183,13183],\"mapped\",[26666,24335,20250,31038]],[[13184,13184],\"mapped\",[112,97]],[[13185,13185],\"mapped\",[110,97]],[[13186,13186],\"mapped\",[956,97]],[[13187,13187],\"mapped\",[109,97]],[[13188,13188],\"mapped\",[107,97]],[[13189,13189],\"mapped\",[107,98]],[[13190,13190],\"mapped\",[109,98]],[[13191,13191],\"mapped\",[103,98]],[[13192,13192],\"mapped\",[99,97,108]],[[13193,13193],\"mapped\",[107,99,97,108]],[[13194,13194],\"mapped\",[112,102]],[[13195,13195],\"mapped\",[110,102]],[[13196,13196],\"mapped\",[956,102]],[[13197,13197],\"mapped\",[956,103]],[[13198,13198],\"mapped\",[109,103]],[[13199,13199],\"mapped\",[107,103]],[[13200,13200],\"mapped\",[104,122]],[[13201,13201],\"mapped\",[107,104,122]],[[13202,13202],\"mapped\",[109,104,122]],[[13203,13203],\"mapped\",[103,104,122]],[[13204,13204],\"mapped\",[116,104,122]],[[13205,13205],\"mapped\",[956,108]],[[13206,13206],\"mapped\",[109,108]],[[13207,13207],\"mapped\",[100,108]],[[13208,13208],\"mapped\",[107,108]],[[13209,13209],\"mapped\",[102,109]],[[13210,13210],\"mapped\",[110,109]],[[13211,13211],\"mapped\",[956,109]],[[13212,13212],\"mapped\",[109,109]],[[13213,13213],\"mapped\",[99,109]],[[13214,13214],\"mapped\",[107,109]],[[13215,13215],\"mapped\",[109,109,50]],[[13216,13216],\"mapped\",[99,109,50]],[[13217,13217],\"mapped\",[109,50]],[[13218,13218],\"mapped\",[107,109,50]],[[13219,13219],\"mapped\",[109,109,51]],[[13220,13220],\"mapped\",[99,109,51]],[[13221,13221],\"mapped\",[109,51]],[[13222,13222],\"mapped\",[107,109,51]],[[13223,13223],\"mapped\",[109,8725,115]],[[13224,13224],\"mapped\",[109,8725,115,50]],[[13225,13225],\"mapped\",[112,97]],[[13226,13226],\"mapped\",[107,112,97]],[[13227,13227],\"mapped\",[109,112,97]],[[13228,13228],\"mapped\",[103,112,97]],[[13229,13229],\"mapped\",[114,97,100]],[[13230,13230],\"mapped\",[114,97,100,8725,115]],[[13231,13231],\"mapped\",[114,97,100,8725,115,50]],[[13232,13232],\"mapped\",[112,115]],[[13233,13233],\"mapped\",[110,115]],[[13234,13234],\"mapped\",[956,115]],[[13235,13235],\"mapped\",[109,115]],[[13236,13236],\"mapped\",[112,118]],[[13237,13237],\"mapped\",[110,118]],[[13238,13238],\"mapped\",[956,118]],[[13239,13239],\"mapped\",[109,118]],[[13240,13240],\"mapped\",[107,118]],[[13241,13241],\"mapped\",[109,118]],[[13242,13242],\"mapped\",[112,119]],[[13243,13243],\"mapped\",[110,119]],[[13244,13244],\"mapped\",[956,119]],[[13245,13245],\"mapped\",[109,119]],[[13246,13246],\"mapped\",[107,119]],[[13247,13247],\"mapped\",[109,119]],[[13248,13248],\"mapped\",[107,969]],[[13249,13249],\"mapped\",[109,969]],[[13250,13250],\"disallowed\"],[[13251,13251],\"mapped\",[98,113]],[[13252,13252],\"mapped\",[99,99]],[[13253,13253],\"mapped\",[99,100]],[[13254,13254],\"mapped\",[99,8725,107,103]],[[13255,13255],\"disallowed\"],[[13256,13256],\"mapped\",[100,98]],[[13257,13257],\"mapped\",[103,121]],[[13258,13258],\"mapped\",[104,97]],[[13259,13259],\"mapped\",[104,112]],[[13260,13260],\"mapped\",[105,110]],[[13261,13261],\"mapped\",[107,107]],[[13262,13262],\"mapped\",[107,109]],[[13263,13263],\"mapped\",[107,116]],[[13264,13264],\"mapped\",[108,109]],[[13265,13265],\"mapped\",[108,110]],[[13266,13266],\"mapped\",[108,111,103]],[[13267,13267],\"mapped\",[108,120]],[[13268,13268],\"mapped\",[109,98]],[[13269,13269],\"mapped\",[109,105,108]],[[13270,13270],\"mapped\",[109,111,108]],[[13271,13271],\"mapped\",[112,104]],[[13272,13272],\"disallowed\"],[[13273,13273],\"mapped\",[112,112,109]],[[13274,13274],\"mapped\",[112,114]],[[13275,13275],\"mapped\",[115,114]],[[13276,13276],\"mapped\",[115,118]],[[13277,13277],\"mapped\",[119,98]],[[13278,13278],\"mapped\",[118,8725,109]],[[13279,13279],\"mapped\",[97,8725,109]],[[13280,13280],\"mapped\",[49,26085]],[[13281,13281],\"mapped\",[50,26085]],[[13282,13282],\"mapped\",[51,26085]],[[13283,13283],\"mapped\",[52,26085]],[[13284,13284],\"mapped\",[53,26085]],[[13285,13285],\"mapped\",[54,26085]],[[13286,13286],\"mapped\",[55,26085]],[[13287,13287],\"mapped\",[56,26085]],[[13288,13288],\"mapped\",[57,26085]],[[13289,13289],\"mapped\",[49,48,26085]],[[13290,13290],\"mapped\",[49,49,26085]],[[13291,13291],\"mapped\",[49,50,26085]],[[13292,13292],\"mapped\",[49,51,26085]],[[13293,13293],\"mapped\",[49,52,26085]],[[13294,13294],\"mapped\",[49,53,26085]],[[13295,13295],\"mapped\",[49,54,26085]],[[13296,13296],\"mapped\",[49,55,26085]],[[13297,13297],\"mapped\",[49,56,26085]],[[13298,13298],\"mapped\",[49,57,26085]],[[13299,13299],\"mapped\",[50,48,26085]],[[13300,13300],\"mapped\",[50,49,26085]],[[13301,13301],\"mapped\",[50,50,26085]],[[13302,13302],\"mapped\",[50,51,26085]],[[13303,13303],\"mapped\",[50,52,26085]],[[13304,13304],\"mapped\",[50,53,26085]],[[13305,13305],\"mapped\",[50,54,26085]],[[13306,13306],\"mapped\",[50,55,26085]],[[13307,13307],\"mapped\",[50,56,26085]],[[13308,13308],\"mapped\",[50,57,26085]],[[13309,13309],\"mapped\",[51,48,26085]],[[13310,13310],\"mapped\",[51,49,26085]],[[13311,13311],\"mapped\",[103,97,108]],[[13312,19893],\"valid\"],[[19894,19903],\"disallowed\"],[[19904,19967],\"valid\",[],\"NV8\"],[[19968,40869],\"valid\"],[[40870,40891],\"valid\"],[[40892,40899],\"valid\"],[[40900,40907],\"valid\"],[[40908,40908],\"valid\"],[[40909,40917],\"valid\"],[[40918,40959],\"disallowed\"],[[40960,42124],\"valid\"],[[42125,42127],\"disallowed\"],[[42128,42145],\"valid\",[],\"NV8\"],[[42146,42147],\"valid\",[],\"NV8\"],[[42148,42163],\"valid\",[],\"NV8\"],[[42164,42164],\"valid\",[],\"NV8\"],[[42165,42176],\"valid\",[],\"NV8\"],[[42177,42177],\"valid\",[],\"NV8\"],[[42178,42180],\"valid\",[],\"NV8\"],[[42181,42181],\"valid\",[],\"NV8\"],[[42182,42182],\"valid\",[],\"NV8\"],[[42183,42191],\"disallowed\"],[[42192,42237],\"valid\"],[[42238,42239],\"valid\",[],\"NV8\"],[[42240,42508],\"valid\"],[[42509,42511],\"valid\",[],\"NV8\"],[[42512,42539],\"valid\"],[[42540,42559],\"disallowed\"],[[42560,42560],\"mapped\",[42561]],[[42561,42561],\"valid\"],[[42562,42562],\"mapped\",[42563]],[[42563,42563],\"valid\"],[[42564,42564],\"mapped\",[42565]],[[42565,42565],\"valid\"],[[42566,42566],\"mapped\",[42567]],[[42567,42567],\"valid\"],[[42568,42568],\"mapped\",[42569]],[[42569,42569],\"valid\"],[[42570,42570],\"mapped\",[42571]],[[42571,42571],\"valid\"],[[42572,42572],\"mapped\",[42573]],[[42573,42573],\"valid\"],[[42574,42574],\"mapped\",[42575]],[[42575,42575],\"valid\"],[[42576,42576],\"mapped\",[42577]],[[42577,42577],\"valid\"],[[42578,42578],\"mapped\",[42579]],[[42579,42579],\"valid\"],[[42580,42580],\"mapped\",[42581]],[[42581,42581],\"valid\"],[[42582,42582],\"mapped\",[42583]],[[42583,42583],\"valid\"],[[42584,42584],\"mapped\",[42585]],[[42585,42585],\"valid\"],[[42586,42586],\"mapped\",[42587]],[[42587,42587],\"valid\"],[[42588,42588],\"mapped\",[42589]],[[42589,42589],\"valid\"],[[42590,42590],\"mapped\",[42591]],[[42591,42591],\"valid\"],[[42592,42592],\"mapped\",[42593]],[[42593,42593],\"valid\"],[[42594,42594],\"mapped\",[42595]],[[42595,42595],\"valid\"],[[42596,42596],\"mapped\",[42597]],[[42597,42597],\"valid\"],[[42598,42598],\"mapped\",[42599]],[[42599,42599],\"valid\"],[[42600,42600],\"mapped\",[42601]],[[42601,42601],\"valid\"],[[42602,42602],\"mapped\",[42603]],[[42603,42603],\"valid\"],[[42604,42604],\"mapped\",[42605]],[[42605,42607],\"valid\"],[[42608,42611],\"valid\",[],\"NV8\"],[[42612,42619],\"valid\"],[[42620,42621],\"valid\"],[[42622,42622],\"valid\",[],\"NV8\"],[[42623,42623],\"valid\"],[[42624,42624],\"mapped\",[42625]],[[42625,42625],\"valid\"],[[42626,42626],\"mapped\",[42627]],[[42627,42627],\"valid\"],[[42628,42628],\"mapped\",[42629]],[[42629,42629],\"valid\"],[[42630,42630],\"mapped\",[42631]],[[42631,42631],\"valid\"],[[42632,42632],\"mapped\",[42633]],[[42633,42633],\"valid\"],[[42634,42634],\"mapped\",[42635]],[[42635,42635],\"valid\"],[[42636,42636],\"mapped\",[42637]],[[42637,42637],\"valid\"],[[42638,42638],\"mapped\",[42639]],[[42639,42639],\"valid\"],[[42640,42640],\"mapped\",[42641]],[[42641,42641],\"valid\"],[[42642,42642],\"mapped\",[42643]],[[42643,42643],\"valid\"],[[42644,42644],\"mapped\",[42645]],[[42645,42645],\"valid\"],[[42646,42646],\"mapped\",[42647]],[[42647,42647],\"valid\"],[[42648,42648],\"mapped\",[42649]],[[42649,42649],\"valid\"],[[42650,42650],\"mapped\",[42651]],[[42651,42651],\"valid\"],[[42652,42652],\"mapped\",[1098]],[[42653,42653],\"mapped\",[1100]],[[42654,42654],\"valid\"],[[42655,42655],\"valid\"],[[42656,42725],\"valid\"],[[42726,42735],\"valid\",[],\"NV8\"],[[42736,42737],\"valid\"],[[42738,42743],\"valid\",[],\"NV8\"],[[42744,42751],\"disallowed\"],[[42752,42774],\"valid\",[],\"NV8\"],[[42775,42778],\"valid\"],[[42779,42783],\"valid\"],[[42784,42785],\"valid\",[],\"NV8\"],[[42786,42786],\"mapped\",[42787]],[[42787,42787],\"valid\"],[[42788,42788],\"mapped\",[42789]],[[42789,42789],\"valid\"],[[42790,42790],\"mapped\",[42791]],[[42791,42791],\"valid\"],[[42792,42792],\"mapped\",[42793]],[[42793,42793],\"valid\"],[[42794,42794],\"mapped\",[42795]],[[42795,42795],\"valid\"],[[42796,42796],\"mapped\",[42797]],[[42797,42797],\"valid\"],[[42798,42798],\"mapped\",[42799]],[[42799,42801],\"valid\"],[[42802,42802],\"mapped\",[42803]],[[42803,42803],\"valid\"],[[42804,42804],\"mapped\",[42805]],[[42805,42805],\"valid\"],[[42806,42806],\"mapped\",[42807]],[[42807,42807],\"valid\"],[[42808,42808],\"mapped\",[42809]],[[42809,42809],\"valid\"],[[42810,42810],\"mapped\",[42811]],[[42811,42811],\"valid\"],[[42812,42812],\"mapped\",[42813]],[[42813,42813],\"valid\"],[[42814,42814],\"mapped\",[42815]],[[42815,42815],\"valid\"],[[42816,42816],\"mapped\",[42817]],[[42817,42817],\"valid\"],[[42818,42818],\"mapped\",[42819]],[[42819,42819],\"valid\"],[[42820,42820],\"mapped\",[42821]],[[42821,42821],\"valid\"],[[42822,42822],\"mapped\",[42823]],[[42823,42823],\"valid\"],[[42824,42824],\"mapped\",[42825]],[[42825,42825],\"valid\"],[[42826,42826],\"mapped\",[42827]],[[42827,42827],\"valid\"],[[42828,42828],\"mapped\",[42829]],[[42829,42829],\"valid\"],[[42830,42830],\"mapped\",[42831]],[[42831,42831],\"valid\"],[[42832,42832],\"mapped\",[42833]],[[42833,42833],\"valid\"],[[42834,42834],\"mapped\",[42835]],[[42835,42835],\"valid\"],[[42836,42836],\"mapped\",[42837]],[[42837,42837],\"valid\"],[[42838,42838],\"mapped\",[42839]],[[42839,42839],\"valid\"],[[42840,42840],\"mapped\",[42841]],[[42841,42841],\"valid\"],[[42842,42842],\"mapped\",[42843]],[[42843,42843],\"valid\"],[[42844,42844],\"mapped\",[42845]],[[42845,42845],\"valid\"],[[42846,42846],\"mapped\",[42847]],[[42847,42847],\"valid\"],[[42848,42848],\"mapped\",[42849]],[[42849,42849],\"valid\"],[[42850,42850],\"mapped\",[42851]],[[42851,42851],\"valid\"],[[42852,42852],\"mapped\",[42853]],[[42853,42853],\"valid\"],[[42854,42854],\"mapped\",[42855]],[[42855,42855],\"valid\"],[[42856,42856],\"mapped\",[42857]],[[42857,42857],\"valid\"],[[42858,42858],\"mapped\",[42859]],[[42859,42859],\"valid\"],[[42860,42860],\"mapped\",[42861]],[[42861,42861],\"valid\"],[[42862,42862],\"mapped\",[42863]],[[42863,42863],\"valid\"],[[42864,42864],\"mapped\",[42863]],[[42865,42872],\"valid\"],[[42873,42873],\"mapped\",[42874]],[[42874,42874],\"valid\"],[[42875,42875],\"mapped\",[42876]],[[42876,42876],\"valid\"],[[42877,42877],\"mapped\",[7545]],[[42878,42878],\"mapped\",[42879]],[[42879,42879],\"valid\"],[[42880,42880],\"mapped\",[42881]],[[42881,42881],\"valid\"],[[42882,42882],\"mapped\",[42883]],[[42883,42883],\"valid\"],[[42884,42884],\"mapped\",[42885]],[[42885,42885],\"valid\"],[[42886,42886],\"mapped\",[42887]],[[42887,42888],\"valid\"],[[42889,42890],\"valid\",[],\"NV8\"],[[42891,42891],\"mapped\",[42892]],[[42892,42892],\"valid\"],[[42893,42893],\"mapped\",[613]],[[42894,42894],\"valid\"],[[42895,42895],\"valid\"],[[42896,42896],\"mapped\",[42897]],[[42897,42897],\"valid\"],[[42898,42898],\"mapped\",[42899]],[[42899,42899],\"valid\"],[[42900,42901],\"valid\"],[[42902,42902],\"mapped\",[42903]],[[42903,42903],\"valid\"],[[42904,42904],\"mapped\",[42905]],[[42905,42905],\"valid\"],[[42906,42906],\"mapped\",[42907]],[[42907,42907],\"valid\"],[[42908,42908],\"mapped\",[42909]],[[42909,42909],\"valid\"],[[42910,42910],\"mapped\",[42911]],[[42911,42911],\"valid\"],[[42912,42912],\"mapped\",[42913]],[[42913,42913],\"valid\"],[[42914,42914],\"mapped\",[42915]],[[42915,42915],\"valid\"],[[42916,42916],\"mapped\",[42917]],[[42917,42917],\"valid\"],[[42918,42918],\"mapped\",[42919]],[[42919,42919],\"valid\"],[[42920,42920],\"mapped\",[42921]],[[42921,42921],\"valid\"],[[42922,42922],\"mapped\",[614]],[[42923,42923],\"mapped\",[604]],[[42924,42924],\"mapped\",[609]],[[42925,42925],\"mapped\",[620]],[[42926,42927],\"disallowed\"],[[42928,42928],\"mapped\",[670]],[[42929,42929],\"mapped\",[647]],[[42930,42930],\"mapped\",[669]],[[42931,42931],\"mapped\",[43859]],[[42932,42932],\"mapped\",[42933]],[[42933,42933],\"valid\"],[[42934,42934],\"mapped\",[42935]],[[42935,42935],\"valid\"],[[42936,42998],\"disallowed\"],[[42999,42999],\"valid\"],[[43000,43000],\"mapped\",[295]],[[43001,43001],\"mapped\",[339]],[[43002,43002],\"valid\"],[[43003,43007],\"valid\"],[[43008,43047],\"valid\"],[[43048,43051],\"valid\",[],\"NV8\"],[[43052,43055],\"disallowed\"],[[43056,43065],\"valid\",[],\"NV8\"],[[43066,43071],\"disallowed\"],[[43072,43123],\"valid\"],[[43124,43127],\"valid\",[],\"NV8\"],[[43128,43135],\"disallowed\"],[[43136,43204],\"valid\"],[[43205,43213],\"disallowed\"],[[43214,43215],\"valid\",[],\"NV8\"],[[43216,43225],\"valid\"],[[43226,43231],\"disallowed\"],[[43232,43255],\"valid\"],[[43256,43258],\"valid\",[],\"NV8\"],[[43259,43259],\"valid\"],[[43260,43260],\"valid\",[],\"NV8\"],[[43261,43261],\"valid\"],[[43262,43263],\"disallowed\"],[[43264,43309],\"valid\"],[[43310,43311],\"valid\",[],\"NV8\"],[[43312,43347],\"valid\"],[[43348,43358],\"disallowed\"],[[43359,43359],\"valid\",[],\"NV8\"],[[43360,43388],\"valid\",[],\"NV8\"],[[43389,43391],\"disallowed\"],[[43392,43456],\"valid\"],[[43457,43469],\"valid\",[],\"NV8\"],[[43470,43470],\"disallowed\"],[[43471,43481],\"valid\"],[[43482,43485],\"disallowed\"],[[43486,43487],\"valid\",[],\"NV8\"],[[43488,43518],\"valid\"],[[43519,43519],\"disallowed\"],[[43520,43574],\"valid\"],[[43575,43583],\"disallowed\"],[[43584,43597],\"valid\"],[[43598,43599],\"disallowed\"],[[43600,43609],\"valid\"],[[43610,43611],\"disallowed\"],[[43612,43615],\"valid\",[],\"NV8\"],[[43616,43638],\"valid\"],[[43639,43641],\"valid\",[],\"NV8\"],[[43642,43643],\"valid\"],[[43644,43647],\"valid\"],[[43648,43714],\"valid\"],[[43715,43738],\"disallowed\"],[[43739,43741],\"valid\"],[[43742,43743],\"valid\",[],\"NV8\"],[[43744,43759],\"valid\"],[[43760,43761],\"valid\",[],\"NV8\"],[[43762,43766],\"valid\"],[[43767,43776],\"disallowed\"],[[43777,43782],\"valid\"],[[43783,43784],\"disallowed\"],[[43785,43790],\"valid\"],[[43791,43792],\"disallowed\"],[[43793,43798],\"valid\"],[[43799,43807],\"disallowed\"],[[43808,43814],\"valid\"],[[43815,43815],\"disallowed\"],[[43816,43822],\"valid\"],[[43823,43823],\"disallowed\"],[[43824,43866],\"valid\"],[[43867,43867],\"valid\",[],\"NV8\"],[[43868,43868],\"mapped\",[42791]],[[43869,43869],\"mapped\",[43831]],[[43870,43870],\"mapped\",[619]],[[43871,43871],\"mapped\",[43858]],[[43872,43875],\"valid\"],[[43876,43877],\"valid\"],[[43878,43887],\"disallowed\"],[[43888,43888],\"mapped\",[5024]],[[43889,43889],\"mapped\",[5025]],[[43890,43890],\"mapped\",[5026]],[[43891,43891],\"mapped\",[5027]],[[43892,43892],\"mapped\",[5028]],[[43893,43893],\"mapped\",[5029]],[[43894,43894],\"mapped\",[5030]],[[43895,43895],\"mapped\",[5031]],[[43896,43896],\"mapped\",[5032]],[[43897,43897],\"mapped\",[5033]],[[43898,43898],\"mapped\",[5034]],[[43899,43899],\"mapped\",[5035]],[[43900,43900],\"mapped\",[5036]],[[43901,43901],\"mapped\",[5037]],[[43902,43902],\"mapped\",[5038]],[[43903,43903],\"mapped\",[5039]],[[43904,43904],\"mapped\",[5040]],[[43905,43905],\"mapped\",[5041]],[[43906,43906],\"mapped\",[5042]],[[43907,43907],\"mapped\",[5043]],[[43908,43908],\"mapped\",[5044]],[[43909,43909],\"mapped\",[5045]],[[43910,43910],\"mapped\",[5046]],[[43911,43911],\"mapped\",[5047]],[[43912,43912],\"mapped\",[5048]],[[43913,43913],\"mapped\",[5049]],[[43914,43914],\"mapped\",[5050]],[[43915,43915],\"mapped\",[5051]],[[43916,43916],\"mapped\",[5052]],[[43917,43917],\"mapped\",[5053]],[[43918,43918],\"mapped\",[5054]],[[43919,43919],\"mapped\",[5055]],[[43920,43920],\"mapped\",[5056]],[[43921,43921],\"mapped\",[5057]],[[43922,43922],\"mapped\",[5058]],[[43923,43923],\"mapped\",[5059]],[[43924,43924],\"mapped\",[5060]],[[43925,43925],\"mapped\",[5061]],[[43926,43926],\"mapped\",[5062]],[[43927,43927],\"mapped\",[5063]],[[43928,43928],\"mapped\",[5064]],[[43929,43929],\"mapped\",[5065]],[[43930,43930],\"mapped\",[5066]],[[43931,43931],\"mapped\",[5067]],[[43932,43932],\"mapped\",[5068]],[[43933,43933],\"mapped\",[5069]],[[43934,43934],\"mapped\",[5070]],[[43935,43935],\"mapped\",[5071]],[[43936,43936],\"mapped\",[5072]],[[43937,43937],\"mapped\",[5073]],[[43938,43938],\"mapped\",[5074]],[[43939,43939],\"mapped\",[5075]],[[43940,43940],\"mapped\",[5076]],[[43941,43941],\"mapped\",[5077]],[[43942,43942],\"mapped\",[5078]],[[43943,43943],\"mapped\",[5079]],[[43944,43944],\"mapped\",[5080]],[[43945,43945],\"mapped\",[5081]],[[43946,43946],\"mapped\",[5082]],[[43947,43947],\"mapped\",[5083]],[[43948,43948],\"mapped\",[5084]],[[43949,43949],\"mapped\",[5085]],[[43950,43950],\"mapped\",[5086]],[[43951,43951],\"mapped\",[5087]],[[43952,43952],\"mapped\",[5088]],[[43953,43953],\"mapped\",[5089]],[[43954,43954],\"mapped\",[5090]],[[43955,43955],\"mapped\",[5091]],[[43956,43956],\"mapped\",[5092]],[[43957,43957],\"mapped\",[5093]],[[43958,43958],\"mapped\",[5094]],[[43959,43959],\"mapped\",[5095]],[[43960,43960],\"mapped\",[5096]],[[43961,43961],\"mapped\",[5097]],[[43962,43962],\"mapped\",[5098]],[[43963,43963],\"mapped\",[5099]],[[43964,43964],\"mapped\",[5100]],[[43965,43965],\"mapped\",[5101]],[[43966,43966],\"mapped\",[5102]],[[43967,43967],\"mapped\",[5103]],[[43968,44010],\"valid\"],[[44011,44011],\"valid\",[],\"NV8\"],[[44012,44013],\"valid\"],[[44014,44015],\"disallowed\"],[[44016,44025],\"valid\"],[[44026,44031],\"disallowed\"],[[44032,55203],\"valid\"],[[55204,55215],\"disallowed\"],[[55216,55238],\"valid\",[],\"NV8\"],[[55239,55242],\"disallowed\"],[[55243,55291],\"valid\",[],\"NV8\"],[[55292,55295],\"disallowed\"],[[55296,57343],\"disallowed\"],[[57344,63743],\"disallowed\"],[[63744,63744],\"mapped\",[35912]],[[63745,63745],\"mapped\",[26356]],[[63746,63746],\"mapped\",[36554]],[[63747,63747],\"mapped\",[36040]],[[63748,63748],\"mapped\",[28369]],[[63749,63749],\"mapped\",[20018]],[[63750,63750],\"mapped\",[21477]],[[63751,63752],\"mapped\",[40860]],[[63753,63753],\"mapped\",[22865]],[[63754,63754],\"mapped\",[37329]],[[63755,63755],\"mapped\",[21895]],[[63756,63756],\"mapped\",[22856]],[[63757,63757],\"mapped\",[25078]],[[63758,63758],\"mapped\",[30313]],[[63759,63759],\"mapped\",[32645]],[[63760,63760],\"mapped\",[34367]],[[63761,63761],\"mapped\",[34746]],[[63762,63762],\"mapped\",[35064]],[[63763,63763],\"mapped\",[37007]],[[63764,63764],\"mapped\",[27138]],[[63765,63765],\"mapped\",[27931]],[[63766,63766],\"mapped\",[28889]],[[63767,63767],\"mapped\",[29662]],[[63768,63768],\"mapped\",[33853]],[[63769,63769],\"mapped\",[37226]],[[63770,63770],\"mapped\",[39409]],[[63771,63771],\"mapped\",[20098]],[[63772,63772],\"mapped\",[21365]],[[63773,63773],\"mapped\",[27396]],[[63774,63774],\"mapped\",[29211]],[[63775,63775],\"mapped\",[34349]],[[63776,63776],\"mapped\",[40478]],[[63777,63777],\"mapped\",[23888]],[[63778,63778],\"mapped\",[28651]],[[63779,63779],\"mapped\",[34253]],[[63780,63780],\"mapped\",[35172]],[[63781,63781],\"mapped\",[25289]],[[63782,63782],\"mapped\",[33240]],[[63783,63783],\"mapped\",[34847]],[[63784,63784],\"mapped\",[24266]],[[63785,63785],\"mapped\",[26391]],[[63786,63786],\"mapped\",[28010]],[[63787,63787],\"mapped\",[29436]],[[63788,63788],\"mapped\",[37070]],[[63789,63789],\"mapped\",[20358]],[[63790,63790],\"mapped\",[20919]],[[63791,63791],\"mapped\",[21214]],[[63792,63792],\"mapped\",[25796]],[[63793,63793],\"mapped\",[27347]],[[63794,63794],\"mapped\",[29200]],[[63795,63795],\"mapped\",[30439]],[[63796,63796],\"mapped\",[32769]],[[63797,63797],\"mapped\",[34310]],[[63798,63798],\"mapped\",[34396]],[[63799,63799],\"mapped\",[36335]],[[63800,63800],\"mapped\",[38706]],[[63801,63801],\"mapped\",[39791]],[[63802,63802],\"mapped\",[40442]],[[63803,63803],\"mapped\",[30860]],[[63804,63804],\"mapped\",[31103]],[[63805,63805],\"mapped\",[32160]],[[63806,63806],\"mapped\",[33737]],[[63807,63807],\"mapped\",[37636]],[[63808,63808],\"mapped\",[40575]],[[63809,63809],\"mapped\",[35542]],[[63810,63810],\"mapped\",[22751]],[[63811,63811],\"mapped\",[24324]],[[63812,63812],\"mapped\",[31840]],[[63813,63813],\"mapped\",[32894]],[[63814,63814],\"mapped\",[29282]],[[63815,63815],\"mapped\",[30922]],[[63816,63816],\"mapped\",[36034]],[[63817,63817],\"mapped\",[38647]],[[63818,63818],\"mapped\",[22744]],[[63819,63819],\"mapped\",[23650]],[[63820,63820],\"mapped\",[27155]],[[63821,63821],\"mapped\",[28122]],[[63822,63822],\"mapped\",[28431]],[[63823,63823],\"mapped\",[32047]],[[63824,63824],\"mapped\",[32311]],[[63825,63825],\"mapped\",[38475]],[[63826,63826],\"mapped\",[21202]],[[63827,63827],\"mapped\",[32907]],[[63828,63828],\"mapped\",[20956]],[[63829,63829],\"mapped\",[20940]],[[63830,63830],\"mapped\",[31260]],[[63831,63831],\"mapped\",[32190]],[[63832,63832],\"mapped\",[33777]],[[63833,63833],\"mapped\",[38517]],[[63834,63834],\"mapped\",[35712]],[[63835,63835],\"mapped\",[25295]],[[63836,63836],\"mapped\",[27138]],[[63837,63837],\"mapped\",[35582]],[[63838,63838],\"mapped\",[20025]],[[63839,63839],\"mapped\",[23527]],[[63840,63840],\"mapped\",[24594]],[[63841,63841],\"mapped\",[29575]],[[63842,63842],\"mapped\",[30064]],[[63843,63843],\"mapped\",[21271]],[[63844,63844],\"mapped\",[30971]],[[63845,63845],\"mapped\",[20415]],[[63846,63846],\"mapped\",[24489]],[[63847,63847],\"mapped\",[19981]],[[63848,63848],\"mapped\",[27852]],[[63849,63849],\"mapped\",[25976]],[[63850,63850],\"mapped\",[32034]],[[63851,63851],\"mapped\",[21443]],[[63852,63852],\"mapped\",[22622]],[[63853,63853],\"mapped\",[30465]],[[63854,63854],\"mapped\",[33865]],[[63855,63855],\"mapped\",[35498]],[[63856,63856],\"mapped\",[27578]],[[63857,63857],\"mapped\",[36784]],[[63858,63858],\"mapped\",[27784]],[[63859,63859],\"mapped\",[25342]],[[63860,63860],\"mapped\",[33509]],[[63861,63861],\"mapped\",[25504]],[[63862,63862],\"mapped\",[30053]],[[63863,63863],\"mapped\",[20142]],[[63864,63864],\"mapped\",[20841]],[[63865,63865],\"mapped\",[20937]],[[63866,63866],\"mapped\",[26753]],[[63867,63867],\"mapped\",[31975]],[[63868,63868],\"mapped\",[33391]],[[63869,63869],\"mapped\",[35538]],[[63870,63870],\"mapped\",[37327]],[[63871,63871],\"mapped\",[21237]],[[63872,63872],\"mapped\",[21570]],[[63873,63873],\"mapped\",[22899]],[[63874,63874],\"mapped\",[24300]],[[63875,63875],\"mapped\",[26053]],[[63876,63876],\"mapped\",[28670]],[[63877,63877],\"mapped\",[31018]],[[63878,63878],\"mapped\",[38317]],[[63879,63879],\"mapped\",[39530]],[[63880,63880],\"mapped\",[40599]],[[63881,63881],\"mapped\",[40654]],[[63882,63882],\"mapped\",[21147]],[[63883,63883],\"mapped\",[26310]],[[63884,63884],\"mapped\",[27511]],[[63885,63885],\"mapped\",[36706]],[[63886,63886],\"mapped\",[24180]],[[63887,63887],\"mapped\",[24976]],[[63888,63888],\"mapped\",[25088]],[[63889,63889],\"mapped\",[25754]],[[63890,63890],\"mapped\",[28451]],[[63891,63891],\"mapped\",[29001]],[[63892,63892],\"mapped\",[29833]],[[63893,63893],\"mapped\",[31178]],[[63894,63894],\"mapped\",[32244]],[[63895,63895],\"mapped\",[32879]],[[63896,63896],\"mapped\",[36646]],[[63897,63897],\"mapped\",[34030]],[[63898,63898],\"mapped\",[36899]],[[63899,63899],\"mapped\",[37706]],[[63900,63900],\"mapped\",[21015]],[[63901,63901],\"mapped\",[21155]],[[63902,63902],\"mapped\",[21693]],[[63903,63903],\"mapped\",[28872]],[[63904,63904],\"mapped\",[35010]],[[63905,63905],\"mapped\",[35498]],[[63906,63906],\"mapped\",[24265]],[[63907,63907],\"mapped\",[24565]],[[63908,63908],\"mapped\",[25467]],[[63909,63909],\"mapped\",[27566]],[[63910,63910],\"mapped\",[31806]],[[63911,63911],\"mapped\",[29557]],[[63912,63912],\"mapped\",[20196]],[[63913,63913],\"mapped\",[22265]],[[63914,63914],\"mapped\",[23527]],[[63915,63915],\"mapped\",[23994]],[[63916,63916],\"mapped\",[24604]],[[63917,63917],\"mapped\",[29618]],[[63918,63918],\"mapped\",[29801]],[[63919,63919],\"mapped\",[32666]],[[63920,63920],\"mapped\",[32838]],[[63921,63921],\"mapped\",[37428]],[[63922,63922],\"mapped\",[38646]],[[63923,63923],\"mapped\",[38728]],[[63924,63924],\"mapped\",[38936]],[[63925,63925],\"mapped\",[20363]],[[63926,63926],\"mapped\",[31150]],[[63927,63927],\"mapped\",[37300]],[[63928,63928],\"mapped\",[38584]],[[63929,63929],\"mapped\",[24801]],[[63930,63930],\"mapped\",[20102]],[[63931,63931],\"mapped\",[20698]],[[63932,63932],\"mapped\",[23534]],[[63933,63933],\"mapped\",[23615]],[[63934,63934],\"mapped\",[26009]],[[63935,63935],\"mapped\",[27138]],[[63936,63936],\"mapped\",[29134]],[[63937,63937],\"mapped\",[30274]],[[63938,63938],\"mapped\",[34044]],[[63939,63939],\"mapped\",[36988]],[[63940,63940],\"mapped\",[40845]],[[63941,63941],\"mapped\",[26248]],[[63942,63942],\"mapped\",[38446]],[[63943,63943],\"mapped\",[21129]],[[63944,63944],\"mapped\",[26491]],[[63945,63945],\"mapped\",[26611]],[[63946,63946],\"mapped\",[27969]],[[63947,63947],\"mapped\",[28316]],[[63948,63948],\"mapped\",[29705]],[[63949,63949],\"mapped\",[30041]],[[63950,63950],\"mapped\",[30827]],[[63951,63951],\"mapped\",[32016]],[[63952,63952],\"mapped\",[39006]],[[63953,63953],\"mapped\",[20845]],[[63954,63954],\"mapped\",[25134]],[[63955,63955],\"mapped\",[38520]],[[63956,63956],\"mapped\",[20523]],[[63957,63957],\"mapped\",[23833]],[[63958,63958],\"mapped\",[28138]],[[63959,63959],\"mapped\",[36650]],[[63960,63960],\"mapped\",[24459]],[[63961,63961],\"mapped\",[24900]],[[63962,63962],\"mapped\",[26647]],[[63963,63963],\"mapped\",[29575]],[[63964,63964],\"mapped\",[38534]],[[63965,63965],\"mapped\",[21033]],[[63966,63966],\"mapped\",[21519]],[[63967,63967],\"mapped\",[23653]],[[63968,63968],\"mapped\",[26131]],[[63969,63969],\"mapped\",[26446]],[[63970,63970],\"mapped\",[26792]],[[63971,63971],\"mapped\",[27877]],[[63972,63972],\"mapped\",[29702]],[[63973,63973],\"mapped\",[30178]],[[63974,63974],\"mapped\",[32633]],[[63975,63975],\"mapped\",[35023]],[[63976,63976],\"mapped\",[35041]],[[63977,63977],\"mapped\",[37324]],[[63978,63978],\"mapped\",[38626]],[[63979,63979],\"mapped\",[21311]],[[63980,63980],\"mapped\",[28346]],[[63981,63981],\"mapped\",[21533]],[[63982,63982],\"mapped\",[29136]],[[63983,63983],\"mapped\",[29848]],[[63984,63984],\"mapped\",[34298]],[[63985,63985],\"mapped\",[38563]],[[63986,63986],\"mapped\",[40023]],[[63987,63987],\"mapped\",[40607]],[[63988,63988],\"mapped\",[26519]],[[63989,63989],\"mapped\",[28107]],[[63990,63990],\"mapped\",[33256]],[[63991,63991],\"mapped\",[31435]],[[63992,63992],\"mapped\",[31520]],[[63993,63993],\"mapped\",[31890]],[[63994,63994],\"mapped\",[29376]],[[63995,63995],\"mapped\",[28825]],[[63996,63996],\"mapped\",[35672]],[[63997,63997],\"mapped\",[20160]],[[63998,63998],\"mapped\",[33590]],[[63999,63999],\"mapped\",[21050]],[[64000,64000],\"mapped\",[20999]],[[64001,64001],\"mapped\",[24230]],[[64002,64002],\"mapped\",[25299]],[[64003,64003],\"mapped\",[31958]],[[64004,64004],\"mapped\",[23429]],[[64005,64005],\"mapped\",[27934]],[[64006,64006],\"mapped\",[26292]],[[64007,64007],\"mapped\",[36667]],[[64008,64008],\"mapped\",[34892]],[[64009,64009],\"mapped\",[38477]],[[64010,64010],\"mapped\",[35211]],[[64011,64011],\"mapped\",[24275]],[[64012,64012],\"mapped\",[20800]],[[64013,64013],\"mapped\",[21952]],[[64014,64015],\"valid\"],[[64016,64016],\"mapped\",[22618]],[[64017,64017],\"valid\"],[[64018,64018],\"mapped\",[26228]],[[64019,64020],\"valid\"],[[64021,64021],\"mapped\",[20958]],[[64022,64022],\"mapped\",[29482]],[[64023,64023],\"mapped\",[30410]],[[64024,64024],\"mapped\",[31036]],[[64025,64025],\"mapped\",[31070]],[[64026,64026],\"mapped\",[31077]],[[64027,64027],\"mapped\",[31119]],[[64028,64028],\"mapped\",[38742]],[[64029,64029],\"mapped\",[31934]],[[64030,64030],\"mapped\",[32701]],[[64031,64031],\"valid\"],[[64032,64032],\"mapped\",[34322]],[[64033,64033],\"valid\"],[[64034,64034],\"mapped\",[35576]],[[64035,64036],\"valid\"],[[64037,64037],\"mapped\",[36920]],[[64038,64038],\"mapped\",[37117]],[[64039,64041],\"valid\"],[[64042,64042],\"mapped\",[39151]],[[64043,64043],\"mapped\",[39164]],[[64044,64044],\"mapped\",[39208]],[[64045,64045],\"mapped\",[40372]],[[64046,64046],\"mapped\",[37086]],[[64047,64047],\"mapped\",[38583]],[[64048,64048],\"mapped\",[20398]],[[64049,64049],\"mapped\",[20711]],[[64050,64050],\"mapped\",[20813]],[[64051,64051],\"mapped\",[21193]],[[64052,64052],\"mapped\",[21220]],[[64053,64053],\"mapped\",[21329]],[[64054,64054],\"mapped\",[21917]],[[64055,64055],\"mapped\",[22022]],[[64056,64056],\"mapped\",[22120]],[[64057,64057],\"mapped\",[22592]],[[64058,64058],\"mapped\",[22696]],[[64059,64059],\"mapped\",[23652]],[[64060,64060],\"mapped\",[23662]],[[64061,64061],\"mapped\",[24724]],[[64062,64062],\"mapped\",[24936]],[[64063,64063],\"mapped\",[24974]],[[64064,64064],\"mapped\",[25074]],[[64065,64065],\"mapped\",[25935]],[[64066,64066],\"mapped\",[26082]],[[64067,64067],\"mapped\",[26257]],[[64068,64068],\"mapped\",[26757]],[[64069,64069],\"mapped\",[28023]],[[64070,64070],\"mapped\",[28186]],[[64071,64071],\"mapped\",[28450]],[[64072,64072],\"mapped\",[29038]],[[64073,64073],\"mapped\",[29227]],[[64074,64074],\"mapped\",[29730]],[[64075,64075],\"mapped\",[30865]],[[64076,64076],\"mapped\",[31038]],[[64077,64077],\"mapped\",[31049]],[[64078,64078],\"mapped\",[31048]],[[64079,64079],\"mapped\",[31056]],[[64080,64080],\"mapped\",[31062]],[[64081,64081],\"mapped\",[31069]],[[64082,64082],\"mapped\",[31117]],[[64083,64083],\"mapped\",[31118]],[[64084,64084],\"mapped\",[31296]],[[64085,64085],\"mapped\",[31361]],[[64086,64086],\"mapped\",[31680]],[[64087,64087],\"mapped\",[32244]],[[64088,64088],\"mapped\",[32265]],[[64089,64089],\"mapped\",[32321]],[[64090,64090],\"mapped\",[32626]],[[64091,64091],\"mapped\",[32773]],[[64092,64092],\"mapped\",[33261]],[[64093,64094],\"mapped\",[33401]],[[64095,64095],\"mapped\",[33879]],[[64096,64096],\"mapped\",[35088]],[[64097,64097],\"mapped\",[35222]],[[64098,64098],\"mapped\",[35585]],[[64099,64099],\"mapped\",[35641]],[[64100,64100],\"mapped\",[36051]],[[64101,64101],\"mapped\",[36104]],[[64102,64102],\"mapped\",[36790]],[[64103,64103],\"mapped\",[36920]],[[64104,64104],\"mapped\",[38627]],[[64105,64105],\"mapped\",[38911]],[[64106,64106],\"mapped\",[38971]],[[64107,64107],\"mapped\",[24693]],[[64108,64108],\"mapped\",[148206]],[[64109,64109],\"mapped\",[33304]],[[64110,64111],\"disallowed\"],[[64112,64112],\"mapped\",[20006]],[[64113,64113],\"mapped\",[20917]],[[64114,64114],\"mapped\",[20840]],[[64115,64115],\"mapped\",[20352]],[[64116,64116],\"mapped\",[20805]],[[64117,64117],\"mapped\",[20864]],[[64118,64118],\"mapped\",[21191]],[[64119,64119],\"mapped\",[21242]],[[64120,64120],\"mapped\",[21917]],[[64121,64121],\"mapped\",[21845]],[[64122,64122],\"mapped\",[21913]],[[64123,64123],\"mapped\",[21986]],[[64124,64124],\"mapped\",[22618]],[[64125,64125],\"mapped\",[22707]],[[64126,64126],\"mapped\",[22852]],[[64127,64127],\"mapped\",[22868]],[[64128,64128],\"mapped\",[23138]],[[64129,64129],\"mapped\",[23336]],[[64130,64130],\"mapped\",[24274]],[[64131,64131],\"mapped\",[24281]],[[64132,64132],\"mapped\",[24425]],[[64133,64133],\"mapped\",[24493]],[[64134,64134],\"mapped\",[24792]],[[64135,64135],\"mapped\",[24910]],[[64136,64136],\"mapped\",[24840]],[[64137,64137],\"mapped\",[24974]],[[64138,64138],\"mapped\",[24928]],[[64139,64139],\"mapped\",[25074]],[[64140,64140],\"mapped\",[25140]],[[64141,64141],\"mapped\",[25540]],[[64142,64142],\"mapped\",[25628]],[[64143,64143],\"mapped\",[25682]],[[64144,64144],\"mapped\",[25942]],[[64145,64145],\"mapped\",[26228]],[[64146,64146],\"mapped\",[26391]],[[64147,64147],\"mapped\",[26395]],[[64148,64148],\"mapped\",[26454]],[[64149,64149],\"mapped\",[27513]],[[64150,64150],\"mapped\",[27578]],[[64151,64151],\"mapped\",[27969]],[[64152,64152],\"mapped\",[28379]],[[64153,64153],\"mapped\",[28363]],[[64154,64154],\"mapped\",[28450]],[[64155,64155],\"mapped\",[28702]],[[64156,64156],\"mapped\",[29038]],[[64157,64157],\"mapped\",[30631]],[[64158,64158],\"mapped\",[29237]],[[64159,64159],\"mapped\",[29359]],[[64160,64160],\"mapped\",[29482]],[[64161,64161],\"mapped\",[29809]],[[64162,64162],\"mapped\",[29958]],[[64163,64163],\"mapped\",[30011]],[[64164,64164],\"mapped\",[30237]],[[64165,64165],\"mapped\",[30239]],[[64166,64166],\"mapped\",[30410]],[[64167,64167],\"mapped\",[30427]],[[64168,64168],\"mapped\",[30452]],[[64169,64169],\"mapped\",[30538]],[[64170,64170],\"mapped\",[30528]],[[64171,64171],\"mapped\",[30924]],[[64172,64172],\"mapped\",[31409]],[[64173,64173],\"mapped\",[31680]],[[64174,64174],\"mapped\",[31867]],[[64175,64175],\"mapped\",[32091]],[[64176,64176],\"mapped\",[32244]],[[64177,64177],\"mapped\",[32574]],[[64178,64178],\"mapped\",[32773]],[[64179,64179],\"mapped\",[33618]],[[64180,64180],\"mapped\",[33775]],[[64181,64181],\"mapped\",[34681]],[[64182,64182],\"mapped\",[35137]],[[64183,64183],\"mapped\",[35206]],[[64184,64184],\"mapped\",[35222]],[[64185,64185],\"mapped\",[35519]],[[64186,64186],\"mapped\",[35576]],[[64187,64187],\"mapped\",[35531]],[[64188,64188],\"mapped\",[35585]],[[64189,64189],\"mapped\",[35582]],[[64190,64190],\"mapped\",[35565]],[[64191,64191],\"mapped\",[35641]],[[64192,64192],\"mapped\",[35722]],[[64193,64193],\"mapped\",[36104]],[[64194,64194],\"mapped\",[36664]],[[64195,64195],\"mapped\",[36978]],[[64196,64196],\"mapped\",[37273]],[[64197,64197],\"mapped\",[37494]],[[64198,64198],\"mapped\",[38524]],[[64199,64199],\"mapped\",[38627]],[[64200,64200],\"mapped\",[38742]],[[64201,64201],\"mapped\",[38875]],[[64202,64202],\"mapped\",[38911]],[[64203,64203],\"mapped\",[38923]],[[64204,64204],\"mapped\",[38971]],[[64205,64205],\"mapped\",[39698]],[[64206,64206],\"mapped\",[40860]],[[64207,64207],\"mapped\",[141386]],[[64208,64208],\"mapped\",[141380]],[[64209,64209],\"mapped\",[144341]],[[64210,64210],\"mapped\",[15261]],[[64211,64211],\"mapped\",[16408]],[[64212,64212],\"mapped\",[16441]],[[64213,64213],\"mapped\",[152137]],[[64214,64214],\"mapped\",[154832]],[[64215,64215],\"mapped\",[163539]],[[64216,64216],\"mapped\",[40771]],[[64217,64217],\"mapped\",[40846]],[[64218,64255],\"disallowed\"],[[64256,64256],\"mapped\",[102,102]],[[64257,64257],\"mapped\",[102,105]],[[64258,64258],\"mapped\",[102,108]],[[64259,64259],\"mapped\",[102,102,105]],[[64260,64260],\"mapped\",[102,102,108]],[[64261,64262],\"mapped\",[115,116]],[[64263,64274],\"disallowed\"],[[64275,64275],\"mapped\",[1396,1398]],[[64276,64276],\"mapped\",[1396,1381]],[[64277,64277],\"mapped\",[1396,1387]],[[64278,64278],\"mapped\",[1406,1398]],[[64279,64279],\"mapped\",[1396,1389]],[[64280,64284],\"disallowed\"],[[64285,64285],\"mapped\",[1497,1460]],[[64286,64286],\"valid\"],[[64287,64287],\"mapped\",[1522,1463]],[[64288,64288],\"mapped\",[1506]],[[64289,64289],\"mapped\",[1488]],[[64290,64290],\"mapped\",[1491]],[[64291,64291],\"mapped\",[1492]],[[64292,64292],\"mapped\",[1499]],[[64293,64293],\"mapped\",[1500]],[[64294,64294],\"mapped\",[1501]],[[64295,64295],\"mapped\",[1512]],[[64296,64296],\"mapped\",[1514]],[[64297,64297],\"disallowed_STD3_mapped\",[43]],[[64298,64298],\"mapped\",[1513,1473]],[[64299,64299],\"mapped\",[1513,1474]],[[64300,64300],\"mapped\",[1513,1468,1473]],[[64301,64301],\"mapped\",[1513,1468,1474]],[[64302,64302],\"mapped\",[1488,1463]],[[64303,64303],\"mapped\",[1488,1464]],[[64304,64304],\"mapped\",[1488,1468]],[[64305,64305],\"mapped\",[1489,1468]],[[64306,64306],\"mapped\",[1490,1468]],[[64307,64307],\"mapped\",[1491,1468]],[[64308,64308],\"mapped\",[1492,1468]],[[64309,64309],\"mapped\",[1493,1468]],[[64310,64310],\"mapped\",[1494,1468]],[[64311,64311],\"disallowed\"],[[64312,64312],\"mapped\",[1496,1468]],[[64313,64313],\"mapped\",[1497,1468]],[[64314,64314],\"mapped\",[1498,1468]],[[64315,64315],\"mapped\",[1499,1468]],[[64316,64316],\"mapped\",[1500,1468]],[[64317,64317],\"disallowed\"],[[64318,64318],\"mapped\",[1502,1468]],[[64319,64319],\"disallowed\"],[[64320,64320],\"mapped\",[1504,1468]],[[64321,64321],\"mapped\",[1505,1468]],[[64322,64322],\"disallowed\"],[[64323,64323],\"mapped\",[1507,1468]],[[64324,64324],\"mapped\",[1508,1468]],[[64325,64325],\"disallowed\"],[[64326,64326],\"mapped\",[1510,1468]],[[64327,64327],\"mapped\",[1511,1468]],[[64328,64328],\"mapped\",[1512,1468]],[[64329,64329],\"mapped\",[1513,1468]],[[64330,64330],\"mapped\",[1514,1468]],[[64331,64331],\"mapped\",[1493,1465]],[[64332,64332],\"mapped\",[1489,1471]],[[64333,64333],\"mapped\",[1499,1471]],[[64334,64334],\"mapped\",[1508,1471]],[[64335,64335],\"mapped\",[1488,1500]],[[64336,64337],\"mapped\",[1649]],[[64338,64341],\"mapped\",[1659]],[[64342,64345],\"mapped\",[1662]],[[64346,64349],\"mapped\",[1664]],[[64350,64353],\"mapped\",[1658]],[[64354,64357],\"mapped\",[1663]],[[64358,64361],\"mapped\",[1657]],[[64362,64365],\"mapped\",[1700]],[[64366,64369],\"mapped\",[1702]],[[64370,64373],\"mapped\",[1668]],[[64374,64377],\"mapped\",[1667]],[[64378,64381],\"mapped\",[1670]],[[64382,64385],\"mapped\",[1671]],[[64386,64387],\"mapped\",[1677]],[[64388,64389],\"mapped\",[1676]],[[64390,64391],\"mapped\",[1678]],[[64392,64393],\"mapped\",[1672]],[[64394,64395],\"mapped\",[1688]],[[64396,64397],\"mapped\",[1681]],[[64398,64401],\"mapped\",[1705]],[[64402,64405],\"mapped\",[1711]],[[64406,64409],\"mapped\",[1715]],[[64410,64413],\"mapped\",[1713]],[[64414,64415],\"mapped\",[1722]],[[64416,64419],\"mapped\",[1723]],[[64420,64421],\"mapped\",[1728]],[[64422,64425],\"mapped\",[1729]],[[64426,64429],\"mapped\",[1726]],[[64430,64431],\"mapped\",[1746]],[[64432,64433],\"mapped\",[1747]],[[64434,64449],\"valid\",[],\"NV8\"],[[64450,64466],\"disallowed\"],[[64467,64470],\"mapped\",[1709]],[[64471,64472],\"mapped\",[1735]],[[64473,64474],\"mapped\",[1734]],[[64475,64476],\"mapped\",[1736]],[[64477,64477],\"mapped\",[1735,1652]],[[64478,64479],\"mapped\",[1739]],[[64480,64481],\"mapped\",[1733]],[[64482,64483],\"mapped\",[1737]],[[64484,64487],\"mapped\",[1744]],[[64488,64489],\"mapped\",[1609]],[[64490,64491],\"mapped\",[1574,1575]],[[64492,64493],\"mapped\",[1574,1749]],[[64494,64495],\"mapped\",[1574,1608]],[[64496,64497],\"mapped\",[1574,1735]],[[64498,64499],\"mapped\",[1574,1734]],[[64500,64501],\"mapped\",[1574,1736]],[[64502,64504],\"mapped\",[1574,1744]],[[64505,64507],\"mapped\",[1574,1609]],[[64508,64511],\"mapped\",[1740]],[[64512,64512],\"mapped\",[1574,1580]],[[64513,64513],\"mapped\",[1574,1581]],[[64514,64514],\"mapped\",[1574,1605]],[[64515,64515],\"mapped\",[1574,1609]],[[64516,64516],\"mapped\",[1574,1610]],[[64517,64517],\"mapped\",[1576,1580]],[[64518,64518],\"mapped\",[1576,1581]],[[64519,64519],\"mapped\",[1576,1582]],[[64520,64520],\"mapped\",[1576,1605]],[[64521,64521],\"mapped\",[1576,1609]],[[64522,64522],\"mapped\",[1576,1610]],[[64523,64523],\"mapped\",[1578,1580]],[[64524,64524],\"mapped\",[1578,1581]],[[64525,64525],\"mapped\",[1578,1582]],[[64526,64526],\"mapped\",[1578,1605]],[[64527,64527],\"mapped\",[1578,1609]],[[64528,64528],\"mapped\",[1578,1610]],[[64529,64529],\"mapped\",[1579,1580]],[[64530,64530],\"mapped\",[1579,1605]],[[64531,64531],\"mapped\",[1579,1609]],[[64532,64532],\"mapped\",[1579,1610]],[[64533,64533],\"mapped\",[1580,1581]],[[64534,64534],\"mapped\",[1580,1605]],[[64535,64535],\"mapped\",[1581,1580]],[[64536,64536],\"mapped\",[1581,1605]],[[64537,64537],\"mapped\",[1582,1580]],[[64538,64538],\"mapped\",[1582,1581]],[[64539,64539],\"mapped\",[1582,1605]],[[64540,64540],\"mapped\",[1587,1580]],[[64541,64541],\"mapped\",[1587,1581]],[[64542,64542],\"mapped\",[1587,1582]],[[64543,64543],\"mapped\",[1587,1605]],[[64544,64544],\"mapped\",[1589,1581]],[[64545,64545],\"mapped\",[1589,1605]],[[64546,64546],\"mapped\",[1590,1580]],[[64547,64547],\"mapped\",[1590,1581]],[[64548,64548],\"mapped\",[1590,1582]],[[64549,64549],\"mapped\",[1590,1605]],[[64550,64550],\"mapped\",[1591,1581]],[[64551,64551],\"mapped\",[1591,1605]],[[64552,64552],\"mapped\",[1592,1605]],[[64553,64553],\"mapped\",[1593,1580]],[[64554,64554],\"mapped\",[1593,1605]],[[64555,64555],\"mapped\",[1594,1580]],[[64556,64556],\"mapped\",[1594,1605]],[[64557,64557],\"mapped\",[1601,1580]],[[64558,64558],\"mapped\",[1601,1581]],[[64559,64559],\"mapped\",[1601,1582]],[[64560,64560],\"mapped\",[1601,1605]],[[64561,64561],\"mapped\",[1601,1609]],[[64562,64562],\"mapped\",[1601,1610]],[[64563,64563],\"mapped\",[1602,1581]],[[64564,64564],\"mapped\",[1602,1605]],[[64565,64565],\"mapped\",[1602,1609]],[[64566,64566],\"mapped\",[1602,1610]],[[64567,64567],\"mapped\",[1603,1575]],[[64568,64568],\"mapped\",[1603,1580]],[[64569,64569],\"mapped\",[1603,1581]],[[64570,64570],\"mapped\",[1603,1582]],[[64571,64571],\"mapped\",[1603,1604]],[[64572,64572],\"mapped\",[1603,1605]],[[64573,64573],\"mapped\",[1603,1609]],[[64574,64574],\"mapped\",[1603,1610]],[[64575,64575],\"mapped\",[1604,1580]],[[64576,64576],\"mapped\",[1604,1581]],[[64577,64577],\"mapped\",[1604,1582]],[[64578,64578],\"mapped\",[1604,1605]],[[64579,64579],\"mapped\",[1604,1609]],[[64580,64580],\"mapped\",[1604,1610]],[[64581,64581],\"mapped\",[1605,1580]],[[64582,64582],\"mapped\",[1605,1581]],[[64583,64583],\"mapped\",[1605,1582]],[[64584,64584],\"mapped\",[1605,1605]],[[64585,64585],\"mapped\",[1605,1609]],[[64586,64586],\"mapped\",[1605,1610]],[[64587,64587],\"mapped\",[1606,1580]],[[64588,64588],\"mapped\",[1606,1581]],[[64589,64589],\"mapped\",[1606,1582]],[[64590,64590],\"mapped\",[1606,1605]],[[64591,64591],\"mapped\",[1606,1609]],[[64592,64592],\"mapped\",[1606,1610]],[[64593,64593],\"mapped\",[1607,1580]],[[64594,64594],\"mapped\",[1607,1605]],[[64595,64595],\"mapped\",[1607,1609]],[[64596,64596],\"mapped\",[1607,1610]],[[64597,64597],\"mapped\",[1610,1580]],[[64598,64598],\"mapped\",[1610,1581]],[[64599,64599],\"mapped\",[1610,1582]],[[64600,64600],\"mapped\",[1610,1605]],[[64601,64601],\"mapped\",[1610,1609]],[[64602,64602],\"mapped\",[1610,1610]],[[64603,64603],\"mapped\",[1584,1648]],[[64604,64604],\"mapped\",[1585,1648]],[[64605,64605],\"mapped\",[1609,1648]],[[64606,64606],\"disallowed_STD3_mapped\",[32,1612,1617]],[[64607,64607],\"disallowed_STD3_mapped\",[32,1613,1617]],[[64608,64608],\"disallowed_STD3_mapped\",[32,1614,1617]],[[64609,64609],\"disallowed_STD3_mapped\",[32,1615,1617]],[[64610,64610],\"disallowed_STD3_mapped\",[32,1616,1617]],[[64611,64611],\"disallowed_STD3_mapped\",[32,1617,1648]],[[64612,64612],\"mapped\",[1574,1585]],[[64613,64613],\"mapped\",[1574,1586]],[[64614,64614],\"mapped\",[1574,1605]],[[64615,64615],\"mapped\",[1574,1606]],[[64616,64616],\"mapped\",[1574,1609]],[[64617,64617],\"mapped\",[1574,1610]],[[64618,64618],\"mapped\",[1576,1585]],[[64619,64619],\"mapped\",[1576,1586]],[[64620,64620],\"mapped\",[1576,1605]],[[64621,64621],\"mapped\",[1576,1606]],[[64622,64622],\"mapped\",[1576,1609]],[[64623,64623],\"mapped\",[1576,1610]],[[64624,64624],\"mapped\",[1578,1585]],[[64625,64625],\"mapped\",[1578,1586]],[[64626,64626],\"mapped\",[1578,1605]],[[64627,64627],\"mapped\",[1578,1606]],[[64628,64628],\"mapped\",[1578,1609]],[[64629,64629],\"mapped\",[1578,1610]],[[64630,64630],\"mapped\",[1579,1585]],[[64631,64631],\"mapped\",[1579,1586]],[[64632,64632],\"mapped\",[1579,1605]],[[64633,64633],\"mapped\",[1579,1606]],[[64634,64634],\"mapped\",[1579,1609]],[[64635,64635],\"mapped\",[1579,1610]],[[64636,64636],\"mapped\",[1601,1609]],[[64637,64637],\"mapped\",[1601,1610]],[[64638,64638],\"mapped\",[1602,1609]],[[64639,64639],\"mapped\",[1602,1610]],[[64640,64640],\"mapped\",[1603,1575]],[[64641,64641],\"mapped\",[1603,1604]],[[64642,64642],\"mapped\",[1603,1605]],[[64643,64643],\"mapped\",[1603,1609]],[[64644,64644],\"mapped\",[1603,1610]],[[64645,64645],\"mapped\",[1604,1605]],[[64646,64646],\"mapped\",[1604,1609]],[[64647,64647],\"mapped\",[1604,1610]],[[64648,64648],\"mapped\",[1605,1575]],[[64649,64649],\"mapped\",[1605,1605]],[[64650,64650],\"mapped\",[1606,1585]],[[64651,64651],\"mapped\",[1606,1586]],[[64652,64652],\"mapped\",[1606,1605]],[[64653,64653],\"mapped\",[1606,1606]],[[64654,64654],\"mapped\",[1606,1609]],[[64655,64655],\"mapped\",[1606,1610]],[[64656,64656],\"mapped\",[1609,1648]],[[64657,64657],\"mapped\",[1610,1585]],[[64658,64658],\"mapped\",[1610,1586]],[[64659,64659],\"mapped\",[1610,1605]],[[64660,64660],\"mapped\",[1610,1606]],[[64661,64661],\"mapped\",[1610,1609]],[[64662,64662],\"mapped\",[1610,1610]],[[64663,64663],\"mapped\",[1574,1580]],[[64664,64664],\"mapped\",[1574,1581]],[[64665,64665],\"mapped\",[1574,1582]],[[64666,64666],\"mapped\",[1574,1605]],[[64667,64667],\"mapped\",[1574,1607]],[[64668,64668],\"mapped\",[1576,1580]],[[64669,64669],\"mapped\",[1576,1581]],[[64670,64670],\"mapped\",[1576,1582]],[[64671,64671],\"mapped\",[1576,1605]],[[64672,64672],\"mapped\",[1576,1607]],[[64673,64673],\"mapped\",[1578,1580]],[[64674,64674],\"mapped\",[1578,1581]],[[64675,64675],\"mapped\",[1578,1582]],[[64676,64676],\"mapped\",[1578,1605]],[[64677,64677],\"mapped\",[1578,1607]],[[64678,64678],\"mapped\",[1579,1605]],[[64679,64679],\"mapped\",[1580,1581]],[[64680,64680],\"mapped\",[1580,1605]],[[64681,64681],\"mapped\",[1581,1580]],[[64682,64682],\"mapped\",[1581,1605]],[[64683,64683],\"mapped\",[1582,1580]],[[64684,64684],\"mapped\",[1582,1605]],[[64685,64685],\"mapped\",[1587,1580]],[[64686,64686],\"mapped\",[1587,1581]],[[64687,64687],\"mapped\",[1587,1582]],[[64688,64688],\"mapped\",[1587,1605]],[[64689,64689],\"mapped\",[1589,1581]],[[64690,64690],\"mapped\",[1589,1582]],[[64691,64691],\"mapped\",[1589,1605]],[[64692,64692],\"mapped\",[1590,1580]],[[64693,64693],\"mapped\",[1590,1581]],[[64694,64694],\"mapped\",[1590,1582]],[[64695,64695],\"mapped\",[1590,1605]],[[64696,64696],\"mapped\",[1591,1581]],[[64697,64697],\"mapped\",[1592,1605]],[[64698,64698],\"mapped\",[1593,1580]],[[64699,64699],\"mapped\",[1593,1605]],[[64700,64700],\"mapped\",[1594,1580]],[[64701,64701],\"mapped\",[1594,1605]],[[64702,64702],\"mapped\",[1601,1580]],[[64703,64703],\"mapped\",[1601,1581]],[[64704,64704],\"mapped\",[1601,1582]],[[64705,64705],\"mapped\",[1601,1605]],[[64706,64706],\"mapped\",[1602,1581]],[[64707,64707],\"mapped\",[1602,1605]],[[64708,64708],\"mapped\",[1603,1580]],[[64709,64709],\"mapped\",[1603,1581]],[[64710,64710],\"mapped\",[1603,1582]],[[64711,64711],\"mapped\",[1603,1604]],[[64712,64712],\"mapped\",[1603,1605]],[[64713,64713],\"mapped\",[1604,1580]],[[64714,64714],\"mapped\",[1604,1581]],[[64715,64715],\"mapped\",[1604,1582]],[[64716,64716],\"mapped\",[1604,1605]],[[64717,64717],\"mapped\",[1604,1607]],[[64718,64718],\"mapped\",[1605,1580]],[[64719,64719],\"mapped\",[1605,1581]],[[64720,64720],\"mapped\",[1605,1582]],[[64721,64721],\"mapped\",[1605,1605]],[[64722,64722],\"mapped\",[1606,1580]],[[64723,64723],\"mapped\",[1606,1581]],[[64724,64724],\"mapped\",[1606,1582]],[[64725,64725],\"mapped\",[1606,1605]],[[64726,64726],\"mapped\",[1606,1607]],[[64727,64727],\"mapped\",[1607,1580]],[[64728,64728],\"mapped\",[1607,1605]],[[64729,64729],\"mapped\",[1607,1648]],[[64730,64730],\"mapped\",[1610,1580]],[[64731,64731],\"mapped\",[1610,1581]],[[64732,64732],\"mapped\",[1610,1582]],[[64733,64733],\"mapped\",[1610,1605]],[[64734,64734],\"mapped\",[1610,1607]],[[64735,64735],\"mapped\",[1574,1605]],[[64736,64736],\"mapped\",[1574,1607]],[[64737,64737],\"mapped\",[1576,1605]],[[64738,64738],\"mapped\",[1576,1607]],[[64739,64739],\"mapped\",[1578,1605]],[[64740,64740],\"mapped\",[1578,1607]],[[64741,64741],\"mapped\",[1579,1605]],[[64742,64742],\"mapped\",[1579,1607]],[[64743,64743],\"mapped\",[1587,1605]],[[64744,64744],\"mapped\",[1587,1607]],[[64745,64745],\"mapped\",[1588,1605]],[[64746,64746],\"mapped\",[1588,1607]],[[64747,64747],\"mapped\",[1603,1604]],[[64748,64748],\"mapped\",[1603,1605]],[[64749,64749],\"mapped\",[1604,1605]],[[64750,64750],\"mapped\",[1606,1605]],[[64751,64751],\"mapped\",[1606,1607]],[[64752,64752],\"mapped\",[1610,1605]],[[64753,64753],\"mapped\",[1610,1607]],[[64754,64754],\"mapped\",[1600,1614,1617]],[[64755,64755],\"mapped\",[1600,1615,1617]],[[64756,64756],\"mapped\",[1600,1616,1617]],[[64757,64757],\"mapped\",[1591,1609]],[[64758,64758],\"mapped\",[1591,1610]],[[64759,64759],\"mapped\",[1593,1609]],[[64760,64760],\"mapped\",[1593,1610]],[[64761,64761],\"mapped\",[1594,1609]],[[64762,64762],\"mapped\",[1594,1610]],[[64763,64763],\"mapped\",[1587,1609]],[[64764,64764],\"mapped\",[1587,1610]],[[64765,64765],\"mapped\",[1588,1609]],[[64766,64766],\"mapped\",[1588,1610]],[[64767,64767],\"mapped\",[1581,1609]],[[64768,64768],\"mapped\",[1581,1610]],[[64769,64769],\"mapped\",[1580,1609]],[[64770,64770],\"mapped\",[1580,1610]],[[64771,64771],\"mapped\",[1582,1609]],[[64772,64772],\"mapped\",[1582,1610]],[[64773,64773],\"mapped\",[1589,1609]],[[64774,64774],\"mapped\",[1589,1610]],[[64775,64775],\"mapped\",[1590,1609]],[[64776,64776],\"mapped\",[1590,1610]],[[64777,64777],\"mapped\",[1588,1580]],[[64778,64778],\"mapped\",[1588,1581]],[[64779,64779],\"mapped\",[1588,1582]],[[64780,64780],\"mapped\",[1588,1605]],[[64781,64781],\"mapped\",[1588,1585]],[[64782,64782],\"mapped\",[1587,1585]],[[64783,64783],\"mapped\",[1589,1585]],[[64784,64784],\"mapped\",[1590,1585]],[[64785,64785],\"mapped\",[1591,1609]],[[64786,64786],\"mapped\",[1591,1610]],[[64787,64787],\"mapped\",[1593,1609]],[[64788,64788],\"mapped\",[1593,1610]],[[64789,64789],\"mapped\",[1594,1609]],[[64790,64790],\"mapped\",[1594,1610]],[[64791,64791],\"mapped\",[1587,1609]],[[64792,64792],\"mapped\",[1587,1610]],[[64793,64793],\"mapped\",[1588,1609]],[[64794,64794],\"mapped\",[1588,1610]],[[64795,64795],\"mapped\",[1581,1609]],[[64796,64796],\"mapped\",[1581,1610]],[[64797,64797],\"mapped\",[1580,1609]],[[64798,64798],\"mapped\",[1580,1610]],[[64799,64799],\"mapped\",[1582,1609]],[[64800,64800],\"mapped\",[1582,1610]],[[64801,64801],\"mapped\",[1589,1609]],[[64802,64802],\"mapped\",[1589,1610]],[[64803,64803],\"mapped\",[1590,1609]],[[64804,64804],\"mapped\",[1590,1610]],[[64805,64805],\"mapped\",[1588,1580]],[[64806,64806],\"mapped\",[1588,1581]],[[64807,64807],\"mapped\",[1588,1582]],[[64808,64808],\"mapped\",[1588,1605]],[[64809,64809],\"mapped\",[1588,1585]],[[64810,64810],\"mapped\",[1587,1585]],[[64811,64811],\"mapped\",[1589,1585]],[[64812,64812],\"mapped\",[1590,1585]],[[64813,64813],\"mapped\",[1588,1580]],[[64814,64814],\"mapped\",[1588,1581]],[[64815,64815],\"mapped\",[1588,1582]],[[64816,64816],\"mapped\",[1588,1605]],[[64817,64817],\"mapped\",[1587,1607]],[[64818,64818],\"mapped\",[1588,1607]],[[64819,64819],\"mapped\",[1591,1605]],[[64820,64820],\"mapped\",[1587,1580]],[[64821,64821],\"mapped\",[1587,1581]],[[64822,64822],\"mapped\",[1587,1582]],[[64823,64823],\"mapped\",[1588,1580]],[[64824,64824],\"mapped\",[1588,1581]],[[64825,64825],\"mapped\",[1588,1582]],[[64826,64826],\"mapped\",[1591,1605]],[[64827,64827],\"mapped\",[1592,1605]],[[64828,64829],\"mapped\",[1575,1611]],[[64830,64831],\"valid\",[],\"NV8\"],[[64832,64847],\"disallowed\"],[[64848,64848],\"mapped\",[1578,1580,1605]],[[64849,64850],\"mapped\",[1578,1581,1580]],[[64851,64851],\"mapped\",[1578,1581,1605]],[[64852,64852],\"mapped\",[1578,1582,1605]],[[64853,64853],\"mapped\",[1578,1605,1580]],[[64854,64854],\"mapped\",[1578,1605,1581]],[[64855,64855],\"mapped\",[1578,1605,1582]],[[64856,64857],\"mapped\",[1580,1605,1581]],[[64858,64858],\"mapped\",[1581,1605,1610]],[[64859,64859],\"mapped\",[1581,1605,1609]],[[64860,64860],\"mapped\",[1587,1581,1580]],[[64861,64861],\"mapped\",[1587,1580,1581]],[[64862,64862],\"mapped\",[1587,1580,1609]],[[64863,64864],\"mapped\",[1587,1605,1581]],[[64865,64865],\"mapped\",[1587,1605,1580]],[[64866,64867],\"mapped\",[1587,1605,1605]],[[64868,64869],\"mapped\",[1589,1581,1581]],[[64870,64870],\"mapped\",[1589,1605,1605]],[[64871,64872],\"mapped\",[1588,1581,1605]],[[64873,64873],\"mapped\",[1588,1580,1610]],[[64874,64875],\"mapped\",[1588,1605,1582]],[[64876,64877],\"mapped\",[1588,1605,1605]],[[64878,64878],\"mapped\",[1590,1581,1609]],[[64879,64880],\"mapped\",[1590,1582,1605]],[[64881,64882],\"mapped\",[1591,1605,1581]],[[64883,64883],\"mapped\",[1591,1605,1605]],[[64884,64884],\"mapped\",[1591,1605,1610]],[[64885,64885],\"mapped\",[1593,1580,1605]],[[64886,64887],\"mapped\",[1593,1605,1605]],[[64888,64888],\"mapped\",[1593,1605,1609]],[[64889,64889],\"mapped\",[1594,1605,1605]],[[64890,64890],\"mapped\",[1594,1605,1610]],[[64891,64891],\"mapped\",[1594,1605,1609]],[[64892,64893],\"mapped\",[1601,1582,1605]],[[64894,64894],\"mapped\",[1602,1605,1581]],[[64895,64895],\"mapped\",[1602,1605,1605]],[[64896,64896],\"mapped\",[1604,1581,1605]],[[64897,64897],\"mapped\",[1604,1581,1610]],[[64898,64898],\"mapped\",[1604,1581,1609]],[[64899,64900],\"mapped\",[1604,1580,1580]],[[64901,64902],\"mapped\",[1604,1582,1605]],[[64903,64904],\"mapped\",[1604,1605,1581]],[[64905,64905],\"mapped\",[1605,1581,1580]],[[64906,64906],\"mapped\",[1605,1581,1605]],[[64907,64907],\"mapped\",[1605,1581,1610]],[[64908,64908],\"mapped\",[1605,1580,1581]],[[64909,64909],\"mapped\",[1605,1580,1605]],[[64910,64910],\"mapped\",[1605,1582,1580]],[[64911,64911],\"mapped\",[1605,1582,1605]],[[64912,64913],\"disallowed\"],[[64914,64914],\"mapped\",[1605,1580,1582]],[[64915,64915],\"mapped\",[1607,1605,1580]],[[64916,64916],\"mapped\",[1607,1605,1605]],[[64917,64917],\"mapped\",[1606,1581,1605]],[[64918,64918],\"mapped\",[1606,1581,1609]],[[64919,64920],\"mapped\",[1606,1580,1605]],[[64921,64921],\"mapped\",[1606,1580,1609]],[[64922,64922],\"mapped\",[1606,1605,1610]],[[64923,64923],\"mapped\",[1606,1605,1609]],[[64924,64925],\"mapped\",[1610,1605,1605]],[[64926,64926],\"mapped\",[1576,1582,1610]],[[64927,64927],\"mapped\",[1578,1580,1610]],[[64928,64928],\"mapped\",[1578,1580,1609]],[[64929,64929],\"mapped\",[1578,1582,1610]],[[64930,64930],\"mapped\",[1578,1582,1609]],[[64931,64931],\"mapped\",[1578,1605,1610]],[[64932,64932],\"mapped\",[1578,1605,1609]],[[64933,64933],\"mapped\",[1580,1605,1610]],[[64934,64934],\"mapped\",[1580,1581,1609]],[[64935,64935],\"mapped\",[1580,1605,1609]],[[64936,64936],\"mapped\",[1587,1582,1609]],[[64937,64937],\"mapped\",[1589,1581,1610]],[[64938,64938],\"mapped\",[1588,1581,1610]],[[64939,64939],\"mapped\",[1590,1581,1610]],[[64940,64940],\"mapped\",[1604,1580,1610]],[[64941,64941],\"mapped\",[1604,1605,1610]],[[64942,64942],\"mapped\",[1610,1581,1610]],[[64943,64943],\"mapped\",[1610,1580,1610]],[[64944,64944],\"mapped\",[1610,1605,1610]],[[64945,64945],\"mapped\",[1605,1605,1610]],[[64946,64946],\"mapped\",[1602,1605,1610]],[[64947,64947],\"mapped\",[1606,1581,1610]],[[64948,64948],\"mapped\",[1602,1605,1581]],[[64949,64949],\"mapped\",[1604,1581,1605]],[[64950,64950],\"mapped\",[1593,1605,1610]],[[64951,64951],\"mapped\",[1603,1605,1610]],[[64952,64952],\"mapped\",[1606,1580,1581]],[[64953,64953],\"mapped\",[1605,1582,1610]],[[64954,64954],\"mapped\",[1604,1580,1605]],[[64955,64955],\"mapped\",[1603,1605,1605]],[[64956,64956],\"mapped\",[1604,1580,1605]],[[64957,64957],\"mapped\",[1606,1580,1581]],[[64958,64958],\"mapped\",[1580,1581,1610]],[[64959,64959],\"mapped\",[1581,1580,1610]],[[64960,64960],\"mapped\",[1605,1580,1610]],[[64961,64961],\"mapped\",[1601,1605,1610]],[[64962,64962],\"mapped\",[1576,1581,1610]],[[64963,64963],\"mapped\",[1603,1605,1605]],[[64964,64964],\"mapped\",[1593,1580,1605]],[[64965,64965],\"mapped\",[1589,1605,1605]],[[64966,64966],\"mapped\",[1587,1582,1610]],[[64967,64967],\"mapped\",[1606,1580,1610]],[[64968,64975],\"disallowed\"],[[64976,65007],\"disallowed\"],[[65008,65008],\"mapped\",[1589,1604,1746]],[[65009,65009],\"mapped\",[1602,1604,1746]],[[65010,65010],\"mapped\",[1575,1604,1604,1607]],[[65011,65011],\"mapped\",[1575,1603,1576,1585]],[[65012,65012],\"mapped\",[1605,1581,1605,1583]],[[65013,65013],\"mapped\",[1589,1604,1593,1605]],[[65014,65014],\"mapped\",[1585,1587,1608,1604]],[[65015,65015],\"mapped\",[1593,1604,1610,1607]],[[65016,65016],\"mapped\",[1608,1587,1604,1605]],[[65017,65017],\"mapped\",[1589,1604,1609]],[[65018,65018],\"disallowed_STD3_mapped\",[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605]],[[65019,65019],\"disallowed_STD3_mapped\",[1580,1604,32,1580,1604,1575,1604,1607]],[[65020,65020],\"mapped\",[1585,1740,1575,1604]],[[65021,65021],\"valid\",[],\"NV8\"],[[65022,65023],\"disallowed\"],[[65024,65039],\"ignored\"],[[65040,65040],\"disallowed_STD3_mapped\",[44]],[[65041,65041],\"mapped\",[12289]],[[65042,65042],\"disallowed\"],[[65043,65043],\"disallowed_STD3_mapped\",[58]],[[65044,65044],\"disallowed_STD3_mapped\",[59]],[[65045,65045],\"disallowed_STD3_mapped\",[33]],[[65046,65046],\"disallowed_STD3_mapped\",[63]],[[65047,65047],\"mapped\",[12310]],[[65048,65048],\"mapped\",[12311]],[[65049,65049],\"disallowed\"],[[65050,65055],\"disallowed\"],[[65056,65059],\"valid\"],[[65060,65062],\"valid\"],[[65063,65069],\"valid\"],[[65070,65071],\"valid\"],[[65072,65072],\"disallowed\"],[[65073,65073],\"mapped\",[8212]],[[65074,65074],\"mapped\",[8211]],[[65075,65076],\"disallowed_STD3_mapped\",[95]],[[65077,65077],\"disallowed_STD3_mapped\",[40]],[[65078,65078],\"disallowed_STD3_mapped\",[41]],[[65079,65079],\"disallowed_STD3_mapped\",[123]],[[65080,65080],\"disallowed_STD3_mapped\",[125]],[[65081,65081],\"mapped\",[12308]],[[65082,65082],\"mapped\",[12309]],[[65083,65083],\"mapped\",[12304]],[[65084,65084],\"mapped\",[12305]],[[65085,65085],\"mapped\",[12298]],[[65086,65086],\"mapped\",[12299]],[[65087,65087],\"mapped\",[12296]],[[65088,65088],\"mapped\",[12297]],[[65089,65089],\"mapped\",[12300]],[[65090,65090],\"mapped\",[12301]],[[65091,65091],\"mapped\",[12302]],[[65092,65092],\"mapped\",[12303]],[[65093,65094],\"valid\",[],\"NV8\"],[[65095,65095],\"disallowed_STD3_mapped\",[91]],[[65096,65096],\"disallowed_STD3_mapped\",[93]],[[65097,65100],\"disallowed_STD3_mapped\",[32,773]],[[65101,65103],\"disallowed_STD3_mapped\",[95]],[[65104,65104],\"disallowed_STD3_mapped\",[44]],[[65105,65105],\"mapped\",[12289]],[[65106,65106],\"disallowed\"],[[65107,65107],\"disallowed\"],[[65108,65108],\"disallowed_STD3_mapped\",[59]],[[65109,65109],\"disallowed_STD3_mapped\",[58]],[[65110,65110],\"disallowed_STD3_mapped\",[63]],[[65111,65111],\"disallowed_STD3_mapped\",[33]],[[65112,65112],\"mapped\",[8212]],[[65113,65113],\"disallowed_STD3_mapped\",[40]],[[65114,65114],\"disallowed_STD3_mapped\",[41]],[[65115,65115],\"disallowed_STD3_mapped\",[123]],[[65116,65116],\"disallowed_STD3_mapped\",[125]],[[65117,65117],\"mapped\",[12308]],[[65118,65118],\"mapped\",[12309]],[[65119,65119],\"disallowed_STD3_mapped\",[35]],[[65120,65120],\"disallowed_STD3_mapped\",[38]],[[65121,65121],\"disallowed_STD3_mapped\",[42]],[[65122,65122],\"disallowed_STD3_mapped\",[43]],[[65123,65123],\"mapped\",[45]],[[65124,65124],\"disallowed_STD3_mapped\",[60]],[[65125,65125],\"disallowed_STD3_mapped\",[62]],[[65126,65126],\"disallowed_STD3_mapped\",[61]],[[65127,65127],\"disallowed\"],[[65128,65128],\"disallowed_STD3_mapped\",[92]],[[65129,65129],\"disallowed_STD3_mapped\",[36]],[[65130,65130],\"disallowed_STD3_mapped\",[37]],[[65131,65131],\"disallowed_STD3_mapped\",[64]],[[65132,65135],\"disallowed\"],[[65136,65136],\"disallowed_STD3_mapped\",[32,1611]],[[65137,65137],\"mapped\",[1600,1611]],[[65138,65138],\"disallowed_STD3_mapped\",[32,1612]],[[65139,65139],\"valid\"],[[65140,65140],\"disallowed_STD3_mapped\",[32,1613]],[[65141,65141],\"disallowed\"],[[65142,65142],\"disallowed_STD3_mapped\",[32,1614]],[[65143,65143],\"mapped\",[1600,1614]],[[65144,65144],\"disallowed_STD3_mapped\",[32,1615]],[[65145,65145],\"mapped\",[1600,1615]],[[65146,65146],\"disallowed_STD3_mapped\",[32,1616]],[[65147,65147],\"mapped\",[1600,1616]],[[65148,65148],\"disallowed_STD3_mapped\",[32,1617]],[[65149,65149],\"mapped\",[1600,1617]],[[65150,65150],\"disallowed_STD3_mapped\",[32,1618]],[[65151,65151],\"mapped\",[1600,1618]],[[65152,65152],\"mapped\",[1569]],[[65153,65154],\"mapped\",[1570]],[[65155,65156],\"mapped\",[1571]],[[65157,65158],\"mapped\",[1572]],[[65159,65160],\"mapped\",[1573]],[[65161,65164],\"mapped\",[1574]],[[65165,65166],\"mapped\",[1575]],[[65167,65170],\"mapped\",[1576]],[[65171,65172],\"mapped\",[1577]],[[65173,65176],\"mapped\",[1578]],[[65177,65180],\"mapped\",[1579]],[[65181,65184],\"mapped\",[1580]],[[65185,65188],\"mapped\",[1581]],[[65189,65192],\"mapped\",[1582]],[[65193,65194],\"mapped\",[1583]],[[65195,65196],\"mapped\",[1584]],[[65197,65198],\"mapped\",[1585]],[[65199,65200],\"mapped\",[1586]],[[65201,65204],\"mapped\",[1587]],[[65205,65208],\"mapped\",[1588]],[[65209,65212],\"mapped\",[1589]],[[65213,65216],\"mapped\",[1590]],[[65217,65220],\"mapped\",[1591]],[[65221,65224],\"mapped\",[1592]],[[65225,65228],\"mapped\",[1593]],[[65229,65232],\"mapped\",[1594]],[[65233,65236],\"mapped\",[1601]],[[65237,65240],\"mapped\",[1602]],[[65241,65244],\"mapped\",[1603]],[[65245,65248],\"mapped\",[1604]],[[65249,65252],\"mapped\",[1605]],[[65253,65256],\"mapped\",[1606]],[[65257,65260],\"mapped\",[1607]],[[65261,65262],\"mapped\",[1608]],[[65263,65264],\"mapped\",[1609]],[[65265,65268],\"mapped\",[1610]],[[65269,65270],\"mapped\",[1604,1570]],[[65271,65272],\"mapped\",[1604,1571]],[[65273,65274],\"mapped\",[1604,1573]],[[65275,65276],\"mapped\",[1604,1575]],[[65277,65278],\"disallowed\"],[[65279,65279],\"ignored\"],[[65280,65280],\"disallowed\"],[[65281,65281],\"disallowed_STD3_mapped\",[33]],[[65282,65282],\"disallowed_STD3_mapped\",[34]],[[65283,65283],\"disallowed_STD3_mapped\",[35]],[[65284,65284],\"disallowed_STD3_mapped\",[36]],[[65285,65285],\"disallowed_STD3_mapped\",[37]],[[65286,65286],\"disallowed_STD3_mapped\",[38]],[[65287,65287],\"disallowed_STD3_mapped\",[39]],[[65288,65288],\"disallowed_STD3_mapped\",[40]],[[65289,65289],\"disallowed_STD3_mapped\",[41]],[[65290,65290],\"disallowed_STD3_mapped\",[42]],[[65291,65291],\"disallowed_STD3_mapped\",[43]],[[65292,65292],\"disallowed_STD3_mapped\",[44]],[[65293,65293],\"mapped\",[45]],[[65294,65294],\"mapped\",[46]],[[65295,65295],\"disallowed_STD3_mapped\",[47]],[[65296,65296],\"mapped\",[48]],[[65297,65297],\"mapped\",[49]],[[65298,65298],\"mapped\",[50]],[[65299,65299],\"mapped\",[51]],[[65300,65300],\"mapped\",[52]],[[65301,65301],\"mapped\",[53]],[[65302,65302],\"mapped\",[54]],[[65303,65303],\"mapped\",[55]],[[65304,65304],\"mapped\",[56]],[[65305,65305],\"mapped\",[57]],[[65306,65306],\"disallowed_STD3_mapped\",[58]],[[65307,65307],\"disallowed_STD3_mapped\",[59]],[[65308,65308],\"disallowed_STD3_mapped\",[60]],[[65309,65309],\"disallowed_STD3_mapped\",[61]],[[65310,65310],\"disallowed_STD3_mapped\",[62]],[[65311,65311],\"disallowed_STD3_mapped\",[63]],[[65312,65312],\"disallowed_STD3_mapped\",[64]],[[65313,65313],\"mapped\",[97]],[[65314,65314],\"mapped\",[98]],[[65315,65315],\"mapped\",[99]],[[65316,65316],\"mapped\",[100]],[[65317,65317],\"mapped\",[101]],[[65318,65318],\"mapped\",[102]],[[65319,65319],\"mapped\",[103]],[[65320,65320],\"mapped\",[104]],[[65321,65321],\"mapped\",[105]],[[65322,65322],\"mapped\",[106]],[[65323,65323],\"mapped\",[107]],[[65324,65324],\"mapped\",[108]],[[65325,65325],\"mapped\",[109]],[[65326,65326],\"mapped\",[110]],[[65327,65327],\"mapped\",[111]],[[65328,65328],\"mapped\",[112]],[[65329,65329],\"mapped\",[113]],[[65330,65330],\"mapped\",[114]],[[65331,65331],\"mapped\",[115]],[[65332,65332],\"mapped\",[116]],[[65333,65333],\"mapped\",[117]],[[65334,65334],\"mapped\",[118]],[[65335,65335],\"mapped\",[119]],[[65336,65336],\"mapped\",[120]],[[65337,65337],\"mapped\",[121]],[[65338,65338],\"mapped\",[122]],[[65339,65339],\"disallowed_STD3_mapped\",[91]],[[65340,65340],\"disallowed_STD3_mapped\",[92]],[[65341,65341],\"disallowed_STD3_mapped\",[93]],[[65342,65342],\"disallowed_STD3_mapped\",[94]],[[65343,65343],\"disallowed_STD3_mapped\",[95]],[[65344,65344],\"disallowed_STD3_mapped\",[96]],[[65345,65345],\"mapped\",[97]],[[65346,65346],\"mapped\",[98]],[[65347,65347],\"mapped\",[99]],[[65348,65348],\"mapped\",[100]],[[65349,65349],\"mapped\",[101]],[[65350,65350],\"mapped\",[102]],[[65351,65351],\"mapped\",[103]],[[65352,65352],\"mapped\",[104]],[[65353,65353],\"mapped\",[105]],[[65354,65354],\"mapped\",[106]],[[65355,65355],\"mapped\",[107]],[[65356,65356],\"mapped\",[108]],[[65357,65357],\"mapped\",[109]],[[65358,65358],\"mapped\",[110]],[[65359,65359],\"mapped\",[111]],[[65360,65360],\"mapped\",[112]],[[65361,65361],\"mapped\",[113]],[[65362,65362],\"mapped\",[114]],[[65363,65363],\"mapped\",[115]],[[65364,65364],\"mapped\",[116]],[[65365,65365],\"mapped\",[117]],[[65366,65366],\"mapped\",[118]],[[65367,65367],\"mapped\",[119]],[[65368,65368],\"mapped\",[120]],[[65369,65369],\"mapped\",[121]],[[65370,65370],\"mapped\",[122]],[[65371,65371],\"disallowed_STD3_mapped\",[123]],[[65372,65372],\"disallowed_STD3_mapped\",[124]],[[65373,65373],\"disallowed_STD3_mapped\",[125]],[[65374,65374],\"disallowed_STD3_mapped\",[126]],[[65375,65375],\"mapped\",[10629]],[[65376,65376],\"mapped\",[10630]],[[65377,65377],\"mapped\",[46]],[[65378,65378],\"mapped\",[12300]],[[65379,65379],\"mapped\",[12301]],[[65380,65380],\"mapped\",[12289]],[[65381,65381],\"mapped\",[12539]],[[65382,65382],\"mapped\",[12530]],[[65383,65383],\"mapped\",[12449]],[[65384,65384],\"mapped\",[12451]],[[65385,65385],\"mapped\",[12453]],[[65386,65386],\"mapped\",[12455]],[[65387,65387],\"mapped\",[12457]],[[65388,65388],\"mapped\",[12515]],[[65389,65389],\"mapped\",[12517]],[[65390,65390],\"mapped\",[12519]],[[65391,65391],\"mapped\",[12483]],[[65392,65392],\"mapped\",[12540]],[[65393,65393],\"mapped\",[12450]],[[65394,65394],\"mapped\",[12452]],[[65395,65395],\"mapped\",[12454]],[[65396,65396],\"mapped\",[12456]],[[65397,65397],\"mapped\",[12458]],[[65398,65398],\"mapped\",[12459]],[[65399,65399],\"mapped\",[12461]],[[65400,65400],\"mapped\",[12463]],[[65401,65401],\"mapped\",[12465]],[[65402,65402],\"mapped\",[12467]],[[65403,65403],\"mapped\",[12469]],[[65404,65404],\"mapped\",[12471]],[[65405,65405],\"mapped\",[12473]],[[65406,65406],\"mapped\",[12475]],[[65407,65407],\"mapped\",[12477]],[[65408,65408],\"mapped\",[12479]],[[65409,65409],\"mapped\",[12481]],[[65410,65410],\"mapped\",[12484]],[[65411,65411],\"mapped\",[12486]],[[65412,65412],\"mapped\",[12488]],[[65413,65413],\"mapped\",[12490]],[[65414,65414],\"mapped\",[12491]],[[65415,65415],\"mapped\",[12492]],[[65416,65416],\"mapped\",[12493]],[[65417,65417],\"mapped\",[12494]],[[65418,65418],\"mapped\",[12495]],[[65419,65419],\"mapped\",[12498]],[[65420,65420],\"mapped\",[12501]],[[65421,65421],\"mapped\",[12504]],[[65422,65422],\"mapped\",[12507]],[[65423,65423],\"mapped\",[12510]],[[65424,65424],\"mapped\",[12511]],[[65425,65425],\"mapped\",[12512]],[[65426,65426],\"mapped\",[12513]],[[65427,65427],\"mapped\",[12514]],[[65428,65428],\"mapped\",[12516]],[[65429,65429],\"mapped\",[12518]],[[65430,65430],\"mapped\",[12520]],[[65431,65431],\"mapped\",[12521]],[[65432,65432],\"mapped\",[12522]],[[65433,65433],\"mapped\",[12523]],[[65434,65434],\"mapped\",[12524]],[[65435,65435],\"mapped\",[12525]],[[65436,65436],\"mapped\",[12527]],[[65437,65437],\"mapped\",[12531]],[[65438,65438],\"mapped\",[12441]],[[65439,65439],\"mapped\",[12442]],[[65440,65440],\"disallowed\"],[[65441,65441],\"mapped\",[4352]],[[65442,65442],\"mapped\",[4353]],[[65443,65443],\"mapped\",[4522]],[[65444,65444],\"mapped\",[4354]],[[65445,65445],\"mapped\",[4524]],[[65446,65446],\"mapped\",[4525]],[[65447,65447],\"mapped\",[4355]],[[65448,65448],\"mapped\",[4356]],[[65449,65449],\"mapped\",[4357]],[[65450,65450],\"mapped\",[4528]],[[65451,65451],\"mapped\",[4529]],[[65452,65452],\"mapped\",[4530]],[[65453,65453],\"mapped\",[4531]],[[65454,65454],\"mapped\",[4532]],[[65455,65455],\"mapped\",[4533]],[[65456,65456],\"mapped\",[4378]],[[65457,65457],\"mapped\",[4358]],[[65458,65458],\"mapped\",[4359]],[[65459,65459],\"mapped\",[4360]],[[65460,65460],\"mapped\",[4385]],[[65461,65461],\"mapped\",[4361]],[[65462,65462],\"mapped\",[4362]],[[65463,65463],\"mapped\",[4363]],[[65464,65464],\"mapped\",[4364]],[[65465,65465],\"mapped\",[4365]],[[65466,65466],\"mapped\",[4366]],[[65467,65467],\"mapped\",[4367]],[[65468,65468],\"mapped\",[4368]],[[65469,65469],\"mapped\",[4369]],[[65470,65470],\"mapped\",[4370]],[[65471,65473],\"disallowed\"],[[65474,65474],\"mapped\",[4449]],[[65475,65475],\"mapped\",[4450]],[[65476,65476],\"mapped\",[4451]],[[65477,65477],\"mapped\",[4452]],[[65478,65478],\"mapped\",[4453]],[[65479,65479],\"mapped\",[4454]],[[65480,65481],\"disallowed\"],[[65482,65482],\"mapped\",[4455]],[[65483,65483],\"mapped\",[4456]],[[65484,65484],\"mapped\",[4457]],[[65485,65485],\"mapped\",[4458]],[[65486,65486],\"mapped\",[4459]],[[65487,65487],\"mapped\",[4460]],[[65488,65489],\"disallowed\"],[[65490,65490],\"mapped\",[4461]],[[65491,65491],\"mapped\",[4462]],[[65492,65492],\"mapped\",[4463]],[[65493,65493],\"mapped\",[4464]],[[65494,65494],\"mapped\",[4465]],[[65495,65495],\"mapped\",[4466]],[[65496,65497],\"disallowed\"],[[65498,65498],\"mapped\",[4467]],[[65499,65499],\"mapped\",[4468]],[[65500,65500],\"mapped\",[4469]],[[65501,65503],\"disallowed\"],[[65504,65504],\"mapped\",[162]],[[65505,65505],\"mapped\",[163]],[[65506,65506],\"mapped\",[172]],[[65507,65507],\"disallowed_STD3_mapped\",[32,772]],[[65508,65508],\"mapped\",[166]],[[65509,65509],\"mapped\",[165]],[[65510,65510],\"mapped\",[8361]],[[65511,65511],\"disallowed\"],[[65512,65512],\"mapped\",[9474]],[[65513,65513],\"mapped\",[8592]],[[65514,65514],\"mapped\",[8593]],[[65515,65515],\"mapped\",[8594]],[[65516,65516],\"mapped\",[8595]],[[65517,65517],\"mapped\",[9632]],[[65518,65518],\"mapped\",[9675]],[[65519,65528],\"disallowed\"],[[65529,65531],\"disallowed\"],[[65532,65532],\"disallowed\"],[[65533,65533],\"disallowed\"],[[65534,65535],\"disallowed\"],[[65536,65547],\"valid\"],[[65548,65548],\"disallowed\"],[[65549,65574],\"valid\"],[[65575,65575],\"disallowed\"],[[65576,65594],\"valid\"],[[65595,65595],\"disallowed\"],[[65596,65597],\"valid\"],[[65598,65598],\"disallowed\"],[[65599,65613],\"valid\"],[[65614,65615],\"disallowed\"],[[65616,65629],\"valid\"],[[65630,65663],\"disallowed\"],[[65664,65786],\"valid\"],[[65787,65791],\"disallowed\"],[[65792,65794],\"valid\",[],\"NV8\"],[[65795,65798],\"disallowed\"],[[65799,65843],\"valid\",[],\"NV8\"],[[65844,65846],\"disallowed\"],[[65847,65855],\"valid\",[],\"NV8\"],[[65856,65930],\"valid\",[],\"NV8\"],[[65931,65932],\"valid\",[],\"NV8\"],[[65933,65935],\"disallowed\"],[[65936,65947],\"valid\",[],\"NV8\"],[[65948,65951],\"disallowed\"],[[65952,65952],\"valid\",[],\"NV8\"],[[65953,65999],\"disallowed\"],[[66000,66044],\"valid\",[],\"NV8\"],[[66045,66045],\"valid\"],[[66046,66175],\"disallowed\"],[[66176,66204],\"valid\"],[[66205,66207],\"disallowed\"],[[66208,66256],\"valid\"],[[66257,66271],\"disallowed\"],[[66272,66272],\"valid\"],[[66273,66299],\"valid\",[],\"NV8\"],[[66300,66303],\"disallowed\"],[[66304,66334],\"valid\"],[[66335,66335],\"valid\"],[[66336,66339],\"valid\",[],\"NV8\"],[[66340,66351],\"disallowed\"],[[66352,66368],\"valid\"],[[66369,66369],\"valid\",[],\"NV8\"],[[66370,66377],\"valid\"],[[66378,66378],\"valid\",[],\"NV8\"],[[66379,66383],\"disallowed\"],[[66384,66426],\"valid\"],[[66427,66431],\"disallowed\"],[[66432,66461],\"valid\"],[[66462,66462],\"disallowed\"],[[66463,66463],\"valid\",[],\"NV8\"],[[66464,66499],\"valid\"],[[66500,66503],\"disallowed\"],[[66504,66511],\"valid\"],[[66512,66517],\"valid\",[],\"NV8\"],[[66518,66559],\"disallowed\"],[[66560,66560],\"mapped\",[66600]],[[66561,66561],\"mapped\",[66601]],[[66562,66562],\"mapped\",[66602]],[[66563,66563],\"mapped\",[66603]],[[66564,66564],\"mapped\",[66604]],[[66565,66565],\"mapped\",[66605]],[[66566,66566],\"mapped\",[66606]],[[66567,66567],\"mapped\",[66607]],[[66568,66568],\"mapped\",[66608]],[[66569,66569],\"mapped\",[66609]],[[66570,66570],\"mapped\",[66610]],[[66571,66571],\"mapped\",[66611]],[[66572,66572],\"mapped\",[66612]],[[66573,66573],\"mapped\",[66613]],[[66574,66574],\"mapped\",[66614]],[[66575,66575],\"mapped\",[66615]],[[66576,66576],\"mapped\",[66616]],[[66577,66577],\"mapped\",[66617]],[[66578,66578],\"mapped\",[66618]],[[66579,66579],\"mapped\",[66619]],[[66580,66580],\"mapped\",[66620]],[[66581,66581],\"mapped\",[66621]],[[66582,66582],\"mapped\",[66622]],[[66583,66583],\"mapped\",[66623]],[[66584,66584],\"mapped\",[66624]],[[66585,66585],\"mapped\",[66625]],[[66586,66586],\"mapped\",[66626]],[[66587,66587],\"mapped\",[66627]],[[66588,66588],\"mapped\",[66628]],[[66589,66589],\"mapped\",[66629]],[[66590,66590],\"mapped\",[66630]],[[66591,66591],\"mapped\",[66631]],[[66592,66592],\"mapped\",[66632]],[[66593,66593],\"mapped\",[66633]],[[66594,66594],\"mapped\",[66634]],[[66595,66595],\"mapped\",[66635]],[[66596,66596],\"mapped\",[66636]],[[66597,66597],\"mapped\",[66637]],[[66598,66598],\"mapped\",[66638]],[[66599,66599],\"mapped\",[66639]],[[66600,66637],\"valid\"],[[66638,66717],\"valid\"],[[66718,66719],\"disallowed\"],[[66720,66729],\"valid\"],[[66730,66815],\"disallowed\"],[[66816,66855],\"valid\"],[[66856,66863],\"disallowed\"],[[66864,66915],\"valid\"],[[66916,66926],\"disallowed\"],[[66927,66927],\"valid\",[],\"NV8\"],[[66928,67071],\"disallowed\"],[[67072,67382],\"valid\"],[[67383,67391],\"disallowed\"],[[67392,67413],\"valid\"],[[67414,67423],\"disallowed\"],[[67424,67431],\"valid\"],[[67432,67583],\"disallowed\"],[[67584,67589],\"valid\"],[[67590,67591],\"disallowed\"],[[67592,67592],\"valid\"],[[67593,67593],\"disallowed\"],[[67594,67637],\"valid\"],[[67638,67638],\"disallowed\"],[[67639,67640],\"valid\"],[[67641,67643],\"disallowed\"],[[67644,67644],\"valid\"],[[67645,67646],\"disallowed\"],[[67647,67647],\"valid\"],[[67648,67669],\"valid\"],[[67670,67670],\"disallowed\"],[[67671,67679],\"valid\",[],\"NV8\"],[[67680,67702],\"valid\"],[[67703,67711],\"valid\",[],\"NV8\"],[[67712,67742],\"valid\"],[[67743,67750],\"disallowed\"],[[67751,67759],\"valid\",[],\"NV8\"],[[67760,67807],\"disallowed\"],[[67808,67826],\"valid\"],[[67827,67827],\"disallowed\"],[[67828,67829],\"valid\"],[[67830,67834],\"disallowed\"],[[67835,67839],\"valid\",[],\"NV8\"],[[67840,67861],\"valid\"],[[67862,67865],\"valid\",[],\"NV8\"],[[67866,67867],\"valid\",[],\"NV8\"],[[67868,67870],\"disallowed\"],[[67871,67871],\"valid\",[],\"NV8\"],[[67872,67897],\"valid\"],[[67898,67902],\"disallowed\"],[[67903,67903],\"valid\",[],\"NV8\"],[[67904,67967],\"disallowed\"],[[67968,68023],\"valid\"],[[68024,68027],\"disallowed\"],[[68028,68029],\"valid\",[],\"NV8\"],[[68030,68031],\"valid\"],[[68032,68047],\"valid\",[],\"NV8\"],[[68048,68049],\"disallowed\"],[[68050,68095],\"valid\",[],\"NV8\"],[[68096,68099],\"valid\"],[[68100,68100],\"disallowed\"],[[68101,68102],\"valid\"],[[68103,68107],\"disallowed\"],[[68108,68115],\"valid\"],[[68116,68116],\"disallowed\"],[[68117,68119],\"valid\"],[[68120,68120],\"disallowed\"],[[68121,68147],\"valid\"],[[68148,68151],\"disallowed\"],[[68152,68154],\"valid\"],[[68155,68158],\"disallowed\"],[[68159,68159],\"valid\"],[[68160,68167],\"valid\",[],\"NV8\"],[[68168,68175],\"disallowed\"],[[68176,68184],\"valid\",[],\"NV8\"],[[68185,68191],\"disallowed\"],[[68192,68220],\"valid\"],[[68221,68223],\"valid\",[],\"NV8\"],[[68224,68252],\"valid\"],[[68253,68255],\"valid\",[],\"NV8\"],[[68256,68287],\"disallowed\"],[[68288,68295],\"valid\"],[[68296,68296],\"valid\",[],\"NV8\"],[[68297,68326],\"valid\"],[[68327,68330],\"disallowed\"],[[68331,68342],\"valid\",[],\"NV8\"],[[68343,68351],\"disallowed\"],[[68352,68405],\"valid\"],[[68406,68408],\"disallowed\"],[[68409,68415],\"valid\",[],\"NV8\"],[[68416,68437],\"valid\"],[[68438,68439],\"disallowed\"],[[68440,68447],\"valid\",[],\"NV8\"],[[68448,68466],\"valid\"],[[68467,68471],\"disallowed\"],[[68472,68479],\"valid\",[],\"NV8\"],[[68480,68497],\"valid\"],[[68498,68504],\"disallowed\"],[[68505,68508],\"valid\",[],\"NV8\"],[[68509,68520],\"disallowed\"],[[68521,68527],\"valid\",[],\"NV8\"],[[68528,68607],\"disallowed\"],[[68608,68680],\"valid\"],[[68681,68735],\"disallowed\"],[[68736,68736],\"mapped\",[68800]],[[68737,68737],\"mapped\",[68801]],[[68738,68738],\"mapped\",[68802]],[[68739,68739],\"mapped\",[68803]],[[68740,68740],\"mapped\",[68804]],[[68741,68741],\"mapped\",[68805]],[[68742,68742],\"mapped\",[68806]],[[68743,68743],\"mapped\",[68807]],[[68744,68744],\"mapped\",[68808]],[[68745,68745],\"mapped\",[68809]],[[68746,68746],\"mapped\",[68810]],[[68747,68747],\"mapped\",[68811]],[[68748,68748],\"mapped\",[68812]],[[68749,68749],\"mapped\",[68813]],[[68750,68750],\"mapped\",[68814]],[[68751,68751],\"mapped\",[68815]],[[68752,68752],\"mapped\",[68816]],[[68753,68753],\"mapped\",[68817]],[[68754,68754],\"mapped\",[68818]],[[68755,68755],\"mapped\",[68819]],[[68756,68756],\"mapped\",[68820]],[[68757,68757],\"mapped\",[68821]],[[68758,68758],\"mapped\",[68822]],[[68759,68759],\"mapped\",[68823]],[[68760,68760],\"mapped\",[68824]],[[68761,68761],\"mapped\",[68825]],[[68762,68762],\"mapped\",[68826]],[[68763,68763],\"mapped\",[68827]],[[68764,68764],\"mapped\",[68828]],[[68765,68765],\"mapped\",[68829]],[[68766,68766],\"mapped\",[68830]],[[68767,68767],\"mapped\",[68831]],[[68768,68768],\"mapped\",[68832]],[[68769,68769],\"mapped\",[68833]],[[68770,68770],\"mapped\",[68834]],[[68771,68771],\"mapped\",[68835]],[[68772,68772],\"mapped\",[68836]],[[68773,68773],\"mapped\",[68837]],[[68774,68774],\"mapped\",[68838]],[[68775,68775],\"mapped\",[68839]],[[68776,68776],\"mapped\",[68840]],[[68777,68777],\"mapped\",[68841]],[[68778,68778],\"mapped\",[68842]],[[68779,68779],\"mapped\",[68843]],[[68780,68780],\"mapped\",[68844]],[[68781,68781],\"mapped\",[68845]],[[68782,68782],\"mapped\",[68846]],[[68783,68783],\"mapped\",[68847]],[[68784,68784],\"mapped\",[68848]],[[68785,68785],\"mapped\",[68849]],[[68786,68786],\"mapped\",[68850]],[[68787,68799],\"disallowed\"],[[68800,68850],\"valid\"],[[68851,68857],\"disallowed\"],[[68858,68863],\"valid\",[],\"NV8\"],[[68864,69215],\"disallowed\"],[[69216,69246],\"valid\",[],\"NV8\"],[[69247,69631],\"disallowed\"],[[69632,69702],\"valid\"],[[69703,69709],\"valid\",[],\"NV8\"],[[69710,69713],\"disallowed\"],[[69714,69733],\"valid\",[],\"NV8\"],[[69734,69743],\"valid\"],[[69744,69758],\"disallowed\"],[[69759,69759],\"valid\"],[[69760,69818],\"valid\"],[[69819,69820],\"valid\",[],\"NV8\"],[[69821,69821],\"disallowed\"],[[69822,69825],\"valid\",[],\"NV8\"],[[69826,69839],\"disallowed\"],[[69840,69864],\"valid\"],[[69865,69871],\"disallowed\"],[[69872,69881],\"valid\"],[[69882,69887],\"disallowed\"],[[69888,69940],\"valid\"],[[69941,69941],\"disallowed\"],[[69942,69951],\"valid\"],[[69952,69955],\"valid\",[],\"NV8\"],[[69956,69967],\"disallowed\"],[[69968,70003],\"valid\"],[[70004,70005],\"valid\",[],\"NV8\"],[[70006,70006],\"valid\"],[[70007,70015],\"disallowed\"],[[70016,70084],\"valid\"],[[70085,70088],\"valid\",[],\"NV8\"],[[70089,70089],\"valid\",[],\"NV8\"],[[70090,70092],\"valid\"],[[70093,70093],\"valid\",[],\"NV8\"],[[70094,70095],\"disallowed\"],[[70096,70105],\"valid\"],[[70106,70106],\"valid\"],[[70107,70107],\"valid\",[],\"NV8\"],[[70108,70108],\"valid\"],[[70109,70111],\"valid\",[],\"NV8\"],[[70112,70112],\"disallowed\"],[[70113,70132],\"valid\",[],\"NV8\"],[[70133,70143],\"disallowed\"],[[70144,70161],\"valid\"],[[70162,70162],\"disallowed\"],[[70163,70199],\"valid\"],[[70200,70205],\"valid\",[],\"NV8\"],[[70206,70271],\"disallowed\"],[[70272,70278],\"valid\"],[[70279,70279],\"disallowed\"],[[70280,70280],\"valid\"],[[70281,70281],\"disallowed\"],[[70282,70285],\"valid\"],[[70286,70286],\"disallowed\"],[[70287,70301],\"valid\"],[[70302,70302],\"disallowed\"],[[70303,70312],\"valid\"],[[70313,70313],\"valid\",[],\"NV8\"],[[70314,70319],\"disallowed\"],[[70320,70378],\"valid\"],[[70379,70383],\"disallowed\"],[[70384,70393],\"valid\"],[[70394,70399],\"disallowed\"],[[70400,70400],\"valid\"],[[70401,70403],\"valid\"],[[70404,70404],\"disallowed\"],[[70405,70412],\"valid\"],[[70413,70414],\"disallowed\"],[[70415,70416],\"valid\"],[[70417,70418],\"disallowed\"],[[70419,70440],\"valid\"],[[70441,70441],\"disallowed\"],[[70442,70448],\"valid\"],[[70449,70449],\"disallowed\"],[[70450,70451],\"valid\"],[[70452,70452],\"disallowed\"],[[70453,70457],\"valid\"],[[70458,70459],\"disallowed\"],[[70460,70468],\"valid\"],[[70469,70470],\"disallowed\"],[[70471,70472],\"valid\"],[[70473,70474],\"disallowed\"],[[70475,70477],\"valid\"],[[70478,70479],\"disallowed\"],[[70480,70480],\"valid\"],[[70481,70486],\"disallowed\"],[[70487,70487],\"valid\"],[[70488,70492],\"disallowed\"],[[70493,70499],\"valid\"],[[70500,70501],\"disallowed\"],[[70502,70508],\"valid\"],[[70509,70511],\"disallowed\"],[[70512,70516],\"valid\"],[[70517,70783],\"disallowed\"],[[70784,70853],\"valid\"],[[70854,70854],\"valid\",[],\"NV8\"],[[70855,70855],\"valid\"],[[70856,70863],\"disallowed\"],[[70864,70873],\"valid\"],[[70874,71039],\"disallowed\"],[[71040,71093],\"valid\"],[[71094,71095],\"disallowed\"],[[71096,71104],\"valid\"],[[71105,71113],\"valid\",[],\"NV8\"],[[71114,71127],\"valid\",[],\"NV8\"],[[71128,71133],\"valid\"],[[71134,71167],\"disallowed\"],[[71168,71232],\"valid\"],[[71233,71235],\"valid\",[],\"NV8\"],[[71236,71236],\"valid\"],[[71237,71247],\"disallowed\"],[[71248,71257],\"valid\"],[[71258,71295],\"disallowed\"],[[71296,71351],\"valid\"],[[71352,71359],\"disallowed\"],[[71360,71369],\"valid\"],[[71370,71423],\"disallowed\"],[[71424,71449],\"valid\"],[[71450,71452],\"disallowed\"],[[71453,71467],\"valid\"],[[71468,71471],\"disallowed\"],[[71472,71481],\"valid\"],[[71482,71487],\"valid\",[],\"NV8\"],[[71488,71839],\"disallowed\"],[[71840,71840],\"mapped\",[71872]],[[71841,71841],\"mapped\",[71873]],[[71842,71842],\"mapped\",[71874]],[[71843,71843],\"mapped\",[71875]],[[71844,71844],\"mapped\",[71876]],[[71845,71845],\"mapped\",[71877]],[[71846,71846],\"mapped\",[71878]],[[71847,71847],\"mapped\",[71879]],[[71848,71848],\"mapped\",[71880]],[[71849,71849],\"mapped\",[71881]],[[71850,71850],\"mapped\",[71882]],[[71851,71851],\"mapped\",[71883]],[[71852,71852],\"mapped\",[71884]],[[71853,71853],\"mapped\",[71885]],[[71854,71854],\"mapped\",[71886]],[[71855,71855],\"mapped\",[71887]],[[71856,71856],\"mapped\",[71888]],[[71857,71857],\"mapped\",[71889]],[[71858,71858],\"mapped\",[71890]],[[71859,71859],\"mapped\",[71891]],[[71860,71860],\"mapped\",[71892]],[[71861,71861],\"mapped\",[71893]],[[71862,71862],\"mapped\",[71894]],[[71863,71863],\"mapped\",[71895]],[[71864,71864],\"mapped\",[71896]],[[71865,71865],\"mapped\",[71897]],[[71866,71866],\"mapped\",[71898]],[[71867,71867],\"mapped\",[71899]],[[71868,71868],\"mapped\",[71900]],[[71869,71869],\"mapped\",[71901]],[[71870,71870],\"mapped\",[71902]],[[71871,71871],\"mapped\",[71903]],[[71872,71913],\"valid\"],[[71914,71922],\"valid\",[],\"NV8\"],[[71923,71934],\"disallowed\"],[[71935,71935],\"valid\"],[[71936,72383],\"disallowed\"],[[72384,72440],\"valid\"],[[72441,73727],\"disallowed\"],[[73728,74606],\"valid\"],[[74607,74648],\"valid\"],[[74649,74649],\"valid\"],[[74650,74751],\"disallowed\"],[[74752,74850],\"valid\",[],\"NV8\"],[[74851,74862],\"valid\",[],\"NV8\"],[[74863,74863],\"disallowed\"],[[74864,74867],\"valid\",[],\"NV8\"],[[74868,74868],\"valid\",[],\"NV8\"],[[74869,74879],\"disallowed\"],[[74880,75075],\"valid\"],[[75076,77823],\"disallowed\"],[[77824,78894],\"valid\"],[[78895,82943],\"disallowed\"],[[82944,83526],\"valid\"],[[83527,92159],\"disallowed\"],[[92160,92728],\"valid\"],[[92729,92735],\"disallowed\"],[[92736,92766],\"valid\"],[[92767,92767],\"disallowed\"],[[92768,92777],\"valid\"],[[92778,92781],\"disallowed\"],[[92782,92783],\"valid\",[],\"NV8\"],[[92784,92879],\"disallowed\"],[[92880,92909],\"valid\"],[[92910,92911],\"disallowed\"],[[92912,92916],\"valid\"],[[92917,92917],\"valid\",[],\"NV8\"],[[92918,92927],\"disallowed\"],[[92928,92982],\"valid\"],[[92983,92991],\"valid\",[],\"NV8\"],[[92992,92995],\"valid\"],[[92996,92997],\"valid\",[],\"NV8\"],[[92998,93007],\"disallowed\"],[[93008,93017],\"valid\"],[[93018,93018],\"disallowed\"],[[93019,93025],\"valid\",[],\"NV8\"],[[93026,93026],\"disallowed\"],[[93027,93047],\"valid\"],[[93048,93052],\"disallowed\"],[[93053,93071],\"valid\"],[[93072,93951],\"disallowed\"],[[93952,94020],\"valid\"],[[94021,94031],\"disallowed\"],[[94032,94078],\"valid\"],[[94079,94094],\"disallowed\"],[[94095,94111],\"valid\"],[[94112,110591],\"disallowed\"],[[110592,110593],\"valid\"],[[110594,113663],\"disallowed\"],[[113664,113770],\"valid\"],[[113771,113775],\"disallowed\"],[[113776,113788],\"valid\"],[[113789,113791],\"disallowed\"],[[113792,113800],\"valid\"],[[113801,113807],\"disallowed\"],[[113808,113817],\"valid\"],[[113818,113819],\"disallowed\"],[[113820,113820],\"valid\",[],\"NV8\"],[[113821,113822],\"valid\"],[[113823,113823],\"valid\",[],\"NV8\"],[[113824,113827],\"ignored\"],[[113828,118783],\"disallowed\"],[[118784,119029],\"valid\",[],\"NV8\"],[[119030,119039],\"disallowed\"],[[119040,119078],\"valid\",[],\"NV8\"],[[119079,119080],\"disallowed\"],[[119081,119081],\"valid\",[],\"NV8\"],[[119082,119133],\"valid\",[],\"NV8\"],[[119134,119134],\"mapped\",[119127,119141]],[[119135,119135],\"mapped\",[119128,119141]],[[119136,119136],\"mapped\",[119128,119141,119150]],[[119137,119137],\"mapped\",[119128,119141,119151]],[[119138,119138],\"mapped\",[119128,119141,119152]],[[119139,119139],\"mapped\",[119128,119141,119153]],[[119140,119140],\"mapped\",[119128,119141,119154]],[[119141,119154],\"valid\",[],\"NV8\"],[[119155,119162],\"disallowed\"],[[119163,119226],\"valid\",[],\"NV8\"],[[119227,119227],\"mapped\",[119225,119141]],[[119228,119228],\"mapped\",[119226,119141]],[[119229,119229],\"mapped\",[119225,119141,119150]],[[119230,119230],\"mapped\",[119226,119141,119150]],[[119231,119231],\"mapped\",[119225,119141,119151]],[[119232,119232],\"mapped\",[119226,119141,119151]],[[119233,119261],\"valid\",[],\"NV8\"],[[119262,119272],\"valid\",[],\"NV8\"],[[119273,119295],\"disallowed\"],[[119296,119365],\"valid\",[],\"NV8\"],[[119366,119551],\"disallowed\"],[[119552,119638],\"valid\",[],\"NV8\"],[[119639,119647],\"disallowed\"],[[119648,119665],\"valid\",[],\"NV8\"],[[119666,119807],\"disallowed\"],[[119808,119808],\"mapped\",[97]],[[119809,119809],\"mapped\",[98]],[[119810,119810],\"mapped\",[99]],[[119811,119811],\"mapped\",[100]],[[119812,119812],\"mapped\",[101]],[[119813,119813],\"mapped\",[102]],[[119814,119814],\"mapped\",[103]],[[119815,119815],\"mapped\",[104]],[[119816,119816],\"mapped\",[105]],[[119817,119817],\"mapped\",[106]],[[119818,119818],\"mapped\",[107]],[[119819,119819],\"mapped\",[108]],[[119820,119820],\"mapped\",[109]],[[119821,119821],\"mapped\",[110]],[[119822,119822],\"mapped\",[111]],[[119823,119823],\"mapped\",[112]],[[119824,119824],\"mapped\",[113]],[[119825,119825],\"mapped\",[114]],[[119826,119826],\"mapped\",[115]],[[119827,119827],\"mapped\",[116]],[[119828,119828],\"mapped\",[117]],[[119829,119829],\"mapped\",[118]],[[119830,119830],\"mapped\",[119]],[[119831,119831],\"mapped\",[120]],[[119832,119832],\"mapped\",[121]],[[119833,119833],\"mapped\",[122]],[[119834,119834],\"mapped\",[97]],[[119835,119835],\"mapped\",[98]],[[119836,119836],\"mapped\",[99]],[[119837,119837],\"mapped\",[100]],[[119838,119838],\"mapped\",[101]],[[119839,119839],\"mapped\",[102]],[[119840,119840],\"mapped\",[103]],[[119841,119841],\"mapped\",[104]],[[119842,119842],\"mapped\",[105]],[[119843,119843],\"mapped\",[106]],[[119844,119844],\"mapped\",[107]],[[119845,119845],\"mapped\",[108]],[[119846,119846],\"mapped\",[109]],[[119847,119847],\"mapped\",[110]],[[119848,119848],\"mapped\",[111]],[[119849,119849],\"mapped\",[112]],[[119850,119850],\"mapped\",[113]],[[119851,119851],\"mapped\",[114]],[[119852,119852],\"mapped\",[115]],[[119853,119853],\"mapped\",[116]],[[119854,119854],\"mapped\",[117]],[[119855,119855],\"mapped\",[118]],[[119856,119856],\"mapped\",[119]],[[119857,119857],\"mapped\",[120]],[[119858,119858],\"mapped\",[121]],[[119859,119859],\"mapped\",[122]],[[119860,119860],\"mapped\",[97]],[[119861,119861],\"mapped\",[98]],[[119862,119862],\"mapped\",[99]],[[119863,119863],\"mapped\",[100]],[[119864,119864],\"mapped\",[101]],[[119865,119865],\"mapped\",[102]],[[119866,119866],\"mapped\",[103]],[[119867,119867],\"mapped\",[104]],[[119868,119868],\"mapped\",[105]],[[119869,119869],\"mapped\",[106]],[[119870,119870],\"mapped\",[107]],[[119871,119871],\"mapped\",[108]],[[119872,119872],\"mapped\",[109]],[[119873,119873],\"mapped\",[110]],[[119874,119874],\"mapped\",[111]],[[119875,119875],\"mapped\",[112]],[[119876,119876],\"mapped\",[113]],[[119877,119877],\"mapped\",[114]],[[119878,119878],\"mapped\",[115]],[[119879,119879],\"mapped\",[116]],[[119880,119880],\"mapped\",[117]],[[119881,119881],\"mapped\",[118]],[[119882,119882],\"mapped\",[119]],[[119883,119883],\"mapped\",[120]],[[119884,119884],\"mapped\",[121]],[[119885,119885],\"mapped\",[122]],[[119886,119886],\"mapped\",[97]],[[119887,119887],\"mapped\",[98]],[[119888,119888],\"mapped\",[99]],[[119889,119889],\"mapped\",[100]],[[119890,119890],\"mapped\",[101]],[[119891,119891],\"mapped\",[102]],[[119892,119892],\"mapped\",[103]],[[119893,119893],\"disallowed\"],[[119894,119894],\"mapped\",[105]],[[119895,119895],\"mapped\",[106]],[[119896,119896],\"mapped\",[107]],[[119897,119897],\"mapped\",[108]],[[119898,119898],\"mapped\",[109]],[[119899,119899],\"mapped\",[110]],[[119900,119900],\"mapped\",[111]],[[119901,119901],\"mapped\",[112]],[[119902,119902],\"mapped\",[113]],[[119903,119903],\"mapped\",[114]],[[119904,119904],\"mapped\",[115]],[[119905,119905],\"mapped\",[116]],[[119906,119906],\"mapped\",[117]],[[119907,119907],\"mapped\",[118]],[[119908,119908],\"mapped\",[119]],[[119909,119909],\"mapped\",[120]],[[119910,119910],\"mapped\",[121]],[[119911,119911],\"mapped\",[122]],[[119912,119912],\"mapped\",[97]],[[119913,119913],\"mapped\",[98]],[[119914,119914],\"mapped\",[99]],[[119915,119915],\"mapped\",[100]],[[119916,119916],\"mapped\",[101]],[[119917,119917],\"mapped\",[102]],[[119918,119918],\"mapped\",[103]],[[119919,119919],\"mapped\",[104]],[[119920,119920],\"mapped\",[105]],[[119921,119921],\"mapped\",[106]],[[119922,119922],\"mapped\",[107]],[[119923,119923],\"mapped\",[108]],[[119924,119924],\"mapped\",[109]],[[119925,119925],\"mapped\",[110]],[[119926,119926],\"mapped\",[111]],[[119927,119927],\"mapped\",[112]],[[119928,119928],\"mapped\",[113]],[[119929,119929],\"mapped\",[114]],[[119930,119930],\"mapped\",[115]],[[119931,119931],\"mapped\",[116]],[[119932,119932],\"mapped\",[117]],[[119933,119933],\"mapped\",[118]],[[119934,119934],\"mapped\",[119]],[[119935,119935],\"mapped\",[120]],[[119936,119936],\"mapped\",[121]],[[119937,119937],\"mapped\",[122]],[[119938,119938],\"mapped\",[97]],[[119939,119939],\"mapped\",[98]],[[119940,119940],\"mapped\",[99]],[[119941,119941],\"mapped\",[100]],[[119942,119942],\"mapped\",[101]],[[119943,119943],\"mapped\",[102]],[[119944,119944],\"mapped\",[103]],[[119945,119945],\"mapped\",[104]],[[119946,119946],\"mapped\",[105]],[[119947,119947],\"mapped\",[106]],[[119948,119948],\"mapped\",[107]],[[119949,119949],\"mapped\",[108]],[[119950,119950],\"mapped\",[109]],[[119951,119951],\"mapped\",[110]],[[119952,119952],\"mapped\",[111]],[[119953,119953],\"mapped\",[112]],[[119954,119954],\"mapped\",[113]],[[119955,119955],\"mapped\",[114]],[[119956,119956],\"mapped\",[115]],[[119957,119957],\"mapped\",[116]],[[119958,119958],\"mapped\",[117]],[[119959,119959],\"mapped\",[118]],[[119960,119960],\"mapped\",[119]],[[119961,119961],\"mapped\",[120]],[[119962,119962],\"mapped\",[121]],[[119963,119963],\"mapped\",[122]],[[119964,119964],\"mapped\",[97]],[[119965,119965],\"disallowed\"],[[119966,119966],\"mapped\",[99]],[[119967,119967],\"mapped\",[100]],[[119968,119969],\"disallowed\"],[[119970,119970],\"mapped\",[103]],[[119971,119972],\"disallowed\"],[[119973,119973],\"mapped\",[106]],[[119974,119974],\"mapped\",[107]],[[119975,119976],\"disallowed\"],[[119977,119977],\"mapped\",[110]],[[119978,119978],\"mapped\",[111]],[[119979,119979],\"mapped\",[112]],[[119980,119980],\"mapped\",[113]],[[119981,119981],\"disallowed\"],[[119982,119982],\"mapped\",[115]],[[119983,119983],\"mapped\",[116]],[[119984,119984],\"mapped\",[117]],[[119985,119985],\"mapped\",[118]],[[119986,119986],\"mapped\",[119]],[[119987,119987],\"mapped\",[120]],[[119988,119988],\"mapped\",[121]],[[119989,119989],\"mapped\",[122]],[[119990,119990],\"mapped\",[97]],[[119991,119991],\"mapped\",[98]],[[119992,119992],\"mapped\",[99]],[[119993,119993],\"mapped\",[100]],[[119994,119994],\"disallowed\"],[[119995,119995],\"mapped\",[102]],[[119996,119996],\"disallowed\"],[[119997,119997],\"mapped\",[104]],[[119998,119998],\"mapped\",[105]],[[119999,119999],\"mapped\",[106]],[[120000,120000],\"mapped\",[107]],[[120001,120001],\"mapped\",[108]],[[120002,120002],\"mapped\",[109]],[[120003,120003],\"mapped\",[110]],[[120004,120004],\"disallowed\"],[[120005,120005],\"mapped\",[112]],[[120006,120006],\"mapped\",[113]],[[120007,120007],\"mapped\",[114]],[[120008,120008],\"mapped\",[115]],[[120009,120009],\"mapped\",[116]],[[120010,120010],\"mapped\",[117]],[[120011,120011],\"mapped\",[118]],[[120012,120012],\"mapped\",[119]],[[120013,120013],\"mapped\",[120]],[[120014,120014],\"mapped\",[121]],[[120015,120015],\"mapped\",[122]],[[120016,120016],\"mapped\",[97]],[[120017,120017],\"mapped\",[98]],[[120018,120018],\"mapped\",[99]],[[120019,120019],\"mapped\",[100]],[[120020,120020],\"mapped\",[101]],[[120021,120021],\"mapped\",[102]],[[120022,120022],\"mapped\",[103]],[[120023,120023],\"mapped\",[104]],[[120024,120024],\"mapped\",[105]],[[120025,120025],\"mapped\",[106]],[[120026,120026],\"mapped\",[107]],[[120027,120027],\"mapped\",[108]],[[120028,120028],\"mapped\",[109]],[[120029,120029],\"mapped\",[110]],[[120030,120030],\"mapped\",[111]],[[120031,120031],\"mapped\",[112]],[[120032,120032],\"mapped\",[113]],[[120033,120033],\"mapped\",[114]],[[120034,120034],\"mapped\",[115]],[[120035,120035],\"mapped\",[116]],[[120036,120036],\"mapped\",[117]],[[120037,120037],\"mapped\",[118]],[[120038,120038],\"mapped\",[119]],[[120039,120039],\"mapped\",[120]],[[120040,120040],\"mapped\",[121]],[[120041,120041],\"mapped\",[122]],[[120042,120042],\"mapped\",[97]],[[120043,120043],\"mapped\",[98]],[[120044,120044],\"mapped\",[99]],[[120045,120045],\"mapped\",[100]],[[120046,120046],\"mapped\",[101]],[[120047,120047],\"mapped\",[102]],[[120048,120048],\"mapped\",[103]],[[120049,120049],\"mapped\",[104]],[[120050,120050],\"mapped\",[105]],[[120051,120051],\"mapped\",[106]],[[120052,120052],\"mapped\",[107]],[[120053,120053],\"mapped\",[108]],[[120054,120054],\"mapped\",[109]],[[120055,120055],\"mapped\",[110]],[[120056,120056],\"mapped\",[111]],[[120057,120057],\"mapped\",[112]],[[120058,120058],\"mapped\",[113]],[[120059,120059],\"mapped\",[114]],[[120060,120060],\"mapped\",[115]],[[120061,120061],\"mapped\",[116]],[[120062,120062],\"mapped\",[117]],[[120063,120063],\"mapped\",[118]],[[120064,120064],\"mapped\",[119]],[[120065,120065],\"mapped\",[120]],[[120066,120066],\"mapped\",[121]],[[120067,120067],\"mapped\",[122]],[[120068,120068],\"mapped\",[97]],[[120069,120069],\"mapped\",[98]],[[120070,120070],\"disallowed\"],[[120071,120071],\"mapped\",[100]],[[120072,120072],\"mapped\",[101]],[[120073,120073],\"mapped\",[102]],[[120074,120074],\"mapped\",[103]],[[120075,120076],\"disallowed\"],[[120077,120077],\"mapped\",[106]],[[120078,120078],\"mapped\",[107]],[[120079,120079],\"mapped\",[108]],[[120080,120080],\"mapped\",[109]],[[120081,120081],\"mapped\",[110]],[[120082,120082],\"mapped\",[111]],[[120083,120083],\"mapped\",[112]],[[120084,120084],\"mapped\",[113]],[[120085,120085],\"disallowed\"],[[120086,120086],\"mapped\",[115]],[[120087,120087],\"mapped\",[116]],[[120088,120088],\"mapped\",[117]],[[120089,120089],\"mapped\",[118]],[[120090,120090],\"mapped\",[119]],[[120091,120091],\"mapped\",[120]],[[120092,120092],\"mapped\",[121]],[[120093,120093],\"disallowed\"],[[120094,120094],\"mapped\",[97]],[[120095,120095],\"mapped\",[98]],[[120096,120096],\"mapped\",[99]],[[120097,120097],\"mapped\",[100]],[[120098,120098],\"mapped\",[101]],[[120099,120099],\"mapped\",[102]],[[120100,120100],\"mapped\",[103]],[[120101,120101],\"mapped\",[104]],[[120102,120102],\"mapped\",[105]],[[120103,120103],\"mapped\",[106]],[[120104,120104],\"mapped\",[107]],[[120105,120105],\"mapped\",[108]],[[120106,120106],\"mapped\",[109]],[[120107,120107],\"mapped\",[110]],[[120108,120108],\"mapped\",[111]],[[120109,120109],\"mapped\",[112]],[[120110,120110],\"mapped\",[113]],[[120111,120111],\"mapped\",[114]],[[120112,120112],\"mapped\",[115]],[[120113,120113],\"mapped\",[116]],[[120114,120114],\"mapped\",[117]],[[120115,120115],\"mapped\",[118]],[[120116,120116],\"mapped\",[119]],[[120117,120117],\"mapped\",[120]],[[120118,120118],\"mapped\",[121]],[[120119,120119],\"mapped\",[122]],[[120120,120120],\"mapped\",[97]],[[120121,120121],\"mapped\",[98]],[[120122,120122],\"disallowed\"],[[120123,120123],\"mapped\",[100]],[[120124,120124],\"mapped\",[101]],[[120125,120125],\"mapped\",[102]],[[120126,120126],\"mapped\",[103]],[[120127,120127],\"disallowed\"],[[120128,120128],\"mapped\",[105]],[[120129,120129],\"mapped\",[106]],[[120130,120130],\"mapped\",[107]],[[120131,120131],\"mapped\",[108]],[[120132,120132],\"mapped\",[109]],[[120133,120133],\"disallowed\"],[[120134,120134],\"mapped\",[111]],[[120135,120137],\"disallowed\"],[[120138,120138],\"mapped\",[115]],[[120139,120139],\"mapped\",[116]],[[120140,120140],\"mapped\",[117]],[[120141,120141],\"mapped\",[118]],[[120142,120142],\"mapped\",[119]],[[120143,120143],\"mapped\",[120]],[[120144,120144],\"mapped\",[121]],[[120145,120145],\"disallowed\"],[[120146,120146],\"mapped\",[97]],[[120147,120147],\"mapped\",[98]],[[120148,120148],\"mapped\",[99]],[[120149,120149],\"mapped\",[100]],[[120150,120150],\"mapped\",[101]],[[120151,120151],\"mapped\",[102]],[[120152,120152],\"mapped\",[103]],[[120153,120153],\"mapped\",[104]],[[120154,120154],\"mapped\",[105]],[[120155,120155],\"mapped\",[106]],[[120156,120156],\"mapped\",[107]],[[120157,120157],\"mapped\",[108]],[[120158,120158],\"mapped\",[109]],[[120159,120159],\"mapped\",[110]],[[120160,120160],\"mapped\",[111]],[[120161,120161],\"mapped\",[112]],[[120162,120162],\"mapped\",[113]],[[120163,120163],\"mapped\",[114]],[[120164,120164],\"mapped\",[115]],[[120165,120165],\"mapped\",[116]],[[120166,120166],\"mapped\",[117]],[[120167,120167],\"mapped\",[118]],[[120168,120168],\"mapped\",[119]],[[120169,120169],\"mapped\",[120]],[[120170,120170],\"mapped\",[121]],[[120171,120171],\"mapped\",[122]],[[120172,120172],\"mapped\",[97]],[[120173,120173],\"mapped\",[98]],[[120174,120174],\"mapped\",[99]],[[120175,120175],\"mapped\",[100]],[[120176,120176],\"mapped\",[101]],[[120177,120177],\"mapped\",[102]],[[120178,120178],\"mapped\",[103]],[[120179,120179],\"mapped\",[104]],[[120180,120180],\"mapped\",[105]],[[120181,120181],\"mapped\",[106]],[[120182,120182],\"mapped\",[107]],[[120183,120183],\"mapped\",[108]],[[120184,120184],\"mapped\",[109]],[[120185,120185],\"mapped\",[110]],[[120186,120186],\"mapped\",[111]],[[120187,120187],\"mapped\",[112]],[[120188,120188],\"mapped\",[113]],[[120189,120189],\"mapped\",[114]],[[120190,120190],\"mapped\",[115]],[[120191,120191],\"mapped\",[116]],[[120192,120192],\"mapped\",[117]],[[120193,120193],\"mapped\",[118]],[[120194,120194],\"mapped\",[119]],[[120195,120195],\"mapped\",[120]],[[120196,120196],\"mapped\",[121]],[[120197,120197],\"mapped\",[122]],[[120198,120198],\"mapped\",[97]],[[120199,120199],\"mapped\",[98]],[[120200,120200],\"mapped\",[99]],[[120201,120201],\"mapped\",[100]],[[120202,120202],\"mapped\",[101]],[[120203,120203],\"mapped\",[102]],[[120204,120204],\"mapped\",[103]],[[120205,120205],\"mapped\",[104]],[[120206,120206],\"mapped\",[105]],[[120207,120207],\"mapped\",[106]],[[120208,120208],\"mapped\",[107]],[[120209,120209],\"mapped\",[108]],[[120210,120210],\"mapped\",[109]],[[120211,120211],\"mapped\",[110]],[[120212,120212],\"mapped\",[111]],[[120213,120213],\"mapped\",[112]],[[120214,120214],\"mapped\",[113]],[[120215,120215],\"mapped\",[114]],[[120216,120216],\"mapped\",[115]],[[120217,120217],\"mapped\",[116]],[[120218,120218],\"mapped\",[117]],[[120219,120219],\"mapped\",[118]],[[120220,120220],\"mapped\",[119]],[[120221,120221],\"mapped\",[120]],[[120222,120222],\"mapped\",[121]],[[120223,120223],\"mapped\",[122]],[[120224,120224],\"mapped\",[97]],[[120225,120225],\"mapped\",[98]],[[120226,120226],\"mapped\",[99]],[[120227,120227],\"mapped\",[100]],[[120228,120228],\"mapped\",[101]],[[120229,120229],\"mapped\",[102]],[[120230,120230],\"mapped\",[103]],[[120231,120231],\"mapped\",[104]],[[120232,120232],\"mapped\",[105]],[[120233,120233],\"mapped\",[106]],[[120234,120234],\"mapped\",[107]],[[120235,120235],\"mapped\",[108]],[[120236,120236],\"mapped\",[109]],[[120237,120237],\"mapped\",[110]],[[120238,120238],\"mapped\",[111]],[[120239,120239],\"mapped\",[112]],[[120240,120240],\"mapped\",[113]],[[120241,120241],\"mapped\",[114]],[[120242,120242],\"mapped\",[115]],[[120243,120243],\"mapped\",[116]],[[120244,120244],\"mapped\",[117]],[[120245,120245],\"mapped\",[118]],[[120246,120246],\"mapped\",[119]],[[120247,120247],\"mapped\",[120]],[[120248,120248],\"mapped\",[121]],[[120249,120249],\"mapped\",[122]],[[120250,120250],\"mapped\",[97]],[[120251,120251],\"mapped\",[98]],[[120252,120252],\"mapped\",[99]],[[120253,120253],\"mapped\",[100]],[[120254,120254],\"mapped\",[101]],[[120255,120255],\"mapped\",[102]],[[120256,120256],\"mapped\",[103]],[[120257,120257],\"mapped\",[104]],[[120258,120258],\"mapped\",[105]],[[120259,120259],\"mapped\",[106]],[[120260,120260],\"mapped\",[107]],[[120261,120261],\"mapped\",[108]],[[120262,120262],\"mapped\",[109]],[[120263,120263],\"mapped\",[110]],[[120264,120264],\"mapped\",[111]],[[120265,120265],\"mapped\",[112]],[[120266,120266],\"mapped\",[113]],[[120267,120267],\"mapped\",[114]],[[120268,120268],\"mapped\",[115]],[[120269,120269],\"mapped\",[116]],[[120270,120270],\"mapped\",[117]],[[120271,120271],\"mapped\",[118]],[[120272,120272],\"mapped\",[119]],[[120273,120273],\"mapped\",[120]],[[120274,120274],\"mapped\",[121]],[[120275,120275],\"mapped\",[122]],[[120276,120276],\"mapped\",[97]],[[120277,120277],\"mapped\",[98]],[[120278,120278],\"mapped\",[99]],[[120279,120279],\"mapped\",[100]],[[120280,120280],\"mapped\",[101]],[[120281,120281],\"mapped\",[102]],[[120282,120282],\"mapped\",[103]],[[120283,120283],\"mapped\",[104]],[[120284,120284],\"mapped\",[105]],[[120285,120285],\"mapped\",[106]],[[120286,120286],\"mapped\",[107]],[[120287,120287],\"mapped\",[108]],[[120288,120288],\"mapped\",[109]],[[120289,120289],\"mapped\",[110]],[[120290,120290],\"mapped\",[111]],[[120291,120291],\"mapped\",[112]],[[120292,120292],\"mapped\",[113]],[[120293,120293],\"mapped\",[114]],[[120294,120294],\"mapped\",[115]],[[120295,120295],\"mapped\",[116]],[[120296,120296],\"mapped\",[117]],[[120297,120297],\"mapped\",[118]],[[120298,120298],\"mapped\",[119]],[[120299,120299],\"mapped\",[120]],[[120300,120300],\"mapped\",[121]],[[120301,120301],\"mapped\",[122]],[[120302,120302],\"mapped\",[97]],[[120303,120303],\"mapped\",[98]],[[120304,120304],\"mapped\",[99]],[[120305,120305],\"mapped\",[100]],[[120306,120306],\"mapped\",[101]],[[120307,120307],\"mapped\",[102]],[[120308,120308],\"mapped\",[103]],[[120309,120309],\"mapped\",[104]],[[120310,120310],\"mapped\",[105]],[[120311,120311],\"mapped\",[106]],[[120312,120312],\"mapped\",[107]],[[120313,120313],\"mapped\",[108]],[[120314,120314],\"mapped\",[109]],[[120315,120315],\"mapped\",[110]],[[120316,120316],\"mapped\",[111]],[[120317,120317],\"mapped\",[112]],[[120318,120318],\"mapped\",[113]],[[120319,120319],\"mapped\",[114]],[[120320,120320],\"mapped\",[115]],[[120321,120321],\"mapped\",[116]],[[120322,120322],\"mapped\",[117]],[[120323,120323],\"mapped\",[118]],[[120324,120324],\"mapped\",[119]],[[120325,120325],\"mapped\",[120]],[[120326,120326],\"mapped\",[121]],[[120327,120327],\"mapped\",[122]],[[120328,120328],\"mapped\",[97]],[[120329,120329],\"mapped\",[98]],[[120330,120330],\"mapped\",[99]],[[120331,120331],\"mapped\",[100]],[[120332,120332],\"mapped\",[101]],[[120333,120333],\"mapped\",[102]],[[120334,120334],\"mapped\",[103]],[[120335,120335],\"mapped\",[104]],[[120336,120336],\"mapped\",[105]],[[120337,120337],\"mapped\",[106]],[[120338,120338],\"mapped\",[107]],[[120339,120339],\"mapped\",[108]],[[120340,120340],\"mapped\",[109]],[[120341,120341],\"mapped\",[110]],[[120342,120342],\"mapped\",[111]],[[120343,120343],\"mapped\",[112]],[[120344,120344],\"mapped\",[113]],[[120345,120345],\"mapped\",[114]],[[120346,120346],\"mapped\",[115]],[[120347,120347],\"mapped\",[116]],[[120348,120348],\"mapped\",[117]],[[120349,120349],\"mapped\",[118]],[[120350,120350],\"mapped\",[119]],[[120351,120351],\"mapped\",[120]],[[120352,120352],\"mapped\",[121]],[[120353,120353],\"mapped\",[122]],[[120354,120354],\"mapped\",[97]],[[120355,120355],\"mapped\",[98]],[[120356,120356],\"mapped\",[99]],[[120357,120357],\"mapped\",[100]],[[120358,120358],\"mapped\",[101]],[[120359,120359],\"mapped\",[102]],[[120360,120360],\"mapped\",[103]],[[120361,120361],\"mapped\",[104]],[[120362,120362],\"mapped\",[105]],[[120363,120363],\"mapped\",[106]],[[120364,120364],\"mapped\",[107]],[[120365,120365],\"mapped\",[108]],[[120366,120366],\"mapped\",[109]],[[120367,120367],\"mapped\",[110]],[[120368,120368],\"mapped\",[111]],[[120369,120369],\"mapped\",[112]],[[120370,120370],\"mapped\",[113]],[[120371,120371],\"mapped\",[114]],[[120372,120372],\"mapped\",[115]],[[120373,120373],\"mapped\",[116]],[[120374,120374],\"mapped\",[117]],[[120375,120375],\"mapped\",[118]],[[120376,120376],\"mapped\",[119]],[[120377,120377],\"mapped\",[120]],[[120378,120378],\"mapped\",[121]],[[120379,120379],\"mapped\",[122]],[[120380,120380],\"mapped\",[97]],[[120381,120381],\"mapped\",[98]],[[120382,120382],\"mapped\",[99]],[[120383,120383],\"mapped\",[100]],[[120384,120384],\"mapped\",[101]],[[120385,120385],\"mapped\",[102]],[[120386,120386],\"mapped\",[103]],[[120387,120387],\"mapped\",[104]],[[120388,120388],\"mapped\",[105]],[[120389,120389],\"mapped\",[106]],[[120390,120390],\"mapped\",[107]],[[120391,120391],\"mapped\",[108]],[[120392,120392],\"mapped\",[109]],[[120393,120393],\"mapped\",[110]],[[120394,120394],\"mapped\",[111]],[[120395,120395],\"mapped\",[112]],[[120396,120396],\"mapped\",[113]],[[120397,120397],\"mapped\",[114]],[[120398,120398],\"mapped\",[115]],[[120399,120399],\"mapped\",[116]],[[120400,120400],\"mapped\",[117]],[[120401,120401],\"mapped\",[118]],[[120402,120402],\"mapped\",[119]],[[120403,120403],\"mapped\",[120]],[[120404,120404],\"mapped\",[121]],[[120405,120405],\"mapped\",[122]],[[120406,120406],\"mapped\",[97]],[[120407,120407],\"mapped\",[98]],[[120408,120408],\"mapped\",[99]],[[120409,120409],\"mapped\",[100]],[[120410,120410],\"mapped\",[101]],[[120411,120411],\"mapped\",[102]],[[120412,120412],\"mapped\",[103]],[[120413,120413],\"mapped\",[104]],[[120414,120414],\"mapped\",[105]],[[120415,120415],\"mapped\",[106]],[[120416,120416],\"mapped\",[107]],[[120417,120417],\"mapped\",[108]],[[120418,120418],\"mapped\",[109]],[[120419,120419],\"mapped\",[110]],[[120420,120420],\"mapped\",[111]],[[120421,120421],\"mapped\",[112]],[[120422,120422],\"mapped\",[113]],[[120423,120423],\"mapped\",[114]],[[120424,120424],\"mapped\",[115]],[[120425,120425],\"mapped\",[116]],[[120426,120426],\"mapped\",[117]],[[120427,120427],\"mapped\",[118]],[[120428,120428],\"mapped\",[119]],[[120429,120429],\"mapped\",[120]],[[120430,120430],\"mapped\",[121]],[[120431,120431],\"mapped\",[122]],[[120432,120432],\"mapped\",[97]],[[120433,120433],\"mapped\",[98]],[[120434,120434],\"mapped\",[99]],[[120435,120435],\"mapped\",[100]],[[120436,120436],\"mapped\",[101]],[[120437,120437],\"mapped\",[102]],[[120438,120438],\"mapped\",[103]],[[120439,120439],\"mapped\",[104]],[[120440,120440],\"mapped\",[105]],[[120441,120441],\"mapped\",[106]],[[120442,120442],\"mapped\",[107]],[[120443,120443],\"mapped\",[108]],[[120444,120444],\"mapped\",[109]],[[120445,120445],\"mapped\",[110]],[[120446,120446],\"mapped\",[111]],[[120447,120447],\"mapped\",[112]],[[120448,120448],\"mapped\",[113]],[[120449,120449],\"mapped\",[114]],[[120450,120450],\"mapped\",[115]],[[120451,120451],\"mapped\",[116]],[[120452,120452],\"mapped\",[117]],[[120453,120453],\"mapped\",[118]],[[120454,120454],\"mapped\",[119]],[[120455,120455],\"mapped\",[120]],[[120456,120456],\"mapped\",[121]],[[120457,120457],\"mapped\",[122]],[[120458,120458],\"mapped\",[97]],[[120459,120459],\"mapped\",[98]],[[120460,120460],\"mapped\",[99]],[[120461,120461],\"mapped\",[100]],[[120462,120462],\"mapped\",[101]],[[120463,120463],\"mapped\",[102]],[[120464,120464],\"mapped\",[103]],[[120465,120465],\"mapped\",[104]],[[120466,120466],\"mapped\",[105]],[[120467,120467],\"mapped\",[106]],[[120468,120468],\"mapped\",[107]],[[120469,120469],\"mapped\",[108]],[[120470,120470],\"mapped\",[109]],[[120471,120471],\"mapped\",[110]],[[120472,120472],\"mapped\",[111]],[[120473,120473],\"mapped\",[112]],[[120474,120474],\"mapped\",[113]],[[120475,120475],\"mapped\",[114]],[[120476,120476],\"mapped\",[115]],[[120477,120477],\"mapped\",[116]],[[120478,120478],\"mapped\",[117]],[[120479,120479],\"mapped\",[118]],[[120480,120480],\"mapped\",[119]],[[120481,120481],\"mapped\",[120]],[[120482,120482],\"mapped\",[121]],[[120483,120483],\"mapped\",[122]],[[120484,120484],\"mapped\",[305]],[[120485,120485],\"mapped\",[567]],[[120486,120487],\"disallowed\"],[[120488,120488],\"mapped\",[945]],[[120489,120489],\"mapped\",[946]],[[120490,120490],\"mapped\",[947]],[[120491,120491],\"mapped\",[948]],[[120492,120492],\"mapped\",[949]],[[120493,120493],\"mapped\",[950]],[[120494,120494],\"mapped\",[951]],[[120495,120495],\"mapped\",[952]],[[120496,120496],\"mapped\",[953]],[[120497,120497],\"mapped\",[954]],[[120498,120498],\"mapped\",[955]],[[120499,120499],\"mapped\",[956]],[[120500,120500],\"mapped\",[957]],[[120501,120501],\"mapped\",[958]],[[120502,120502],\"mapped\",[959]],[[120503,120503],\"mapped\",[960]],[[120504,120504],\"mapped\",[961]],[[120505,120505],\"mapped\",[952]],[[120506,120506],\"mapped\",[963]],[[120507,120507],\"mapped\",[964]],[[120508,120508],\"mapped\",[965]],[[120509,120509],\"mapped\",[966]],[[120510,120510],\"mapped\",[967]],[[120511,120511],\"mapped\",[968]],[[120512,120512],\"mapped\",[969]],[[120513,120513],\"mapped\",[8711]],[[120514,120514],\"mapped\",[945]],[[120515,120515],\"mapped\",[946]],[[120516,120516],\"mapped\",[947]],[[120517,120517],\"mapped\",[948]],[[120518,120518],\"mapped\",[949]],[[120519,120519],\"mapped\",[950]],[[120520,120520],\"mapped\",[951]],[[120521,120521],\"mapped\",[952]],[[120522,120522],\"mapped\",[953]],[[120523,120523],\"mapped\",[954]],[[120524,120524],\"mapped\",[955]],[[120525,120525],\"mapped\",[956]],[[120526,120526],\"mapped\",[957]],[[120527,120527],\"mapped\",[958]],[[120528,120528],\"mapped\",[959]],[[120529,120529],\"mapped\",[960]],[[120530,120530],\"mapped\",[961]],[[120531,120532],\"mapped\",[963]],[[120533,120533],\"mapped\",[964]],[[120534,120534],\"mapped\",[965]],[[120535,120535],\"mapped\",[966]],[[120536,120536],\"mapped\",[967]],[[120537,120537],\"mapped\",[968]],[[120538,120538],\"mapped\",[969]],[[120539,120539],\"mapped\",[8706]],[[120540,120540],\"mapped\",[949]],[[120541,120541],\"mapped\",[952]],[[120542,120542],\"mapped\",[954]],[[120543,120543],\"mapped\",[966]],[[120544,120544],\"mapped\",[961]],[[120545,120545],\"mapped\",[960]],[[120546,120546],\"mapped\",[945]],[[120547,120547],\"mapped\",[946]],[[120548,120548],\"mapped\",[947]],[[120549,120549],\"mapped\",[948]],[[120550,120550],\"mapped\",[949]],[[120551,120551],\"mapped\",[950]],[[120552,120552],\"mapped\",[951]],[[120553,120553],\"mapped\",[952]],[[120554,120554],\"mapped\",[953]],[[120555,120555],\"mapped\",[954]],[[120556,120556],\"mapped\",[955]],[[120557,120557],\"mapped\",[956]],[[120558,120558],\"mapped\",[957]],[[120559,120559],\"mapped\",[958]],[[120560,120560],\"mapped\",[959]],[[120561,120561],\"mapped\",[960]],[[120562,120562],\"mapped\",[961]],[[120563,120563],\"mapped\",[952]],[[120564,120564],\"mapped\",[963]],[[120565,120565],\"mapped\",[964]],[[120566,120566],\"mapped\",[965]],[[120567,120567],\"mapped\",[966]],[[120568,120568],\"mapped\",[967]],[[120569,120569],\"mapped\",[968]],[[120570,120570],\"mapped\",[969]],[[120571,120571],\"mapped\",[8711]],[[120572,120572],\"mapped\",[945]],[[120573,120573],\"mapped\",[946]],[[120574,120574],\"mapped\",[947]],[[120575,120575],\"mapped\",[948]],[[120576,120576],\"mapped\",[949]],[[120577,120577],\"mapped\",[950]],[[120578,120578],\"mapped\",[951]],[[120579,120579],\"mapped\",[952]],[[120580,120580],\"mapped\",[953]],[[120581,120581],\"mapped\",[954]],[[120582,120582],\"mapped\",[955]],[[120583,120583],\"mapped\",[956]],[[120584,120584],\"mapped\",[957]],[[120585,120585],\"mapped\",[958]],[[120586,120586],\"mapped\",[959]],[[120587,120587],\"mapped\",[960]],[[120588,120588],\"mapped\",[961]],[[120589,120590],\"mapped\",[963]],[[120591,120591],\"mapped\",[964]],[[120592,120592],\"mapped\",[965]],[[120593,120593],\"mapped\",[966]],[[120594,120594],\"mapped\",[967]],[[120595,120595],\"mapped\",[968]],[[120596,120596],\"mapped\",[969]],[[120597,120597],\"mapped\",[8706]],[[120598,120598],\"mapped\",[949]],[[120599,120599],\"mapped\",[952]],[[120600,120600],\"mapped\",[954]],[[120601,120601],\"mapped\",[966]],[[120602,120602],\"mapped\",[961]],[[120603,120603],\"mapped\",[960]],[[120604,120604],\"mapped\",[945]],[[120605,120605],\"mapped\",[946]],[[120606,120606],\"mapped\",[947]],[[120607,120607],\"mapped\",[948]],[[120608,120608],\"mapped\",[949]],[[120609,120609],\"mapped\",[950]],[[120610,120610],\"mapped\",[951]],[[120611,120611],\"mapped\",[952]],[[120612,120612],\"mapped\",[953]],[[120613,120613],\"mapped\",[954]],[[120614,120614],\"mapped\",[955]],[[120615,120615],\"mapped\",[956]],[[120616,120616],\"mapped\",[957]],[[120617,120617],\"mapped\",[958]],[[120618,120618],\"mapped\",[959]],[[120619,120619],\"mapped\",[960]],[[120620,120620],\"mapped\",[961]],[[120621,120621],\"mapped\",[952]],[[120622,120622],\"mapped\",[963]],[[120623,120623],\"mapped\",[964]],[[120624,120624],\"mapped\",[965]],[[120625,120625],\"mapped\",[966]],[[120626,120626],\"mapped\",[967]],[[120627,120627],\"mapped\",[968]],[[120628,120628],\"mapped\",[969]],[[120629,120629],\"mapped\",[8711]],[[120630,120630],\"mapped\",[945]],[[120631,120631],\"mapped\",[946]],[[120632,120632],\"mapped\",[947]],[[120633,120633],\"mapped\",[948]],[[120634,120634],\"mapped\",[949]],[[120635,120635],\"mapped\",[950]],[[120636,120636],\"mapped\",[951]],[[120637,120637],\"mapped\",[952]],[[120638,120638],\"mapped\",[953]],[[120639,120639],\"mapped\",[954]],[[120640,120640],\"mapped\",[955]],[[120641,120641],\"mapped\",[956]],[[120642,120642],\"mapped\",[957]],[[120643,120643],\"mapped\",[958]],[[120644,120644],\"mapped\",[959]],[[120645,120645],\"mapped\",[960]],[[120646,120646],\"mapped\",[961]],[[120647,120648],\"mapped\",[963]],[[120649,120649],\"mapped\",[964]],[[120650,120650],\"mapped\",[965]],[[120651,120651],\"mapped\",[966]],[[120652,120652],\"mapped\",[967]],[[120653,120653],\"mapped\",[968]],[[120654,120654],\"mapped\",[969]],[[120655,120655],\"mapped\",[8706]],[[120656,120656],\"mapped\",[949]],[[120657,120657],\"mapped\",[952]],[[120658,120658],\"mapped\",[954]],[[120659,120659],\"mapped\",[966]],[[120660,120660],\"mapped\",[961]],[[120661,120661],\"mapped\",[960]],[[120662,120662],\"mapped\",[945]],[[120663,120663],\"mapped\",[946]],[[120664,120664],\"mapped\",[947]],[[120665,120665],\"mapped\",[948]],[[120666,120666],\"mapped\",[949]],[[120667,120667],\"mapped\",[950]],[[120668,120668],\"mapped\",[951]],[[120669,120669],\"mapped\",[952]],[[120670,120670],\"mapped\",[953]],[[120671,120671],\"mapped\",[954]],[[120672,120672],\"mapped\",[955]],[[120673,120673],\"mapped\",[956]],[[120674,120674],\"mapped\",[957]],[[120675,120675],\"mapped\",[958]],[[120676,120676],\"mapped\",[959]],[[120677,120677],\"mapped\",[960]],[[120678,120678],\"mapped\",[961]],[[120679,120679],\"mapped\",[952]],[[120680,120680],\"mapped\",[963]],[[120681,120681],\"mapped\",[964]],[[120682,120682],\"mapped\",[965]],[[120683,120683],\"mapped\",[966]],[[120684,120684],\"mapped\",[967]],[[120685,120685],\"mapped\",[968]],[[120686,120686],\"mapped\",[969]],[[120687,120687],\"mapped\",[8711]],[[120688,120688],\"mapped\",[945]],[[120689,120689],\"mapped\",[946]],[[120690,120690],\"mapped\",[947]],[[120691,120691],\"mapped\",[948]],[[120692,120692],\"mapped\",[949]],[[120693,120693],\"mapped\",[950]],[[120694,120694],\"mapped\",[951]],[[120695,120695],\"mapped\",[952]],[[120696,120696],\"mapped\",[953]],[[120697,120697],\"mapped\",[954]],[[120698,120698],\"mapped\",[955]],[[120699,120699],\"mapped\",[956]],[[120700,120700],\"mapped\",[957]],[[120701,120701],\"mapped\",[958]],[[120702,120702],\"mapped\",[959]],[[120703,120703],\"mapped\",[960]],[[120704,120704],\"mapped\",[961]],[[120705,120706],\"mapped\",[963]],[[120707,120707],\"mapped\",[964]],[[120708,120708],\"mapped\",[965]],[[120709,120709],\"mapped\",[966]],[[120710,120710],\"mapped\",[967]],[[120711,120711],\"mapped\",[968]],[[120712,120712],\"mapped\",[969]],[[120713,120713],\"mapped\",[8706]],[[120714,120714],\"mapped\",[949]],[[120715,120715],\"mapped\",[952]],[[120716,120716],\"mapped\",[954]],[[120717,120717],\"mapped\",[966]],[[120718,120718],\"mapped\",[961]],[[120719,120719],\"mapped\",[960]],[[120720,120720],\"mapped\",[945]],[[120721,120721],\"mapped\",[946]],[[120722,120722],\"mapped\",[947]],[[120723,120723],\"mapped\",[948]],[[120724,120724],\"mapped\",[949]],[[120725,120725],\"mapped\",[950]],[[120726,120726],\"mapped\",[951]],[[120727,120727],\"mapped\",[952]],[[120728,120728],\"mapped\",[953]],[[120729,120729],\"mapped\",[954]],[[120730,120730],\"mapped\",[955]],[[120731,120731],\"mapped\",[956]],[[120732,120732],\"mapped\",[957]],[[120733,120733],\"mapped\",[958]],[[120734,120734],\"mapped\",[959]],[[120735,120735],\"mapped\",[960]],[[120736,120736],\"mapped\",[961]],[[120737,120737],\"mapped\",[952]],[[120738,120738],\"mapped\",[963]],[[120739,120739],\"mapped\",[964]],[[120740,120740],\"mapped\",[965]],[[120741,120741],\"mapped\",[966]],[[120742,120742],\"mapped\",[967]],[[120743,120743],\"mapped\",[968]],[[120744,120744],\"mapped\",[969]],[[120745,120745],\"mapped\",[8711]],[[120746,120746],\"mapped\",[945]],[[120747,120747],\"mapped\",[946]],[[120748,120748],\"mapped\",[947]],[[120749,120749],\"mapped\",[948]],[[120750,120750],\"mapped\",[949]],[[120751,120751],\"mapped\",[950]],[[120752,120752],\"mapped\",[951]],[[120753,120753],\"mapped\",[952]],[[120754,120754],\"mapped\",[953]],[[120755,120755],\"mapped\",[954]],[[120756,120756],\"mapped\",[955]],[[120757,120757],\"mapped\",[956]],[[120758,120758],\"mapped\",[957]],[[120759,120759],\"mapped\",[958]],[[120760,120760],\"mapped\",[959]],[[120761,120761],\"mapped\",[960]],[[120762,120762],\"mapped\",[961]],[[120763,120764],\"mapped\",[963]],[[120765,120765],\"mapped\",[964]],[[120766,120766],\"mapped\",[965]],[[120767,120767],\"mapped\",[966]],[[120768,120768],\"mapped\",[967]],[[120769,120769],\"mapped\",[968]],[[120770,120770],\"mapped\",[969]],[[120771,120771],\"mapped\",[8706]],[[120772,120772],\"mapped\",[949]],[[120773,120773],\"mapped\",[952]],[[120774,120774],\"mapped\",[954]],[[120775,120775],\"mapped\",[966]],[[120776,120776],\"mapped\",[961]],[[120777,120777],\"mapped\",[960]],[[120778,120779],\"mapped\",[989]],[[120780,120781],\"disallowed\"],[[120782,120782],\"mapped\",[48]],[[120783,120783],\"mapped\",[49]],[[120784,120784],\"mapped\",[50]],[[120785,120785],\"mapped\",[51]],[[120786,120786],\"mapped\",[52]],[[120787,120787],\"mapped\",[53]],[[120788,120788],\"mapped\",[54]],[[120789,120789],\"mapped\",[55]],[[120790,120790],\"mapped\",[56]],[[120791,120791],\"mapped\",[57]],[[120792,120792],\"mapped\",[48]],[[120793,120793],\"mapped\",[49]],[[120794,120794],\"mapped\",[50]],[[120795,120795],\"mapped\",[51]],[[120796,120796],\"mapped\",[52]],[[120797,120797],\"mapped\",[53]],[[120798,120798],\"mapped\",[54]],[[120799,120799],\"mapped\",[55]],[[120800,120800],\"mapped\",[56]],[[120801,120801],\"mapped\",[57]],[[120802,120802],\"mapped\",[48]],[[120803,120803],\"mapped\",[49]],[[120804,120804],\"mapped\",[50]],[[120805,120805],\"mapped\",[51]],[[120806,120806],\"mapped\",[52]],[[120807,120807],\"mapped\",[53]],[[120808,120808],\"mapped\",[54]],[[120809,120809],\"mapped\",[55]],[[120810,120810],\"mapped\",[56]],[[120811,120811],\"mapped\",[57]],[[120812,120812],\"mapped\",[48]],[[120813,120813],\"mapped\",[49]],[[120814,120814],\"mapped\",[50]],[[120815,120815],\"mapped\",[51]],[[120816,120816],\"mapped\",[52]],[[120817,120817],\"mapped\",[53]],[[120818,120818],\"mapped\",[54]],[[120819,120819],\"mapped\",[55]],[[120820,120820],\"mapped\",[56]],[[120821,120821],\"mapped\",[57]],[[120822,120822],\"mapped\",[48]],[[120823,120823],\"mapped\",[49]],[[120824,120824],\"mapped\",[50]],[[120825,120825],\"mapped\",[51]],[[120826,120826],\"mapped\",[52]],[[120827,120827],\"mapped\",[53]],[[120828,120828],\"mapped\",[54]],[[120829,120829],\"mapped\",[55]],[[120830,120830],\"mapped\",[56]],[[120831,120831],\"mapped\",[57]],[[120832,121343],\"valid\",[],\"NV8\"],[[121344,121398],\"valid\"],[[121399,121402],\"valid\",[],\"NV8\"],[[121403,121452],\"valid\"],[[121453,121460],\"valid\",[],\"NV8\"],[[121461,121461],\"valid\"],[[121462,121475],\"valid\",[],\"NV8\"],[[121476,121476],\"valid\"],[[121477,121483],\"valid\",[],\"NV8\"],[[121484,121498],\"disallowed\"],[[121499,121503],\"valid\"],[[121504,121504],\"disallowed\"],[[121505,121519],\"valid\"],[[121520,124927],\"disallowed\"],[[124928,125124],\"valid\"],[[125125,125126],\"disallowed\"],[[125127,125135],\"valid\",[],\"NV8\"],[[125136,125142],\"valid\"],[[125143,126463],\"disallowed\"],[[126464,126464],\"mapped\",[1575]],[[126465,126465],\"mapped\",[1576]],[[126466,126466],\"mapped\",[1580]],[[126467,126467],\"mapped\",[1583]],[[126468,126468],\"disallowed\"],[[126469,126469],\"mapped\",[1608]],[[126470,126470],\"mapped\",[1586]],[[126471,126471],\"mapped\",[1581]],[[126472,126472],\"mapped\",[1591]],[[126473,126473],\"mapped\",[1610]],[[126474,126474],\"mapped\",[1603]],[[126475,126475],\"mapped\",[1604]],[[126476,126476],\"mapped\",[1605]],[[126477,126477],\"mapped\",[1606]],[[126478,126478],\"mapped\",[1587]],[[126479,126479],\"mapped\",[1593]],[[126480,126480],\"mapped\",[1601]],[[126481,126481],\"mapped\",[1589]],[[126482,126482],\"mapped\",[1602]],[[126483,126483],\"mapped\",[1585]],[[126484,126484],\"mapped\",[1588]],[[126485,126485],\"mapped\",[1578]],[[126486,126486],\"mapped\",[1579]],[[126487,126487],\"mapped\",[1582]],[[126488,126488],\"mapped\",[1584]],[[126489,126489],\"mapped\",[1590]],[[126490,126490],\"mapped\",[1592]],[[126491,126491],\"mapped\",[1594]],[[126492,126492],\"mapped\",[1646]],[[126493,126493],\"mapped\",[1722]],[[126494,126494],\"mapped\",[1697]],[[126495,126495],\"mapped\",[1647]],[[126496,126496],\"disallowed\"],[[126497,126497],\"mapped\",[1576]],[[126498,126498],\"mapped\",[1580]],[[126499,126499],\"disallowed\"],[[126500,126500],\"mapped\",[1607]],[[126501,126502],\"disallowed\"],[[126503,126503],\"mapped\",[1581]],[[126504,126504],\"disallowed\"],[[126505,126505],\"mapped\",[1610]],[[126506,126506],\"mapped\",[1603]],[[126507,126507],\"mapped\",[1604]],[[126508,126508],\"mapped\",[1605]],[[126509,126509],\"mapped\",[1606]],[[126510,126510],\"mapped\",[1587]],[[126511,126511],\"mapped\",[1593]],[[126512,126512],\"mapped\",[1601]],[[126513,126513],\"mapped\",[1589]],[[126514,126514],\"mapped\",[1602]],[[126515,126515],\"disallowed\"],[[126516,126516],\"mapped\",[1588]],[[126517,126517],\"mapped\",[1578]],[[126518,126518],\"mapped\",[1579]],[[126519,126519],\"mapped\",[1582]],[[126520,126520],\"disallowed\"],[[126521,126521],\"mapped\",[1590]],[[126522,126522],\"disallowed\"],[[126523,126523],\"mapped\",[1594]],[[126524,126529],\"disallowed\"],[[126530,126530],\"mapped\",[1580]],[[126531,126534],\"disallowed\"],[[126535,126535],\"mapped\",[1581]],[[126536,126536],\"disallowed\"],[[126537,126537],\"mapped\",[1610]],[[126538,126538],\"disallowed\"],[[126539,126539],\"mapped\",[1604]],[[126540,126540],\"disallowed\"],[[126541,126541],\"mapped\",[1606]],[[126542,126542],\"mapped\",[1587]],[[126543,126543],\"mapped\",[1593]],[[126544,126544],\"disallowed\"],[[126545,126545],\"mapped\",[1589]],[[126546,126546],\"mapped\",[1602]],[[126547,126547],\"disallowed\"],[[126548,126548],\"mapped\",[1588]],[[126549,126550],\"disallowed\"],[[126551,126551],\"mapped\",[1582]],[[126552,126552],\"disallowed\"],[[126553,126553],\"mapped\",[1590]],[[126554,126554],\"disallowed\"],[[126555,126555],\"mapped\",[1594]],[[126556,126556],\"disallowed\"],[[126557,126557],\"mapped\",[1722]],[[126558,126558],\"disallowed\"],[[126559,126559],\"mapped\",[1647]],[[126560,126560],\"disallowed\"],[[126561,126561],\"mapped\",[1576]],[[126562,126562],\"mapped\",[1580]],[[126563,126563],\"disallowed\"],[[126564,126564],\"mapped\",[1607]],[[126565,126566],\"disallowed\"],[[126567,126567],\"mapped\",[1581]],[[126568,126568],\"mapped\",[1591]],[[126569,126569],\"mapped\",[1610]],[[126570,126570],\"mapped\",[1603]],[[126571,126571],\"disallowed\"],[[126572,126572],\"mapped\",[1605]],[[126573,126573],\"mapped\",[1606]],[[126574,126574],\"mapped\",[1587]],[[126575,126575],\"mapped\",[1593]],[[126576,126576],\"mapped\",[1601]],[[126577,126577],\"mapped\",[1589]],[[126578,126578],\"mapped\",[1602]],[[126579,126579],\"disallowed\"],[[126580,126580],\"mapped\",[1588]],[[126581,126581],\"mapped\",[1578]],[[126582,126582],\"mapped\",[1579]],[[126583,126583],\"mapped\",[1582]],[[126584,126584],\"disallowed\"],[[126585,126585],\"mapped\",[1590]],[[126586,126586],\"mapped\",[1592]],[[126587,126587],\"mapped\",[1594]],[[126588,126588],\"mapped\",[1646]],[[126589,126589],\"disallowed\"],[[126590,126590],\"mapped\",[1697]],[[126591,126591],\"disallowed\"],[[126592,126592],\"mapped\",[1575]],[[126593,126593],\"mapped\",[1576]],[[126594,126594],\"mapped\",[1580]],[[126595,126595],\"mapped\",[1583]],[[126596,126596],\"mapped\",[1607]],[[126597,126597],\"mapped\",[1608]],[[126598,126598],\"mapped\",[1586]],[[126599,126599],\"mapped\",[1581]],[[126600,126600],\"mapped\",[1591]],[[126601,126601],\"mapped\",[1610]],[[126602,126602],\"disallowed\"],[[126603,126603],\"mapped\",[1604]],[[126604,126604],\"mapped\",[1605]],[[126605,126605],\"mapped\",[1606]],[[126606,126606],\"mapped\",[1587]],[[126607,126607],\"mapped\",[1593]],[[126608,126608],\"mapped\",[1601]],[[126609,126609],\"mapped\",[1589]],[[126610,126610],\"mapped\",[1602]],[[126611,126611],\"mapped\",[1585]],[[126612,126612],\"mapped\",[1588]],[[126613,126613],\"mapped\",[1578]],[[126614,126614],\"mapped\",[1579]],[[126615,126615],\"mapped\",[1582]],[[126616,126616],\"mapped\",[1584]],[[126617,126617],\"mapped\",[1590]],[[126618,126618],\"mapped\",[1592]],[[126619,126619],\"mapped\",[1594]],[[126620,126624],\"disallowed\"],[[126625,126625],\"mapped\",[1576]],[[126626,126626],\"mapped\",[1580]],[[126627,126627],\"mapped\",[1583]],[[126628,126628],\"disallowed\"],[[126629,126629],\"mapped\",[1608]],[[126630,126630],\"mapped\",[1586]],[[126631,126631],\"mapped\",[1581]],[[126632,126632],\"mapped\",[1591]],[[126633,126633],\"mapped\",[1610]],[[126634,126634],\"disallowed\"],[[126635,126635],\"mapped\",[1604]],[[126636,126636],\"mapped\",[1605]],[[126637,126637],\"mapped\",[1606]],[[126638,126638],\"mapped\",[1587]],[[126639,126639],\"mapped\",[1593]],[[126640,126640],\"mapped\",[1601]],[[126641,126641],\"mapped\",[1589]],[[126642,126642],\"mapped\",[1602]],[[126643,126643],\"mapped\",[1585]],[[126644,126644],\"mapped\",[1588]],[[126645,126645],\"mapped\",[1578]],[[126646,126646],\"mapped\",[1579]],[[126647,126647],\"mapped\",[1582]],[[126648,126648],\"mapped\",[1584]],[[126649,126649],\"mapped\",[1590]],[[126650,126650],\"mapped\",[1592]],[[126651,126651],\"mapped\",[1594]],[[126652,126703],\"disallowed\"],[[126704,126705],\"valid\",[],\"NV8\"],[[126706,126975],\"disallowed\"],[[126976,127019],\"valid\",[],\"NV8\"],[[127020,127023],\"disallowed\"],[[127024,127123],\"valid\",[],\"NV8\"],[[127124,127135],\"disallowed\"],[[127136,127150],\"valid\",[],\"NV8\"],[[127151,127152],\"disallowed\"],[[127153,127166],\"valid\",[],\"NV8\"],[[127167,127167],\"valid\",[],\"NV8\"],[[127168,127168],\"disallowed\"],[[127169,127183],\"valid\",[],\"NV8\"],[[127184,127184],\"disallowed\"],[[127185,127199],\"valid\",[],\"NV8\"],[[127200,127221],\"valid\",[],\"NV8\"],[[127222,127231],\"disallowed\"],[[127232,127232],\"disallowed\"],[[127233,127233],\"disallowed_STD3_mapped\",[48,44]],[[127234,127234],\"disallowed_STD3_mapped\",[49,44]],[[127235,127235],\"disallowed_STD3_mapped\",[50,44]],[[127236,127236],\"disallowed_STD3_mapped\",[51,44]],[[127237,127237],\"disallowed_STD3_mapped\",[52,44]],[[127238,127238],\"disallowed_STD3_mapped\",[53,44]],[[127239,127239],\"disallowed_STD3_mapped\",[54,44]],[[127240,127240],\"disallowed_STD3_mapped\",[55,44]],[[127241,127241],\"disallowed_STD3_mapped\",[56,44]],[[127242,127242],\"disallowed_STD3_mapped\",[57,44]],[[127243,127244],\"valid\",[],\"NV8\"],[[127245,127247],\"disallowed\"],[[127248,127248],\"disallowed_STD3_mapped\",[40,97,41]],[[127249,127249],\"disallowed_STD3_mapped\",[40,98,41]],[[127250,127250],\"disallowed_STD3_mapped\",[40,99,41]],[[127251,127251],\"disallowed_STD3_mapped\",[40,100,41]],[[127252,127252],\"disallowed_STD3_mapped\",[40,101,41]],[[127253,127253],\"disallowed_STD3_mapped\",[40,102,41]],[[127254,127254],\"disallowed_STD3_mapped\",[40,103,41]],[[127255,127255],\"disallowed_STD3_mapped\",[40,104,41]],[[127256,127256],\"disallowed_STD3_mapped\",[40,105,41]],[[127257,127257],\"disallowed_STD3_mapped\",[40,106,41]],[[127258,127258],\"disallowed_STD3_mapped\",[40,107,41]],[[127259,127259],\"disallowed_STD3_mapped\",[40,108,41]],[[127260,127260],\"disallowed_STD3_mapped\",[40,109,41]],[[127261,127261],\"disallowed_STD3_mapped\",[40,110,41]],[[127262,127262],\"disallowed_STD3_mapped\",[40,111,41]],[[127263,127263],\"disallowed_STD3_mapped\",[40,112,41]],[[127264,127264],\"disallowed_STD3_mapped\",[40,113,41]],[[127265,127265],\"disallowed_STD3_mapped\",[40,114,41]],[[127266,127266],\"disallowed_STD3_mapped\",[40,115,41]],[[127267,127267],\"disallowed_STD3_mapped\",[40,116,41]],[[127268,127268],\"disallowed_STD3_mapped\",[40,117,41]],[[127269,127269],\"disallowed_STD3_mapped\",[40,118,41]],[[127270,127270],\"disallowed_STD3_mapped\",[40,119,41]],[[127271,127271],\"disallowed_STD3_mapped\",[40,120,41]],[[127272,127272],\"disallowed_STD3_mapped\",[40,121,41]],[[127273,127273],\"disallowed_STD3_mapped\",[40,122,41]],[[127274,127274],\"mapped\",[12308,115,12309]],[[127275,127275],\"mapped\",[99]],[[127276,127276],\"mapped\",[114]],[[127277,127277],\"mapped\",[99,100]],[[127278,127278],\"mapped\",[119,122]],[[127279,127279],\"disallowed\"],[[127280,127280],\"mapped\",[97]],[[127281,127281],\"mapped\",[98]],[[127282,127282],\"mapped\",[99]],[[127283,127283],\"mapped\",[100]],[[127284,127284],\"mapped\",[101]],[[127285,127285],\"mapped\",[102]],[[127286,127286],\"mapped\",[103]],[[127287,127287],\"mapped\",[104]],[[127288,127288],\"mapped\",[105]],[[127289,127289],\"mapped\",[106]],[[127290,127290],\"mapped\",[107]],[[127291,127291],\"mapped\",[108]],[[127292,127292],\"mapped\",[109]],[[127293,127293],\"mapped\",[110]],[[127294,127294],\"mapped\",[111]],[[127295,127295],\"mapped\",[112]],[[127296,127296],\"mapped\",[113]],[[127297,127297],\"mapped\",[114]],[[127298,127298],\"mapped\",[115]],[[127299,127299],\"mapped\",[116]],[[127300,127300],\"mapped\",[117]],[[127301,127301],\"mapped\",[118]],[[127302,127302],\"mapped\",[119]],[[127303,127303],\"mapped\",[120]],[[127304,127304],\"mapped\",[121]],[[127305,127305],\"mapped\",[122]],[[127306,127306],\"mapped\",[104,118]],[[127307,127307],\"mapped\",[109,118]],[[127308,127308],\"mapped\",[115,100]],[[127309,127309],\"mapped\",[115,115]],[[127310,127310],\"mapped\",[112,112,118]],[[127311,127311],\"mapped\",[119,99]],[[127312,127318],\"valid\",[],\"NV8\"],[[127319,127319],\"valid\",[],\"NV8\"],[[127320,127326],\"valid\",[],\"NV8\"],[[127327,127327],\"valid\",[],\"NV8\"],[[127328,127337],\"valid\",[],\"NV8\"],[[127338,127338],\"mapped\",[109,99]],[[127339,127339],\"mapped\",[109,100]],[[127340,127343],\"disallowed\"],[[127344,127352],\"valid\",[],\"NV8\"],[[127353,127353],\"valid\",[],\"NV8\"],[[127354,127354],\"valid\",[],\"NV8\"],[[127355,127356],\"valid\",[],\"NV8\"],[[127357,127358],\"valid\",[],\"NV8\"],[[127359,127359],\"valid\",[],\"NV8\"],[[127360,127369],\"valid\",[],\"NV8\"],[[127370,127373],\"valid\",[],\"NV8\"],[[127374,127375],\"valid\",[],\"NV8\"],[[127376,127376],\"mapped\",[100,106]],[[127377,127386],\"valid\",[],\"NV8\"],[[127387,127461],\"disallowed\"],[[127462,127487],\"valid\",[],\"NV8\"],[[127488,127488],\"mapped\",[12411,12363]],[[127489,127489],\"mapped\",[12467,12467]],[[127490,127490],\"mapped\",[12469]],[[127491,127503],\"disallowed\"],[[127504,127504],\"mapped\",[25163]],[[127505,127505],\"mapped\",[23383]],[[127506,127506],\"mapped\",[21452]],[[127507,127507],\"mapped\",[12487]],[[127508,127508],\"mapped\",[20108]],[[127509,127509],\"mapped\",[22810]],[[127510,127510],\"mapped\",[35299]],[[127511,127511],\"mapped\",[22825]],[[127512,127512],\"mapped\",[20132]],[[127513,127513],\"mapped\",[26144]],[[127514,127514],\"mapped\",[28961]],[[127515,127515],\"mapped\",[26009]],[[127516,127516],\"mapped\",[21069]],[[127517,127517],\"mapped\",[24460]],[[127518,127518],\"mapped\",[20877]],[[127519,127519],\"mapped\",[26032]],[[127520,127520],\"mapped\",[21021]],[[127521,127521],\"mapped\",[32066]],[[127522,127522],\"mapped\",[29983]],[[127523,127523],\"mapped\",[36009]],[[127524,127524],\"mapped\",[22768]],[[127525,127525],\"mapped\",[21561]],[[127526,127526],\"mapped\",[28436]],[[127527,127527],\"mapped\",[25237]],[[127528,127528],\"mapped\",[25429]],[[127529,127529],\"mapped\",[19968]],[[127530,127530],\"mapped\",[19977]],[[127531,127531],\"mapped\",[36938]],[[127532,127532],\"mapped\",[24038]],[[127533,127533],\"mapped\",[20013]],[[127534,127534],\"mapped\",[21491]],[[127535,127535],\"mapped\",[25351]],[[127536,127536],\"mapped\",[36208]],[[127537,127537],\"mapped\",[25171]],[[127538,127538],\"mapped\",[31105]],[[127539,127539],\"mapped\",[31354]],[[127540,127540],\"mapped\",[21512]],[[127541,127541],\"mapped\",[28288]],[[127542,127542],\"mapped\",[26377]],[[127543,127543],\"mapped\",[26376]],[[127544,127544],\"mapped\",[30003]],[[127545,127545],\"mapped\",[21106]],[[127546,127546],\"mapped\",[21942]],[[127547,127551],\"disallowed\"],[[127552,127552],\"mapped\",[12308,26412,12309]],[[127553,127553],\"mapped\",[12308,19977,12309]],[[127554,127554],\"mapped\",[12308,20108,12309]],[[127555,127555],\"mapped\",[12308,23433,12309]],[[127556,127556],\"mapped\",[12308,28857,12309]],[[127557,127557],\"mapped\",[12308,25171,12309]],[[127558,127558],\"mapped\",[12308,30423,12309]],[[127559,127559],\"mapped\",[12308,21213,12309]],[[127560,127560],\"mapped\",[12308,25943,12309]],[[127561,127567],\"disallowed\"],[[127568,127568],\"mapped\",[24471]],[[127569,127569],\"mapped\",[21487]],[[127570,127743],\"disallowed\"],[[127744,127776],\"valid\",[],\"NV8\"],[[127777,127788],\"valid\",[],\"NV8\"],[[127789,127791],\"valid\",[],\"NV8\"],[[127792,127797],\"valid\",[],\"NV8\"],[[127798,127798],\"valid\",[],\"NV8\"],[[127799,127868],\"valid\",[],\"NV8\"],[[127869,127869],\"valid\",[],\"NV8\"],[[127870,127871],\"valid\",[],\"NV8\"],[[127872,127891],\"valid\",[],\"NV8\"],[[127892,127903],\"valid\",[],\"NV8\"],[[127904,127940],\"valid\",[],\"NV8\"],[[127941,127941],\"valid\",[],\"NV8\"],[[127942,127946],\"valid\",[],\"NV8\"],[[127947,127950],\"valid\",[],\"NV8\"],[[127951,127955],\"valid\",[],\"NV8\"],[[127956,127967],\"valid\",[],\"NV8\"],[[127968,127984],\"valid\",[],\"NV8\"],[[127985,127991],\"valid\",[],\"NV8\"],[[127992,127999],\"valid\",[],\"NV8\"],[[128000,128062],\"valid\",[],\"NV8\"],[[128063,128063],\"valid\",[],\"NV8\"],[[128064,128064],\"valid\",[],\"NV8\"],[[128065,128065],\"valid\",[],\"NV8\"],[[128066,128247],\"valid\",[],\"NV8\"],[[128248,128248],\"valid\",[],\"NV8\"],[[128249,128252],\"valid\",[],\"NV8\"],[[128253,128254],\"valid\",[],\"NV8\"],[[128255,128255],\"valid\",[],\"NV8\"],[[128256,128317],\"valid\",[],\"NV8\"],[[128318,128319],\"valid\",[],\"NV8\"],[[128320,128323],\"valid\",[],\"NV8\"],[[128324,128330],\"valid\",[],\"NV8\"],[[128331,128335],\"valid\",[],\"NV8\"],[[128336,128359],\"valid\",[],\"NV8\"],[[128360,128377],\"valid\",[],\"NV8\"],[[128378,128378],\"disallowed\"],[[128379,128419],\"valid\",[],\"NV8\"],[[128420,128420],\"disallowed\"],[[128421,128506],\"valid\",[],\"NV8\"],[[128507,128511],\"valid\",[],\"NV8\"],[[128512,128512],\"valid\",[],\"NV8\"],[[128513,128528],\"valid\",[],\"NV8\"],[[128529,128529],\"valid\",[],\"NV8\"],[[128530,128532],\"valid\",[],\"NV8\"],[[128533,128533],\"valid\",[],\"NV8\"],[[128534,128534],\"valid\",[],\"NV8\"],[[128535,128535],\"valid\",[],\"NV8\"],[[128536,128536],\"valid\",[],\"NV8\"],[[128537,128537],\"valid\",[],\"NV8\"],[[128538,128538],\"valid\",[],\"NV8\"],[[128539,128539],\"valid\",[],\"NV8\"],[[128540,128542],\"valid\",[],\"NV8\"],[[128543,128543],\"valid\",[],\"NV8\"],[[128544,128549],\"valid\",[],\"NV8\"],[[128550,128551],\"valid\",[],\"NV8\"],[[128552,128555],\"valid\",[],\"NV8\"],[[128556,128556],\"valid\",[],\"NV8\"],[[128557,128557],\"valid\",[],\"NV8\"],[[128558,128559],\"valid\",[],\"NV8\"],[[128560,128563],\"valid\",[],\"NV8\"],[[128564,128564],\"valid\",[],\"NV8\"],[[128565,128576],\"valid\",[],\"NV8\"],[[128577,128578],\"valid\",[],\"NV8\"],[[128579,128580],\"valid\",[],\"NV8\"],[[128581,128591],\"valid\",[],\"NV8\"],[[128592,128639],\"valid\",[],\"NV8\"],[[128640,128709],\"valid\",[],\"NV8\"],[[128710,128719],\"valid\",[],\"NV8\"],[[128720,128720],\"valid\",[],\"NV8\"],[[128721,128735],\"disallowed\"],[[128736,128748],\"valid\",[],\"NV8\"],[[128749,128751],\"disallowed\"],[[128752,128755],\"valid\",[],\"NV8\"],[[128756,128767],\"disallowed\"],[[128768,128883],\"valid\",[],\"NV8\"],[[128884,128895],\"disallowed\"],[[128896,128980],\"valid\",[],\"NV8\"],[[128981,129023],\"disallowed\"],[[129024,129035],\"valid\",[],\"NV8\"],[[129036,129039],\"disallowed\"],[[129040,129095],\"valid\",[],\"NV8\"],[[129096,129103],\"disallowed\"],[[129104,129113],\"valid\",[],\"NV8\"],[[129114,129119],\"disallowed\"],[[129120,129159],\"valid\",[],\"NV8\"],[[129160,129167],\"disallowed\"],[[129168,129197],\"valid\",[],\"NV8\"],[[129198,129295],\"disallowed\"],[[129296,129304],\"valid\",[],\"NV8\"],[[129305,129407],\"disallowed\"],[[129408,129412],\"valid\",[],\"NV8\"],[[129413,129471],\"disallowed\"],[[129472,129472],\"valid\",[],\"NV8\"],[[129473,131069],\"disallowed\"],[[131070,131071],\"disallowed\"],[[131072,173782],\"valid\"],[[173783,173823],\"disallowed\"],[[173824,177972],\"valid\"],[[177973,177983],\"disallowed\"],[[177984,178205],\"valid\"],[[178206,178207],\"disallowed\"],[[178208,183969],\"valid\"],[[183970,194559],\"disallowed\"],[[194560,194560],\"mapped\",[20029]],[[194561,194561],\"mapped\",[20024]],[[194562,194562],\"mapped\",[20033]],[[194563,194563],\"mapped\",[131362]],[[194564,194564],\"mapped\",[20320]],[[194565,194565],\"mapped\",[20398]],[[194566,194566],\"mapped\",[20411]],[[194567,194567],\"mapped\",[20482]],[[194568,194568],\"mapped\",[20602]],[[194569,194569],\"mapped\",[20633]],[[194570,194570],\"mapped\",[20711]],[[194571,194571],\"mapped\",[20687]],[[194572,194572],\"mapped\",[13470]],[[194573,194573],\"mapped\",[132666]],[[194574,194574],\"mapped\",[20813]],[[194575,194575],\"mapped\",[20820]],[[194576,194576],\"mapped\",[20836]],[[194577,194577],\"mapped\",[20855]],[[194578,194578],\"mapped\",[132380]],[[194579,194579],\"mapped\",[13497]],[[194580,194580],\"mapped\",[20839]],[[194581,194581],\"mapped\",[20877]],[[194582,194582],\"mapped\",[132427]],[[194583,194583],\"mapped\",[20887]],[[194584,194584],\"mapped\",[20900]],[[194585,194585],\"mapped\",[20172]],[[194586,194586],\"mapped\",[20908]],[[194587,194587],\"mapped\",[20917]],[[194588,194588],\"mapped\",[168415]],[[194589,194589],\"mapped\",[20981]],[[194590,194590],\"mapped\",[20995]],[[194591,194591],\"mapped\",[13535]],[[194592,194592],\"mapped\",[21051]],[[194593,194593],\"mapped\",[21062]],[[194594,194594],\"mapped\",[21106]],[[194595,194595],\"mapped\",[21111]],[[194596,194596],\"mapped\",[13589]],[[194597,194597],\"mapped\",[21191]],[[194598,194598],\"mapped\",[21193]],[[194599,194599],\"mapped\",[21220]],[[194600,194600],\"mapped\",[21242]],[[194601,194601],\"mapped\",[21253]],[[194602,194602],\"mapped\",[21254]],[[194603,194603],\"mapped\",[21271]],[[194604,194604],\"mapped\",[21321]],[[194605,194605],\"mapped\",[21329]],[[194606,194606],\"mapped\",[21338]],[[194607,194607],\"mapped\",[21363]],[[194608,194608],\"mapped\",[21373]],[[194609,194611],\"mapped\",[21375]],[[194612,194612],\"mapped\",[133676]],[[194613,194613],\"mapped\",[28784]],[[194614,194614],\"mapped\",[21450]],[[194615,194615],\"mapped\",[21471]],[[194616,194616],\"mapped\",[133987]],[[194617,194617],\"mapped\",[21483]],[[194618,194618],\"mapped\",[21489]],[[194619,194619],\"mapped\",[21510]],[[194620,194620],\"mapped\",[21662]],[[194621,194621],\"mapped\",[21560]],[[194622,194622],\"mapped\",[21576]],[[194623,194623],\"mapped\",[21608]],[[194624,194624],\"mapped\",[21666]],[[194625,194625],\"mapped\",[21750]],[[194626,194626],\"mapped\",[21776]],[[194627,194627],\"mapped\",[21843]],[[194628,194628],\"mapped\",[21859]],[[194629,194630],\"mapped\",[21892]],[[194631,194631],\"mapped\",[21913]],[[194632,194632],\"mapped\",[21931]],[[194633,194633],\"mapped\",[21939]],[[194634,194634],\"mapped\",[21954]],[[194635,194635],\"mapped\",[22294]],[[194636,194636],\"mapped\",[22022]],[[194637,194637],\"mapped\",[22295]],[[194638,194638],\"mapped\",[22097]],[[194639,194639],\"mapped\",[22132]],[[194640,194640],\"mapped\",[20999]],[[194641,194641],\"mapped\",[22766]],[[194642,194642],\"mapped\",[22478]],[[194643,194643],\"mapped\",[22516]],[[194644,194644],\"mapped\",[22541]],[[194645,194645],\"mapped\",[22411]],[[194646,194646],\"mapped\",[22578]],[[194647,194647],\"mapped\",[22577]],[[194648,194648],\"mapped\",[22700]],[[194649,194649],\"mapped\",[136420]],[[194650,194650],\"mapped\",[22770]],[[194651,194651],\"mapped\",[22775]],[[194652,194652],\"mapped\",[22790]],[[194653,194653],\"mapped\",[22810]],[[194654,194654],\"mapped\",[22818]],[[194655,194655],\"mapped\",[22882]],[[194656,194656],\"mapped\",[136872]],[[194657,194657],\"mapped\",[136938]],[[194658,194658],\"mapped\",[23020]],[[194659,194659],\"mapped\",[23067]],[[194660,194660],\"mapped\",[23079]],[[194661,194661],\"mapped\",[23000]],[[194662,194662],\"mapped\",[23142]],[[194663,194663],\"mapped\",[14062]],[[194664,194664],\"disallowed\"],[[194665,194665],\"mapped\",[23304]],[[194666,194667],\"mapped\",[23358]],[[194668,194668],\"mapped\",[137672]],[[194669,194669],\"mapped\",[23491]],[[194670,194670],\"mapped\",[23512]],[[194671,194671],\"mapped\",[23527]],[[194672,194672],\"mapped\",[23539]],[[194673,194673],\"mapped\",[138008]],[[194674,194674],\"mapped\",[23551]],[[194675,194675],\"mapped\",[23558]],[[194676,194676],\"disallowed\"],[[194677,194677],\"mapped\",[23586]],[[194678,194678],\"mapped\",[14209]],[[194679,194679],\"mapped\",[23648]],[[194680,194680],\"mapped\",[23662]],[[194681,194681],\"mapped\",[23744]],[[194682,194682],\"mapped\",[23693]],[[194683,194683],\"mapped\",[138724]],[[194684,194684],\"mapped\",[23875]],[[194685,194685],\"mapped\",[138726]],[[194686,194686],\"mapped\",[23918]],[[194687,194687],\"mapped\",[23915]],[[194688,194688],\"mapped\",[23932]],[[194689,194689],\"mapped\",[24033]],[[194690,194690],\"mapped\",[24034]],[[194691,194691],\"mapped\",[14383]],[[194692,194692],\"mapped\",[24061]],[[194693,194693],\"mapped\",[24104]],[[194694,194694],\"mapped\",[24125]],[[194695,194695],\"mapped\",[24169]],[[194696,194696],\"mapped\",[14434]],[[194697,194697],\"mapped\",[139651]],[[194698,194698],\"mapped\",[14460]],[[194699,194699],\"mapped\",[24240]],[[194700,194700],\"mapped\",[24243]],[[194701,194701],\"mapped\",[24246]],[[194702,194702],\"mapped\",[24266]],[[194703,194703],\"mapped\",[172946]],[[194704,194704],\"mapped\",[24318]],[[194705,194706],\"mapped\",[140081]],[[194707,194707],\"mapped\",[33281]],[[194708,194709],\"mapped\",[24354]],[[194710,194710],\"mapped\",[14535]],[[194711,194711],\"mapped\",[144056]],[[194712,194712],\"mapped\",[156122]],[[194713,194713],\"mapped\",[24418]],[[194714,194714],\"mapped\",[24427]],[[194715,194715],\"mapped\",[14563]],[[194716,194716],\"mapped\",[24474]],[[194717,194717],\"mapped\",[24525]],[[194718,194718],\"mapped\",[24535]],[[194719,194719],\"mapped\",[24569]],[[194720,194720],\"mapped\",[24705]],[[194721,194721],\"mapped\",[14650]],[[194722,194722],\"mapped\",[14620]],[[194723,194723],\"mapped\",[24724]],[[194724,194724],\"mapped\",[141012]],[[194725,194725],\"mapped\",[24775]],[[194726,194726],\"mapped\",[24904]],[[194727,194727],\"mapped\",[24908]],[[194728,194728],\"mapped\",[24910]],[[194729,194729],\"mapped\",[24908]],[[194730,194730],\"mapped\",[24954]],[[194731,194731],\"mapped\",[24974]],[[194732,194732],\"mapped\",[25010]],[[194733,194733],\"mapped\",[24996]],[[194734,194734],\"mapped\",[25007]],[[194735,194735],\"mapped\",[25054]],[[194736,194736],\"mapped\",[25074]],[[194737,194737],\"mapped\",[25078]],[[194738,194738],\"mapped\",[25104]],[[194739,194739],\"mapped\",[25115]],[[194740,194740],\"mapped\",[25181]],[[194741,194741],\"mapped\",[25265]],[[194742,194742],\"mapped\",[25300]],[[194743,194743],\"mapped\",[25424]],[[194744,194744],\"mapped\",[142092]],[[194745,194745],\"mapped\",[25405]],[[194746,194746],\"mapped\",[25340]],[[194747,194747],\"mapped\",[25448]],[[194748,194748],\"mapped\",[25475]],[[194749,194749],\"mapped\",[25572]],[[194750,194750],\"mapped\",[142321]],[[194751,194751],\"mapped\",[25634]],[[194752,194752],\"mapped\",[25541]],[[194753,194753],\"mapped\",[25513]],[[194754,194754],\"mapped\",[14894]],[[194755,194755],\"mapped\",[25705]],[[194756,194756],\"mapped\",[25726]],[[194757,194757],\"mapped\",[25757]],[[194758,194758],\"mapped\",[25719]],[[194759,194759],\"mapped\",[14956]],[[194760,194760],\"mapped\",[25935]],[[194761,194761],\"mapped\",[25964]],[[194762,194762],\"mapped\",[143370]],[[194763,194763],\"mapped\",[26083]],[[194764,194764],\"mapped\",[26360]],[[194765,194765],\"mapped\",[26185]],[[194766,194766],\"mapped\",[15129]],[[194767,194767],\"mapped\",[26257]],[[194768,194768],\"mapped\",[15112]],[[194769,194769],\"mapped\",[15076]],[[194770,194770],\"mapped\",[20882]],[[194771,194771],\"mapped\",[20885]],[[194772,194772],\"mapped\",[26368]],[[194773,194773],\"mapped\",[26268]],[[194774,194774],\"mapped\",[32941]],[[194775,194775],\"mapped\",[17369]],[[194776,194776],\"mapped\",[26391]],[[194777,194777],\"mapped\",[26395]],[[194778,194778],\"mapped\",[26401]],[[194779,194779],\"mapped\",[26462]],[[194780,194780],\"mapped\",[26451]],[[194781,194781],\"mapped\",[144323]],[[194782,194782],\"mapped\",[15177]],[[194783,194783],\"mapped\",[26618]],[[194784,194784],\"mapped\",[26501]],[[194785,194785],\"mapped\",[26706]],[[194786,194786],\"mapped\",[26757]],[[194787,194787],\"mapped\",[144493]],[[194788,194788],\"mapped\",[26766]],[[194789,194789],\"mapped\",[26655]],[[194790,194790],\"mapped\",[26900]],[[194791,194791],\"mapped\",[15261]],[[194792,194792],\"mapped\",[26946]],[[194793,194793],\"mapped\",[27043]],[[194794,194794],\"mapped\",[27114]],[[194795,194795],\"mapped\",[27304]],[[194796,194796],\"mapped\",[145059]],[[194797,194797],\"mapped\",[27355]],[[194798,194798],\"mapped\",[15384]],[[194799,194799],\"mapped\",[27425]],[[194800,194800],\"mapped\",[145575]],[[194801,194801],\"mapped\",[27476]],[[194802,194802],\"mapped\",[15438]],[[194803,194803],\"mapped\",[27506]],[[194804,194804],\"mapped\",[27551]],[[194805,194805],\"mapped\",[27578]],[[194806,194806],\"mapped\",[27579]],[[194807,194807],\"mapped\",[146061]],[[194808,194808],\"mapped\",[138507]],[[194809,194809],\"mapped\",[146170]],[[194810,194810],\"mapped\",[27726]],[[194811,194811],\"mapped\",[146620]],[[194812,194812],\"mapped\",[27839]],[[194813,194813],\"mapped\",[27853]],[[194814,194814],\"mapped\",[27751]],[[194815,194815],\"mapped\",[27926]],[[194816,194816],\"mapped\",[27966]],[[194817,194817],\"mapped\",[28023]],[[194818,194818],\"mapped\",[27969]],[[194819,194819],\"mapped\",[28009]],[[194820,194820],\"mapped\",[28024]],[[194821,194821],\"mapped\",[28037]],[[194822,194822],\"mapped\",[146718]],[[194823,194823],\"mapped\",[27956]],[[194824,194824],\"mapped\",[28207]],[[194825,194825],\"mapped\",[28270]],[[194826,194826],\"mapped\",[15667]],[[194827,194827],\"mapped\",[28363]],[[194828,194828],\"mapped\",[28359]],[[194829,194829],\"mapped\",[147153]],[[194830,194830],\"mapped\",[28153]],[[194831,194831],\"mapped\",[28526]],[[194832,194832],\"mapped\",[147294]],[[194833,194833],\"mapped\",[147342]],[[194834,194834],\"mapped\",[28614]],[[194835,194835],\"mapped\",[28729]],[[194836,194836],\"mapped\",[28702]],[[194837,194837],\"mapped\",[28699]],[[194838,194838],\"mapped\",[15766]],[[194839,194839],\"mapped\",[28746]],[[194840,194840],\"mapped\",[28797]],[[194841,194841],\"mapped\",[28791]],[[194842,194842],\"mapped\",[28845]],[[194843,194843],\"mapped\",[132389]],[[194844,194844],\"mapped\",[28997]],[[194845,194845],\"mapped\",[148067]],[[194846,194846],\"mapped\",[29084]],[[194847,194847],\"disallowed\"],[[194848,194848],\"mapped\",[29224]],[[194849,194849],\"mapped\",[29237]],[[194850,194850],\"mapped\",[29264]],[[194851,194851],\"mapped\",[149000]],[[194852,194852],\"mapped\",[29312]],[[194853,194853],\"mapped\",[29333]],[[194854,194854],\"mapped\",[149301]],[[194855,194855],\"mapped\",[149524]],[[194856,194856],\"mapped\",[29562]],[[194857,194857],\"mapped\",[29579]],[[194858,194858],\"mapped\",[16044]],[[194859,194859],\"mapped\",[29605]],[[194860,194861],\"mapped\",[16056]],[[194862,194862],\"mapped\",[29767]],[[194863,194863],\"mapped\",[29788]],[[194864,194864],\"mapped\",[29809]],[[194865,194865],\"mapped\",[29829]],[[194866,194866],\"mapped\",[29898]],[[194867,194867],\"mapped\",[16155]],[[194868,194868],\"mapped\",[29988]],[[194869,194869],\"mapped\",[150582]],[[194870,194870],\"mapped\",[30014]],[[194871,194871],\"mapped\",[150674]],[[194872,194872],\"mapped\",[30064]],[[194873,194873],\"mapped\",[139679]],[[194874,194874],\"mapped\",[30224]],[[194875,194875],\"mapped\",[151457]],[[194876,194876],\"mapped\",[151480]],[[194877,194877],\"mapped\",[151620]],[[194878,194878],\"mapped\",[16380]],[[194879,194879],\"mapped\",[16392]],[[194880,194880],\"mapped\",[30452]],[[194881,194881],\"mapped\",[151795]],[[194882,194882],\"mapped\",[151794]],[[194883,194883],\"mapped\",[151833]],[[194884,194884],\"mapped\",[151859]],[[194885,194885],\"mapped\",[30494]],[[194886,194887],\"mapped\",[30495]],[[194888,194888],\"mapped\",[30538]],[[194889,194889],\"mapped\",[16441]],[[194890,194890],\"mapped\",[30603]],[[194891,194891],\"mapped\",[16454]],[[194892,194892],\"mapped\",[16534]],[[194893,194893],\"mapped\",[152605]],[[194894,194894],\"mapped\",[30798]],[[194895,194895],\"mapped\",[30860]],[[194896,194896],\"mapped\",[30924]],[[194897,194897],\"mapped\",[16611]],[[194898,194898],\"mapped\",[153126]],[[194899,194899],\"mapped\",[31062]],[[194900,194900],\"mapped\",[153242]],[[194901,194901],\"mapped\",[153285]],[[194902,194902],\"mapped\",[31119]],[[194903,194903],\"mapped\",[31211]],[[194904,194904],\"mapped\",[16687]],[[194905,194905],\"mapped\",[31296]],[[194906,194906],\"mapped\",[31306]],[[194907,194907],\"mapped\",[31311]],[[194908,194908],\"mapped\",[153980]],[[194909,194910],\"mapped\",[154279]],[[194911,194911],\"disallowed\"],[[194912,194912],\"mapped\",[16898]],[[194913,194913],\"mapped\",[154539]],[[194914,194914],\"mapped\",[31686]],[[194915,194915],\"mapped\",[31689]],[[194916,194916],\"mapped\",[16935]],[[194917,194917],\"mapped\",[154752]],[[194918,194918],\"mapped\",[31954]],[[194919,194919],\"mapped\",[17056]],[[194920,194920],\"mapped\",[31976]],[[194921,194921],\"mapped\",[31971]],[[194922,194922],\"mapped\",[32000]],[[194923,194923],\"mapped\",[155526]],[[194924,194924],\"mapped\",[32099]],[[194925,194925],\"mapped\",[17153]],[[194926,194926],\"mapped\",[32199]],[[194927,194927],\"mapped\",[32258]],[[194928,194928],\"mapped\",[32325]],[[194929,194929],\"mapped\",[17204]],[[194930,194930],\"mapped\",[156200]],[[194931,194931],\"mapped\",[156231]],[[194932,194932],\"mapped\",[17241]],[[194933,194933],\"mapped\",[156377]],[[194934,194934],\"mapped\",[32634]],[[194935,194935],\"mapped\",[156478]],[[194936,194936],\"mapped\",[32661]],[[194937,194937],\"mapped\",[32762]],[[194938,194938],\"mapped\",[32773]],[[194939,194939],\"mapped\",[156890]],[[194940,194940],\"mapped\",[156963]],[[194941,194941],\"mapped\",[32864]],[[194942,194942],\"mapped\",[157096]],[[194943,194943],\"mapped\",[32880]],[[194944,194944],\"mapped\",[144223]],[[194945,194945],\"mapped\",[17365]],[[194946,194946],\"mapped\",[32946]],[[194947,194947],\"mapped\",[33027]],[[194948,194948],\"mapped\",[17419]],[[194949,194949],\"mapped\",[33086]],[[194950,194950],\"mapped\",[23221]],[[194951,194951],\"mapped\",[157607]],[[194952,194952],\"mapped\",[157621]],[[194953,194953],\"mapped\",[144275]],[[194954,194954],\"mapped\",[144284]],[[194955,194955],\"mapped\",[33281]],[[194956,194956],\"mapped\",[33284]],[[194957,194957],\"mapped\",[36766]],[[194958,194958],\"mapped\",[17515]],[[194959,194959],\"mapped\",[33425]],[[194960,194960],\"mapped\",[33419]],[[194961,194961],\"mapped\",[33437]],[[194962,194962],\"mapped\",[21171]],[[194963,194963],\"mapped\",[33457]],[[194964,194964],\"mapped\",[33459]],[[194965,194965],\"mapped\",[33469]],[[194966,194966],\"mapped\",[33510]],[[194967,194967],\"mapped\",[158524]],[[194968,194968],\"mapped\",[33509]],[[194969,194969],\"mapped\",[33565]],[[194970,194970],\"mapped\",[33635]],[[194971,194971],\"mapped\",[33709]],[[194972,194972],\"mapped\",[33571]],[[194973,194973],\"mapped\",[33725]],[[194974,194974],\"mapped\",[33767]],[[194975,194975],\"mapped\",[33879]],[[194976,194976],\"mapped\",[33619]],[[194977,194977],\"mapped\",[33738]],[[194978,194978],\"mapped\",[33740]],[[194979,194979],\"mapped\",[33756]],[[194980,194980],\"mapped\",[158774]],[[194981,194981],\"mapped\",[159083]],[[194982,194982],\"mapped\",[158933]],[[194983,194983],\"mapped\",[17707]],[[194984,194984],\"mapped\",[34033]],[[194985,194985],\"mapped\",[34035]],[[194986,194986],\"mapped\",[34070]],[[194987,194987],\"mapped\",[160714]],[[194988,194988],\"mapped\",[34148]],[[194989,194989],\"mapped\",[159532]],[[194990,194990],\"mapped\",[17757]],[[194991,194991],\"mapped\",[17761]],[[194992,194992],\"mapped\",[159665]],[[194993,194993],\"mapped\",[159954]],[[194994,194994],\"mapped\",[17771]],[[194995,194995],\"mapped\",[34384]],[[194996,194996],\"mapped\",[34396]],[[194997,194997],\"mapped\",[34407]],[[194998,194998],\"mapped\",[34409]],[[194999,194999],\"mapped\",[34473]],[[195000,195000],\"mapped\",[34440]],[[195001,195001],\"mapped\",[34574]],[[195002,195002],\"mapped\",[34530]],[[195003,195003],\"mapped\",[34681]],[[195004,195004],\"mapped\",[34600]],[[195005,195005],\"mapped\",[34667]],[[195006,195006],\"mapped\",[34694]],[[195007,195007],\"disallowed\"],[[195008,195008],\"mapped\",[34785]],[[195009,195009],\"mapped\",[34817]],[[195010,195010],\"mapped\",[17913]],[[195011,195011],\"mapped\",[34912]],[[195012,195012],\"mapped\",[34915]],[[195013,195013],\"mapped\",[161383]],[[195014,195014],\"mapped\",[35031]],[[195015,195015],\"mapped\",[35038]],[[195016,195016],\"mapped\",[17973]],[[195017,195017],\"mapped\",[35066]],[[195018,195018],\"mapped\",[13499]],[[195019,195019],\"mapped\",[161966]],[[195020,195020],\"mapped\",[162150]],[[195021,195021],\"mapped\",[18110]],[[195022,195022],\"mapped\",[18119]],[[195023,195023],\"mapped\",[35488]],[[195024,195024],\"mapped\",[35565]],[[195025,195025],\"mapped\",[35722]],[[195026,195026],\"mapped\",[35925]],[[195027,195027],\"mapped\",[162984]],[[195028,195028],\"mapped\",[36011]],[[195029,195029],\"mapped\",[36033]],[[195030,195030],\"mapped\",[36123]],[[195031,195031],\"mapped\",[36215]],[[195032,195032],\"mapped\",[163631]],[[195033,195033],\"mapped\",[133124]],[[195034,195034],\"mapped\",[36299]],[[195035,195035],\"mapped\",[36284]],[[195036,195036],\"mapped\",[36336]],[[195037,195037],\"mapped\",[133342]],[[195038,195038],\"mapped\",[36564]],[[195039,195039],\"mapped\",[36664]],[[195040,195040],\"mapped\",[165330]],[[195041,195041],\"mapped\",[165357]],[[195042,195042],\"mapped\",[37012]],[[195043,195043],\"mapped\",[37105]],[[195044,195044],\"mapped\",[37137]],[[195045,195045],\"mapped\",[165678]],[[195046,195046],\"mapped\",[37147]],[[195047,195047],\"mapped\",[37432]],[[195048,195048],\"mapped\",[37591]],[[195049,195049],\"mapped\",[37592]],[[195050,195050],\"mapped\",[37500]],[[195051,195051],\"mapped\",[37881]],[[195052,195052],\"mapped\",[37909]],[[195053,195053],\"mapped\",[166906]],[[195054,195054],\"mapped\",[38283]],[[195055,195055],\"mapped\",[18837]],[[195056,195056],\"mapped\",[38327]],[[195057,195057],\"mapped\",[167287]],[[195058,195058],\"mapped\",[18918]],[[195059,195059],\"mapped\",[38595]],[[195060,195060],\"mapped\",[23986]],[[195061,195061],\"mapped\",[38691]],[[195062,195062],\"mapped\",[168261]],[[195063,195063],\"mapped\",[168474]],[[195064,195064],\"mapped\",[19054]],[[195065,195065],\"mapped\",[19062]],[[195066,195066],\"mapped\",[38880]],[[195067,195067],\"mapped\",[168970]],[[195068,195068],\"mapped\",[19122]],[[195069,195069],\"mapped\",[169110]],[[195070,195071],\"mapped\",[38923]],[[195072,195072],\"mapped\",[38953]],[[195073,195073],\"mapped\",[169398]],[[195074,195074],\"mapped\",[39138]],[[195075,195075],\"mapped\",[19251]],[[195076,195076],\"mapped\",[39209]],[[195077,195077],\"mapped\",[39335]],[[195078,195078],\"mapped\",[39362]],[[195079,195079],\"mapped\",[39422]],[[195080,195080],\"mapped\",[19406]],[[195081,195081],\"mapped\",[170800]],[[195082,195082],\"mapped\",[39698]],[[195083,195083],\"mapped\",[40000]],[[195084,195084],\"mapped\",[40189]],[[195085,195085],\"mapped\",[19662]],[[195086,195086],\"mapped\",[19693]],[[195087,195087],\"mapped\",[40295]],[[195088,195088],\"mapped\",[172238]],[[195089,195089],\"mapped\",[19704]],[[195090,195090],\"mapped\",[172293]],[[195091,195091],\"mapped\",[172558]],[[195092,195092],\"mapped\",[172689]],[[195093,195093],\"mapped\",[40635]],[[195094,195094],\"mapped\",[19798]],[[195095,195095],\"mapped\",[40697]],[[195096,195096],\"mapped\",[40702]],[[195097,195097],\"mapped\",[40709]],[[195098,195098],\"mapped\",[40719]],[[195099,195099],\"mapped\",[40726]],[[195100,195100],\"mapped\",[40763]],[[195101,195101],\"mapped\",[173568]],[[195102,196605],\"disallowed\"],[[196606,196607],\"disallowed\"],[[196608,262141],\"disallowed\"],[[262142,262143],\"disallowed\"],[[262144,327677],\"disallowed\"],[[327678,327679],\"disallowed\"],[[327680,393213],\"disallowed\"],[[393214,393215],\"disallowed\"],[[393216,458749],\"disallowed\"],[[458750,458751],\"disallowed\"],[[458752,524285],\"disallowed\"],[[524286,524287],\"disallowed\"],[[524288,589821],\"disallowed\"],[[589822,589823],\"disallowed\"],[[589824,655357],\"disallowed\"],[[655358,655359],\"disallowed\"],[[655360,720893],\"disallowed\"],[[720894,720895],\"disallowed\"],[[720896,786429],\"disallowed\"],[[786430,786431],\"disallowed\"],[[786432,851965],\"disallowed\"],[[851966,851967],\"disallowed\"],[[851968,917501],\"disallowed\"],[[917502,917503],\"disallowed\"],[[917504,917504],\"disallowed\"],[[917505,917505],\"disallowed\"],[[917506,917535],\"disallowed\"],[[917536,917631],\"disallowed\"],[[917632,917759],\"disallowed\"],[[917760,917999],\"ignored\"],[[918000,983037],\"disallowed\"],[[983038,983039],\"disallowed\"],[[983040,1048573],\"disallowed\"],[[1048574,1048575],\"disallowed\"],[[1048576,1114109],\"disallowed\"],[[1114110,1114111],\"disallowed\"]]");

/***/ }),
/* 472 */
/***/ (function(module, exports, __webpack_require__) {

var SetCache = __webpack_require__(116),
    arrayIncludes = __webpack_require__(151),
    arrayIncludesWith = __webpack_require__(162),
    arrayMap = __webpack_require__(37),
    baseUnary = __webpack_require__(70),
    cacheHas = __webpack_require__(121);

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/**
 * The base implementation of methods like `_.difference` without support
 * for excluding multiple arrays or iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Array} values The values to exclude.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new array of filtered values.
 */
function baseDifference(array, values, iteratee, comparator) {
  var index = -1,
      includes = arrayIncludes,
      isCommon = true,
      length = array.length,
      result = [],
      valuesLength = values.length;

  if (!length) {
    return result;
  }
  if (iteratee) {
    values = arrayMap(values, baseUnary(iteratee));
  }
  if (comparator) {
    includes = arrayIncludesWith;
    isCommon = false;
  }
  else if (values.length >= LARGE_ARRAY_SIZE) {
    includes = cacheHas;
    isCommon = false;
    values = new SetCache(values);
  }
  outer:
  while (++index < length) {
    var value = array[index],
        computed = iteratee == null ? value : iteratee(value);

    value = (comparator || value !== 0) ? value : 0;
    if (isCommon && computed === computed) {
      var valuesIndex = valuesLength;
      while (valuesIndex--) {
        if (values[valuesIndex] === computed) {
          continue outer;
        }
      }
      result.push(value);
    }
    else if (!includes(values, computed, comparator)) {
      result.push(value);
    }
  }
  return result;
}

module.exports = baseDifference;


/***/ }),
/* 473 */
/***/ (function(module, exports, __webpack_require__) {

var Hash = __webpack_require__(474),
    ListCache = __webpack_require__(118),
    Map = __webpack_require__(161);

/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    'hash': new Hash,
    'map': new (Map || ListCache),
    'string': new Hash
  };
}

module.exports = mapCacheClear;


/***/ }),
/* 474 */
/***/ (function(module, exports, __webpack_require__) {

var hashClear = __webpack_require__(475),
    hashDelete = __webpack_require__(482),
    hashGet = __webpack_require__(483),
    hashHas = __webpack_require__(484),
    hashSet = __webpack_require__(485);

/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `Hash`.
Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;

module.exports = Hash;


/***/ }),
/* 475 */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(117);

/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = nativeCreate ? nativeCreate(null) : {};
  this.size = 0;
}

module.exports = hashClear;


/***/ }),
/* 476 */
/***/ (function(module, exports, __webpack_require__) {

var isFunction = __webpack_require__(150),
    isMasked = __webpack_require__(479),
    isObject = __webpack_require__(38),
    toSource = __webpack_require__(226);

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}

module.exports = baseIsNative;


/***/ }),
/* 477 */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(72);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */
function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag),
      tag = value[symToStringTag];

  try {
    value[symToStringTag] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result;
}

module.exports = getRawTag;


/***/ }),
/* 478 */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */
function objectToString(value) {
  return nativeObjectToString.call(value);
}

module.exports = objectToString;


/***/ }),
/* 479 */
/***/ (function(module, exports, __webpack_require__) {

var coreJsData = __webpack_require__(480);

/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

module.exports = isMasked;


/***/ }),
/* 480 */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(43);

/** Used to detect overreaching core-js shims. */
var coreJsData = root['__core-js_shared__'];

module.exports = coreJsData;


/***/ }),
/* 481 */
/***/ (function(module, exports) {

/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

module.exports = getValue;


/***/ }),
/* 482 */
/***/ (function(module, exports) {

/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = hashDelete;


/***/ }),
/* 483 */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(117);

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

module.exports = hashGet;


/***/ }),
/* 484 */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(117);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
}

module.exports = hashHas;


/***/ }),
/* 485 */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(117);

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
  return this;
}

module.exports = hashSet;


/***/ }),
/* 486 */
/***/ (function(module, exports) {

/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}

module.exports = listCacheClear;


/***/ }),
/* 487 */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(119);

/** Used for built-in method references. */
var arrayProto = Array.prototype;

/** Built-in value references. */
var splice = arrayProto.splice;

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  --this.size;
  return true;
}

module.exports = listCacheDelete;


/***/ }),
/* 488 */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(119);

/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

module.exports = listCacheGet;


/***/ }),
/* 489 */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(119);

/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return assocIndexOf(this.__data__, key) > -1;
}

module.exports = listCacheHas;


/***/ }),
/* 490 */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(119);

/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

module.exports = listCacheSet;


/***/ }),
/* 491 */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(120);

/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  var result = getMapData(this, key)['delete'](key);
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = mapCacheDelete;


/***/ }),
/* 492 */
/***/ (function(module, exports) {

/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

module.exports = isKeyable;


/***/ }),
/* 493 */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(120);

/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return getMapData(this, key).get(key);
}

module.exports = mapCacheGet;


/***/ }),
/* 494 */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(120);

/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return getMapData(this, key).has(key);
}

module.exports = mapCacheHas;


/***/ }),
/* 495 */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(120);

/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  var data = getMapData(this, key),
      size = data.size;

  data.set(key, value);
  this.size += data.size == size ? 0 : 1;
  return this;
}

module.exports = mapCacheSet;


/***/ }),
/* 496 */
/***/ (function(module, exports) {

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Adds `value` to the array cache.
 *
 * @private
 * @name add
 * @memberOf SetCache
 * @alias push
 * @param {*} value The value to cache.
 * @returns {Object} Returns the cache instance.
 */
function setCacheAdd(value) {
  this.__data__.set(value, HASH_UNDEFINED);
  return this;
}

module.exports = setCacheAdd;


/***/ }),
/* 497 */
/***/ (function(module, exports) {

/**
 * Checks if `value` is in the array cache.
 *
 * @private
 * @name has
 * @memberOf SetCache
 * @param {*} value The value to search for.
 * @returns {number} Returns `true` if `value` is found, else `false`.
 */
function setCacheHas(value) {
  return this.__data__.has(value);
}

module.exports = setCacheHas;


/***/ }),
/* 498 */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.isNaN` without support for number objects.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
 */
function baseIsNaN(value) {
  return value !== value;
}

module.exports = baseIsNaN;


/***/ }),
/* 499 */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.indexOf` which performs strict equality
 * comparisons of values, i.e. `===`.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function strictIndexOf(array, value, fromIndex) {
  var index = fromIndex - 1,
      length = array.length;

  while (++index < length) {
    if (array[index] === value) {
      return index;
    }
  }
  return -1;
}

module.exports = strictIndexOf;


/***/ }),
/* 500 */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(72),
    isArguments = __webpack_require__(89),
    isArray = __webpack_require__(21);

/** Built-in value references. */
var spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;

/**
 * Checks if `value` is a flattenable `arguments` object or array.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
 */
function isFlattenable(value) {
  return isArray(value) || isArguments(value) ||
    !!(spreadableSymbol && value && value[spreadableSymbol]);
}

module.exports = isFlattenable;


/***/ }),
/* 501 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(61),
    isObjectLike = __webpack_require__(39);

/** `Object#toString` result references. */
var argsTag = '[object Arguments]';

/**
 * The base implementation of `_.isArguments`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 */
function baseIsArguments(value) {
  return isObjectLike(value) && baseGetTag(value) == argsTag;
}

module.exports = baseIsArguments;


/***/ }),
/* 502 */
/***/ (function(module, exports, __webpack_require__) {

var constant = __webpack_require__(503),
    defineProperty = __webpack_require__(228),
    identity = __webpack_require__(85);

/**
 * The base implementation of `setToString` without support for hot loop shorting.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var baseSetToString = !defineProperty ? identity : function(func, string) {
  return defineProperty(func, 'toString', {
    'configurable': true,
    'enumerable': false,
    'value': constant(string),
    'writable': true
  });
};

module.exports = baseSetToString;


/***/ }),
/* 503 */
/***/ (function(module, exports) {

/**
 * Creates a function that returns `value`.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {*} value The value to return from the new function.
 * @returns {Function} Returns the new constant function.
 * @example
 *
 * var objects = _.times(2, _.constant({ 'a': 1 }));
 *
 * console.log(objects);
 * // => [{ 'a': 1 }, { 'a': 1 }]
 *
 * console.log(objects[0] === objects[1]);
 * // => true
 */
function constant(value) {
  return function() {
    return value;
  };
}

module.exports = constant;


/***/ }),
/* 504 */
/***/ (function(module, exports) {

function _iterableToArrayLimit(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e,
      n,
      i,
      u,
      a = [],
      f = !0,
      o = !1;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = !1;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);
    } catch (r) {
      o = !0, n = r;
    } finally {
      try {
        if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
module.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 505 */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeToArray = __webpack_require__(232);
function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return arrayLikeToArray(arr);
}
module.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 506 */
/***/ (function(module, exports) {

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
module.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 507 */
/***/ (function(module, exports) {

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }
  return target;
}
module.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 508 */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__(90)["default"];
function _regeneratorRuntime() {
  "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {
    return e;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  var t,
    e = {},
    r = Object.prototype,
    n = r.hasOwnProperty,
    o = Object.defineProperty || function (t, e, r) {
      t[e] = r.value;
    },
    i = "function" == typeof Symbol ? Symbol : {},
    a = i.iterator || "@@iterator",
    c = i.asyncIterator || "@@asyncIterator",
    u = i.toStringTag || "@@toStringTag";
  function define(t, e, r) {
    return Object.defineProperty(t, e, {
      value: r,
      enumerable: !0,
      configurable: !0,
      writable: !0
    }), t[e];
  }
  try {
    define({}, "");
  } catch (t) {
    define = function define(t, e, r) {
      return t[e] = r;
    };
  }
  function wrap(t, e, r, n) {
    var i = e && e.prototype instanceof Generator ? e : Generator,
      a = Object.create(i.prototype),
      c = new Context(n || []);
    return o(a, "_invoke", {
      value: makeInvokeMethod(t, r, c)
    }), a;
  }
  function tryCatch(t, e, r) {
    try {
      return {
        type: "normal",
        arg: t.call(e, r)
      };
    } catch (t) {
      return {
        type: "throw",
        arg: t
      };
    }
  }
  e.wrap = wrap;
  var h = "suspendedStart",
    l = "suspendedYield",
    f = "executing",
    s = "completed",
    y = {};
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}
  var p = {};
  define(p, a, function () {
    return this;
  });
  var d = Object.getPrototypeOf,
    v = d && d(d(values([])));
  v && v !== r && n.call(v, a) && (p = v);
  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);
  function defineIteratorMethods(t) {
    ["next", "throw", "return"].forEach(function (e) {
      define(t, e, function (t) {
        return this._invoke(e, t);
      });
    });
  }
  function AsyncIterator(t, e) {
    function invoke(r, o, i, a) {
      var c = tryCatch(t[r], t, o);
      if ("throw" !== c.type) {
        var u = c.arg,
          h = u.value;
        return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) {
          invoke("next", t, i, a);
        }, function (t) {
          invoke("throw", t, i, a);
        }) : e.resolve(h).then(function (t) {
          u.value = t, i(u);
        }, function (t) {
          return invoke("throw", t, i, a);
        });
      }
      a(c.arg);
    }
    var r;
    o(this, "_invoke", {
      value: function value(t, n) {
        function callInvokeWithMethodAndArg() {
          return new e(function (e, r) {
            invoke(t, n, e, r);
          });
        }
        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
      }
    });
  }
  function makeInvokeMethod(e, r, n) {
    var o = h;
    return function (i, a) {
      if (o === f) throw new Error("Generator is already running");
      if (o === s) {
        if ("throw" === i) throw a;
        return {
          value: t,
          done: !0
        };
      }
      for (n.method = i, n.arg = a;;) {
        var c = n.delegate;
        if (c) {
          var u = maybeInvokeDelegate(c, n);
          if (u) {
            if (u === y) continue;
            return u;
          }
        }
        if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) {
          if (o === h) throw o = s, n.arg;
          n.dispatchException(n.arg);
        } else "return" === n.method && n.abrupt("return", n.arg);
        o = f;
        var p = tryCatch(e, r, n);
        if ("normal" === p.type) {
          if (o = n.done ? s : l, p.arg === y) continue;
          return {
            value: p.arg,
            done: n.done
          };
        }
        "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg);
      }
    };
  }
  function maybeInvokeDelegate(e, r) {
    var n = r.method,
      o = e.iterator[n];
    if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y;
    var i = tryCatch(o, e.iterator, r.arg);
    if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y;
    var a = i.arg;
    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y);
  }
  function pushTryEntry(t) {
    var e = {
      tryLoc: t[0]
    };
    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);
  }
  function resetTryEntry(t) {
    var e = t.completion || {};
    e.type = "normal", delete e.arg, t.completion = e;
  }
  function Context(t) {
    this.tryEntries = [{
      tryLoc: "root"
    }], t.forEach(pushTryEntry, this), this.reset(!0);
  }
  function values(e) {
    if (e || "" === e) {
      var r = e[a];
      if (r) return r.call(e);
      if ("function" == typeof e.next) return e;
      if (!isNaN(e.length)) {
        var o = -1,
          i = function next() {
            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;
            return next.value = t, next.done = !0, next;
          };
        return i.next = i;
      }
    }
    throw new TypeError(_typeof(e) + " is not iterable");
  }
  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", {
    value: GeneratorFunctionPrototype,
    configurable: !0
  }), o(GeneratorFunctionPrototype, "constructor", {
    value: GeneratorFunction,
    configurable: !0
  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) {
    var e = "function" == typeof t && t.constructor;
    return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name));
  }, e.mark = function (t) {
    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t;
  }, e.awrap = function (t) {
    return {
      __await: t
    };
  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {
    return this;
  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {
    void 0 === i && (i = Promise);
    var a = new AsyncIterator(wrap(t, r, n, o), i);
    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {
      return t.done ? t.value : a.next();
    });
  }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () {
    return this;
  }), define(g, "toString", function () {
    return "[object Generator]";
  }), e.keys = function (t) {
    var e = Object(t),
      r = [];
    for (var n in e) r.push(n);
    return r.reverse(), function next() {
      for (; r.length;) {
        var t = r.pop();
        if (t in e) return next.value = t, next.done = !1, next;
      }
      return next.done = !0, next;
    };
  }, e.values = values, Context.prototype = {
    constructor: Context,
    reset: function reset(e) {
      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);
    },
    stop: function stop() {
      this.done = !0;
      var t = this.tryEntries[0].completion;
      if ("throw" === t.type) throw t.arg;
      return this.rval;
    },
    dispatchException: function dispatchException(e) {
      if (this.done) throw e;
      var r = this;
      function handle(n, o) {
        return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o;
      }
      for (var o = this.tryEntries.length - 1; o >= 0; --o) {
        var i = this.tryEntries[o],
          a = i.completion;
        if ("root" === i.tryLoc) return handle("end");
        if (i.tryLoc <= this.prev) {
          var c = n.call(i, "catchLoc"),
            u = n.call(i, "finallyLoc");
          if (c && u) {
            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);
            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);
          } else if (c) {
            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);
          } else {
            if (!u) throw new Error("try statement without catch or finally");
            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);
          }
        }
      }
    },
    abrupt: function abrupt(t, e) {
      for (var r = this.tryEntries.length - 1; r >= 0; --r) {
        var o = this.tryEntries[r];
        if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
          var i = o;
          break;
        }
      }
      i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
      var a = i ? i.completion : {};
      return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a);
    },
    complete: function complete(t, e) {
      if ("throw" === t.type) throw t.arg;
      return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y;
    },
    finish: function finish(t) {
      for (var e = this.tryEntries.length - 1; e >= 0; --e) {
        var r = this.tryEntries[e];
        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;
      }
    },
    "catch": function _catch(t) {
      for (var e = this.tryEntries.length - 1; e >= 0; --e) {
        var r = this.tryEntries[e];
        if (r.tryLoc === t) {
          var n = r.completion;
          if ("throw" === n.type) {
            var o = n.arg;
            resetTryEntry(r);
          }
          return o;
        }
      }
      throw new Error("illegal catch attempt");
    },
    delegateYield: function delegateYield(e, r, n) {
      return this.delegate = {
        iterator: values(e),
        resultName: r,
        nextLoc: n
      }, "next" === this.method && (this.arg = t), y;
    }
  }, e;
}
module.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 509 */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__(90)["default"];
function _toPrimitive(input, hint) {
  if (_typeof(input) !== "object" || input === null) return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== undefined) {
    var res = prim.call(input, hint || "default");
    if (_typeof(res) !== "object") return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
module.exports = _toPrimitive, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 510 */
/***/ (function(module, exports) {

/**
 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseFor(fromRight) {
  return function(object, iteratee, keysFunc) {
    var index = -1,
        iterable = Object(object),
        props = keysFunc(object),
        length = props.length;

    while (length--) {
      var key = props[fromRight ? length : ++index];
      if (iteratee(iterable[key], key, iterable) === false) {
        break;
      }
    }
    return object;
  };
}

module.exports = createBaseFor;


/***/ }),
/* 511 */
/***/ (function(module, exports) {

/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */
function stubFalse() {
  return false;
}

module.exports = stubFalse;


/***/ }),
/* 512 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(61),
    isLength = __webpack_require__(163),
    isObjectLike = __webpack_require__(39);

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values of typed arrays. */
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
typedArrayTags[errorTag] = typedArrayTags[funcTag] =
typedArrayTags[mapTag] = typedArrayTags[numberTag] =
typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
typedArrayTags[setTag] = typedArrayTags[stringTag] =
typedArrayTags[weakMapTag] = false;

/**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */
function baseIsTypedArray(value) {
  return isObjectLike(value) &&
    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
}

module.exports = baseIsTypedArray;


/***/ }),
/* 513 */
/***/ (function(module, exports, __webpack_require__) {

var overArg = __webpack_require__(238);

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeKeys = overArg(Object.keys, Object);

module.exports = nativeKeys;


/***/ }),
/* 514 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsMatch = __webpack_require__(515),
    getMatchData = __webpack_require__(526),
    matchesStrictComparable = __webpack_require__(247);

/**
 * The base implementation of `_.matches` which doesn't clone `source`.
 *
 * @private
 * @param {Object} source The object of property values to match.
 * @returns {Function} Returns the new spec function.
 */
function baseMatches(source) {
  var matchData = getMatchData(source);
  if (matchData.length == 1 && matchData[0][2]) {
    return matchesStrictComparable(matchData[0][0], matchData[0][1]);
  }
  return function(object) {
    return object === source || baseIsMatch(object, source, matchData);
  };
}

module.exports = baseMatches;


/***/ }),
/* 515 */
/***/ (function(module, exports, __webpack_require__) {

var Stack = __webpack_require__(126),
    baseIsEqual = __webpack_require__(167);

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * The base implementation of `_.isMatch` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to inspect.
 * @param {Object} source The object of property values to match.
 * @param {Array} matchData The property names, values, and compare flags to match.
 * @param {Function} [customizer] The function to customize comparisons.
 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
 */
function baseIsMatch(object, source, matchData, customizer) {
  var index = matchData.length,
      length = index,
      noCustomizer = !customizer;

  if (object == null) {
    return !length;
  }
  object = Object(object);
  while (index--) {
    var data = matchData[index];
    if ((noCustomizer && data[2])
          ? data[1] !== object[data[0]]
          : !(data[0] in object)
        ) {
      return false;
    }
  }
  while (++index < length) {
    data = matchData[index];
    var key = data[0],
        objValue = object[key],
        srcValue = data[1];

    if (noCustomizer && data[2]) {
      if (objValue === undefined && !(key in object)) {
        return false;
      }
    } else {
      var stack = new Stack;
      if (customizer) {
        var result = customizer(objValue, srcValue, key, object, source, stack);
      }
      if (!(result === undefined
            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
            : result
          )) {
        return false;
      }
    }
  }
  return true;
}

module.exports = baseIsMatch;


/***/ }),
/* 516 */
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__(118);

/**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */
function stackClear() {
  this.__data__ = new ListCache;
  this.size = 0;
}

module.exports = stackClear;


/***/ }),
/* 517 */
/***/ (function(module, exports) {

/**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function stackDelete(key) {
  var data = this.__data__,
      result = data['delete'](key);

  this.size = data.size;
  return result;
}

module.exports = stackDelete;


/***/ }),
/* 518 */
/***/ (function(module, exports) {

/**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function stackGet(key) {
  return this.__data__.get(key);
}

module.exports = stackGet;


/***/ }),
/* 519 */
/***/ (function(module, exports) {

/**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function stackHas(key) {
  return this.__data__.has(key);
}

module.exports = stackHas;


/***/ }),
/* 520 */
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__(118),
    Map = __webpack_require__(161),
    MapCache = __webpack_require__(160);

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */
function stackSet(key, value) {
  var data = this.__data__;
  if (data instanceof ListCache) {
    var pairs = data.__data__;
    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
      pairs.push([key, value]);
      this.size = ++data.size;
      return this;
    }
    data = this.__data__ = new MapCache(pairs);
  }
  data.set(key, value);
  this.size = data.size;
  return this;
}

module.exports = stackSet;


/***/ }),
/* 521 */
/***/ (function(module, exports, __webpack_require__) {

var Stack = __webpack_require__(126),
    equalArrays = __webpack_require__(239),
    equalByTag = __webpack_require__(522),
    equalObjects = __webpack_require__(523),
    getTag = __webpack_require__(63),
    isArray = __webpack_require__(21),
    isBuffer = __webpack_require__(91),
    isTypedArray = __webpack_require__(125);

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    objectTag = '[object Object]';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * A specialized version of `baseIsEqual` for arrays and objects which performs
 * deep comparisons and tracks traversed objects enabling objects with circular
 * references to be compared.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
  var objIsArr = isArray(object),
      othIsArr = isArray(other),
      objTag = objIsArr ? arrayTag : getTag(object),
      othTag = othIsArr ? arrayTag : getTag(other);

  objTag = objTag == argsTag ? objectTag : objTag;
  othTag = othTag == argsTag ? objectTag : othTag;

  var objIsObj = objTag == objectTag,
      othIsObj = othTag == objectTag,
      isSameTag = objTag == othTag;

  if (isSameTag && isBuffer(object)) {
    if (!isBuffer(other)) {
      return false;
    }
    objIsArr = true;
    objIsObj = false;
  }
  if (isSameTag && !objIsObj) {
    stack || (stack = new Stack);
    return (objIsArr || isTypedArray(object))
      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
  }
  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object.value() : object,
          othUnwrapped = othIsWrapped ? other.value() : other;

      stack || (stack = new Stack);
      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
    }
  }
  if (!isSameTag) {
    return false;
  }
  stack || (stack = new Stack);
  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
}

module.exports = baseIsEqualDeep;


/***/ }),
/* 522 */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(72),
    Uint8Array = __webpack_require__(240),
    eq = __webpack_require__(88),
    equalArrays = __webpack_require__(239),
    mapToArray = __webpack_require__(326),
    setToArray = __webpack_require__(168);

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/** `Object#toString` result references. */
var boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]';

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

/**
 * A specialized version of `baseIsEqualDeep` for comparing objects of
 * the same `toStringTag`.
 *
 * **Note:** This function only supports comparing values with tags of
 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {string} tag The `toStringTag` of the objects to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
  switch (tag) {
    case dataViewTag:
      if ((object.byteLength != other.byteLength) ||
          (object.byteOffset != other.byteOffset)) {
        return false;
      }
      object = object.buffer;
      other = other.buffer;

    case arrayBufferTag:
      if ((object.byteLength != other.byteLength) ||
          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
        return false;
      }
      return true;

    case boolTag:
    case dateTag:
    case numberTag:
      // Coerce booleans to `1` or `0` and dates to milliseconds.
      // Invalid dates are coerced to `NaN`.
      return eq(+object, +other);

    case errorTag:
      return object.name == other.name && object.message == other.message;

    case regexpTag:
    case stringTag:
      // Coerce regexes to strings and treat strings, primitives and objects,
      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
      // for more details.
      return object == (other + '');

    case mapTag:
      var convert = mapToArray;

    case setTag:
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
      convert || (convert = setToArray);

      if (object.size != other.size && !isPartial) {
        return false;
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(object);
      if (stacked) {
        return stacked == other;
      }
      bitmask |= COMPARE_UNORDERED_FLAG;

      // Recursively compare objects (susceptible to call stack limits).
      stack.set(object, other);
      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
      stack['delete'](object);
      return result;

    case symbolTag:
      if (symbolValueOf) {
        return symbolValueOf.call(object) == symbolValueOf.call(other);
      }
  }
  return false;
}

module.exports = equalByTag;


/***/ }),
/* 523 */
/***/ (function(module, exports, __webpack_require__) {

var getAllKeys = __webpack_require__(241);

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1;

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * A specialized version of `baseIsEqualDeep` for objects with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      objProps = getAllKeys(object),
      objLength = objProps.length,
      othProps = getAllKeys(other),
      othLength = othProps.length;

  if (objLength != othLength && !isPartial) {
    return false;
  }
  var index = objLength;
  while (index--) {
    var key = objProps[index];
    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
      return false;
    }
  }
  // Check that cyclic values are equal.
  var objStacked = stack.get(object);
  var othStacked = stack.get(other);
  if (objStacked && othStacked) {
    return objStacked == other && othStacked == object;
  }
  var result = true;
  stack.set(object, other);
  stack.set(other, object);

  var skipCtor = isPartial;
  while (++index < objLength) {
    key = objProps[index];
    var objValue = object[key],
        othValue = other[key];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, objValue, key, other, object, stack)
        : customizer(objValue, othValue, key, object, other, stack);
    }
    // Recursively compare objects (susceptible to call stack limits).
    if (!(compared === undefined
          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
          : compared
        )) {
      result = false;
      break;
    }
    skipCtor || (skipCtor = key == 'constructor');
  }
  if (result && !skipCtor) {
    var objCtor = object.constructor,
        othCtor = other.constructor;

    // Non `Object` object instances with different constructors are not equal.
    if (objCtor != othCtor &&
        ('constructor' in object && 'constructor' in other) &&
        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
          typeof othCtor == 'function' && othCtor instanceof othCtor)) {
      result = false;
    }
  }
  stack['delete'](object);
  stack['delete'](other);
  return result;
}

module.exports = equalObjects;


/***/ }),
/* 524 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(62),
    root = __webpack_require__(43);

/* Built-in method references that are verified to be native. */
var DataView = getNative(root, 'DataView');

module.exports = DataView;


/***/ }),
/* 525 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(62),
    root = __webpack_require__(43);

/* Built-in method references that are verified to be native. */
var Promise = getNative(root, 'Promise');

module.exports = Promise;


/***/ }),
/* 526 */
/***/ (function(module, exports, __webpack_require__) {

var isStrictComparable = __webpack_require__(246),
    keys = __webpack_require__(66);

/**
 * Gets the property names, values, and compare flags of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the match data of `object`.
 */
function getMatchData(object) {
  var result = keys(object),
      length = result.length;

  while (length--) {
    var key = result[length],
        value = object[key];

    result[length] = [key, value, isStrictComparable(value)];
  }
  return result;
}

module.exports = getMatchData;


/***/ }),
/* 527 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsEqual = __webpack_require__(167),
    get = __webpack_require__(10),
    hasIn = __webpack_require__(248),
    isKey = __webpack_require__(170),
    isStrictComparable = __webpack_require__(246),
    matchesStrictComparable = __webpack_require__(247),
    toKey = __webpack_require__(71);

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
 *
 * @private
 * @param {string} path The path of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */
function baseMatchesProperty(path, srcValue) {
  if (isKey(path) && isStrictComparable(srcValue)) {
    return matchesStrictComparable(toKey(path), srcValue);
  }
  return function(object) {
    var objValue = get(object, path);
    return (objValue === undefined && objValue === srcValue)
      ? hasIn(object, path)
      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
  };
}

module.exports = baseMatchesProperty;


/***/ }),
/* 528 */
/***/ (function(module, exports, __webpack_require__) {

var memoize = __webpack_require__(139);

/** Used as the maximum memoize cache size. */
var MAX_MEMOIZE_SIZE = 500;

/**
 * A specialized version of `_.memoize` which clears the memoized function's
 * cache when it exceeds `MAX_MEMOIZE_SIZE`.
 *
 * @private
 * @param {Function} func The function to have its output memoized.
 * @returns {Function} Returns the new memoized function.
 */
function memoizeCapped(func) {
  var result = memoize(func, function(key) {
    if (cache.size === MAX_MEMOIZE_SIZE) {
      cache.clear();
    }
    return key;
  });

  var cache = result.cache;
  return result;
}

module.exports = memoizeCapped;


/***/ }),
/* 529 */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.hasIn` without support for deep paths.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {Array|string} key The key to check.
 * @returns {boolean} Returns `true` if `key` exists, else `false`.
 */
function baseHasIn(object, key) {
  return object != null && key in Object(object);
}

module.exports = baseHasIn;


/***/ }),
/* 530 */
/***/ (function(module, exports, __webpack_require__) {

var baseProperty = __webpack_require__(172),
    basePropertyDeep = __webpack_require__(531),
    isKey = __webpack_require__(170),
    toKey = __webpack_require__(71);

/**
 * Creates a function that returns the value at `path` of a given object.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 * @example
 *
 * var objects = [
 *   { 'a': { 'b': 2 } },
 *   { 'a': { 'b': 1 } }
 * ];
 *
 * _.map(objects, _.property('a.b'));
 * // => [2, 1]
 *
 * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
 * // => [1, 2]
 */
function property(path) {
  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
}

module.exports = property;


/***/ }),
/* 531 */
/***/ (function(module, exports, __webpack_require__) {

var baseGet = __webpack_require__(92);

/**
 * A specialized version of `baseProperty` which supports deep paths.
 *
 * @private
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function basePropertyDeep(path) {
  return function(object) {
    return baseGet(object, path);
  };
}

module.exports = basePropertyDeep;


/***/ }),
/* 532 */
/***/ (function(module, exports, __webpack_require__) {

var baseIteratee = __webpack_require__(47),
    baseUniq = __webpack_require__(173);

/**
 * This method is like `_.uniq` except that it accepts `iteratee` which is
 * invoked for each element in `array` to generate the criterion by which
 * uniqueness is computed. The order of result values is determined by the
 * order they occur in the array. The iteratee is invoked with one argument:
 * (value).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {Array} Returns the new duplicate free array.
 * @example
 *
 * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
 * // => [2.1, 1.2]
 *
 * // The `_.property` iteratee shorthand.
 * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
 * // => [{ 'x': 1 }, { 'x': 2 }]
 */
function uniqBy(array, iteratee) {
  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];
}

module.exports = uniqBy;


/***/ }),
/* 533 */
/***/ (function(module, exports, __webpack_require__) {

var Set = __webpack_require__(244),
    noop = __webpack_require__(250),
    setToArray = __webpack_require__(168);

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/**
 * Creates a set object of `values`.
 *
 * @private
 * @param {Array} values The values to add to the set.
 * @returns {Object} Returns the new set.
 */
var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
  return new Set(values);
};

module.exports = createSet;


/***/ }),
/* 534 */
/***/ (function(module, exports, __webpack_require__) {

var baseRest = __webpack_require__(59),
    unzip = __webpack_require__(251);

/**
 * Creates an array of grouped elements, the first of which contains the
 * first elements of the given arrays, the second of which contains the
 * second elements of the given arrays, and so on.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {...Array} [arrays] The arrays to process.
 * @returns {Array} Returns the new array of grouped elements.
 * @example
 *
 * _.zip(['a', 'b'], [1, 2], [true, false]);
 * // => [['a', 1, true], ['b', 2, false]]
 */
var zip = baseRest(unzip);

module.exports = zip;


/***/ }),
/* 535 */
/***/ (function(module, exports, __webpack_require__) {

var isArrayLike = __webpack_require__(53);

/**
 * Creates a `baseEach` or `baseEachRight` function.
 *
 * @private
 * @param {Function} eachFunc The function to iterate over a collection.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseEach(eachFunc, fromRight) {
  return function(collection, iteratee) {
    if (collection == null) {
      return collection;
    }
    if (!isArrayLike(collection)) {
      return eachFunc(collection, iteratee);
    }
    var length = collection.length,
        index = fromRight ? length : -1,
        iterable = Object(collection);

    while ((fromRight ? index-- : ++index < length)) {
      if (iteratee(iterable[index], index, iterable) === false) {
        break;
      }
    }
    return collection;
  };
}

module.exports = createBaseEach;


/***/ }),
/* 536 */
/***/ (function(module, exports, __webpack_require__) {

var identity = __webpack_require__(85);

/**
 * Casts `value` to `identity` if it's not a function.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {Function} Returns cast function.
 */
function castFunction(value) {
  return typeof value == 'function' ? value : identity;
}

module.exports = castFunction;


/***/ }),
/* 537 */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(68),
    keysIn = __webpack_require__(87);

/**
 * The base implementation of `_.assignIn` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
function baseAssignIn(object, source) {
  return object && copyObject(source, keysIn(source), object);
}

module.exports = baseAssignIn;


/***/ }),
/* 538 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(38),
    isPrototype = __webpack_require__(112),
    nativeKeysIn = __webpack_require__(539);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeysIn(object) {
  if (!isObject(object)) {
    return nativeKeysIn(object);
  }
  var isProto = isPrototype(object),
      result = [];

  for (var key in object) {
    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
      result.push(key);
    }
  }
  return result;
}

module.exports = baseKeysIn;


/***/ }),
/* 539 */
/***/ (function(module, exports) {

/**
 * This function is like
 * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * except that it includes inherited enumerable properties.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function nativeKeysIn(object) {
  var result = [];
  if (object != null) {
    for (var key in Object(object)) {
      result.push(key);
    }
  }
  return result;
}

module.exports = nativeKeysIn;


/***/ }),
/* 540 */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(68),
    getSymbols = __webpack_require__(169);

/**
 * Copies own symbols of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */
function copySymbols(source, object) {
  return copyObject(source, getSymbols(source), object);
}

module.exports = copySymbols;


/***/ }),
/* 541 */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(68),
    getSymbolsIn = __webpack_require__(257);

/**
 * Copies own and inherited symbols of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */
function copySymbolsIn(source, object) {
  return copyObject(source, getSymbolsIn(source), object);
}

module.exports = copySymbolsIn;


/***/ }),
/* 542 */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Initializes an array clone.
 *
 * @private
 * @param {Array} array The array to clone.
 * @returns {Array} Returns the initialized clone.
 */
function initCloneArray(array) {
  var length = array.length,
      result = new array.constructor(length);

  // Add properties assigned by `RegExp#exec`.
  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
    result.index = array.index;
    result.input = array.input;
  }
  return result;
}

module.exports = initCloneArray;


/***/ }),
/* 543 */
/***/ (function(module, exports, __webpack_require__) {

var cloneArrayBuffer = __webpack_require__(176),
    cloneDataView = __webpack_require__(544),
    cloneRegExp = __webpack_require__(545),
    cloneSymbol = __webpack_require__(546),
    cloneTypedArray = __webpack_require__(258);

/** `Object#toString` result references. */
var boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/**
 * Initializes an object clone based on its `toStringTag`.
 *
 * **Note:** This function only supports cloning values with tags of
 * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
 *
 * @private
 * @param {Object} object The object to clone.
 * @param {string} tag The `toStringTag` of the object to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneByTag(object, tag, isDeep) {
  var Ctor = object.constructor;
  switch (tag) {
    case arrayBufferTag:
      return cloneArrayBuffer(object);

    case boolTag:
    case dateTag:
      return new Ctor(+object);

    case dataViewTag:
      return cloneDataView(object, isDeep);

    case float32Tag: case float64Tag:
    case int8Tag: case int16Tag: case int32Tag:
    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
      return cloneTypedArray(object, isDeep);

    case mapTag:
      return new Ctor;

    case numberTag:
    case stringTag:
      return new Ctor(object);

    case regexpTag:
      return cloneRegExp(object);

    case setTag:
      return new Ctor;

    case symbolTag:
      return cloneSymbol(object);
  }
}

module.exports = initCloneByTag;


/***/ }),
/* 544 */
/***/ (function(module, exports, __webpack_require__) {

var cloneArrayBuffer = __webpack_require__(176);

/**
 * Creates a clone of `dataView`.
 *
 * @private
 * @param {Object} dataView The data view to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned data view.
 */
function cloneDataView(dataView, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
}

module.exports = cloneDataView;


/***/ }),
/* 545 */
/***/ (function(module, exports) {

/** Used to match `RegExp` flags from their coerced string values. */
var reFlags = /\w*$/;

/**
 * Creates a clone of `regexp`.
 *
 * @private
 * @param {Object} regexp The regexp to clone.
 * @returns {Object} Returns the cloned regexp.
 */
function cloneRegExp(regexp) {
  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
  result.lastIndex = regexp.lastIndex;
  return result;
}

module.exports = cloneRegExp;


/***/ }),
/* 546 */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(72);

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

/**
 * Creates a clone of the `symbol` object.
 *
 * @private
 * @param {Object} symbol The symbol object to clone.
 * @returns {Object} Returns the cloned symbol object.
 */
function cloneSymbol(symbol) {
  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
}

module.exports = cloneSymbol;


/***/ }),
/* 547 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsMap = __webpack_require__(548),
    baseUnary = __webpack_require__(70),
    nodeUtil = __webpack_require__(166);

/* Node.js helper references. */
var nodeIsMap = nodeUtil && nodeUtil.isMap;

/**
 * Checks if `value` is classified as a `Map` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a map, else `false`.
 * @example
 *
 * _.isMap(new Map);
 * // => true
 *
 * _.isMap(new WeakMap);
 * // => false
 */
var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

module.exports = isMap;


/***/ }),
/* 548 */
/***/ (function(module, exports, __webpack_require__) {

var getTag = __webpack_require__(63),
    isObjectLike = __webpack_require__(39);

/** `Object#toString` result references. */
var mapTag = '[object Map]';

/**
 * The base implementation of `_.isMap` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a map, else `false`.
 */
function baseIsMap(value) {
  return isObjectLike(value) && getTag(value) == mapTag;
}

module.exports = baseIsMap;


/***/ }),
/* 549 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsSet = __webpack_require__(550),
    baseUnary = __webpack_require__(70),
    nodeUtil = __webpack_require__(166);

/* Node.js helper references. */
var nodeIsSet = nodeUtil && nodeUtil.isSet;

/**
 * Checks if `value` is classified as a `Set` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a set, else `false`.
 * @example
 *
 * _.isSet(new Set);
 * // => true
 *
 * _.isSet(new WeakSet);
 * // => false
 */
var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

module.exports = isSet;


/***/ }),
/* 550 */
/***/ (function(module, exports, __webpack_require__) {

var getTag = __webpack_require__(63),
    isObjectLike = __webpack_require__(39);

/** `Object#toString` result references. */
var setTag = '[object Set]';

/**
 * The base implementation of `_.isSet` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a set, else `false`.
 */
function baseIsSet(value) {
  return isObjectLike(value) && getTag(value) == setTag;
}

module.exports = baseIsSet;


/***/ }),
/* 551 */
/***/ (function(module, exports) {

/**
 *
 *
 * @author Jerry Bendy <jerry@icewingcc.com>
 * @licence MIT
 *
 */

(function(self) {
    'use strict';

    var nativeURLSearchParams = (function() {
            // #41 Fix issue in RN
            try {
                if (self.URLSearchParams && (new self.URLSearchParams('foo=bar')).get('foo') === 'bar') {
                    return self.URLSearchParams;
                }
            } catch (e) {}
            return null;
        })(),
        isSupportObjectConstructor = nativeURLSearchParams && (new nativeURLSearchParams({a: 1})).toString() === 'a=1',
        // There is a bug in safari 10.1 (and earlier) that incorrectly decodes `%2B` as an empty space and not a plus.
        decodesPlusesCorrectly = nativeURLSearchParams && (new nativeURLSearchParams('s=%2B').get('s') === '+'),
        __URLSearchParams__ = "__URLSearchParams__",
        // Fix bug in Edge which cannot encode ' &' correctly
        encodesAmpersandsCorrectly = nativeURLSearchParams ? (function() {
            var ampersandTest = new nativeURLSearchParams();
            ampersandTest.append('s', ' &');
            return ampersandTest.toString() === 's=+%26';
        })() : true,
        prototype = URLSearchParamsPolyfill.prototype,
        iterable = !!(self.Symbol && self.Symbol.iterator);

    if (nativeURLSearchParams && isSupportObjectConstructor && decodesPlusesCorrectly && encodesAmpersandsCorrectly) {
        return;
    }


    /**
     * Make a URLSearchParams instance
     *
     * @param {object|string|URLSearchParams} search
     * @constructor
     */
    function URLSearchParamsPolyfill(search) {
        search = search || "";

        // support construct object with another URLSearchParams instance
        if (search instanceof URLSearchParams || search instanceof URLSearchParamsPolyfill) {
            search = search.toString();
        }
        this [__URLSearchParams__] = parseToDict(search);
    }


    /**
     * Appends a specified key/value pair as a new search parameter.
     *
     * @param {string} name
     * @param {string} value
     */
    prototype.append = function(name, value) {
        appendTo(this [__URLSearchParams__], name, value);
    };

    /**
     * Deletes the given search parameter, and its associated value,
     * from the list of all search parameters.
     *
     * @param {string} name
     */
    prototype['delete'] = function(name) {
        delete this [__URLSearchParams__] [name];
    };

    /**
     * Returns the first value associated to the given search parameter.
     *
     * @param {string} name
     * @returns {string|null}
     */
    prototype.get = function(name) {
        var dict = this [__URLSearchParams__];
        return this.has(name) ? dict[name][0] : null;
    };

    /**
     * Returns all the values association with a given search parameter.
     *
     * @param {string} name
     * @returns {Array}
     */
    prototype.getAll = function(name) {
        var dict = this [__URLSearchParams__];
        return this.has(name) ? dict [name].slice(0) : [];
    };

    /**
     * Returns a Boolean indicating if such a search parameter exists.
     *
     * @param {string} name
     * @returns {boolean}
     */
    prototype.has = function(name) {
        return hasOwnProperty(this [__URLSearchParams__], name);
    };

    /**
     * Sets the value associated to a given search parameter to
     * the given value. If there were several values, delete the
     * others.
     *
     * @param {string} name
     * @param {string} value
     */
    prototype.set = function set(name, value) {
        this [__URLSearchParams__][name] = ['' + value];
    };

    /**
     * Returns a string containg a query string suitable for use in a URL.
     *
     * @returns {string}
     */
    prototype.toString = function() {
        var dict = this[__URLSearchParams__], query = [], i, key, name, value;
        for (key in dict) {
            name = encode(key);
            for (i = 0, value = dict[key]; i < value.length; i++) {
                query.push(name + '=' + encode(value[i]));
            }
        }
        return query.join('&');
    };

    // There is a bug in Safari 10.1 and `Proxy`ing it is not enough.
    var forSureUsePolyfill = !decodesPlusesCorrectly;
    var useProxy = (!forSureUsePolyfill && nativeURLSearchParams && !isSupportObjectConstructor && self.Proxy);
    var propValue; 
    if (useProxy) {
        // Safari 10.0 doesn't support Proxy, so it won't extend URLSearchParams on safari 10.0
        propValue = new Proxy(nativeURLSearchParams, {
            construct: function (target, args) {
                return new target((new URLSearchParamsPolyfill(args[0]).toString()));
            }
        })
        // Chrome <=60 .toString() on a function proxy got error "Function.prototype.toString is not generic"
        propValue.toString = Function.prototype.toString.bind(URLSearchParamsPolyfill);
    } else {
        propValue = URLSearchParamsPolyfill;
    }
    /*
     * Apply polifill to global object and append other prototype into it
     */
    Object.defineProperty(self, 'URLSearchParams', {
        value: propValue
    });

    var USPProto = self.URLSearchParams.prototype;

    USPProto.polyfill = true;

    /**
     *
     * @param {function} callback
     * @param {object} thisArg
     */
    USPProto.forEach = USPProto.forEach || function(callback, thisArg) {
        var dict = parseToDict(this.toString());
        Object.getOwnPropertyNames(dict).forEach(function(name) {
            dict[name].forEach(function(value) {
                callback.call(thisArg, value, name, this);
            }, this);
        }, this);
    };

    /**
     * Sort all name-value pairs
     */
    USPProto.sort = USPProto.sort || function() {
        var dict = parseToDict(this.toString()), keys = [], k, i, j;
        for (k in dict) {
            keys.push(k);
        }
        keys.sort();

        for (i = 0; i < keys.length; i++) {
            this['delete'](keys[i]);
        }
        for (i = 0; i < keys.length; i++) {
            var key = keys[i], values = dict[key];
            for (j = 0; j < values.length; j++) {
                this.append(key, values[j]);
            }
        }
    };

    /**
     * Returns an iterator allowing to go through all keys of
     * the key/value pairs contained in this object.
     *
     * @returns {function}
     */
    USPProto.keys = USPProto.keys || function() {
        var items = [];
        this.forEach(function(item, name) {
            items.push(name);
        });
        return makeIterator(items);
    };

    /**
     * Returns an iterator allowing to go through all values of
     * the key/value pairs contained in this object.
     *
     * @returns {function}
     */
    USPProto.values = USPProto.values || function() {
        var items = [];
        this.forEach(function(item) {
            items.push(item);
        });
        return makeIterator(items);
    };

    /**
     * Returns an iterator allowing to go through all key/value
     * pairs contained in this object.
     *
     * @returns {function}
     */
    USPProto.entries = USPProto.entries || function() {
        var items = [];
        this.forEach(function(item, name) {
            items.push([name, item]);
        });
        return makeIterator(items);
    };


    if (iterable) {
        USPProto[self.Symbol.iterator] = USPProto[self.Symbol.iterator] || USPProto.entries;
    }


    function encode(str) {
        var replace = {
            '!': '%21',
            "'": '%27',
            '(': '%28',
            ')': '%29',
            '~': '%7E',
            '%20': '+',
            '%00': '\x00'
        };
        return encodeURIComponent(str).replace(/[!'\(\)~]|%20|%00/g, function(match) {
            return replace[match];
        });
    }

    function decode(str) {
        return str
            .replace(/[ +]/g, '%20')
            .replace(/(%[a-f0-9]{2})+/ig, function(match) {
                return decodeURIComponent(match);
            });
    }

    function makeIterator(arr) {
        var iterator = {
            next: function() {
                var value = arr.shift();
                return {done: value === undefined, value: value};
            }
        };

        if (iterable) {
            iterator[self.Symbol.iterator] = function() {
                return iterator;
            };
        }

        return iterator;
    }

    function parseToDict(search) {
        var dict = {};

        if (typeof search === "object") {
            // if `search` is an array, treat it as a sequence
            if (isArray(search)) {
                for (var i = 0; i < search.length; i++) {
                    var item = search[i];
                    if (isArray(item) && item.length === 2) {
                        appendTo(dict, item[0], item[1]);
                    } else {
                        throw new TypeError("Failed to construct 'URLSearchParams': Sequence initializer must only contain pair elements");
                    }
                }

            } else {
                for (var key in search) {
                    if (search.hasOwnProperty(key)) {
                        appendTo(dict, key, search[key]);
                    }
                }
            }

        } else {
            // remove first '?'
            if (search.indexOf("?") === 0) {
                search = search.slice(1);
            }

            var pairs = search.split("&");
            for (var j = 0; j < pairs.length; j++) {
                var value = pairs [j],
                    index = value.indexOf('=');

                if (-1 < index) {
                    appendTo(dict, decode(value.slice(0, index)), decode(value.slice(index + 1)));

                } else {
                    if (value) {
                        appendTo(dict, decode(value), '');
                    }
                }
            }
        }

        return dict;
    }

    function appendTo(dict, name, value) {
        var val = typeof value === 'string' ? value : (
            value !== null && value !== undefined && typeof value.toString === 'function' ? value.toString() : JSON.stringify(value)
        );

        // #47 Prevent using `hasOwnProperty` as a property name
        if (hasOwnProperty(dict, name)) {
            dict[name].push(val);
        } else {
            dict[name] = [val];
        }
    }

    function isArray(val) {
        return !!val && '[object Array]' === Object.prototype.toString.call(val);
    }

    function hasOwnProperty(obj, prop) {
        return Object.prototype.hasOwnProperty.call(obj, prop);
    }

})(typeof global !== 'undefined' ? global : (typeof window !== 'undefined' ? window : this));


/***/ }),
/* 552 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(6));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(9));

var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(50));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(7));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var TERMS_DOCTYPE = 'io.cozy.terms';
/* TODO Use collection terms */

function save(_x, _x2) {
  return _save.apply(this, arguments);
}

function _save() {
  _save = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(client, terms) {
    var id, termsAttributes, _yield$client$query, savedTermsDocs, savedTerms, termsToSave, _termsToSave;

    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            id = terms.id, termsAttributes = (0, _objectWithoutProperties2.default)(terms, ["id"]);
            _context.next = 3;
            return client.query({
              doctype: TERMS_DOCTYPE,
              selector: {
                termsId: id,
                version: termsAttributes.version
              },
              limit: 1
            });

          case 3:
            _yield$client$query = _context.sent;
            savedTermsDocs = _yield$client$query.data;

            if (!(savedTermsDocs && savedTermsDocs.length)) {
              _context.next = 13;
              break;
            }

            // we just update the url if this is the same id and same version
            // but the url changed
            savedTerms = savedTermsDocs[0];

            if (!(savedTerms.termsId == id && savedTerms.version == termsAttributes.version && savedTerms.url != termsAttributes.url)) {
              _context.next = 11;
              break;
            }

            termsToSave = _objectSpread(_objectSpread({
              _type: TERMS_DOCTYPE
            }, savedTerms), {}, {
              url: termsAttributes.url
            });
            _context.next = 11;
            return client.save(termsToSave);

          case 11:
            _context.next = 16;
            break;

          case 13:
            _termsToSave = _objectSpread(_objectSpread({
              _type: TERMS_DOCTYPE
            }, termsAttributes), {}, {
              termsId: id,
              accepted: true,
              acceptedAt: new Date()
            });
            _context.next = 16;
            return client.save(_termsToSave);

          case 16:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _save.apply(this, arguments);
}

var _default = {
  save: save
};
exports.default = _default;

/***/ }),
/* 553 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.APP_TYPE = void 0;
var APP_TYPE = {
  KONNECTOR: 'konnector',
  WEBAPP: 'webapp'
};
exports.APP_TYPE = APP_TYPE;

/***/ }),
/* 554 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.resetFlags = exports.listFlags = exports.initializeFromRemote = exports.initializeFromDOM = exports.initialize = exports.getTemplateData = exports.enable = exports.default = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(6));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));

var _createClass2 = _interopRequireDefault(__webpack_require__(13));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(7));

var _slicedToArray2 = _interopRequireDefault(__webpack_require__(32));

var _dsl = __webpack_require__(20);

var _store = _interopRequireDefault(__webpack_require__(570));

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var store = new _store.default();
/**
 * Public API to use flags
 */

var flag = function flag() {
  var args = [].slice.call(arguments);

  if (args.length === 1) {
    return store.get(args[0]);
  } else {
    store.set(args[0], args[1]);
    return args[1];
  }
};
/** List all flags from the store */


var listFlags = function listFlags() {
  return store.keys().sort();
};
/** Resets all the flags */


exports.listFlags = listFlags;

var resetFlags = function resetFlags() {
  listFlags().forEach(function (name) {
    return store.remove(name);
  });
};
/**
 * Enables several flags
 *
 * Supports passing either  object flagName -> flagValue
 *
 * @param {string[]|Object} flagsToEnable
 */


exports.resetFlags = resetFlags;

var enable = function enable(flagsToEnable) {
  var flagNameToValue;

  if (Array.isArray(flagsToEnable)) {
    if (flagsToEnable.length === 0) {
      return;
    } // eslint-disable-next-line no-console


    console.log('flags.enable: Deprecation warning: prefer to use an object { flag1: true, flag2: true } instead of an array when using flags.enable');
    flagNameToValue = flagsToEnable.map(function (flagName) {
      return [flagName, true];
    });
  } else if (typeof flagsToEnable === 'object') {
    flagNameToValue = Object.entries(flagsToEnable);
  }

  if (!flagNameToValue) {
    return;
  }

  var _iterator = _createForOfIteratorHelper(flagNameToValue),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var _step$value = (0, _slicedToArray2.default)(_step.value, 2),
          flagName = _step$value[0],
          flagValue = _step$value[1];

      flag(flagName, flagValue);
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
};
/**
 * Initializes flags from the remote endpoint serving instance flags
 *
 * @private
 * @see  https://docs.cozy.io/en/cozy-stack/settings/#get-settingsflags
 * @param  {CozyClient} client
 */


exports.enable = enable;

var initializeFromRemote = /*#__PURE__*/function () {
  var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(client) {
    var _yield$client$query, attributes;

    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return client.query((0, _dsl.Q)('io.cozy.settings').getById('io.cozy.settings.flags'));

          case 2:
            _yield$client$query = _context.sent;
            attributes = _yield$client$query.data.attributes;
            enable(attributes);

          case 5:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function initializeFromRemote(_x) {
    return _ref.apply(this, arguments);
  };
}();

exports.initializeFromRemote = initializeFromRemote;

var capitalize = function capitalize(str) {
  return str[0].toUpperCase() + str.slice(1);
};

var getTemplateData = function getTemplateData(attr) {
  if (typeof document === 'undefined') {
    return null;
  }

  var allDataNode = document.querySelector('[data-cozy]');
  var attrNode = document.querySelector("[data-cozy-".concat(attr, "]"));

  try {
    if (allDataNode) {
      return JSON.parse(allDataNode.dataset.cozy)[attr];
    } else if (attrNode) {
      // eslint-disable-next-line no-console
      console.warn('Prefer to use [data-cozy] to store template data. <div data-cozy="{{.CozyData}}></div>. "');
      return JSON.parse(attrNode.dataset["cozy".concat(capitalize(attr))]);
    } else {
      return null;
    }
  } catch (e) {
    return null;
  }
};
/**
 * Initialize from the template data injected by cozy-stack into the DOM
 *
 * @private
 * @see https://docs.cozy.io/en/cozy-stack/client-app-dev/#good-practices-for-your-application
 *
 * @returns {Boolean} - False is DOM initialization could not be completed, true otherwise
 */


exports.getTemplateData = getTemplateData;

var initializeFromDOM = /*#__PURE__*/function () {
  var _ref2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2() {
    var domData;
    return _regenerator.default.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            domData = getTemplateData('flags');

            if (domData) {
              _context2.next = 3;
              break;
            }

            return _context2.abrupt("return", false);

          case 3:
            enable(domData);
            return _context2.abrupt("return", true);

          case 5:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));

  return function initializeFromDOM() {
    return _ref2.apply(this, arguments);
  };
}();
/**
 * Initialize flags from DOM if possible, otherwise from remote endpoint
 *
 * @example
 *
 * Flags can be taken from the flags injected by the stack
 * ```
 * <div data-cozy="{{ .CozyData }}"></div>
 *
 * // not recommended but possible
 * <div data-flags="{{ .Flags }}"></div>
 * ````
 *
 * @param  {CozyClient} client - A CozyClient
 * @return {Promise} Resolves when flags have been initialized
 */


exports.initializeFromDOM = initializeFromDOM;

var initialize = /*#__PURE__*/function () {
  var _ref3 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3(client) {
    var domRes;
    return _regenerator.default.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            _context3.next = 2;
            return initializeFromDOM();

          case 2:
            domRes = _context3.sent;

            if (!(domRes == false)) {
              _context3.next = 6;
              break;
            }

            _context3.next = 6;
            return initializeFromRemote(client);

          case 6:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  }));

  return function initialize(_x2) {
    return _ref3.apply(this, arguments);
  };
}();

exports.initialize = initialize;

var FlagClientPlugin = /*#__PURE__*/function () {
  function FlagClientPlugin(client) {
    (0, _classCallCheck2.default)(this, FlagClientPlugin);
    this.client = client;
    this.handleLogin = this.handleLogin.bind(this);
    this.handleLogout = this.handleLogout.bind(this);
    this.client.on('login', this.handleLogin);
    this.client.on('logout', this.handleLogout);
    this.setupInitializing();
    if (client.isLogged) this.handleLogin();
  }
  /**
   * Fetches and sets flags from remote
   */


  (0, _createClass2.default)(FlagClientPlugin, [{
    key: "refresh",
    value: function () {
      var _refresh = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee4() {
        return _regenerator.default.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _context4.next = 2;
                return flag.initializeFromRemote(this.client);

              case 2:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function refresh() {
        return _refresh.apply(this, arguments);
      }

      return refresh;
    }()
    /**
     * Sets up a promise that can be awaited to wait for flag complete
     * initialization
     */

  }, {
    key: "setupInitializing",
    value: function setupInitializing() {
      var _this = this;

      this.initializing = new Promise(function (resolve) {
        _this.resolveInitializing = resolve;
      });
    }
  }, {
    key: "handleLogin",
    value: function () {
      var _handleLogin = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee5() {
        return _regenerator.default.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                _context5.next = 2;
                return flag.initialize(this.client);

              case 2:
                this.resolveInitializing();
                this.client.emit('plugin:flag:login');

              case 4:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function handleLogin() {
        return _handleLogin.apply(this, arguments);
      }

      return handleLogin;
    }()
  }, {
    key: "handleLogout",
    value: function () {
      var _handleLogout = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee6() {
        return _regenerator.default.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                flag.reset();
                this.setupInitializing();
                this.client.emit('plugin:flag:logout');

              case 3:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));

      function handleLogout() {
        return _handleLogout.apply(this, arguments);
      }

      return handleLogout;
    }()
  }]);
  return FlagClientPlugin;
}();

FlagClientPlugin.pluginName = 'flags';
flag.store = store;
flag.list = listFlags;
flag.reset = resetFlags;
flag.enable = enable;
flag.initializeFromRemote = initializeFromRemote;
flag.initializeFromDOM = initializeFromDOM;
flag.initialize = initialize;
flag.plugin = FlagClientPlugin;
var _default = flag;
exports.default = _default;

/***/ }),
/* 555 */
/***/ (function(module, exports) {

/**
 * The base implementation of methods like `_.findKey` and `_.findLastKey`,
 * without support for iteratee shorthands, which iterates over `collection`
 * using `eachFunc`.
 *
 * @private
 * @param {Array|Object} collection The collection to inspect.
 * @param {Function} predicate The function invoked per iteration.
 * @param {Function} eachFunc The function to iterate over `collection`.
 * @returns {*} Returns the found element or its key, else `undefined`.
 */
function baseFindKey(collection, predicate, eachFunc) {
  var result;
  eachFunc(collection, function(value, key, collection) {
    if (predicate(value, key, collection)) {
      result = key;
      return false;
    }
  });
  return result;
}

module.exports = baseFindKey;


/***/ }),
/* 556 */
/***/ (function(module, exports, __webpack_require__) {

// default filter
var Transform = __webpack_require__(28);

var levelMap = { debug: 1, info: 2, warn: 3, error: 4 };

function Filter() {
  this.enabled = true;
  this.defaultResult = true;
  this.clear();
}

Transform.mixin(Filter);

// allow all matching, with level >= given level
Filter.prototype.allow = function(name, level) {
  this._white.push({ n: name, l: levelMap[level] });
  return this;
};

// deny all matching, with level <= given level
Filter.prototype.deny = function(name, level) {
  this._black.push({ n: name, l: levelMap[level] });
  return this;
};

Filter.prototype.clear = function() {
  this._white = [];
  this._black = [];
  return this;
};

function test(rule, name) {
  // use .test for RegExps
  return (rule.n.test ? rule.n.test(name) : rule.n == name);
};

Filter.prototype.test = function(name, level) {
  var i, len = Math.max(this._white.length, this._black.length);
  for(i = 0; i < len; i++) {
    if(this._white[i] && test(this._white[i], name) && levelMap[level] >= this._white[i].l) {
      return true;
    }
    if(this._black[i] && test(this._black[i], name) && levelMap[level] <= this._black[i].l) {
      return false;
    }
  }
  return this.defaultResult;
};

Filter.prototype.write = function(name, level, args) {
  if(!this.enabled || this.test(name, level)) {
    return this.emit('item', name, level, args);
  }
};

module.exports = Filter;


/***/ }),
/* 557 */
/***/ (function(module, exports, __webpack_require__) {

var Transform = __webpack_require__(28);

function ConsoleBackend() { }

Transform.mixin(ConsoleBackend);

ConsoleBackend.prototype.write = function() {
  console.log.apply(console, arguments);
};

var e = new ConsoleBackend();

var levelMap = __webpack_require__(76).levelMap;

e.filterEnv = function() {
  console.error('Minilog.backends.console.filterEnv is deprecated in Minilog v2.');
  // return the instance of Minilog
  return __webpack_require__(265);
};

e.formatters = [
    'formatClean', 'formatColor', 'formatNpm',
    'formatLearnboost', 'formatMinilog', 'formatWithStack', 'formatTime'
];

e.formatClean = new (__webpack_require__(558));
e.formatColor = new (__webpack_require__(559));
e.formatNpm = new (__webpack_require__(560));
e.formatLearnboost = new (__webpack_require__(561));
e.formatMinilog = new (__webpack_require__(562));
e.formatWithStack = new (__webpack_require__(563));
e.formatTime = new (__webpack_require__(564));

module.exports = e;


/***/ }),
/* 558 */
/***/ (function(module, exports, __webpack_require__) {

var Transform = __webpack_require__(28);

function FormatClean() {}

Transform.mixin(FormatClean);

FormatClean.prototype.write = function(name, level, args) {
  function pad(s) { return (s.toString().length == 1? '0'+s : s); }
  this.emit('item', (name ? name + ' ' : '') + (level ? level + ' ' : '') + args.join(' '));
};

module.exports = FormatClean;


/***/ }),
/* 559 */
/***/ (function(module, exports, __webpack_require__) {

var Transform = __webpack_require__(28),
    style = __webpack_require__(76).style;

function FormatColor() {}

Transform.mixin(FormatColor);

FormatColor.prototype.write = function(name, level, args) {
  var colors = { debug: 'magenta', info: 'cyan', warn: 'yellow', error: 'red' };
  function pad(s) { return (s.toString().length == 4? ' '+s : s); }
  this.emit('item', (name ? name + ' ' : '')
          + (level ? style('- ' + pad(level.toUpperCase()) + ' -', colors[level]) + ' ' : '')
          + args.join(' '));
};

module.exports = FormatColor;


/***/ }),
/* 560 */
/***/ (function(module, exports, __webpack_require__) {

var Transform = __webpack_require__(28);

function FormatNpm() {}

Transform.mixin(FormatNpm);

FormatNpm.prototype.write = function(name, level, args) {
  var out = {
    debug: "\x1B[34;40m" + "debug" + "\x1B[39m ",
    info: "\x1B[32m" + "info" + "\x1B[39m  ",
    warn: "\x1B[30;41m" + "WARN" + "\x1B[0m  ",
    error: "\x1B[31;40m" + "ERR!" + "\x1B[0m  "
  };
  this.emit(
    "item",
    (name ? "\x1B[37;40m" + name + "\x1B[0m " : "") +
      (level && out[level] ? out[level] : "") +
      args.join(" ")
  );
};

module.exports = FormatNpm;


/***/ }),
/* 561 */
/***/ (function(module, exports, __webpack_require__) {

var Transform = __webpack_require__(28),
    style = __webpack_require__(76).style;

function FormatLearnboost() {}

Transform.mixin(FormatLearnboost);

FormatLearnboost.prototype.write = function(name, level, args) {
  var colors = { debug: 'grey', info: 'cyan', warn: 'yellow', error: 'red' };
  this.emit('item', (name ? style(name +' ', 'grey') : '')
          + (level ? style(level, colors[level]) + ' ' : '')
          + args.join(' '));
};

module.exports = FormatLearnboost;


/***/ }),
/* 562 */
/***/ (function(module, exports, __webpack_require__) {

var Transform = __webpack_require__(28),
    style = __webpack_require__(76).style,
    util = __webpack_require__(30);

function FormatMinilog() {}

Transform.mixin(FormatMinilog);

FormatMinilog.prototype.write = function(name, level, args) {
  var colors = { debug: 'blue', info: 'cyan', warn: 'yellow', error: 'red' };
  this.emit('item', (name ? style(name +' ', 'grey') : '')
            + (level ? style(level, colors[level]) + ' ' : '')
            + args.map(function(item) {
              return (typeof item == 'string' ? item : util.inspect(item, null, 3, true));
            }).join(' '));
};

module.exports = FormatMinilog;


/***/ }),
/* 563 */
/***/ (function(module, exports, __webpack_require__) {

var Transform = __webpack_require__(28),
    style = __webpack_require__(76).style;

function FormatNpm() {}

Transform.mixin(FormatNpm);

function noop(a){
  return a;
}

var types = {
  string: noop,
  number: noop,
  default: JSON.stringify.bind(JSON)
};

function stringify(args) {
  return args.map(function(arg) {
    return (types[typeof arg] || types.default)(arg);
  });
}

FormatNpm.prototype.write = function(name, level, args) {
  var colors = { debug: 'magenta', info: 'cyan', warn: 'yellow', error: 'red' };
  function pad(s) { return (s.toString().length == 4? ' '+s : s); }
  function getStack() {
    var orig = Error.prepareStackTrace;
    Error.prepareStackTrace = function (err, stack) {
      return stack;
    };
    var err = new Error;
    Error.captureStackTrace(err, arguments.callee);
    var stack = err.stack;
    Error.prepareStackTrace = orig;
    return stack;
  }

  var frame = getStack()[5],
      fileName = FormatNpm.fullPath ? frame.getFileName() : frame.getFileName().replace(/^.*\/(.+)$/, '/$1');

  this.emit('item', (name ? name + ' ' : '')
          + (level ? style(pad(level), colors[level]) + ' ' : '')
          + style(fileName + ":" + frame.getLineNumber(), 'grey')
          + ' '
          + stringify(args).join(' '));
};

FormatNpm.fullPath = true;

module.exports = FormatNpm;



/***/ }),
/* 564 */
/***/ (function(module, exports, __webpack_require__) {

var Transform = __webpack_require__(28),
    style = __webpack_require__(76).style,
    util = __webpack_require__(30);

function FormatTime() {}

function timestamp() {
  var d = new Date();
  return ('0' + d.getDate()).slice(-2) + '-' +
    ('0' + (d.getMonth() + 1)).slice(-2) + '-' +
    d.getFullYear() + ' ' +
    ('0' + d.getHours()).slice(-2) + ':' +
    ('0' + d.getMinutes()).slice(-2) + ':' +
    ('0' + d.getSeconds()).slice(-2) + '.' +
    ('00' + d.getMilliseconds()).slice(-3);
}

Transform.mixin(FormatTime);

FormatTime.prototype.write = function(name, level, args) {
  var colors = { debug: 'blue', info: 'cyan', warn: 'yellow', error: 'red' };
  this.emit('item', style(timestamp() +' ', 'grey')
            + (name ? style(name +' ', 'grey') : '')
            + (level ? style(level, colors[level]) + ' ' : '')
            + args.map(function(item) {
              return (typeof item == 'string' ? item : util.inspect(item, null, 3, true));
            }).join(' '));
};

module.exports = FormatTime;


/***/ }),
/* 565 */
/***/ (function(module, exports, __webpack_require__) {

var Transform = __webpack_require__(28);

var newlines = /\n+$/,
    logger = new Transform();

logger.write = function(name, level, args) {
  var i = args.length-1;
  if (typeof console === 'undefined' || !console.log) {
    return;
  }
  if(console.log.apply) {
    return console.log.apply(console, [name, level].concat(args));
  } else if(JSON && JSON.stringify) {
    // console.log.apply is undefined in IE8 and IE9
    // for IE8/9: make console.log at least a bit less awful
    if(args[i] && typeof args[i] == 'string') {
      args[i] = args[i].replace(newlines, '');
    }
    try {
      for(i = 0; i < args.length; i++) {
        args[i] = JSON.stringify(args[i]);
      }
    } catch(e) {}
    console.log(args.join(' '));
  }
};

logger.formatters = ['color', 'minilog'];
logger.color = __webpack_require__(566);
logger.minilog = __webpack_require__(567);

module.exports = logger;


/***/ }),
/* 566 */
/***/ (function(module, exports, __webpack_require__) {

var Transform = __webpack_require__(28),
    color = __webpack_require__(266);

var colors = { debug: ['cyan'], info: ['purple' ], warn: [ 'yellow', true ], error: [ 'red', true ] },
    logger = new Transform();

logger.write = function(name, level, args) {
  var fn = console.log;
  if(console[level] && console[level].apply) {
    fn = console[level];
    fn.apply(console, [ '%c'+name+' %c'+level, color('gray'), color.apply(color, colors[level])].concat(args));
  }
};

// NOP, because piping the formatted logs can only cause trouble.
logger.pipe = function() { };

module.exports = logger;


/***/ }),
/* 567 */
/***/ (function(module, exports, __webpack_require__) {

var Transform = __webpack_require__(28),
    color = __webpack_require__(266),
    colors = { debug: ['gray'], info: ['purple' ], warn: [ 'yellow', true ], error: [ 'red', true ] },
    logger = new Transform();

logger.write = function(name, level, args) {
  var fn = console.log;
  if(level != 'debug' && console[level]) {
    fn = console[level];
  }

  var subset = [], i = 0;
  if(level != 'info') {
    for(; i < args.length; i++) {
      if(typeof args[i] != 'string') break;
    }
    fn.apply(console, [ '%c'+name +' '+ args.slice(0, i).join(' '), color.apply(color, colors[level]) ].concat(args.slice(i)));
  } else {
    fn.apply(console, [ '%c'+name, color.apply(color, colors[level]) ].concat(args));
  }
};

// NOP, because piping the formatted logs can only cause trouble.
logger.pipe = function() { };

module.exports = logger;


/***/ }),
/* 568 */
/***/ (function(module, exports, __webpack_require__) {

var Transform = __webpack_require__(28);

function Stringify() {}

Transform.mixin(Stringify);

Stringify.prototype.write = function(name, level, args) {
  var result = [];
  if(name) result.push(name);
  if(level) result.push(level);
  result = result.concat(args);
  for(var i = 0; i < result.length; i++) {
    if(result[i] && typeof result[i] == 'object') {
      // Buffers in Node.js look bad when stringified
      if(result[i].constructor && result[i].constructor.isBuffer) {
        result[i] = result[i].toString();
      } else {
        try {
          result[i] = JSON.stringify(result[i]);
        } catch(stringifyError) {
          // happens when an object has a circular structure
          // do not throw an error, when printing, the toString() method of the object will be used
        }
      }
    } else {
      result[i] = result[i];
    }
  }
  this.emit('item',  result.join(' ') + '\n');
};

module.exports = Stringify;


/***/ }),
/* 569 */
/***/ (function(module, exports) {

function RedisBackend(options) {
  this.client = options.client;
  this.key = options.key;
}

RedisBackend.prototype.write = function(str) {
  this.client.rpush(this.key, str);
};

RedisBackend.prototype.end = function() {};

RedisBackend.prototype.clear = function(cb) {
  this.client.del(this.key, cb);
};

module.exports = RedisBackend;


/***/ }),
/* 570 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _slicedToArray2 = _interopRequireDefault(__webpack_require__(32));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));

var _createClass2 = _interopRequireDefault(__webpack_require__(13));

var _microee = _interopRequireDefault(__webpack_require__(101));

var _lsAdapter = _interopRequireDefault(__webpack_require__(571));

/**
 * In memory key value storage.
 *
 * Can potentially be backed by localStorage if present

 * Emits `change` when a key is set (eventEmitter)
 */
var FlagStore = /*#__PURE__*/function () {
  function FlagStore() {
    (0, _classCallCheck2.default)(this, FlagStore);
    this.store = {};

    if (typeof localStorage !== 'undefined') {
      this.longtermStore = _lsAdapter.default;
    }

    this.restore();
  }

  (0, _createClass2.default)(FlagStore, [{
    key: "restore",
    value: function restore() {
      if (!this.longtermStore) {
        return;
      }

      var allValues = this.longtermStore.getAll();

      for (var _i = 0, _Object$entries = Object.entries(allValues); _i < _Object$entries.length; _i++) {
        var _Object$entries$_i = (0, _slicedToArray2.default)(_Object$entries[_i], 2),
            flag = _Object$entries$_i[0],
            val = _Object$entries$_i[1];

        this.store[flag] = val;
        this.emit('change', flag);
      }
    }
  }, {
    key: "keys",
    value: function keys() {
      return Object.keys(this.store);
    }
  }, {
    key: "get",
    value: function get(name) {
      // eslint-disable-next-line no-prototype-builtins
      if (this.store.hasOwnProperty(name)) {
        return this.store[name];
      }

      if (typeof name === 'string') {
        var nameElements = name.split('.');
        var size = nameElements.length;

        for (var idx = size - 1; idx > 0; idx--) {
          var currentKey = nameElements.slice(0, idx).join('.'); // eslint-disable-next-line no-prototype-builtins

          if (this.store.hasOwnProperty(currentKey)) {
            return nameElements.slice(idx, size).reduce(function (previousValue, currentValue) {
              // eslint-disable-next-line no-prototype-builtins
              return previousValue && previousValue.hasOwnProperty(currentValue) ? previousValue[currentValue] : null;
            }, this.store[currentKey]);
          }
        }
      }

      return null;
    }
  }, {
    key: "set",
    value: function set(name, value) {
      if (this.longtermStore) {
        this.longtermStore.setItem(name, value);
      }

      this.store[name] = value;
      this.emit('change', name);
    }
  }, {
    key: "remove",
    value: function remove(name) {
      delete this.store[name];

      if (this.longtermStore) {
        this.longtermStore.removeItem(name);
      }

      this.emit('change', name);
    }
  }]);
  return FlagStore;
}();

_microee.default.mixin(FlagStore);

var _default = FlagStore;
exports.default = _default;

/***/ }),
/* 571 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.prefix = exports.getKey = exports.default = void 0;

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

// eslint-disable-next-line no-redeclare

/* global localStorage */
var prefix = 'flag__';
exports.prefix = prefix;

var getKey = function getKey(name) {
  return prefix + name;
};

exports.getKey = getKey;

var listFlagLocalStorage = function listFlagLocalStorage() {
  return Object.keys(localStorage).filter(function (x) {
    return x.indexOf(prefix) === 0;
  }).map(function (x) {
    return x.replace(prefix, '');
  });
};
/**
 * Gets a flag from localStorage, parses value from JSON
 *
 * @param  {String} flag
 */


var getItem = function getItem(flag) {
  var val = localStorage.getItem(getKey(flag));
  var parsed = val ? JSON.parse(val) : val;
  return parsed;
};
/**
 * Stores a flag in localStorage, stringifies the value for storage
 *
 * @param  {String} flag
 * @param  {String} value
 */


var setItem = function setItem(flag, value) {
  var str = JSON.stringify(value);
  return localStorage.setItem(getKey(flag), str);
};
/**
 * Removes a flag from localStorage
 *
 * @param  {String} flag
 */


var removeItem = function removeItem(flag) {
  return localStorage.removeItem(getKey(flag));
};
/**
 * Returns all stored flags as an object
 */


var getAll = function getAll() {
  var res = {};

  var _iterator = _createForOfIteratorHelper(listFlagLocalStorage()),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var flag = _step.value;
      res[flag] = getItem(flag);
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  return res;
};
/**
 * Clears all the flags from localstorage
 */


var clearAll = function clearAll() {
  var _iterator2 = _createForOfIteratorHelper(listFlagLocalStorage()),
      _step2;

  try {
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
      var flag = _step2.value;
      removeItem(flag);
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }
};

var _default = {
  getAll: getAll,
  getItem: getItem,
  setItem: setItem,
  clearAll: clearAll,
  removeItem: removeItem
};
exports.default = _default;

/***/ }),
/* 572 */
/***/ (function(module, exports, __webpack_require__) {

var baseGet = __webpack_require__(92),
    baseSlice = __webpack_require__(268);

/**
 * Gets the parent value at `path` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array} path The path to get the parent value of.
 * @returns {*} Returns the parent value.
 */
function parent(object, path) {
  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
}

module.exports = parent;


/***/ }),
/* 573 */
/***/ (function(module, exports, __webpack_require__) {

var isPlainObject = __webpack_require__(156);

/**
 * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
 * objects.
 *
 * @private
 * @param {*} value The value to inspect.
 * @param {string} key The key of the property to inspect.
 * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
 */
function customOmitClone(value) {
  return isPlainObject(value) ? undefined : value;
}

module.exports = customOmitClone;


/***/ }),
/* 574 */
/***/ (function(module, exports, __webpack_require__) {

var Stack = __webpack_require__(126),
    assignMergeValue = __webpack_require__(270),
    baseFor = __webpack_require__(235),
    baseMergeDeep = __webpack_require__(575),
    isObject = __webpack_require__(38),
    keysIn = __webpack_require__(87),
    safeGet = __webpack_require__(271);

/**
 * The base implementation of `_.merge` without support for multiple sources.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @param {number} srcIndex The index of `source`.
 * @param {Function} [customizer] The function to customize merged values.
 * @param {Object} [stack] Tracks traversed source values and their merged
 *  counterparts.
 */
function baseMerge(object, source, srcIndex, customizer, stack) {
  if (object === source) {
    return;
  }
  baseFor(source, function(srcValue, key) {
    stack || (stack = new Stack);
    if (isObject(srcValue)) {
      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
    }
    else {
      var newValue = customizer
        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)
        : undefined;

      if (newValue === undefined) {
        newValue = srcValue;
      }
      assignMergeValue(object, key, newValue);
    }
  }, keysIn);
}

module.exports = baseMerge;


/***/ }),
/* 575 */
/***/ (function(module, exports, __webpack_require__) {

var assignMergeValue = __webpack_require__(270),
    cloneBuffer = __webpack_require__(256),
    cloneTypedArray = __webpack_require__(258),
    copyArray = __webpack_require__(110),
    initCloneObject = __webpack_require__(259),
    isArguments = __webpack_require__(89),
    isArray = __webpack_require__(21),
    isArrayLikeObject = __webpack_require__(124),
    isBuffer = __webpack_require__(91),
    isFunction = __webpack_require__(150),
    isObject = __webpack_require__(38),
    isPlainObject = __webpack_require__(156),
    isTypedArray = __webpack_require__(125),
    safeGet = __webpack_require__(271),
    toPlainObject = __webpack_require__(576);

/**
 * A specialized version of `baseMerge` for arrays and objects which performs
 * deep merges and tracks traversed objects enabling objects with circular
 * references to be merged.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @param {string} key The key of the value to merge.
 * @param {number} srcIndex The index of `source`.
 * @param {Function} mergeFunc The function to merge values.
 * @param {Function} [customizer] The function to customize assigned values.
 * @param {Object} [stack] Tracks traversed source values and their merged
 *  counterparts.
 */
function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
  var objValue = safeGet(object, key),
      srcValue = safeGet(source, key),
      stacked = stack.get(srcValue);

  if (stacked) {
    assignMergeValue(object, key, stacked);
    return;
  }
  var newValue = customizer
    ? customizer(objValue, srcValue, (key + ''), object, source, stack)
    : undefined;

  var isCommon = newValue === undefined;

  if (isCommon) {
    var isArr = isArray(srcValue),
        isBuff = !isArr && isBuffer(srcValue),
        isTyped = !isArr && !isBuff && isTypedArray(srcValue);

    newValue = srcValue;
    if (isArr || isBuff || isTyped) {
      if (isArray(objValue)) {
        newValue = objValue;
      }
      else if (isArrayLikeObject(objValue)) {
        newValue = copyArray(objValue);
      }
      else if (isBuff) {
        isCommon = false;
        newValue = cloneBuffer(srcValue, true);
      }
      else if (isTyped) {
        isCommon = false;
        newValue = cloneTypedArray(srcValue, true);
      }
      else {
        newValue = [];
      }
    }
    else if (isPlainObject(srcValue) || isArguments(srcValue)) {
      newValue = objValue;
      if (isArguments(objValue)) {
        newValue = toPlainObject(objValue);
      }
      else if (!isObject(objValue) || isFunction(objValue)) {
        newValue = initCloneObject(srcValue);
      }
    }
    else {
      isCommon = false;
    }
  }
  if (isCommon) {
    // Recursively merge objects and arrays (susceptible to call stack limits).
    stack.set(srcValue, newValue);
    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
    stack['delete'](srcValue);
  }
  assignMergeValue(object, key, newValue);
}

module.exports = baseMergeDeep;


/***/ }),
/* 576 */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(68),
    keysIn = __webpack_require__(87);

/**
 * Converts `value` to a plain object flattening inherited enumerable string
 * keyed properties of `value` to own properties of the plain object.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {Object} Returns the converted plain object.
 * @example
 *
 * function Foo() {
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.assign({ 'a': 1 }, new Foo);
 * // => { 'a': 1, 'b': 2 }
 *
 * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
 * // => { 'a': 1, 'b': 2, 'c': 3 }
 */
function toPlainObject(value) {
  return copyObject(value, keysIn(value));
}

module.exports = toPlainObject;


/***/ }),
/* 577 */
/***/ (function(module, exports, __webpack_require__) {

var baseClamp = __webpack_require__(578),
    baseToString = __webpack_require__(171),
    toInteger = __webpack_require__(328),
    toString = __webpack_require__(82);

/**
 * Checks if `string` starts with the given target string.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to inspect.
 * @param {string} [target] The string to search for.
 * @param {number} [position=0] The position to search from.
 * @returns {boolean} Returns `true` if `string` starts with `target`,
 *  else `false`.
 * @example
 *
 * _.startsWith('abc', 'a');
 * // => true
 *
 * _.startsWith('abc', 'b');
 * // => false
 *
 * _.startsWith('abc', 'b', 1);
 * // => true
 */
function startsWith(string, target, position) {
  string = toString(string);
  position = position == null
    ? 0
    : baseClamp(toInteger(position), 0, string.length);

  target = baseToString(target);
  return string.slice(position, position + target.length) == target;
}

module.exports = startsWith;


/***/ }),
/* 578 */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.clamp` which doesn't coerce arguments.
 *
 * @private
 * @param {number} number The number to clamp.
 * @param {number} [lower] The lower bound.
 * @param {number} upper The upper bound.
 * @returns {number} Returns the clamped number.
 */
function baseClamp(number, lower, upper) {
  if (number === number) {
    if (upper !== undefined) {
      number = number <= upper ? number : upper;
    }
    if (lower !== undefined) {
      number = number >= lower ? number : lower;
    }
  }
  return number;
}

module.exports = baseClamp;


/***/ }),
/* 579 */
/***/ (function(module, exports, __webpack_require__) {

var baseTrim = __webpack_require__(580),
    isObject = __webpack_require__(38),
    isSymbol = __webpack_require__(86);

/** Used as references for various `Number` constants. */
var NAN = 0 / 0;

/** Used to detect bad signed hexadecimal string values. */
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

/** Used to detect binary string values. */
var reIsBinary = /^0b[01]+$/i;

/** Used to detect octal string values. */
var reIsOctal = /^0o[0-7]+$/i;

/** Built-in method references without a dependency on `root`. */
var freeParseInt = parseInt;

/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */
function toNumber(value) {
  if (typeof value == 'number') {
    return value;
  }
  if (isSymbol(value)) {
    return NAN;
  }
  if (isObject(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = isObject(other) ? (other + '') : other;
  }
  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }
  value = baseTrim(value);
  var isBinary = reIsBinary.test(value);
  return (isBinary || reIsOctal.test(value))
    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
    : (reIsBadHex.test(value) ? NAN : +value);
}

module.exports = toNumber;


/***/ }),
/* 580 */
/***/ (function(module, exports, __webpack_require__) {

var trimmedEndIndex = __webpack_require__(272);

/** Used to match leading whitespace. */
var reTrimStart = /^\s+/;

/**
 * The base implementation of `_.trim`.
 *
 * @private
 * @param {string} string The string to trim.
 * @returns {string} Returns the trimmed string.
 */
function baseTrim(string) {
  return string
    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')
    : string;
}

module.exports = baseTrim;


/***/ }),
/* 581 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var stringify = __webpack_require__(582);
var parse = __webpack_require__(586);
var formats = __webpack_require__(178);

module.exports = {
    formats: formats,
    parse: parse,
    stringify: stringify
};


/***/ }),
/* 582 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var getSideChannel = __webpack_require__(583);
var utils = __webpack_require__(275);
var formats = __webpack_require__(178);
var has = Object.prototype.hasOwnProperty;

var arrayPrefixGenerators = {
    brackets: function brackets(prefix) {
        return prefix + '[]';
    },
    comma: 'comma',
    indices: function indices(prefix, key) {
        return prefix + '[' + key + ']';
    },
    repeat: function repeat(prefix) {
        return prefix;
    }
};

var isArray = Array.isArray;
var split = String.prototype.split;
var push = Array.prototype.push;
var pushToArray = function (arr, valueOrArray) {
    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);
};

var toISO = Date.prototype.toISOString;

var defaultFormat = formats['default'];
var defaults = {
    addQueryPrefix: false,
    allowDots: false,
    charset: 'utf-8',
    charsetSentinel: false,
    delimiter: '&',
    encode: true,
    encoder: utils.encode,
    encodeValuesOnly: false,
    format: defaultFormat,
    formatter: formats.formatters[defaultFormat],
    // deprecated
    indices: false,
    serializeDate: function serializeDate(date) {
        return toISO.call(date);
    },
    skipNulls: false,
    strictNullHandling: false
};

var isNonNullishPrimitive = function isNonNullishPrimitive(v) {
    return typeof v === 'string'
        || typeof v === 'number'
        || typeof v === 'boolean'
        || typeof v === 'symbol'
        || typeof v === 'bigint';
};

var sentinel = {};

var stringify = function stringify(
    object,
    prefix,
    generateArrayPrefix,
    strictNullHandling,
    skipNulls,
    encoder,
    filter,
    sort,
    allowDots,
    serializeDate,
    format,
    formatter,
    encodeValuesOnly,
    charset,
    sideChannel
) {
    var obj = object;

    var tmpSc = sideChannel;
    var step = 0;
    var findFlag = false;
    while ((tmpSc = tmpSc.get(sentinel)) !== void undefined && !findFlag) {
        // Where object last appeared in the ref tree
        var pos = tmpSc.get(object);
        step += 1;
        if (typeof pos !== 'undefined') {
            if (pos === step) {
                throw new RangeError('Cyclic object value');
            } else {
                findFlag = true; // Break while
            }
        }
        if (typeof tmpSc.get(sentinel) === 'undefined') {
            step = 0;
        }
    }

    if (typeof filter === 'function') {
        obj = filter(prefix, obj);
    } else if (obj instanceof Date) {
        obj = serializeDate(obj);
    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {
        obj = utils.maybeMap(obj, function (value) {
            if (value instanceof Date) {
                return serializeDate(value);
            }
            return value;
        });
    }

    if (obj === null) {
        if (strictNullHandling) {
            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key', format) : prefix;
        }

        obj = '';
    }

    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {
        if (encoder) {
            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key', format);
            if (generateArrayPrefix === 'comma' && encodeValuesOnly) {
                var valuesArray = split.call(String(obj), ',');
                var valuesJoined = '';
                for (var i = 0; i < valuesArray.length; ++i) {
                    valuesJoined += (i === 0 ? '' : ',') + formatter(encoder(valuesArray[i], defaults.encoder, charset, 'value', format));
                }
                return [formatter(keyValue) + '=' + valuesJoined];
            }
            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value', format))];
        }
        return [formatter(prefix) + '=' + formatter(String(obj))];
    }

    var values = [];

    if (typeof obj === 'undefined') {
        return values;
    }

    var objKeys;
    if (generateArrayPrefix === 'comma' && isArray(obj)) {
        // we need to join elements in
        objKeys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];
    } else if (isArray(filter)) {
        objKeys = filter;
    } else {
        var keys = Object.keys(obj);
        objKeys = sort ? keys.sort(sort) : keys;
    }

    for (var j = 0; j < objKeys.length; ++j) {
        var key = objKeys[j];
        var value = typeof key === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key];

        if (skipNulls && value === null) {
            continue;
        }

        var keyPrefix = isArray(obj)
            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(prefix, key) : prefix
            : prefix + (allowDots ? '.' + key : '[' + key + ']');

        sideChannel.set(object, step);
        var valueSideChannel = getSideChannel();
        valueSideChannel.set(sentinel, sideChannel);
        pushToArray(values, stringify(
            value,
            keyPrefix,
            generateArrayPrefix,
            strictNullHandling,
            skipNulls,
            encoder,
            filter,
            sort,
            allowDots,
            serializeDate,
            format,
            formatter,
            encodeValuesOnly,
            charset,
            valueSideChannel
        ));
    }

    return values;
};

var normalizeStringifyOptions = function normalizeStringifyOptions(opts) {
    if (!opts) {
        return defaults;
    }

    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {
        throw new TypeError('Encoder has to be a function.');
    }

    var charset = opts.charset || defaults.charset;
    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {
        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');
    }

    var format = formats['default'];
    if (typeof opts.format !== 'undefined') {
        if (!has.call(formats.formatters, opts.format)) {
            throw new TypeError('Unknown format option provided.');
        }
        format = opts.format;
    }
    var formatter = formats.formatters[format];

    var filter = defaults.filter;
    if (typeof opts.filter === 'function' || isArray(opts.filter)) {
        filter = opts.filter;
    }

    return {
        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,
        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,
        charset: charset,
        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,
        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,
        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,
        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,
        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,
        filter: filter,
        format: format,
        formatter: formatter,
        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,
        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,
        sort: typeof opts.sort === 'function' ? opts.sort : null,
        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling
    };
};

module.exports = function (object, opts) {
    var obj = object;
    var options = normalizeStringifyOptions(opts);

    var objKeys;
    var filter;

    if (typeof options.filter === 'function') {
        filter = options.filter;
        obj = filter('', obj);
    } else if (isArray(options.filter)) {
        filter = options.filter;
        objKeys = filter;
    }

    var keys = [];

    if (typeof obj !== 'object' || obj === null) {
        return '';
    }

    var arrayFormat;
    if (opts && opts.arrayFormat in arrayPrefixGenerators) {
        arrayFormat = opts.arrayFormat;
    } else if (opts && 'indices' in opts) {
        arrayFormat = opts.indices ? 'indices' : 'repeat';
    } else {
        arrayFormat = 'indices';
    }

    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];

    if (!objKeys) {
        objKeys = Object.keys(obj);
    }

    if (options.sort) {
        objKeys.sort(options.sort);
    }

    var sideChannel = getSideChannel();
    for (var i = 0; i < objKeys.length; ++i) {
        var key = objKeys[i];

        if (options.skipNulls && obj[key] === null) {
            continue;
        }
        pushToArray(keys, stringify(
            obj[key],
            key,
            generateArrayPrefix,
            options.strictNullHandling,
            options.skipNulls,
            options.encode ? options.encoder : null,
            options.filter,
            options.sort,
            options.allowDots,
            options.serializeDate,
            options.format,
            options.formatter,
            options.encodeValuesOnly,
            options.charset,
            sideChannel
        ));
    }

    var joined = keys.join(options.delimiter);
    var prefix = options.addQueryPrefix === true ? '?' : '';

    if (options.charsetSentinel) {
        if (options.charset === 'iso-8859-1') {
            // encodeURIComponent('&#10003;'), the "numeric entity" representation of a checkmark
            prefix += 'utf8=%26%2310003%3B&';
        } else {
            // encodeURIComponent('✓')
            prefix += 'utf8=%E2%9C%93&';
        }
    }

    return joined.length > 0 ? prefix + joined : '';
};


/***/ }),
/* 583 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var GetIntrinsic = __webpack_require__(23);
var callBound = __webpack_require__(24);
var inspect = __webpack_require__(274);

var $TypeError = GetIntrinsic('%TypeError%');
var $WeakMap = GetIntrinsic('%WeakMap%', true);
var $Map = GetIntrinsic('%Map%', true);

var $weakMapGet = callBound('WeakMap.prototype.get', true);
var $weakMapSet = callBound('WeakMap.prototype.set', true);
var $weakMapHas = callBound('WeakMap.prototype.has', true);
var $mapGet = callBound('Map.prototype.get', true);
var $mapSet = callBound('Map.prototype.set', true);
var $mapHas = callBound('Map.prototype.has', true);

/*
 * This function traverses the list returning the node corresponding to the
 * given key.
 *
 * That node is also moved to the head of the list, so that if it's accessed
 * again we don't need to traverse the whole list. By doing so, all the recently
 * used nodes can be accessed relatively quickly.
 */
var listGetNode = function (list, key) { // eslint-disable-line consistent-return
	for (var prev = list, curr; (curr = prev.next) !== null; prev = curr) {
		if (curr.key === key) {
			prev.next = curr.next;
			curr.next = list.next;
			list.next = curr; // eslint-disable-line no-param-reassign
			return curr;
		}
	}
};

var listGet = function (objects, key) {
	var node = listGetNode(objects, key);
	return node && node.value;
};
var listSet = function (objects, key, value) {
	var node = listGetNode(objects, key);
	if (node) {
		node.value = value;
	} else {
		// Prepend the new node to the beginning of the list
		objects.next = { // eslint-disable-line no-param-reassign
			key: key,
			next: objects.next,
			value: value
		};
	}
};
var listHas = function (objects, key) {
	return !!listGetNode(objects, key);
};

module.exports = function getSideChannel() {
	var $wm;
	var $m;
	var $o;
	var channel = {
		assert: function (key) {
			if (!channel.has(key)) {
				throw new $TypeError('Side channel does not contain ' + inspect(key));
			}
		},
		get: function (key) { // eslint-disable-line consistent-return
			if ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {
				if ($wm) {
					return $weakMapGet($wm, key);
				}
			} else if ($Map) {
				if ($m) {
					return $mapGet($m, key);
				}
			} else {
				if ($o) { // eslint-disable-line no-lonely-if
					return listGet($o, key);
				}
			}
		},
		has: function (key) {
			if ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {
				if ($wm) {
					return $weakMapHas($wm, key);
				}
			} else if ($Map) {
				if ($m) {
					return $mapHas($m, key);
				}
			} else {
				if ($o) { // eslint-disable-line no-lonely-if
					return listHas($o, key);
				}
			}
			return false;
		},
		set: function (key, value) {
			if ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {
				if (!$wm) {
					$wm = new $WeakMap();
				}
				$weakMapSet($wm, key, value);
			} else if ($Map) {
				if (!$m) {
					$m = new $Map();
				}
				$mapSet($m, key, value);
			} else {
				if (!$o) {
					/*
					 * Initialize the linked list as an empty node, so that we don't have
					 * to special-case handling of the first node: we can always refer to
					 * it as (previous node).next, instead of something like (list).head
					 */
					$o = { key: {}, next: null };
				}
				listSet($o, key, value);
			}
		}
	};
	return channel;
};


/***/ }),
/* 584 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/* eslint no-invalid-this: 1 */

var ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';
var slice = Array.prototype.slice;
var toStr = Object.prototype.toString;
var funcType = '[object Function]';

module.exports = function bind(that) {
    var target = this;
    if (typeof target !== 'function' || toStr.call(target) !== funcType) {
        throw new TypeError(ERROR_MESSAGE + target);
    }
    var args = slice.call(arguments, 1);

    var bound;
    var binder = function () {
        if (this instanceof bound) {
            var result = target.apply(
                this,
                args.concat(slice.call(arguments))
            );
            if (Object(result) === result) {
                return result;
            }
            return this;
        } else {
            return target.apply(
                that,
                args.concat(slice.call(arguments))
            );
        }
    };

    var boundLength = Math.max(0, target.length - args.length);
    var boundArgs = [];
    for (var i = 0; i < boundLength; i++) {
        boundArgs.push('$' + i);
    }

    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);

    if (target.prototype) {
        var Empty = function Empty() {};
        Empty.prototype = target.prototype;
        bound.prototype = new Empty();
        Empty.prototype = null;
    }

    return bound;
};


/***/ }),
/* 585 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(30).inspect;


/***/ }),
/* 586 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(275);

var has = Object.prototype.hasOwnProperty;
var isArray = Array.isArray;

var defaults = {
    allowDots: false,
    allowPrototypes: false,
    allowSparse: false,
    arrayLimit: 20,
    charset: 'utf-8',
    charsetSentinel: false,
    comma: false,
    decoder: utils.decode,
    delimiter: '&',
    depth: 5,
    ignoreQueryPrefix: false,
    interpretNumericEntities: false,
    parameterLimit: 1000,
    parseArrays: true,
    plainObjects: false,
    strictNullHandling: false
};

var interpretNumericEntities = function (str) {
    return str.replace(/&#(\d+);/g, function ($0, numberStr) {
        return String.fromCharCode(parseInt(numberStr, 10));
    });
};

var parseArrayValue = function (val, options) {
    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {
        return val.split(',');
    }

    return val;
};

// This is what browsers will submit when the ✓ character occurs in an
// application/x-www-form-urlencoded body and the encoding of the page containing
// the form is iso-8859-1, or when the submitted form has an accept-charset
// attribute of iso-8859-1. Presumably also with other charsets that do not contain
// the ✓ character, such as us-ascii.
var isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')

// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.
var charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')

var parseValues = function parseQueryStringValues(str, options) {
    var obj = {};
    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\?/, '') : str;
    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;
    var parts = cleanStr.split(options.delimiter, limit);
    var skipIndex = -1; // Keep track of where the utf8 sentinel was found
    var i;

    var charset = options.charset;
    if (options.charsetSentinel) {
        for (i = 0; i < parts.length; ++i) {
            if (parts[i].indexOf('utf8=') === 0) {
                if (parts[i] === charsetSentinel) {
                    charset = 'utf-8';
                } else if (parts[i] === isoSentinel) {
                    charset = 'iso-8859-1';
                }
                skipIndex = i;
                i = parts.length; // The eslint settings do not allow break;
            }
        }
    }

    for (i = 0; i < parts.length; ++i) {
        if (i === skipIndex) {
            continue;
        }
        var part = parts[i];

        var bracketEqualsPos = part.indexOf(']=');
        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;

        var key, val;
        if (pos === -1) {
            key = options.decoder(part, defaults.decoder, charset, 'key');
            val = options.strictNullHandling ? null : '';
        } else {
            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');
            val = utils.maybeMap(
                parseArrayValue(part.slice(pos + 1), options),
                function (encodedVal) {
                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');
                }
            );
        }

        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {
            val = interpretNumericEntities(val);
        }

        if (part.indexOf('[]=') > -1) {
            val = isArray(val) ? [val] : val;
        }

        if (has.call(obj, key)) {
            obj[key] = utils.combine(obj[key], val);
        } else {
            obj[key] = val;
        }
    }

    return obj;
};

var parseObject = function (chain, val, options, valuesParsed) {
    var leaf = valuesParsed ? val : parseArrayValue(val, options);

    for (var i = chain.length - 1; i >= 0; --i) {
        var obj;
        var root = chain[i];

        if (root === '[]' && options.parseArrays) {
            obj = [].concat(leaf);
        } else {
            obj = options.plainObjects ? Object.create(null) : {};
            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;
            var index = parseInt(cleanRoot, 10);
            if (!options.parseArrays && cleanRoot === '') {
                obj = { 0: leaf };
            } else if (
                !isNaN(index)
                && root !== cleanRoot
                && String(index) === cleanRoot
                && index >= 0
                && (options.parseArrays && index <= options.arrayLimit)
            ) {
                obj = [];
                obj[index] = leaf;
            } else if (cleanRoot !== '__proto__') {
                obj[cleanRoot] = leaf;
            }
        }

        leaf = obj;
    }

    return leaf;
};

var parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {
    if (!givenKey) {
        return;
    }

    // Transform dot notation to bracket notation
    var key = options.allowDots ? givenKey.replace(/\.([^.[]+)/g, '[$1]') : givenKey;

    // The regex chunks

    var brackets = /(\[[^[\]]*])/;
    var child = /(\[[^[\]]*])/g;

    // Get the parent

    var segment = options.depth > 0 && brackets.exec(key);
    var parent = segment ? key.slice(0, segment.index) : key;

    // Stash the parent if it exists

    var keys = [];
    if (parent) {
        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties
        if (!options.plainObjects && has.call(Object.prototype, parent)) {
            if (!options.allowPrototypes) {
                return;
            }
        }

        keys.push(parent);
    }

    // Loop through children appending to the array until we hit depth

    var i = 0;
    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {
        i += 1;
        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {
            if (!options.allowPrototypes) {
                return;
            }
        }
        keys.push(segment[1]);
    }

    // If there's a remainder, just add whatever is left

    if (segment) {
        keys.push('[' + key.slice(segment.index) + ']');
    }

    return parseObject(keys, val, options, valuesParsed);
};

var normalizeParseOptions = function normalizeParseOptions(opts) {
    if (!opts) {
        return defaults;
    }

    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {
        throw new TypeError('Decoder has to be a function.');
    }

    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {
        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');
    }
    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;

    return {
        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,
        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,
        allowSparse: typeof opts.allowSparse === 'boolean' ? opts.allowSparse : defaults.allowSparse,
        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,
        charset: charset,
        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,
        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,
        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,
        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,
        // eslint-disable-next-line no-implicit-coercion, no-extra-parens
        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,
        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,
        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,
        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,
        parseArrays: opts.parseArrays !== false,
        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,
        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling
    };
};

module.exports = function (str, opts) {
    var options = normalizeParseOptions(opts);

    if (str === '' || str === null || typeof str === 'undefined') {
        return options.plainObjects ? Object.create(null) : {};
    }

    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;
    var obj = options.plainObjects ? Object.create(null) : {};

    // Iterate over the keys and setup the new object

    var keys = Object.keys(tempObj);
    for (var i = 0; i < keys.length; ++i) {
        var key = keys[i];
        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');
        obj = utils.merge(obj, newObj, options);
    }

    if (options.allowSparse === true) {
        return obj;
    }

    return utils.compact(obj);
};


/***/ }),
/* 587 */
/***/ (function(module, exports) {

function _isNativeFunction(fn) {
  return Function.toString.call(fn).indexOf("[native code]") !== -1;
}
module.exports = _isNativeFunction, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 588 */
/***/ (function(module, exports, __webpack_require__) {

var setPrototypeOf = __webpack_require__(177);
var isNativeReflectConstruct = __webpack_require__(589);
function _construct(Parent, args, Class) {
  if (isNativeReflectConstruct()) {
    module.exports = _construct = Reflect.construct.bind(), module.exports.__esModule = true, module.exports["default"] = module.exports;
  } else {
    module.exports = _construct = function _construct(Parent, args, Class) {
      var a = [null];
      a.push.apply(a, args);
      var Constructor = Function.bind.apply(Parent, a);
      var instance = new Constructor();
      if (Class) setPrototypeOf(instance, Class.prototype);
      return instance;
    }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
  return _construct.apply(null, arguments);
}
module.exports = _construct, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 589 */
/***/ (function(module, exports) {

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
module.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 590 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));

var _createClass2 = _interopRequireDefault(__webpack_require__(13));

var AppToken = /*#__PURE__*/function () {
  function AppToken(token) {
    (0, _classCallCheck2.default)(this, AppToken);
    this.token = token || '';
  }

  (0, _createClass2.default)(AppToken, [{
    key: "toAuthHeader",
    value: function toAuthHeader() {
      return 'Bearer ' + this.token;
    }
  }, {
    key: "toBasicAuth",
    value: function toBasicAuth() {
      return "user:".concat(this.token, "@");
    }
    /**
     * Get the app token string
     *
     * @see CozyStackClient.getAccessToken
     * @returns {string} token
     */

  }, {
    key: "getAccessToken",
    value: function getAccessToken() {
      return this.token;
    }
  }]);
  return AppToken;
}();

exports.default = AppToken;

/***/ }),
/* 591 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


let Mime = __webpack_require__(592);
module.exports = new Mime(__webpack_require__(593));


/***/ }),
/* 592 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * @param typeMap [Object] Map of MIME type -> Array[extensions]
 * @param ...
 */
function Mime() {
  this._types = Object.create(null);
  this._extensions = Object.create(null);

  for (let i = 0; i < arguments.length; i++) {
    this.define(arguments[i]);
  }

  this.define = this.define.bind(this);
  this.getType = this.getType.bind(this);
  this.getExtension = this.getExtension.bind(this);
}

/**
 * Define mimetype -> extension mappings.  Each key is a mime-type that maps
 * to an array of extensions associated with the type.  The first extension is
 * used as the default extension for the type.
 *
 * e.g. mime.define({'audio/ogg', ['oga', 'ogg', 'spx']});
 *
 * If a type declares an extension that has already been defined, an error will
 * be thrown.  To suppress this error and force the extension to be associated
 * with the new type, pass `force`=true.  Alternatively, you may prefix the
 * extension with "*" to map the type to extension, without mapping the
 * extension to the type.
 *
 * e.g. mime.define({'audio/wav', ['wav']}, {'audio/x-wav', ['*wav']});
 *
 *
 * @param map (Object) type definitions
 * @param force (Boolean) if true, force overriding of existing definitions
 */
Mime.prototype.define = function(typeMap, force) {
  for (let type in typeMap) {
    let extensions = typeMap[type].map(function(t) {
      return t.toLowerCase();
    });
    type = type.toLowerCase();

    for (let i = 0; i < extensions.length; i++) {
      const ext = extensions[i];

      // '*' prefix = not the preferred type for this extension.  So fixup the
      // extension, and skip it.
      if (ext[0] === '*') {
        continue;
      }

      if (!force && (ext in this._types)) {
        throw new Error(
          'Attempt to change mapping for "' + ext +
          '" extension from "' + this._types[ext] + '" to "' + type +
          '". Pass `force=true` to allow this, otherwise remove "' + ext +
          '" from the list of extensions for "' + type + '".'
        );
      }

      this._types[ext] = type;
    }

    // Use first extension as default
    if (force || !this._extensions[type]) {
      const ext = extensions[0];
      this._extensions[type] = (ext[0] !== '*') ? ext : ext.substr(1);
    }
  }
};

/**
 * Lookup a mime type based on extension
 */
Mime.prototype.getType = function(path) {
  path = String(path);
  let last = path.replace(/^.*[/\\]/, '').toLowerCase();
  let ext = last.replace(/^.*\./, '').toLowerCase();

  let hasPath = last.length < path.length;
  let hasDot = ext.length < last.length - 1;

  return (hasDot || !hasPath) && this._types[ext] || null;
};

/**
 * Return file extension associated with a mime type
 */
Mime.prototype.getExtension = function(type) {
  type = /^\s*([^;\s]*)/.test(type) && RegExp.$1;
  return type && this._extensions[type.toLowerCase()] || null;
};

module.exports = Mime;


/***/ }),
/* 593 */
/***/ (function(module, exports) {

module.exports = {"application/andrew-inset":["ez"],"application/applixware":["aw"],"application/atom+xml":["atom"],"application/atomcat+xml":["atomcat"],"application/atomdeleted+xml":["atomdeleted"],"application/atomsvc+xml":["atomsvc"],"application/atsc-dwd+xml":["dwd"],"application/atsc-held+xml":["held"],"application/atsc-rsat+xml":["rsat"],"application/bdoc":["bdoc"],"application/calendar+xml":["xcs"],"application/ccxml+xml":["ccxml"],"application/cdfx+xml":["cdfx"],"application/cdmi-capability":["cdmia"],"application/cdmi-container":["cdmic"],"application/cdmi-domain":["cdmid"],"application/cdmi-object":["cdmio"],"application/cdmi-queue":["cdmiq"],"application/cu-seeme":["cu"],"application/dash+xml":["mpd"],"application/davmount+xml":["davmount"],"application/docbook+xml":["dbk"],"application/dssc+der":["dssc"],"application/dssc+xml":["xdssc"],"application/ecmascript":["es","ecma"],"application/emma+xml":["emma"],"application/emotionml+xml":["emotionml"],"application/epub+zip":["epub"],"application/exi":["exi"],"application/express":["exp"],"application/fdt+xml":["fdt"],"application/font-tdpfr":["pfr"],"application/geo+json":["geojson"],"application/gml+xml":["gml"],"application/gpx+xml":["gpx"],"application/gxf":["gxf"],"application/gzip":["gz"],"application/hjson":["hjson"],"application/hyperstudio":["stk"],"application/inkml+xml":["ink","inkml"],"application/ipfix":["ipfix"],"application/its+xml":["its"],"application/java-archive":["jar","war","ear"],"application/java-serialized-object":["ser"],"application/java-vm":["class"],"application/javascript":["js","mjs"],"application/json":["json","map"],"application/json5":["json5"],"application/jsonml+json":["jsonml"],"application/ld+json":["jsonld"],"application/lgr+xml":["lgr"],"application/lost+xml":["lostxml"],"application/mac-binhex40":["hqx"],"application/mac-compactpro":["cpt"],"application/mads+xml":["mads"],"application/manifest+json":["webmanifest"],"application/marc":["mrc"],"application/marcxml+xml":["mrcx"],"application/mathematica":["ma","nb","mb"],"application/mathml+xml":["mathml"],"application/mbox":["mbox"],"application/mediaservercontrol+xml":["mscml"],"application/metalink+xml":["metalink"],"application/metalink4+xml":["meta4"],"application/mets+xml":["mets"],"application/mmt-aei+xml":["maei"],"application/mmt-usd+xml":["musd"],"application/mods+xml":["mods"],"application/mp21":["m21","mp21"],"application/mp4":["mp4s","m4p"],"application/msword":["doc","dot"],"application/mxf":["mxf"],"application/n-quads":["nq"],"application/n-triples":["nt"],"application/node":["cjs"],"application/octet-stream":["bin","dms","lrf","mar","so","dist","distz","pkg","bpk","dump","elc","deploy","exe","dll","deb","dmg","iso","img","msi","msp","msm","buffer"],"application/oda":["oda"],"application/oebps-package+xml":["opf"],"application/ogg":["ogx"],"application/omdoc+xml":["omdoc"],"application/onenote":["onetoc","onetoc2","onetmp","onepkg"],"application/oxps":["oxps"],"application/p2p-overlay+xml":["relo"],"application/patch-ops-error+xml":["xer"],"application/pdf":["pdf"],"application/pgp-encrypted":["pgp"],"application/pgp-signature":["asc","sig"],"application/pics-rules":["prf"],"application/pkcs10":["p10"],"application/pkcs7-mime":["p7m","p7c"],"application/pkcs7-signature":["p7s"],"application/pkcs8":["p8"],"application/pkix-attr-cert":["ac"],"application/pkix-cert":["cer"],"application/pkix-crl":["crl"],"application/pkix-pkipath":["pkipath"],"application/pkixcmp":["pki"],"application/pls+xml":["pls"],"application/postscript":["ai","eps","ps"],"application/provenance+xml":["provx"],"application/pskc+xml":["pskcxml"],"application/raml+yaml":["raml"],"application/rdf+xml":["rdf","owl"],"application/reginfo+xml":["rif"],"application/relax-ng-compact-syntax":["rnc"],"application/resource-lists+xml":["rl"],"application/resource-lists-diff+xml":["rld"],"application/rls-services+xml":["rs"],"application/route-apd+xml":["rapd"],"application/route-s-tsid+xml":["sls"],"application/route-usd+xml":["rusd"],"application/rpki-ghostbusters":["gbr"],"application/rpki-manifest":["mft"],"application/rpki-roa":["roa"],"application/rsd+xml":["rsd"],"application/rss+xml":["rss"],"application/rtf":["rtf"],"application/sbml+xml":["sbml"],"application/scvp-cv-request":["scq"],"application/scvp-cv-response":["scs"],"application/scvp-vp-request":["spq"],"application/scvp-vp-response":["spp"],"application/sdp":["sdp"],"application/senml+xml":["senmlx"],"application/sensml+xml":["sensmlx"],"application/set-payment-initiation":["setpay"],"application/set-registration-initiation":["setreg"],"application/shf+xml":["shf"],"application/sieve":["siv","sieve"],"application/smil+xml":["smi","smil"],"application/sparql-query":["rq"],"application/sparql-results+xml":["srx"],"application/srgs":["gram"],"application/srgs+xml":["grxml"],"application/sru+xml":["sru"],"application/ssdl+xml":["ssdl"],"application/ssml+xml":["ssml"],"application/swid+xml":["swidtag"],"application/tei+xml":["tei","teicorpus"],"application/thraud+xml":["tfi"],"application/timestamped-data":["tsd"],"application/toml":["toml"],"application/trig":["trig"],"application/ttml+xml":["ttml"],"application/ubjson":["ubj"],"application/urc-ressheet+xml":["rsheet"],"application/urc-targetdesc+xml":["td"],"application/voicexml+xml":["vxml"],"application/wasm":["wasm"],"application/widget":["wgt"],"application/winhlp":["hlp"],"application/wsdl+xml":["wsdl"],"application/wspolicy+xml":["wspolicy"],"application/xaml+xml":["xaml"],"application/xcap-att+xml":["xav"],"application/xcap-caps+xml":["xca"],"application/xcap-diff+xml":["xdf"],"application/xcap-el+xml":["xel"],"application/xcap-ns+xml":["xns"],"application/xenc+xml":["xenc"],"application/xhtml+xml":["xhtml","xht"],"application/xliff+xml":["xlf"],"application/xml":["xml","xsl","xsd","rng"],"application/xml-dtd":["dtd"],"application/xop+xml":["xop"],"application/xproc+xml":["xpl"],"application/xslt+xml":["*xsl","xslt"],"application/xspf+xml":["xspf"],"application/xv+xml":["mxml","xhvml","xvml","xvm"],"application/yang":["yang"],"application/yin+xml":["yin"],"application/zip":["zip"],"audio/3gpp":["*3gpp"],"audio/adpcm":["adp"],"audio/amr":["amr"],"audio/basic":["au","snd"],"audio/midi":["mid","midi","kar","rmi"],"audio/mobile-xmf":["mxmf"],"audio/mp3":["*mp3"],"audio/mp4":["m4a","mp4a"],"audio/mpeg":["mpga","mp2","mp2a","mp3","m2a","m3a"],"audio/ogg":["oga","ogg","spx","opus"],"audio/s3m":["s3m"],"audio/silk":["sil"],"audio/wav":["wav"],"audio/wave":["*wav"],"audio/webm":["weba"],"audio/xm":["xm"],"font/collection":["ttc"],"font/otf":["otf"],"font/ttf":["ttf"],"font/woff":["woff"],"font/woff2":["woff2"],"image/aces":["exr"],"image/apng":["apng"],"image/avif":["avif"],"image/bmp":["bmp"],"image/cgm":["cgm"],"image/dicom-rle":["drle"],"image/emf":["emf"],"image/fits":["fits"],"image/g3fax":["g3"],"image/gif":["gif"],"image/heic":["heic"],"image/heic-sequence":["heics"],"image/heif":["heif"],"image/heif-sequence":["heifs"],"image/hej2k":["hej2"],"image/hsj2":["hsj2"],"image/ief":["ief"],"image/jls":["jls"],"image/jp2":["jp2","jpg2"],"image/jpeg":["jpeg","jpg","jpe"],"image/jph":["jph"],"image/jphc":["jhc"],"image/jpm":["jpm"],"image/jpx":["jpx","jpf"],"image/jxr":["jxr"],"image/jxra":["jxra"],"image/jxrs":["jxrs"],"image/jxs":["jxs"],"image/jxsc":["jxsc"],"image/jxsi":["jxsi"],"image/jxss":["jxss"],"image/ktx":["ktx"],"image/ktx2":["ktx2"],"image/png":["png"],"image/sgi":["sgi"],"image/svg+xml":["svg","svgz"],"image/t38":["t38"],"image/tiff":["tif","tiff"],"image/tiff-fx":["tfx"],"image/webp":["webp"],"image/wmf":["wmf"],"message/disposition-notification":["disposition-notification"],"message/global":["u8msg"],"message/global-delivery-status":["u8dsn"],"message/global-disposition-notification":["u8mdn"],"message/global-headers":["u8hdr"],"message/rfc822":["eml","mime"],"model/3mf":["3mf"],"model/gltf+json":["gltf"],"model/gltf-binary":["glb"],"model/iges":["igs","iges"],"model/mesh":["msh","mesh","silo"],"model/mtl":["mtl"],"model/obj":["obj"],"model/step+xml":["stpx"],"model/step+zip":["stpz"],"model/step-xml+zip":["stpxz"],"model/stl":["stl"],"model/vrml":["wrl","vrml"],"model/x3d+binary":["*x3db","x3dbz"],"model/x3d+fastinfoset":["x3db"],"model/x3d+vrml":["*x3dv","x3dvz"],"model/x3d+xml":["x3d","x3dz"],"model/x3d-vrml":["x3dv"],"text/cache-manifest":["appcache","manifest"],"text/calendar":["ics","ifb"],"text/coffeescript":["coffee","litcoffee"],"text/css":["css"],"text/csv":["csv"],"text/html":["html","htm","shtml"],"text/jade":["jade"],"text/jsx":["jsx"],"text/less":["less"],"text/markdown":["markdown","md"],"text/mathml":["mml"],"text/mdx":["mdx"],"text/n3":["n3"],"text/plain":["txt","text","conf","def","list","log","in","ini"],"text/richtext":["rtx"],"text/rtf":["*rtf"],"text/sgml":["sgml","sgm"],"text/shex":["shex"],"text/slim":["slim","slm"],"text/spdx":["spdx"],"text/stylus":["stylus","styl"],"text/tab-separated-values":["tsv"],"text/troff":["t","tr","roff","man","me","ms"],"text/turtle":["ttl"],"text/uri-list":["uri","uris","urls"],"text/vcard":["vcard"],"text/vtt":["vtt"],"text/xml":["*xml"],"text/yaml":["yaml","yml"],"video/3gpp":["3gp","3gpp"],"video/3gpp2":["3g2"],"video/h261":["h261"],"video/h263":["h263"],"video/h264":["h264"],"video/iso.segment":["m4s"],"video/jpeg":["jpgv"],"video/jpm":["*jpm","jpgm"],"video/mj2":["mj2","mjp2"],"video/mp2t":["ts"],"video/mp4":["mp4","mp4v","mpg4"],"video/mpeg":["mpeg","mpg","mpe","m1v","m2v"],"video/ogg":["ogv"],"video/quicktime":["qt","mov"],"video/webm":["webm"]};

/***/ }),
/* 594 */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * The base implementation of `_.has` without support for deep paths.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {Array|string} key The key to check.
 * @returns {boolean} Returns `true` if `key` exists, else `false`.
 */
function baseHas(object, key) {
  return object != null && hasOwnProperty.call(object, key);
}

module.exports = baseHas;


/***/ }),
/* 595 */
/***/ (function(module, exports, __webpack_require__) {

var basePickBy = __webpack_require__(278),
    hasIn = __webpack_require__(248);

/**
 * The base implementation of `_.pick` without support for individual
 * property identifiers.
 *
 * @private
 * @param {Object} object The source object.
 * @param {string[]} paths The property paths to pick.
 * @returns {Object} Returns the new object.
 */
function basePick(object, paths) {
  return basePickBy(object, paths, function(value, path) {
    return hasIn(object, path);
  });
}

module.exports = basePick;


/***/ }),
/* 596 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireWildcard = __webpack_require__(22);

var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.KONNECTORS_DOCTYPE = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(6));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(7));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));

var _createClass2 = _interopRequireDefault(__webpack_require__(13));

var _inherits2 = _interopRequireDefault(__webpack_require__(18));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(19));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(16));

var _pick = _interopRequireDefault(__webpack_require__(157));

var _AppCollection2 = _interopRequireDefault(__webpack_require__(260));

var _TriggerCollection = _interopRequireWildcard(__webpack_require__(284));

var _DocumentCollection = __webpack_require__(26);

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var KONNECTORS_DOCTYPE = 'io.cozy.konnectors';
exports.KONNECTORS_DOCTYPE = KONNECTORS_DOCTYPE;

var KonnectorCollection = /*#__PURE__*/function (_AppCollection) {
  (0, _inherits2.default)(KonnectorCollection, _AppCollection);

  var _super = _createSuper(KonnectorCollection);

  function KonnectorCollection(stackClient) {
    var _this;

    (0, _classCallCheck2.default)(this, KonnectorCollection);
    _this = _super.call(this, stackClient);
    _this.doctype = KONNECTORS_DOCTYPE;
    _this.endpoint = '/konnectors/';
    return _this;
  }

  (0, _createClass2.default)(KonnectorCollection, [{
    key: "create",
    value: function () {
      var _create = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {
        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                throw new Error('create() method is not available for konnectors');

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      function create() {
        return _create.apply(this, arguments);
      }

      return create;
    }()
  }, {
    key: "destroy",
    value: function () {
      var _destroy = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2() {
        return _regenerator.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                throw new Error('destroy() method is not available for konnectors');

              case 1:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));

      function destroy() {
        return _destroy.apply(this, arguments);
      }

      return destroy;
    }()
    /**
     * Find triggers for a particular konnector
     *
     * @param  {string} slug of the konnector
     */

  }, {
    key: "findTriggersBySlug",
    value: function () {
      var _findTriggersBySlug = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3(slug) {
        var triggerCol, _yield$triggerCol$all, rawTriggers;

        return _regenerator.default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                triggerCol = new _TriggerCollection.default(this.stackClient);
                _context3.next = 3;
                return triggerCol.all({
                  limit: null
                });

              case 3:
                _yield$triggerCol$all = _context3.sent;
                rawTriggers = _yield$triggerCol$all.data;
                return _context3.abrupt("return", rawTriggers.map(function (x) {
                  return x.attributes;
                }).filter(function (triggerAttrs) {
                  return (0, _TriggerCollection.isForKonnector)(triggerAttrs, slug);
                }));

              case 6:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function findTriggersBySlug(_x) {
        return _findTriggersBySlug.apply(this, arguments);
      }

      return findTriggersBySlug;
    }()
    /**
     * Launch a trigger for a given konnector.
     *
     * @param  {string} slug - Konnector slug
     * @param  {object} options - Options
     * @param  {object} options.accountId - Pinpoint the account that should be used, useful if the user
     * has more than 1 account for 1 konnector
     */

  }, {
    key: "launch",
    value: function () {
      var _launch = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee4(slug) {
        var options,
            triggerCol,
            konnTriggers,
            filteredTriggers,
            filterAttrs,
            _args4 = arguments;
        return _regenerator.default.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                options = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : {};
                triggerCol = new _TriggerCollection.default(this.stackClient);
                _context4.next = 4;
                return this.findTriggersBySlug(slug);

              case 4:
                konnTriggers = _context4.sent;
                filteredTriggers = options.accountId ? konnTriggers.filter(function (triggerAttrs) {
                  return (0, _TriggerCollection.isForAccount)(triggerAttrs, options.accountId);
                }) : konnTriggers;

                if (!(filteredTriggers.length === 1)) {
                  _context4.next = 10;
                  break;
                }

                return _context4.abrupt("return", triggerCol.launch(konnTriggers[0]));

              case 10:
                filterAttrs = JSON.stringify((0, _pick.default)({
                  slug: slug,
                  accountId: options.accountId
                }));

                if (!(filteredTriggers.length === 0)) {
                  _context4.next = 15;
                  break;
                }

                throw new Error("No trigger found for ".concat(filterAttrs));

              case 15:
                if (!(filteredTriggers.length > 1)) {
                  _context4.next = 17;
                  break;
                }

                throw new Error("More than 1 trigger found for ".concat(filterAttrs));

              case 17:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function launch(_x2) {
        return _launch.apply(this, arguments);
      }

      return launch;
    }()
    /**
     * Updates a konnector
     *
     * @param  {string} slug - Konnector slug
     * @param  {object} options - Options
     * @param  {object} options.source - Specify the source (ex: registry://slug/stable)
     * @param  {boolean} options.sync - Wait for konnector to be updated, otherwise the job
     * is just scheduled
     */

  }, {
    key: "update",
    value: function () {
      var _update = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee5(slug) {
        var options,
            source,
            sync,
            reqOptions,
            rawKonnector,
            _args5 = arguments;
        return _regenerator.default.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                options = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : {};

                if (slug) {
                  _context5.next = 3;
                  break;
                }

                throw new Error('Cannot call update with no slug');

              case 3:
                source = options.source || null;
                sync = options.sync || false;
                reqOptions = sync ? {
                  headers: {
                    Accept: 'text/event-stream'
                  }
                } : {};
                _context5.next = 8;
                return this.stackClient.fetchJSON('PUT', "/konnectors/".concat(slug) + (source ? "?Source=".concat(source) : ''), reqOptions);

              case 8:
                rawKonnector = _context5.sent;
                return _context5.abrupt("return", (0, _DocumentCollection.normalizeDoc)(rawKonnector));

              case 10:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function update(_x3) {
        return _update.apply(this, arguments);
      }

      return update;
    }()
  }]);
  return KonnectorCollection;
}(_AppCollection2.default);

var _default = KonnectorCollection;
exports.default = _default;

/***/ }),
/* 597 */
/***/ (function(module, exports, __webpack_require__) {

var getPrototypeOf = __webpack_require__(16);
function _superPropBase(object, property) {
  while (!Object.prototype.hasOwnProperty.call(object, property)) {
    object = getPrototypeOf(object);
    if (object === null) break;
  }
  return object;
}
module.exports = _superPropBase, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 598 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireWildcard = __webpack_require__(22);

var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.getSharingRules = exports.BITWARDEN_CIPHERS_DOCTYPE = exports.BITWARDEN_ORGANIZATIONS_DOCTYPE = exports.SHARING_DOCTYPE = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(6));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(9));

var _taggedTemplateLiteral2 = _interopRequireDefault(__webpack_require__(45));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(7));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));

var _createClass2 = _interopRequireDefault(__webpack_require__(13));

var _inherits2 = _interopRequireDefault(__webpack_require__(18));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(19));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(16));

var _DocumentCollection2 = _interopRequireWildcard(__webpack_require__(26));

var _FileCollection = __webpack_require__(181);

var _utils = __webpack_require__(46);

var _logger = _interopRequireDefault(__webpack_require__(51));

function _templateObject7() {
  var data = (0, _taggedTemplateLiteral2.default)(["/sharings/", "/recipients"]);

  _templateObject7 = function _templateObject7() {
    return data;
  };

  return data;
}

function _templateObject6() {
  var data = (0, _taggedTemplateLiteral2.default)(["/sharings/", "/recipients/self"]);

  _templateObject6 = function _templateObject6() {
    return data;
  };

  return data;
}

function _templateObject5() {
  var data = (0, _taggedTemplateLiteral2.default)(["/sharings/", "/groups/", ""]);

  _templateObject5 = function _templateObject5() {
    return data;
  };

  return data;
}

function _templateObject4() {
  var data = (0, _taggedTemplateLiteral2.default)(["/sharings/", "/recipients/", ""]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = (0, _taggedTemplateLiteral2.default)(["/sharings/", "/recipients"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = (0, _taggedTemplateLiteral2.default)(["/sharings/", ""]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _templateObject() {
  var data = (0, _taggedTemplateLiteral2.default)(["/sharings/doctype/", ""]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var SHARING_DOCTYPE = 'io.cozy.sharings';
exports.SHARING_DOCTYPE = SHARING_DOCTYPE;
var BITWARDEN_ORGANIZATIONS_DOCTYPE = 'com.bitwarden.organizations';
exports.BITWARDEN_ORGANIZATIONS_DOCTYPE = BITWARDEN_ORGANIZATIONS_DOCTYPE;
var BITWARDEN_CIPHERS_DOCTYPE = 'com.bitwarden.ciphers';
exports.BITWARDEN_CIPHERS_DOCTYPE = BITWARDEN_CIPHERS_DOCTYPE;

var normalizeSharing = function normalizeSharing(sharing) {
  return (0, _DocumentCollection2.normalizeDoc)(sharing, SHARING_DOCTYPE);
};
/**
 * @typedef {object} Rule A sharing rule
 * @property {string} title
 * @property {string} doctype
 * @property {Array} values
 * @property {string=} add
 * @property {string=} update
 * @property {string=} remove
 */

/**
 * @typedef {object} Recipient An io.cozy.contact
 */

/**
 * @typedef {object} Sharing An io.cozy.sharings document
 */

/**
 * @typedef {object} SharingPolicy Define the add/update/remove policies for a sharing
 * @property {string} add
 * @property {string} update
 * @property {string} remove
 */

/**
 * @typedef {(undefined|'one-way'|'two-way')} SharingType Define how a document is synced between sharing's owner and receivers.
 */

/**
 * @typedef {object} RelationshipItem Define a recipient that can be used as target of a sharing
 * @property {string} id - Recipient's ID
 * @property {string} type - Reciptient's type (should be 'io.cozy.contacts')
 */

/**
 * Implements the `DocumentCollection` API along with specific methods for
 * `io.cozy.sharings`.
 */


var SharingCollection = /*#__PURE__*/function (_DocumentCollection) {
  (0, _inherits2.default)(SharingCollection, _DocumentCollection);

  var _super = _createSuper(SharingCollection);

  function SharingCollection() {
    (0, _classCallCheck2.default)(this, SharingCollection);
    return _super.apply(this, arguments);
  }

  (0, _createClass2.default)(SharingCollection, [{
    key: "findByDoctype",
    value: function () {
      var _findByDoctype = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(doctype) {
        var resp;
        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return this.stackClient.fetchJSON('GET', (0, _utils.uri)(_templateObject(), doctype));

              case 2:
                resp = _context.sent;
                return _context.abrupt("return", _objectSpread(_objectSpread({}, resp), {}, {
                  data: resp.data.map(normalizeSharing)
                }));

              case 4:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function findByDoctype(_x) {
        return _findByDoctype.apply(this, arguments);
      }

      return findByDoctype;
    }()
    /**
     * Fetches a sharing by id
     *
     * @param {string} id Sharing's id
     * @returns {Sharing} sharing
     */

  }, {
    key: "get",
    value: function () {
      var _get = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(id) {
        var path, resp;
        return _regenerator.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                path = (0, _utils.uri)(_templateObject2(), id);
                _context2.next = 3;
                return this.stackClient.fetchJSON('GET', path);

              case 3:
                resp = _context2.sent;
                return _context2.abrupt("return", {
                  data: normalizeSharing(resp.data)
                });

              case 5:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function get(_x2) {
        return _get.apply(this, arguments);
      }

      return get;
    }()
    /**
     *
     * Creates a new Sharing. See https://docs.cozy.io/en/cozy-stack/sharing/#post-sharings
     *
     * @param {object} params Sharing  params
     * @param {Sharing} params.document The document to share
     * @param {string} params.description Description of the sharing
     * @param {string=} params.previewPath The preview path
     * @param {Array<Rule>=} params.rules The rules defined to the sharing. See https://docs.cozy.io/en/cozy-stack/sharing-design/#description-of-a-sharing
     * @param {Array<Recipient>=} params.recipients Recipients to add to the sharings (will have the same permissions given by the rules defined by the sharing )
     * @param {Array<Recipient>=} params.readOnlyRecipients Recipients to add to the sharings with only read only access
     * @param {boolean=} params.openSharing If someone else than the owner can add a recipient to the sharing
     * @param {string=} params.appSlug Slug of the targeted app
     */

  }, {
    key: "create",
    value: function () {
      var _create = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3(_ref) {
        var document, description, previewPath, rules, _ref$recipients, recipients, _ref$readOnlyRecipien, readOnlyRecipients, openSharing, appSlug, attributes, optionalAttributes, resp;

        return _regenerator.default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                document = _ref.document, description = _ref.description, previewPath = _ref.previewPath, rules = _ref.rules, _ref$recipients = _ref.recipients, recipients = _ref$recipients === void 0 ? [] : _ref$recipients, _ref$readOnlyRecipien = _ref.readOnlyRecipients, readOnlyRecipients = _ref$readOnlyRecipien === void 0 ? [] : _ref$readOnlyRecipien, openSharing = _ref.openSharing, appSlug = _ref.appSlug;
                attributes = {
                  description: description,
                  preview_path: previewPath,
                  open_sharing: openSharing,
                  rules: rules ? rules : getSharingRules(document)
                };
                optionalAttributes = {};

                if (appSlug) {
                  optionalAttributes = {
                    app_slug: appSlug
                  };
                }

                _context3.next = 6;
                return this.stackClient.fetchJSON('POST', '/sharings/', {
                  data: {
                    type: 'io.cozy.sharings',
                    attributes: _objectSpread(_objectSpread({}, attributes), optionalAttributes),
                    relationships: _objectSpread(_objectSpread({}, recipients.length > 0 && {
                      recipients: {
                        data: recipients.map(toRelationshipItem)
                      }
                    }), readOnlyRecipients.length > 0 && {
                      read_only_recipients: {
                        data: readOnlyRecipients.map(toRelationshipItem)
                      }
                    })
                  }
                });

              case 6:
                resp = _context3.sent;
                return _context3.abrupt("return", {
                  data: normalizeSharing(resp.data)
                });

              case 8:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function create(_x3) {
        return _create.apply(this, arguments);
      }

      return create;
    }()
    /**
     * @deprecated Use create() instead
     * share - Creates a new sharing. See https://docs.cozy.io/en/cozy-stack/sharing/#post-sharings
     *
     * @param  {Sharing} document The document to share. Should have and _id and a name.
     * @param  {Array} recipients A list of io.cozy.contacts
     * @param  {string} sharingType - If "two-way", will set the open_sharing attribute to true
     * @param  {string} description - Describes the sharing
     * @param  {string=} previewPath Relative URL of the sharings preview page
     */

  }, {
    key: "share",
    value: function () {
      var _share = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee4(document, recipients, sharingType, description) {
        var previewPath,
            recipientsToUse,
            _args4 = arguments;
        return _regenerator.default.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                previewPath = _args4.length > 4 && _args4[4] !== undefined ? _args4[4] : null;

                _logger.default.warn('SharingCollection.share is deprecated, use SharingCollection.create instead');

                recipientsToUse = sharingType === 'two-way' ? {
                  recipients: recipients
                } : {
                  readOnlyRecipients: recipients
                };
                return _context4.abrupt("return", this.create(_objectSpread(_objectSpread({
                  document: document
                }, recipientsToUse), {}, {
                  description: description,
                  previewPath: previewPath,
                  openSharing: sharingType === 'two-way',
                  rules: getSharingRules(document, sharingType)
                })));

              case 4:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function share(_x4, _x5, _x6, _x7) {
        return _share.apply(this, arguments);
      }

      return share;
    }()
    /**
     * getDiscoveryLink - Returns the URL of the page that can be used to accept a sharing. See https://docs.cozy.io/en/cozy-stack/sharing/#get-sharingssharing-iddiscovery
     *
     * @param  {string} sharingId - Id of the sharing
     * @param  {string} sharecode - Code of the sharing
     * @returns {string}
     */

  }, {
    key: "getDiscoveryLink",
    value: function getDiscoveryLink(sharingId, sharecode) {
      return this.stackClient.fullpath("/sharings/".concat(sharingId, "/discovery?sharecode=").concat(sharecode));
    }
    /**
     * Add an array of contacts to the Sharing
     *
     * @param {object} options Object
     * @param {Sharing} options.document Sharing Object
     * @param {Array<Recipient>=} options.recipients Recipients to add to the sharing
     * @param {Array<Recipient>=} options.readOnlyRecipients Recipients to add to the sharings with only read only access
     */

  }, {
    key: "addRecipients",
    value: function () {
      var _addRecipients = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee5(_ref2) {
        var document, _ref2$recipients, recipients, _ref2$readOnlyRecipie, readOnlyRecipients, resp;

        return _regenerator.default.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                document = _ref2.document, _ref2$recipients = _ref2.recipients, recipients = _ref2$recipients === void 0 ? [] : _ref2$recipients, _ref2$readOnlyRecipie = _ref2.readOnlyRecipients, readOnlyRecipients = _ref2$readOnlyRecipie === void 0 ? [] : _ref2$readOnlyRecipie;
                _context5.next = 3;
                return this.stackClient.fetchJSON('POST', (0, _utils.uri)(_templateObject3(), document._id), {
                  data: {
                    type: 'io.cozy.sharings',
                    id: document._id,
                    relationships: _objectSpread(_objectSpread({}, recipients.length > 0 && {
                      recipients: {
                        data: recipients.map(toRelationshipItem)
                      }
                    }), readOnlyRecipients.length > 0 && {
                      read_only_recipients: {
                        data: readOnlyRecipients.map(toRelationshipItem)
                      }
                    })
                  }
                });

              case 3:
                resp = _context5.sent;
                return _context5.abrupt("return", {
                  data: normalizeSharing(resp.data)
                });

              case 5:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function addRecipients(_x8) {
        return _addRecipients.apply(this, arguments);
      }

      return addRecipients;
    }()
    /**
     * Revoke only one recipient of the sharing.
     *
     * @param {Sharing} sharing Sharing Object
     * @param {number} recipientIndex Index of this recipient in the members array of the sharing
     */

  }, {
    key: "revokeRecipient",
    value: function revokeRecipient(sharing, recipientIndex) {
      return this.stackClient.fetchJSON('DELETE', (0, _utils.uri)(_templateObject4(), sharing._id, recipientIndex));
    }
    /**
     * Revoke only one group of the sharing.
     *
     * @param {Sharing} sharing Sharing Object
     * @param {number} groupIndex Index of this group in the groups array of the sharing
     */

  }, {
    key: "revokeGroup",
    value: function revokeGroup(sharing, groupIndex) {
      return this.stackClient.fetchJSON('DELETE', (0, _utils.uri)(_templateObject5(), sharing._id, groupIndex));
    }
    /**
     * Remove self from the sharing.
     *
     * @param {Sharing} sharing Sharing Object
     */

  }, {
    key: "revokeSelf",
    value: function revokeSelf(sharing) {
      return this.stackClient.fetchJSON('DELETE', (0, _utils.uri)(_templateObject6(), sharing._id));
    }
    /**
     * Revoke the sharing for all the members. Must be called
     * from the owner's cozy
     *
     * @param {Sharing} sharing Sharing Objects
     */

  }, {
    key: "revokeAllRecipients",
    value: function revokeAllRecipients(sharing) {
      return this.stackClient.fetchJSON('DELETE', (0, _utils.uri)(_templateObject7(), sharing._id));
    }
  }]);
  return SharingCollection;
}(_DocumentCollection2.default);

SharingCollection.normalizeDoctype = _DocumentCollection2.default.normalizeDoctypeJsonApi;

var getSharingRulesWithoutWarning = function getSharingRulesWithoutWarning(document, sharingType) {
  if ((0, _FileCollection.isFile)(document)) {
    return getSharingRulesForFile(document, sharingType);
  }

  if (document._type === BITWARDEN_ORGANIZATIONS_DOCTYPE) {
    return getSharingRulesForOrganizations(document);
  }

  return getSharingRulesForPhotosAlbum(document, sharingType);
};
/**
 * Rules determine the behavior of the sharing when changes are made to the shared document
 * See https://docs.cozy.io/en/cozy-stack/sharing-design/#description-of-a-sharing
 *
 * @param {Sharing} document - The document to share. Should have and _id and a name
 * @param  {SharingType} sharingType - The type of the sharing
 *
 * @returns {Array<Rule>=} The rules that define how to share the document
 */


var getSharingRules = function getSharingRules(document, sharingType) {
  if (sharingType) {
    _logger.default.warn("sharingType is deprecated and will be removed. We now set this default rules: ".concat(getSharingRulesWithoutWarning(document), "} \n      \n      If this default rules do not fill your need, please set custom rules \n      by using the 'rules' object of the SharingCollection.create() method"));
  }

  return getSharingRulesWithoutWarning(document, sharingType);
};
/**
 * Compute the rules that define how to share a Photo Album. See https://docs.cozy.io/en/cozy-stack/sharing-design/#description-of-a-sharing
 *
 * @param {Sharing} document - The document to share. Should have and _id and a name
 * @param  {SharingType} sharingType - The type of the sharing
 *
 * @returns {Array<Rule>=} The rules that define how to share a Photo Album
 */


exports.getSharingRules = getSharingRules;

var getSharingRulesForPhotosAlbum = function getSharingRulesForPhotosAlbum(document, sharingType) {
  var _id = document._id,
      _type = document._type;
  return [_objectSpread({
    title: 'collection',
    doctype: _type,
    values: [_id]
  }, getSharingPolicyForAlbum(sharingType)), _objectSpread({
    title: 'items',
    doctype: 'io.cozy.files',
    values: ["".concat(_type, "/").concat(_id)],
    selector: 'referenced_by'
  }, getSharingPolicyForReferencedFiles(sharingType))];
};
/**
 * Compute the sharing policy for a ReferencedFile based on its sharing type
 *
 * @param  {SharingType} sharingType - The type of the sharing
 *
 * @returns {SharingPolicy} The sharing policy for the ReferencedFile
 */


var getSharingPolicyForReferencedFiles = function getSharingPolicyForReferencedFiles(sharingType) {
  return sharingType === 'two-way' ? {
    add: 'sync',
    update: 'sync',
    remove: 'sync'
  } : {
    add: 'push',
    update: 'none',
    remove: 'push'
  };
};
/**
 * Compute the sharing policy for an Album based on its sharing type
 *
 * @param  {SharingType} sharingType - The type of the sharing
 *
 * @returns {Array<Rule>=} The sharing policy for the Album
 */


var getSharingPolicyForAlbum = function getSharingPolicyForAlbum(sharingType) {
  if (!sharingType) return {
    update: 'sync',
    remove: 'revoke'
  };
  return sharingType === 'two-way' ? {
    update: 'sync',
    remove: 'revoke'
  } : {
    update: 'push',
    remove: 'revoke'
  };
};
/**
 * Compute the rules that define how to share a File. See https://docs.cozy.io/en/cozy-stack/sharing-design/#description-of-a-sharing
 *
 * @param {Sharing} document - The document to share. Should have and _id and a name
 * @param  {SharingType} sharingType - The type of the sharing
 *
 * @returns {Array<Rule>=} The rules that define how to share a File
 */


var getSharingRulesForFile = function getSharingRulesForFile(document, sharingType) {
  var _id = document._id,
      name = document.name;
  return [_objectSpread({
    title: name,
    doctype: 'io.cozy.files',
    values: [_id]
  }, getSharingPolicyForFile(document, sharingType))];
};
/**
 * Compute the sharing policy for a File based on its sharing type
 *
 * @param {Sharing} document - The document to share. Should have and _id and a name
 * @param {SharingType} sharingType - The type of the sharing
 *
 * @returns {SharingPolicy} The sharing policy for the File
 */


var getSharingPolicyForFile = function getSharingPolicyForFile(document, sharingType) {
  if ((0, _FileCollection.isDirectory)(document)) {
    if (!sharingType) return {
      add: 'sync',
      update: 'sync',
      remove: 'sync'
    };
    return sharingType === 'two-way' ? {
      add: 'sync',
      update: 'sync',
      remove: 'sync'
    } : {
      add: 'push',
      update: 'push',
      remove: 'push'
    };
  }

  if (!sharingType) return {
    update: 'sync',
    remove: 'revoke'
  };
  return sharingType === 'two-way' ? {
    update: 'sync',
    remove: 'revoke'
  } : {
    update: 'push',
    remove: 'revoke'
  };
};
/**
 * Compute the rules that define how to share an Organization. See https://docs.cozy.io/en/cozy-stack/sharing-design/#description-of-a-sharing
 *
 * @param {Sharing} document The document to share. Should have and _id and a name
 *
 * @returns {Array<Rule>=} The rules that define how to share an Organization
 */


var getSharingRulesForOrganizations = function getSharingRulesForOrganizations(document) {
  var _id = document._id,
      name = document.name;
  var sharingRules = [{
    title: name,
    doctype: BITWARDEN_ORGANIZATIONS_DOCTYPE,
    values: [_id],
    add: 'sync',
    update: 'sync',
    remove: 'revoke'
  }, {
    title: 'Ciphers',
    doctype: BITWARDEN_CIPHERS_DOCTYPE,
    values: [_id],
    add: 'sync',
    update: 'sync',
    remove: 'sync',
    selector: 'organization_id'
  }];
  return sharingRules;
};
/**
 * Compute the RelationshipItem that can be referenced as a sharing recipient
 *
 * @param {Recipient} item The recipient of a sharing
 *
 * @returns {RelationshipItem} The RelationshipItem that can be referenced as a sharing recipient
 */


var toRelationshipItem = function toRelationshipItem(item) {
  return {
    id: item._id,
    type: item._type
  };
};

var _default = SharingCollection;
exports.default = _default;

/***/ }),
/* 599 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireWildcard = __webpack_require__(22);

var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.getPermissionsFor = void 0;

var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(41));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(9));

var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(50));

var _regenerator = _interopRequireDefault(__webpack_require__(6));

var _taggedTemplateLiteral2 = _interopRequireDefault(__webpack_require__(45));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(7));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));

var _createClass2 = _interopRequireDefault(__webpack_require__(13));

var _inherits2 = _interopRequireDefault(__webpack_require__(18));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(19));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(16));

var _DocumentCollection2 = _interopRequireWildcard(__webpack_require__(26));

var _FileCollection = __webpack_require__(181);

var _utils = __webpack_require__(46);

var _logger = _interopRequireDefault(__webpack_require__(51));

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _templateObject3() {
  var data = (0, _taggedTemplateLiteral2.default)(["/permissions/doctype/", "/shared-by-link"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = (0, _taggedTemplateLiteral2.default)(["/permissions/", ""]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = (0, _taggedTemplateLiteral2.default)(["/permissions/", ""]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var normalizePermission = function normalizePermission(perm) {
  return (0, _DocumentCollection2.normalizeDoc)(perm, 'io.cozy.permissions');
};
/**
 * Implements `DocumentCollection` API along with specific methods for `io.cozy.permissions`.
 */


var PermissionCollection = /*#__PURE__*/function (_DocumentCollection) {
  (0, _inherits2.default)(PermissionCollection, _DocumentCollection);

  var _super = _createSuper(PermissionCollection);

  function PermissionCollection() {
    (0, _classCallCheck2.default)(this, PermissionCollection);
    return _super.apply(this, arguments);
  }

  (0, _createClass2.default)(PermissionCollection, [{
    key: "get",
    value: function () {
      var _get = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(id) {
        var resp;
        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return this.stackClient.fetchJSON('GET', (0, _utils.uri)(_templateObject(), id));

              case 2:
                resp = _context.sent;
                return _context.abrupt("return", {
                  data: normalizePermission(resp.data)
                });

              case 4:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function get(_x) {
        return _get.apply(this, arguments);
      }

      return get;
    }()
    /**
     * Create a new set of permissions
     * It can also associates one or more codes to it, via the codes parameter
     *
     * @param {object} permission - permission to create
     * @param {string} permission.codes A comma separed list of values (defaulted to code)
     * @param {string} permission.ttl Make the codes expire after a delay (bigduration format)
     * @param {boolean} permission.tiny If set to true then the generated shortcode will be 6 digits
     * Cozy-Stack has a few conditions to be able to use this tiny shortcode ATM you have to specifiy
     * a ttl < 1h, but it can change.
     * see https://docs.cozy.io/en/cozy-stack/permissions/#post-permissions for exact informations
     *
     * bigduration format: https://github.com/justincampbell/bigduration/blob/master/README.md
     * @see https://docs.cozy.io/en/cozy-stack/permissions/#post-permissions
     *
     */

  }, {
    key: "create",
    value: function () {
      var _create = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(_ref) {
        var _id, _type, _ref$codes, codes, ttl, tiny, attributes, searchParams, resp;

        return _regenerator.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _id = _ref._id, _type = _ref._type, _ref$codes = _ref.codes, codes = _ref$codes === void 0 ? 'code' : _ref$codes, ttl = _ref.ttl, tiny = _ref.tiny, attributes = (0, _objectWithoutProperties2.default)(_ref, ["_id", "_type", "codes", "ttl", "tiny"]);
                searchParams = new URLSearchParams();
                searchParams.append('codes', codes);
                if (ttl) searchParams.append('ttl', ttl);
                if (tiny) searchParams.append('tiny', true);
                _context2.next = 7;
                return this.stackClient.fetchJSON('POST', "/permissions?".concat(searchParams), {
                  data: {
                    type: 'io.cozy.permissions',
                    attributes: attributes
                  }
                });

              case 7:
                resp = _context2.sent;
                return _context2.abrupt("return", {
                  data: normalizePermission(resp.data)
                });

              case 9:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function create(_x2) {
        return _create.apply(this, arguments);
      }

      return create;
    }()
    /**
     * Adds a permission to the given document. Document type must be
     * `io.cozy.apps`, `io.cozy.konnectors` or `io.cozy.permissions`
     *
     * @param  {object}  document - Document which receives the permission
     * @param  {object}  permission - Describes the permission
     * @returns {Promise}
     *
     * @example
     * ```
     * const permissions = await client
     *   .collection('io.cozy.permissions')
     *   .add(konnector, {
     *     folder: {
     *       type: 'io.cozy.files',
     *       verbs: ['GET', 'PUT'],
     *       values: [`io.cozy.files.bc57b60eb2954537b0dcdc6ebd8e9d23`]
     *     }
     *  })
     * ```
     */

  }, {
    key: "add",
    value: function () {
      var _add = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3(document, permission) {
        var endpoint, resp;
        return _regenerator.default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.t0 = document._type;
                _context3.next = _context3.t0 === 'io.cozy.apps' ? 3 : _context3.t0 === 'io.cozy.konnectors' ? 5 : _context3.t0 === 'io.cozy.permissions' ? 7 : 9;
                break;

              case 3:
                endpoint = "/permissions/apps/".concat(document.slug);
                return _context3.abrupt("break", 10);

              case 5:
                endpoint = "/permissions/konnectors/".concat(document.slug);
                return _context3.abrupt("break", 10);

              case 7:
                endpoint = "/permissions/".concat(document._id);
                return _context3.abrupt("break", 10);

              case 9:
                throw new Error('Permissions can only be added on existing permissions, apps and konnectors.');

              case 10:
                _context3.next = 12;
                return this.stackClient.fetchJSON('PATCH', endpoint, {
                  data: {
                    type: 'io.cozy.permissions',
                    attributes: {
                      permissions: permission
                    }
                  }
                });

              case 12:
                resp = _context3.sent;
                return _context3.abrupt("return", {
                  data: normalizePermission(resp.data)
                });

              case 14:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function add(_x3, _x4) {
        return _add.apply(this, arguments);
      }

      return add;
    }()
  }, {
    key: "destroy",
    value: function destroy(permission) {
      return this.stackClient.fetchJSON('DELETE', (0, _utils.uri)(_templateObject2(), permission.id));
    }
  }, {
    key: "findLinksByDoctype",
    value: function () {
      var _findLinksByDoctype = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee4(doctype) {
        var resp;
        return _regenerator.default.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _context4.next = 2;
                return this.stackClient.fetchJSON('GET', (0, _utils.uri)(_templateObject3(), doctype));

              case 2:
                resp = _context4.sent;
                return _context4.abrupt("return", _objectSpread(_objectSpread({}, resp), {}, {
                  data: resp.data.map(normalizePermission)
                }));

              case 4:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function findLinksByDoctype(_x5) {
        return _findLinksByDoctype.apply(this, arguments);
      }

      return findLinksByDoctype;
    }()
    /**
     *
     * @deprecated
     */

  }, {
    key: "findApps",
    value: function () {
      var _findApps = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee5() {
        var resp;
        return _regenerator.default.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                _logger.default.warn("PermissionCollection.findApps will be removed in next version of cozy-client. \n\n      You can use AppCollection.all() instead \n\n      or even better client.query(Q('io.cozy.apps'), {as: 'io.cozy.apps'})");

                _context5.next = 3;
                return this.stackClient.fetchJSON('GET', '/apps/');

              case 3:
                resp = _context5.sent;
                return _context5.abrupt("return", _objectSpread(_objectSpread({}, resp), {}, {
                  data: resp.data.map(function (a) {
                    return _objectSpread({
                      _id: a.id
                    }, a);
                  })
                }));

              case 5:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function findApps() {
        return _findApps.apply(this, arguments);
      }

      return findApps;
    }()
    /**
     * Create a share link
     *
     * @param {{_id, _type}} document - cozy document
     * @param {object} options - options
     * @param {string[]} options.verbs - explicit permissions to use
     */

  }, {
    key: "createSharingLink",
    value: function () {
      var _createSharingLink = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee6(document) {
        var options,
            verbs,
            resp,
            _args6 = arguments;
        return _regenerator.default.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                options = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : {};
                verbs = options.verbs;
                _context6.next = 4;
                return this.stackClient.fetchJSON('POST', "/permissions?codes=email", {
                  data: {
                    type: 'io.cozy.permissions',
                    attributes: {
                      permissions: getPermissionsFor(document, true, verbs ? {
                        verbs: verbs
                      } : {})
                    }
                  }
                });

              case 4:
                resp = _context6.sent;
                return _context6.abrupt("return", {
                  data: normalizePermission(resp.data)
                });

              case 6:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));

      function createSharingLink(_x6) {
        return _createSharingLink.apply(this, arguments);
      }

      return createSharingLink;
    }()
    /**
     * Follow the next link to fetch the next permissions
     *
     * @param {object} permissions JSON-API based permissions document
     */

  }, {
    key: "fetchPermissionsByLink",
    value: function () {
      var _fetchPermissionsByLink = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee7(permissions) {
        var resp;
        return _regenerator.default.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                if (!(permissions.links && permissions.links.next)) {
                  _context7.next = 5;
                  break;
                }

                _context7.next = 3;
                return this.stackClient.fetchJSON('GET', permissions.links.next);

              case 3:
                resp = _context7.sent;
                return _context7.abrupt("return", _objectSpread(_objectSpread({}, resp), {}, {
                  data: resp.data.map(normalizePermission)
                }));

              case 5:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7, this);
      }));

      function fetchPermissionsByLink(_x7) {
        return _fetchPermissionsByLink.apply(this, arguments);
      }

      return fetchPermissionsByLink;
    }()
    /**
     *
     * @param {object} document Cozy doc
     * @returns {object} with all the permissions
     */

  }, {
    key: "fetchAllLinks",
    value: function () {
      var _fetchAllLinks = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee8(document) {
        var allLinks, resp, _allLinks$data;

        return _regenerator.default.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                _context8.next = 2;
                return this.findLinksByDoctype(document._type);

              case 2:
                allLinks = _context8.sent;
                resp = allLinks;

              case 4:
                if (!(resp.links && resp.links.next)) {
                  _context8.next = 11;
                  break;
                }

                _context8.next = 7;
                return this.fetchPermissionsByLink(resp);

              case 7:
                resp = _context8.sent;

                (_allLinks$data = allLinks.data).push.apply(_allLinks$data, (0, _toConsumableArray2.default)(resp.data));

                _context8.next = 4;
                break;

              case 11:
                return _context8.abrupt("return", allLinks);

              case 12:
              case "end":
                return _context8.stop();
            }
          }
        }, _callee8, this);
      }));

      function fetchAllLinks(_x8) {
        return _fetchAllLinks.apply(this, arguments);
      }

      return fetchAllLinks;
    }()
    /**
     * Destroy a sharing link and the related permissions
     *
     * @param {object} document - document to revoke sharing link
     */

  }, {
    key: "revokeSharingLink",
    value: function () {
      var _revokeSharingLink = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee9(document) {
        var allLinks, links, _iterator, _step, perm;

        return _regenerator.default.wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                _context9.next = 2;
                return this.fetchAllLinks(document);

              case 2:
                allLinks = _context9.sent;
                links = allLinks.data.filter(function (perm) {
                  return isPermissionRelatedTo(perm, document);
                });
                _iterator = _createForOfIteratorHelper(links);
                _context9.prev = 5;

                _iterator.s();

              case 7:
                if ((_step = _iterator.n()).done) {
                  _context9.next = 13;
                  break;
                }

                perm = _step.value;
                _context9.next = 11;
                return this.destroy(perm);

              case 11:
                _context9.next = 7;
                break;

              case 13:
                _context9.next = 18;
                break;

              case 15:
                _context9.prev = 15;
                _context9.t0 = _context9["catch"](5);

                _iterator.e(_context9.t0);

              case 18:
                _context9.prev = 18;

                _iterator.f();

                return _context9.finish(18);

              case 21:
              case "end":
                return _context9.stop();
            }
          }
        }, _callee9, this, [[5, 15, 18, 21]]);
      }));

      function revokeSharingLink(_x9) {
        return _revokeSharingLink.apply(this, arguments);
      }

      return revokeSharingLink;
    }()
    /**
     * async getOwnPermissions - deprecated: please use fetchOwnPermissions instead
     *
     * @typedef {object} Permission
     *
     * @returns {Permission} permission
     */

  }, {
    key: "getOwnPermissions",
    value: function () {
      var _getOwnPermissions = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee10() {
        return _regenerator.default.wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                _logger.default.warn('getOwnPermissions is deprecated, please use fetchOwnPermissions instead');

                return _context10.abrupt("return", this.fetchOwnPermissions());

              case 2:
              case "end":
                return _context10.stop();
            }
          }
        }, _callee10, this);
      }));

      function getOwnPermissions() {
        return _getOwnPermissions.apply(this, arguments);
      }

      return getOwnPermissions;
    }()
    /**
     * async fetchOwnPermissions - Fetches permissions
     *
     * @typedef {object} Permission
     *
     * @returns {Permission} permission
     */

  }, {
    key: "fetchOwnPermissions",
    value: function () {
      var _fetchOwnPermissions = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee11() {
        var resp;
        return _regenerator.default.wrap(function _callee11$(_context11) {
          while (1) {
            switch (_context11.prev = _context11.next) {
              case 0:
                _context11.next = 2;
                return this.stackClient.fetchJSON('GET', '/permissions/self');

              case 2:
                resp = _context11.sent;
                return _context11.abrupt("return", {
                  data: normalizePermission(resp.data),
                  included: resp.included ? resp.included.map(normalizePermission) : []
                });

              case 4:
              case "end":
                return _context11.stop();
            }
          }
        }, _callee11, this);
      }));

      function fetchOwnPermissions() {
        return _fetchOwnPermissions.apply(this, arguments);
      }

      return fetchOwnPermissions;
    }()
  }]);
  return PermissionCollection;
}(_DocumentCollection2.default);
/**
 * Build a permission set
 *
 * @param {{_id, _type}} document - cozy document
 * @param {boolean} publicLink - are the permissions for a public link ?
 * @param {object} options - options
 * @param {string[]} options.verbs - explicit permissions to use
 * @returns {object} permissions object that can be sent through /permissions/*
 */


var getPermissionsFor = function getPermissionsFor(document) {
  var publicLink = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var _id = document._id,
      _type = document._type;
  var verbs = options.verbs ? options.verbs : publicLink ? ['GET'] : ['ALL']; // TODO: this works for albums, but it needs to be generalized and integrated
  // with cozy-client ; some sort of doctype "schema" will be needed here

  return (0, _FileCollection.isFile)(document) ? {
    files: {
      type: 'io.cozy.files',
      verbs: verbs,
      values: [_id]
    }
  } : {
    collection: {
      type: _type,
      verbs: verbs,
      values: [_id]
    },
    files: {
      type: 'io.cozy.files',
      verbs: verbs,
      values: ["".concat(_type, "/").concat(_id)],
      selector: 'referenced_by'
    }
  };
};

exports.getPermissionsFor = getPermissionsFor;
PermissionCollection.normalizeDoctype = _DocumentCollection2.default.normalizeDoctypeJsonApi;

var isPermissionRelatedTo = function isPermissionRelatedTo(perm, document) {
  var _id = document._id;
  return (0, _FileCollection.isFile)(document) ? perm.attributes.permissions.files.values.indexOf(_id) !== -1 : perm.attributes.permissions.collection.values.indexOf(_id) !== -1;
};

var _default = PermissionCollection;
exports.default = _default;

/***/ }),
/* 600 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireWildcard = __webpack_require__(22);

var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.normalizeSettings = exports.SETTINGS_DOCTYPE = void 0;

var _taggedTemplateLiteral2 = _interopRequireDefault(__webpack_require__(45));

var _regenerator = _interopRequireDefault(__webpack_require__(6));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(7));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));

var _createClass2 = _interopRequireDefault(__webpack_require__(13));

var _inherits2 = _interopRequireDefault(__webpack_require__(18));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(19));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(16));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(9));

var _DocumentCollection2 = _interopRequireWildcard(__webpack_require__(26));

var _logger = _interopRequireDefault(__webpack_require__(51));

var _utils = __webpack_require__(46);

function _templateObject() {
  var data = (0, _taggedTemplateLiteral2.default)(["/data/", "/", ""]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var SETTINGS_DOCTYPE = 'io.cozy.settings';
/**
 * Normalizing a document for SettingsCollection context
 *
 * @param {object} doc - Document to normalize
 * @returns {object} normalized document
 */

exports.SETTINGS_DOCTYPE = SETTINGS_DOCTYPE;

var normalizeSettings = function normalizeSettings(doc) {
  var normDoc = (0, _DocumentCollection2.normalizeDoc)(doc, SETTINGS_DOCTYPE);
  return _objectSpread(_objectSpread({}, normDoc), normDoc.attributes);
};
/**
 * Implements `DocumentCollection` API to interact with the /settings endpoint of the stack
 */


exports.normalizeSettings = normalizeSettings;

var SettingsCollection = /*#__PURE__*/function (_DocumentCollection) {
  (0, _inherits2.default)(SettingsCollection, _DocumentCollection);

  var _super = _createSuper(SettingsCollection);

  function SettingsCollection(stackClient) {
    (0, _classCallCheck2.default)(this, SettingsCollection);
    return _super.call(this, SETTINGS_DOCTYPE, stackClient);
  }
  /**
   * async get - Calls a route on the /settings API
   *
   * @param  {string} id The setting id to call, eg `io.cozy.settings.instance` for `instance` route or `io.cozy.settings.context` for `context`route
   * @returns {object} The response from the route
   */


  (0, _createClass2.default)(SettingsCollection, [{
    key: "get",
    value: function () {
      var _get = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(id) {
        var _resp, path, resp;

        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (!(id === 'io.cozy.settings.bitwarden')) {
                  _context.next = 5;
                  break;
                }

                _context.next = 3;
                return this.stackClient.fetchJSON('GET', '/data/io.cozy.settings/io.cozy.settings.bitwarden');

              case 3:
                _resp = _context.sent;
                return _context.abrupt("return", {
                  data: _DocumentCollection2.default.normalizeDoctypeJsonApi(SETTINGS_DOCTYPE)(_resp, _resp)
                });

              case 5:
                if (id.startsWith('io.cozy.settings.')) {
                  path = id.substring(17);
                } else {
                  _logger.default.warn("Deprecated: in next versions of cozy-client, it will not be possible to query settings with an incomplete id\n\n- Q('io.cozy.settings').getById('instance')\n+ Q('io.cozy.settings').getById('io.cozy.settings.instance')");

                  path = id;
                }

                _context.next = 8;
                return this.stackClient.fetchJSON('GET', "/settings/".concat(path));

              case 8:
                resp = _context.sent;
                return _context.abrupt("return", {
                  data: normalizeSettings(_objectSpread({
                    id: "/settings/".concat(path)
                  }, resp.data))
                });

              case 10:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function get(_x) {
        return _get.apply(this, arguments);
      }

      return get;
    }()
    /**
     * Updates a settings document
     *
     * @param {object} document - Document to update. Do not forget the _id attribute
     */

  }, {
    key: "update",
    value: function () {
      var _update = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(document) {
        var resp;
        return _regenerator.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                if (!(document._id === 'io.cozy.settings.instance')) {
                  _context2.next = 6;
                  break;
                }

                _context2.next = 3;
                return this.stackClient.fetchJSON('PUT', '/settings/instance', {
                  data: document
                });

              case 3:
                resp = _context2.sent;
                _context2.next = 9;
                break;

              case 6:
                _context2.next = 8;
                return this.stackClient.fetchJSON('PUT', (0, _utils.uri)(_templateObject(), this.doctype, document._id), document);

              case 8:
                resp = _context2.sent;

              case 9:
                return _context2.abrupt("return", {
                  data: normalizeSettings(resp.data)
                });

              case 10:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function update(_x2) {
        return _update.apply(this, arguments);
      }

      return update;
    }()
  }]);
  return SettingsCollection;
}(_DocumentCollection2.default);

SettingsCollection.normalizeDoctype = _DocumentCollection2.default.normalizeDoctypeJsonApi;
var _default = SettingsCollection;
exports.default = _default;

/***/ }),
/* 601 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.NOTES_URL_DOCTYPE = exports.NOTES_DOCTYPE = void 0;

var _taggedTemplateLiteral2 = _interopRequireDefault(__webpack_require__(45));

var _regenerator = _interopRequireDefault(__webpack_require__(6));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(7));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));

var _createClass2 = _interopRequireDefault(__webpack_require__(13));

var _inherits2 = _interopRequireDefault(__webpack_require__(18));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(19));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(16));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(9));

var _DocumentCollection2 = _interopRequireDefault(__webpack_require__(26));

var _utils = __webpack_require__(46);

var _NotesSchema = __webpack_require__(602);

function _templateObject2() {
  var data = (0, _taggedTemplateLiteral2.default)(["/notes/", "/open"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = (0, _taggedTemplateLiteral2.default)(["/files/", ""]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var NOTES_DOCTYPE = 'io.cozy.notes';
exports.NOTES_DOCTYPE = NOTES_DOCTYPE;
var NOTES_URL_DOCTYPE = 'io.cozy.notes.url';
exports.NOTES_URL_DOCTYPE = NOTES_URL_DOCTYPE;

var normalizeDoc = _DocumentCollection2.default.normalizeDoctypeJsonApi(NOTES_DOCTYPE);

var normalizeNote = function normalizeNote(note) {
  return _objectSpread(_objectSpread({}, normalizeDoc(note, NOTES_DOCTYPE)), note.attributes);
};

var normalizeNoteUrl = function normalizeNoteUrl(noteUrl) {
  return _objectSpread(_objectSpread({}, _DocumentCollection2.default.normalizeDoctypeJsonApi(NOTES_URL_DOCTYPE)(noteUrl)), noteUrl.attributes);
};
/**
 * Implements `DocumentCollection` API to interact with the /notes endpoint of the stack
 */


var NotesCollection = /*#__PURE__*/function (_DocumentCollection) {
  (0, _inherits2.default)(NotesCollection, _DocumentCollection);

  var _super = _createSuper(NotesCollection);

  function NotesCollection(stackClient) {
    (0, _classCallCheck2.default)(this, NotesCollection);
    return _super.call(this, NOTES_DOCTYPE, stackClient);
  }
  /**
   * Fetches the note data
   *
   * @param {string} id Note id
   * @returns {{data}} Information about the note
   */


  (0, _createClass2.default)(NotesCollection, [{
    key: "get",
    value: function () {
      var _get = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(id) {
        var resp;
        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return this.stackClient.fetchJSON('GET', "/notes/".concat(id));

              case 2:
                resp = _context.sent;
                return _context.abrupt("return", {
                  data: normalizeNote(resp.data)
                });

              case 4:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function get(_x) {
        return _get.apply(this, arguments);
      }

      return get;
    }()
    /**
     * Fetches all notes
     *
     * @returns {{data, links, meta}} The JSON API conformant response.
     */

  }, {
    key: "all",
    value: function () {
      var _all = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2() {
        var resp;
        return _regenerator.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return this.stackClient.fetchJSON('GET', '/notes');

              case 2:
                resp = _context2.sent;
                return _context2.abrupt("return", _objectSpread(_objectSpread({}, resp), {}, {
                  data: resp.data.map(normalizeNote)
                }));

              case 4:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function all() {
        return _all.apply(this, arguments);
      }

      return all;
    }()
    /**
     * Destroys the note on the server
     *
     * @param {object} note       The io.cozy.notes document to destroy
     * @param {string} [note._id] The note's id
     *
     * @returns {{ data }} The deleted note
     */

  }, {
    key: "destroy",
    value: function () {
      var _destroy = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3(_ref) {
        var _id, resp;

        return _regenerator.default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _id = _ref._id;
                _context3.next = 3;
                return this.stackClient.fetchJSON('DELETE', (0, _utils.uri)(_templateObject(), _id));

              case 3:
                resp = _context3.sent;
                return _context3.abrupt("return", {
                  data: _objectSpread(_objectSpread({}, normalizeNote(resp.data)), {}, {
                    _deleted: true
                  })
                });

              case 5:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function destroy(_x2) {
        return _destroy.apply(this, arguments);
      }

      return destroy;
    }()
    /**
     * Create a note
     *
     * @param {object} options - Options
     * @param {string} [options.dir_id] dir_id where to create the note
     *
     * @returns {{data, links, meta}} The JSON API conformant response.
     */

  }, {
    key: "create",
    value: function () {
      var _create = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee4(_ref2) {
        var dir_id, resp;
        return _regenerator.default.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                dir_id = _ref2.dir_id;
                _context4.next = 3;
                return this.stackClient.fetchJSON('POST', '/notes', {
                  data: {
                    type: 'io.cozy.notes.documents',
                    attributes: {
                      title: '',
                      schema: (0, _NotesSchema.getDefaultSchema)(),
                      dir_id: dir_id
                    }
                  }
                });

              case 3:
                resp = _context4.sent;
                return _context4.abrupt("return", _objectSpread(_objectSpread({}, resp), {}, {
                  data: normalizeNote(resp.data)
                }));

              case 5:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function create(_x3) {
        return _create.apply(this, arguments);
      }

      return create;
    }()
    /**
     * Returns the details to build the note's url
     *
     * @see https://github.com/cozy/cozy-stack/blob/master/docs/notes.md#get-notesidopen
     *
     * @param {object} note       The io.cozy.notes document to open
     * @param {string} [note._id] The note's id
     *
     * @returns {{ data }} The note's url details
     */

  }, {
    key: "fetchURL",
    value: function () {
      var _fetchURL = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee5(_ref3) {
        var _id, resp;

        return _regenerator.default.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                _id = _ref3._id;
                _context5.next = 3;
                return this.stackClient.fetchJSON('GET', (0, _utils.uri)(_templateObject2(), _id));

              case 3:
                resp = _context5.sent;
                return _context5.abrupt("return", {
                  data: normalizeNoteUrl(resp.data)
                });

              case 5:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function fetchURL(_x4) {
        return _fetchURL.apply(this, arguments);
      }

      return fetchURL;
    }()
    /**
     * Returns promise mirror schema for a note
     *
     * @returns {object} schema
     */

  }, {
    key: "getDefaultSchema",
    value: function getDefaultSchema() {
      return (0, _NotesSchema.getDefaultSchema)();
    }
  }]);
  return NotesCollection;
}(_DocumentCollection2.default);

NotesCollection.normalizeDoctype = _DocumentCollection2.default.normalizeDoctypeJsonApi;
var _default = NotesCollection;
exports.default = _default;

/***/ }),
/* 602 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getDefaultSchema = exports.marks = exports.nodes = void 0;
// taken from a debug of @atlakit/editor/editor-core/create-editor/create-editor
// L139 (new Schema({nodes ,marks}))
// static because the @atlaskit code base requires a real navigator
// TODO: either find and exclude plugins requiring interaction
//       or running a JSDOM faking a navigator
var nodes = [['doc', {
  content: '(block)+',
  marks: 'link'
}], ['paragraph', {
  content: 'inline*',
  group: 'block',
  marks: 'strong code em link strike subsup textColor typeAheadQuery underline',
  parseDOM: [{
    tag: 'p'
  }]
}], ['text', {
  group: 'inline'
}], ['bulletList', {
  group: 'block',
  content: 'listItem+',
  parseDOM: [{
    tag: 'ul'
  }]
}], ['orderedList', {
  group: 'block',
  content: 'listItem+',
  parseDOM: [{
    tag: 'ol'
  }]
}], ['listItem', {
  content: '(paragraph ) (paragraph | bulletList | orderedList )*',
  defining: true,
  parseDOM: [{
    tag: 'li'
  }]
}], ['heading', {
  attrs: {
    level: {
      default: 1
    }
  },
  content: 'inline*',
  group: 'block',
  defining: true,
  parseDOM: [{
    tag: 'h1',
    attrs: {
      level: 1
    }
  }, {
    tag: 'h2',
    attrs: {
      level: 2
    }
  }, {
    tag: 'h3',
    attrs: {
      level: 3
    }
  }, {
    tag: 'h4',
    attrs: {
      level: 4
    }
  }, {
    tag: 'h5',
    attrs: {
      level: 5
    }
  }, {
    tag: 'h6',
    attrs: {
      level: 6
    }
  }]
}], ['blockquote', {
  content: 'paragraph+',
  group: 'block',
  defining: true,
  selectable: false,
  parseDOM: [{
    tag: 'blockquote'
  }]
}], ['rule', {
  group: 'block',
  parseDOM: [{
    tag: 'hr'
  }]
}], ['panel', {
  group: 'block',
  content: '(paragraph | heading | bulletList | orderedList)+',
  attrs: {
    panelType: {
      default: 'info'
    }
  },
  parseDOM: [{
    tag: 'div[data-panel-type]'
  }]
}], ['confluenceUnsupportedBlock', {
  group: 'block',
  attrs: {
    cxhtml: {
      default: null
    }
  },
  parseDOM: [{
    tag: 'div[data-node-type="confluenceUnsupportedBlock"]'
  }]
}], ['confluenceUnsupportedInline', {
  group: 'inline',
  inline: true,
  atom: true,
  attrs: {
    cxhtml: {
      default: null
    }
  },
  parseDOM: [{
    tag: 'div[data-node-type="confluenceUnsupportedInline"]'
  }]
}], ['unsupportedBlock', {
  inline: false,
  group: 'block',
  atom: true,
  selectable: true,
  attrs: {
    originalValue: {
      default: {}
    }
  },
  parseDOM: [{
    tag: '[data-node-type="unsupportedBlock"]'
  }]
}], ['unsupportedInline', {
  inline: true,
  group: 'inline',
  selectable: true,
  attrs: {
    originalValue: {
      default: {}
    }
  },
  parseDOM: [{
    tag: '[data-node-type="unsupportedInline"]'
  }]
}], ['hardBreak', {
  inline: true,
  group: 'inline',
  selectable: false,
  parseDOM: [{
    tag: 'br'
  }]
}], ['table', {
  content: 'tableRow+',
  attrs: {
    isNumberColumnEnabled: {
      default: false
    },
    layout: {
      default: 'default'
    },
    __autoSize: {
      default: false
    }
  },
  tableRole: 'table',
  isolating: true,
  selectable: false,
  group: 'block',
  parseDOM: [{
    tag: 'table'
  }]
}], ['tableHeader', {
  content: '(paragraph | panel | blockquote | orderedList | bulletList | rule | heading )+',
  attrs: {
    colspan: {
      default: 1
    },
    rowspan: {
      default: 1
    },
    colwidth: {
      default: null
    },
    background: {
      default: null
    }
  },
  tableRole: 'header_cell',
  isolating: true,
  marks: '',
  parseDOM: [{
    tag: 'th'
  }]
}], ['tableRow', {
  content: '(tableCell | tableHeader)+',
  tableRole: 'row',
  parseDOM: [{
    tag: 'tr'
  }]
}], ['tableCell', {
  content: '(paragraph | panel | blockquote | orderedList | bulletList | rule | heading | unsupportedBlock)+',
  attrs: {
    colspan: {
      default: 1
    },
    rowspan: {
      default: 1
    },
    colwidth: {
      default: null
    },
    background: {
      default: null
    }
  },
  tableRole: 'cell',
  marks: '',
  isolating: true,
  parseDOM: [{
    tag: '.ak-renderer-table-number-column',
    ignore: true
  }, {
    tag: 'td'
  }]
}]];
exports.nodes = nodes;
var marks = [['link', {
  excludes: 'color',
  group: 'link',
  attrs: {
    href: {},
    __confluenceMetadata: {
      default: null
    }
  },
  inclusive: false,
  parseDOM: [{
    tag: 'a[href]'
  }]
}], ['em', {
  inclusive: true,
  group: 'fontStyle',
  parseDOM: [{
    tag: 'i'
  }, {
    tag: 'em'
  }, {
    style: 'font-style=italic'
  }]
}], ['strong', {
  inclusive: true,
  group: 'fontStyle',
  parseDOM: [{
    tag: 'strong'
  }, {
    tag: 'b'
  }, {
    style: 'font-weight'
  }]
}], ['textColor', {
  attrs: {
    color: {}
  },
  inclusive: true,
  group: 'color',
  parseDOM: [{
    style: 'color'
  }]
}], ['strike', {
  inclusive: true,
  group: 'fontStyle',
  parseDOM: [{
    tag: 'strike'
  }, {
    tag: 's'
  }, {
    tag: 'del'
  }, {
    style: 'text-decoration'
  }]
}], ['subsup', {
  inclusive: true,
  group: 'fontStyle',
  attrs: {
    type: {
      default: 'sub'
    }
  },
  parseDOM: [{
    tag: 'sub',
    attrs: {
      type: 'sub'
    }
  }, {
    tag: 'sup',
    attrs: {
      type: 'sup'
    }
  }]
}], ['underline', {
  inclusive: true,
  group: 'fontStyle',
  parseDOM: [{
    tag: 'u'
  }, {
    style: 'text-decoration'
  }]
}], ['code', {
  excludes: 'fontStyle link searchQuery color',
  inclusive: true,
  parseDOM: [{
    tag: 'span.code',
    preserveWhitespace: true
  }, {
    tag: 'code',
    preserveWhitespace: true
  }, {
    tag: 'tt',
    preserveWhitespace: true
  }, {
    tag: 'span',
    preserveWhitespace: true
  }]
}], ['typeAheadQuery', {
  excludes: 'searchQuery',
  inclusive: true,
  group: 'searchQuery',
  parseDOM: [{
    tag: 'span[data-type-ahead-query]'
  }],
  attrs: {
    trigger: {
      default: ''
    }
  }
}]];
exports.marks = marks;

var getDefaultSchema = function getDefaultSchema() {
  return {
    nodes: nodes,
    marks: marks
  };
};

exports.getDefaultSchema = getDefaultSchema;

/***/ }),
/* 603 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireWildcard = __webpack_require__(22);

var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.OAUTH_CLIENTS_DOCTYPE = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(6));

var _taggedTemplateLiteral2 = _interopRequireDefault(__webpack_require__(45));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(7));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));

var _createClass2 = _interopRequireDefault(__webpack_require__(13));

var _inherits2 = _interopRequireDefault(__webpack_require__(18));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(19));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(16));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(9));

var _get2 = _interopRequireDefault(__webpack_require__(10));

var _DocumentCollection2 = _interopRequireDefault(__webpack_require__(26));

var _utils = __webpack_require__(46);

var querystring = _interopRequireWildcard(__webpack_require__(180));

var _Collection = __webpack_require__(75);

var _errors = __webpack_require__(56);

function _templateObject3() {
  var data = (0, _taggedTemplateLiteral2.default)(["/settings/clients/", ""]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = (0, _taggedTemplateLiteral2.default)(["/settings/clients/", ""]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = (0, _taggedTemplateLiteral2.default)(["/settings/clients"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var OAUTH_CLIENTS_DOCTYPE = 'io.cozy.oauth.clients';
exports.OAUTH_CLIENTS_DOCTYPE = OAUTH_CLIENTS_DOCTYPE;

var normalizeDoc = _DocumentCollection2.default.normalizeDoctypeJsonApi(OAUTH_CLIENTS_DOCTYPE);

var normalizeOAuthClient = function normalizeOAuthClient(client) {
  return _objectSpread(_objectSpread({}, normalizeDoc(client, OAUTH_CLIENTS_DOCTYPE)), client.attributes);
};
/**
 * Implements `DocumentCollection` API to interact with the /settings/clients endpoint of the stack
 */


var OAuthClientsCollection = /*#__PURE__*/function (_DocumentCollection) {
  (0, _inherits2.default)(OAuthClientsCollection, _DocumentCollection);

  var _super = _createSuper(OAuthClientsCollection);

  function OAuthClientsCollection(stackClient) {
    (0, _classCallCheck2.default)(this, OAuthClientsCollection);
    return _super.call(this, OAUTH_CLIENTS_DOCTYPE, stackClient);
  }
  /**
   * Fetches all OAuth clients
   *
   * @param  {object}         options             Query options
   * @param  {number}         [options.limit]     For pagination, the number of results to return.
   * @param  {string}         [options.bookmark]  For bookmark-based pagination, the document _id to start from
   * @param  {Array<string>}  [options.keys]      Ids of specific clients to return (within the current page),
   *
   * @returns {object} The JSON API conformant response.
   */


  (0, _createClass2.default)(OAuthClientsCollection, [{
    key: "all",
    value: function () {
      var _all = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {
        var options,
            _options$limit,
            limit,
            bookmark,
            keys,
            params,
            url,
            path,
            resp,
            nextLink,
            nextLinkURL,
            nextBookmark,
            hasBookmark,
            data,
            meta,
            _args = arguments;

        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                options = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};
                _options$limit = options.limit, limit = _options$limit === void 0 ? 100 : _options$limit, bookmark = options.bookmark, keys = options.keys;
                params = {
                  'page[limit]': limit,
                  'page[cursor]': bookmark
                };
                url = (0, _utils.uri)(_templateObject());
                path = querystring.buildURL(url, params);
                _context.prev = 5;
                _context.next = 8;
                return this.stackClient.fetchJSON('GET', path);

              case 8:
                resp = _context.sent;
                _context.next = 14;
                break;

              case 11:
                _context.prev = 11;
                _context.t0 = _context["catch"](5);
                return _context.abrupt("return", (0, _Collection.dontThrowNotFoundError)(_context.t0));

              case 14:
                nextLink = (0, _get2.default)(resp, 'links.next', '');
                nextLinkURL = new URL("".concat(this.stackClient.uri).concat(nextLink));
                nextBookmark = nextLinkURL.searchParams.get('page[cursor]') || undefined;
                hasBookmark = nextBookmark !== undefined;

                if (!keys) {
                  _context.next = 24;
                  break;
                }

                data = resp.data.filter(function (c) {
                  return keys.includes(c.id);
                }).map(function (c) {
                  return normalizeOAuthClient(c);
                });
                meta = _objectSpread(_objectSpread({}, resp.meta), {}, {
                  count: data.length
                });
                return _context.abrupt("return", {
                  data: data,
                  meta: meta,
                  next: keys.length > data.length && hasBookmark,
                  bookmark: nextBookmark
                });

              case 24:
                return _context.abrupt("return", {
                  data: resp.data.map(function (c) {
                    return normalizeOAuthClient(c);
                  }),
                  meta: resp.meta,
                  next: hasBookmark,
                  bookmark: nextBookmark
                });

              case 25:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this, [[5, 11]]);
      }));

      function all() {
        return _all.apply(this, arguments);
      }

      return all;
    }()
    /**
     * Get an OAuth client by id
     *
     * @param  {string} id The client id.
     * @returns {object}  JsonAPI response containing normalized client as data attribute
     */

  }, {
    key: "get",
    value: function () {
      var _get = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(id) {
        var resp;
        return _regenerator.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return this.all({
                  keys: [id]
                });

              case 2:
                resp = _context2.sent;

              case 3:
                if (!resp.next) {
                  _context2.next = 9;
                  break;
                }

                _context2.next = 6;
                return this.all({
                  keys: [id],
                  bookmark: resp.bookmark
                });

              case 6:
                resp = _context2.sent;
                _context2.next = 3;
                break;

              case 9:
                if (!resp.data.length) {
                  _context2.next = 13;
                  break;
                }

                return _context2.abrupt("return", {
                  data: normalizeOAuthClient(resp.data[0])
                });

              case 13:
                resp.url = (0, _utils.uri)(_templateObject2(), id);
                resp.status = '404';
                throw new _errors.FetchError(resp, 'Not Found');

              case 16:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function get(_x) {
        return _get.apply(this, arguments);
      }

      return get;
    }()
    /**
     * Destroys the OAuth client on the server
     *
     * @param {object} oauthClient The io.cozy.oauth.clients document to destroy
     *
     * @returns {{ data }} The deleted client
     */

  }, {
    key: "destroy",
    value: function () {
      var _destroy = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3(oauthClient) {
        var _id;

        return _regenerator.default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _id = oauthClient._id;
                _context3.next = 3;
                return this.stackClient.fetchJSON('DELETE', (0, _utils.uri)(_templateObject3(), _id));

              case 3:
                return _context3.abrupt("return", {
                  data: _objectSpread(_objectSpread({}, normalizeOAuthClient(oauthClient)), {}, {
                    _deleted: true
                  })
                });

              case 4:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function destroy(_x2) {
        return _destroy.apply(this, arguments);
      }

      return destroy;
    }()
  }]);
  return OAuthClientsCollection;
}(_DocumentCollection2.default);

OAuthClientsCollection.normalizeDoctype = _DocumentCollection2.default.normalizeDoctypeJsonApi;
var _default = OAuthClientsCollection;
exports.default = _default;

/***/ }),
/* 604 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.SHORTCUTS_DOCTYPE = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(6));

var _taggedTemplateLiteral2 = _interopRequireDefault(__webpack_require__(45));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(7));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));

var _createClass2 = _interopRequireDefault(__webpack_require__(13));

var _inherits2 = _interopRequireDefault(__webpack_require__(18));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(19));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(16));

var _DocumentCollection2 = _interopRequireDefault(__webpack_require__(26));

var _utils = __webpack_require__(46);

var _getIllegalCharacter = __webpack_require__(282);

function _templateObject2() {
  var data = (0, _taggedTemplateLiteral2.default)(["/shortcuts/", ""]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = (0, _taggedTemplateLiteral2.default)(["/shortcuts"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var SHORTCUTS_DOCTYPE = 'io.cozy.files.shortcuts';
exports.SHORTCUTS_DOCTYPE = SHORTCUTS_DOCTYPE;

var ShortcutsCollection = /*#__PURE__*/function (_DocumentCollection) {
  (0, _inherits2.default)(ShortcutsCollection, _DocumentCollection);

  var _super = _createSuper(ShortcutsCollection);

  function ShortcutsCollection(stackClient) {
    (0, _classCallCheck2.default)(this, ShortcutsCollection);
    return _super.call(this, SHORTCUTS_DOCTYPE, stackClient);
  }
  /**
   * Create a shortcut
   *
   * @param {object} attributes shortcut's attributes
   * @param {string} attributes.name Filename
   * @param {string} attributes.url Shortcut's URL
   * @param {string} attributes.dir_id dir_id where to create the shortcut
   * @throws {Error} - explaining reason why creation failed
   */


  (0, _createClass2.default)(ShortcutsCollection, [{
    key: "create",
    value: function () {
      var _create = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(attributes) {
        var name, illegalCharacters, path, resp;
        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (!attributes.type) {
                  attributes.type = SHORTCUTS_DOCTYPE;
                }

                if (!(!attributes.name || !attributes.name.trim() || !attributes.url || !attributes.dir_id)) {
                  _context.next = 3;
                  break;
                }

                throw new Error('you need at least a name, an url and a dir_id attributes to create a shortcut');

              case 3:
                name = attributes.name.trim();

                if (!(name === '.' || name === '..')) {
                  _context.next = 6;
                  break;
                }

                throw new Error("Invalid filename: ".concat(name));

              case 6:
                illegalCharacters = (0, _getIllegalCharacter.getIllegalCharacters)(name);

                if (!illegalCharacters.length) {
                  _context.next = 9;
                  break;
                }

                throw new Error("Invalid filename containing illegal character(s): ".concat(illegalCharacters));

              case 9:
                path = (0, _utils.uri)(_templateObject());
                _context.next = 12;
                return this.stackClient.fetchJSON('POST', path, {
                  data: {
                    attributes: attributes,
                    type: 'io.cozy.files.shortcuts'
                  }
                });

              case 12:
                resp = _context.sent;
                return _context.abrupt("return", {
                  data: _DocumentCollection2.default.normalizeDoctypeJsonApi(SHORTCUTS_DOCTYPE)(resp.data, resp)
                });

              case 14:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function create(_x) {
        return _create.apply(this, arguments);
      }

      return create;
    }()
  }, {
    key: "get",
    value: function () {
      var _get = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(id) {
        var path, resp;
        return _regenerator.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                path = (0, _utils.uri)(_templateObject2(), id);
                _context2.next = 3;
                return this.stackClient.fetchJSON('GET', path);

              case 3:
                resp = _context2.sent;
                return _context2.abrupt("return", {
                  data: _DocumentCollection2.default.normalizeDoctypeJsonApi(SHORTCUTS_DOCTYPE)(resp.data, resp)
                });

              case 5:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function get(_x2) {
        return _get.apply(this, arguments);
      }

      return get;
    }()
  }]);
  return ShortcutsCollection;
}(_DocumentCollection2.default);

ShortcutsCollection.normalizeDoctype = _DocumentCollection2.default.normalizeDoctypeJsonApi;
var _default = ShortcutsCollection;
exports.default = _default;

/***/ }),
/* 605 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireWildcard = __webpack_require__(22);

var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.CONTACTS_DOCTYPE = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(6));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(7));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));

var _createClass2 = _interopRequireDefault(__webpack_require__(13));

var _get2 = _interopRequireDefault(__webpack_require__(128));

var _inherits2 = _interopRequireDefault(__webpack_require__(18));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(19));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(16));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(9));

var _DocumentCollection2 = _interopRequireWildcard(__webpack_require__(26));

var _types = __webpack_require__(606);

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var normalizeMyselfResp = function normalizeMyselfResp(resp) {
  return _objectSpread(_objectSpread(_objectSpread({}, (0, _DocumentCollection2.normalizeDoc)(resp.data, CONTACTS_DOCTYPE)), resp.data.attributes), {}, {
    _rev: resp.data.meta.rev
  });
};

var ContactsCollection = /*#__PURE__*/function (_DocumentCollection) {
  (0, _inherits2.default)(ContactsCollection, _DocumentCollection);

  var _super = _createSuper(ContactsCollection);

  function ContactsCollection() {
    (0, _classCallCheck2.default)(this, ContactsCollection);
    return _super.apply(this, arguments);
  }

  (0, _createClass2.default)(ContactsCollection, [{
    key: "find",
    value: function () {
      var _find = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(selector, options) {
        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (!(selector !== undefined && Object.values(selector).length === 1 && selector['me'] == true)) {
                  _context.next = 4;
                  break;
                }

                return _context.abrupt("return", this.findMyself());

              case 4:
                return _context.abrupt("return", (0, _get2.default)((0, _getPrototypeOf2.default)(ContactsCollection.prototype), "find", this).call(this, selector, options));

              case 5:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function find(_x, _x2) {
        return _find.apply(this, arguments);
      }

      return find;
    }()
  }, {
    key: "findMyself",
    value: function () {
      var _findMyself = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2() {
        var resp, col;
        return _regenerator.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return this.stackClient.fetchJSON('POST', '/contacts/myself');

              case 2:
                resp = _context2.sent;
                col = {
                  data: [normalizeMyselfResp(resp)],
                  next: false,
                  meta: null,
                  bookmark: false
                };
                return _context2.abrupt("return", col);

              case 5:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function findMyself() {
        return _findMyself.apply(this, arguments);
      }

      return findMyself;
    }()
    /**
     * Destroys a contact
     *
     * If the contact is linked to accounts, it will be trashed instead of being
     * destroyed.
     *
     * @param  {IOCozyContact} contact - Contact to destroy. IT MUST BE THE FULL CONTACT OBJECT
     * @returns {Promise<{ data: IOCozyContact }>} - Resolves when contact has been destroyed
     */

  }, {
    key: "destroy",
    value: function () {
      var _destroy = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3(contact) {
        var _contact$cozyMetadata;

        var syncData, isLinkedToAccounts;
        return _regenerator.default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                syncData = (contact === null || contact === void 0 ? void 0 : (_contact$cozyMetadata = contact.cozyMetadata) === null || _contact$cozyMetadata === void 0 ? void 0 : _contact$cozyMetadata.sync) || {};
                isLinkedToAccounts = Object.keys(syncData).length > 0;

                if (!isLinkedToAccounts) {
                  _context3.next = 6;
                  break;
                }

                return _context3.abrupt("return", (0, _get2.default)((0, _getPrototypeOf2.default)(ContactsCollection.prototype), "update", this).call(this, _objectSpread(_objectSpread({}, contact), {}, {
                  trashed: true
                })));

              case 6:
                return _context3.abrupt("return", (0, _get2.default)((0, _getPrototypeOf2.default)(ContactsCollection.prototype), "destroy", this).call(this, contact));

              case 7:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function destroy(_x3) {
        return _destroy.apply(this, arguments);
      }

      return destroy;
    }()
  }]);
  return ContactsCollection;
}(_DocumentCollection2.default);

var CONTACTS_DOCTYPE = 'io.cozy.contacts';
exports.CONTACTS_DOCTYPE = CONTACTS_DOCTYPE;
var _default = ContactsCollection;
exports.default = _default;

/***/ }),
/* 606 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _dsl = __webpack_require__(20);

/**
 * @typedef {import("./models/document/qualification").Qualification} Qualification
 */

/**
 * @typedef {"io.cozy.notes"} NotesDoctype
 * @typedef {"io.cozy.apps"} AppsDoctype
 * @typedef {"io.cozy.settings"} SettingsDoctype
 * @typedef {"io.cozy-oauth.clients"} OAuthClientsDoctype
 * @typedef {"io.cozy.files"} FilesDoctype
 * @typedef {"io.cozy.account"} AccountsDoctype
 * @typedef {"io.cozy.konnectors"} KonnectorsDoctype
 * @typedef {"io.cozy.triggers"} TriggersDoctype
 * @typedef {AccountsDoctype|TriggersDoctype|KonnectorsDoctype|NotesDoctype|AppsDoctype|SettingsDoctype|OAuthClientsDoctype|FilesDoctype} KnownDoctype
 * @typedef {KnownDoctype|string} Doctype
 */

/**
 * @typedef {object} AccountsDocument
 * @property {String} [_id] - document identifier
 * @property {String} account_type - slug of the associated konnector
 * @property {object} auth - user credentials
 * @property {String} [identifier] - Name of the attribute in the auth object that can be used to name the account.
 * @property {Array} [mutedErrors] - list of ignored errors
 * @property {String} [state] - used by harvest and the konnectors to communicate
 * @typedef {CozyClientDocument & AccountsDocument} IOCozyAccount - An io.cozy.accounts document
 */

/**
 * @typedef {object} KonnectorsDocument
 * See https://docs.cozy.io/en/cozy-doctypes/docs/io.cozy.konnectors/
 *
 * @property {object} [aggregator] - object containing aggregator data
 * @property {String[]} [categories] - list of categories (default: ['others'])
 * @property {Boolean} [clientSide] - whether the konnector runs on client or not
 * @property {String[]} [data_types] - list of data types managed by the connector
 * @property {object} [developer] - identity information on the connector developer
 * @property {String} [developer.name] - name of the developer
 * @property {String} [developer.url] - url of the developer
 * @property {String} editor - name of the editor
 * @property {object[]} [features] - list of features added in the konnector
 * @property {ManifestFields} [fields] - konnector fields
 * @property {object[]} [folders] - list of folders required by the konnector to store files according to data types
 * @property {"monthly"|"weekly"|"daily"} [frequency] - interval of time between two runs of the konnector (default: weekly)
 * @property {String} [icon] - path to the icon for the cozy-home
 * @property {string[]} [langs] - available languages (may differ from local)
 * @property {object} [locales] - an object with language slug as property, each name property is an object of localized informations
 * @property {String} [language] - konnector development language used (ex: node)
 * @property {String} [manifest_version] - current manifest version number
 * @property {String[]} [measures] - list of message identifiers, which can be used to display information in known zones
 * @property {String} name - name of the konnector
 * @property {String} [name_prefix] - prefix to display with the name
 * @property {object} [oauth] - object containing oAuth information, like scope
 * @property {object} [parameters] - additional parameters which should be passed to the konnector
 * @property {object} [partnership] - object to provide informations about a partnership related to the konnector
 * @property {object} [permissions] - map of permissions needed by the konnector
 * @property {String[]} [qualification_labels] - list of one or more cozy-client qualification labels that the connector will associate with the files it retrieves
 * @property {String[]} [screenshots] - 	an array of paths to the screenshots of the konnector (paths in the build)
 * @property {String} slug - slug of the konnector
 * @property {String} state -	installation state of the konnector
 * @property {String} [source] - where the files of the konnector can be downloaded (default: build branch)
 * @property {object} [terms] - object defining properties for terms that need to be displayed/accepted by the user when installing the konnector
 * @property {number[]} [time_interval] - list of two values, first is the interval start hour, second is the interval end hour (ex: [15, 21]) based on GMT time zone
 * @property {String} type - type of application (konnector or webapp)
 * @property {String} [vendor_link] - Store the installation state of the konnector
 * @property {String} version - current version number of the konnector
 * @typedef {CozyClientDocument & KonnectorsDocument} IOCozyKonnector - An io.cozy.konnectors document
 */

/**
 * @typedef {Object} Developer - name and url for the developer
 * @property {string} name
 * @property {string} url
 */

/**
 * @typedef {Object} Intent - (application specific) a list of intents provided by this app
 * @property {string} action
 * @property {string[]} type
 * @property {string} href
 */

/**
 * @typedef {Object} Locale - an object with language slug as property, each name property is an object of localized informations
 * @property {string} long_description
 * @property {string[]} screenshots
 * @property {string} short_description
 */

/**
 * @typedef {Object} Permission - a map of permissions needed by the app
 * @property {string} type
 * @property {string} [description]
 * @property {string[]} [verbs]
 * @property {string} [selector]
 * @property {string[]} [values]
 */

/**
 * @typedef {Object} Route - (application specific) a map of routes for the app
 * @property {string} folder
 * @property {string} index
 * @property {boolean} public
 */

/**
 * @typedef {Object} Service - (application specific) a map of the services associated with the app (see cozy-stack services doc for more details)
 * @property {string} type
 * @property {string} file
 * @property {string} [debounce]
 * @property {string} trigger
 * @property {string} trigger_id
 */

/**
 * @typedef {Object} Terms - 	an object defining properties for terms that need to be displayed/accepted by the user when installing the application
 * @property {string} url
 * @property {string} version
 */

/**
 * @typedef {Object} AcceptDocumentsFromFlagship - The acceptance document details from cozy-flagship.
 * @property {string[]} accepted_mime_types
 * @property {number} max_number_of_files
 * @property {number} max_size_per_file_in_MB
 * @property {string} route_to_upload - The route provided by the cozy-app to trigger the upload user flow
 */

/**
 * @typedef {Object} AppsDocument
 * See https://docs.cozy.io/en/cozy-doctypes/docs/io.cozy.apps/
 *
 * @property {AcceptDocumentsFromFlagship} [accept_documents_from_flagship] - The acceptance document details from flagship.
 * @property {boolean} [accept_from_flagship] - Whether to accept file upload from cozy-flagship.
 * @property {string[]} categories - array of categories for your apps (see authorized categories), it will be ['others'] by default if empty
 * @property {string} checksum
 * @property {string} created_at
 * @property {Developer} developer - name and url for the developer
 * @property {string} editor - the editor’s name to display on the cozy-bar
 * @property {string} icon - path to the icon for the home
 * @property {Intent[]} intents - (application specific) a list of intents provided by this app
 * @property {string[]} langs - 	Languages available in the app
 * @property {string} licence - the SPDX license identifier
 * @property {Object.<string, Locale>} locales - an object with language slug as property, each name property is an object of localized informations
 * @property {string} name - the name to display on the home
 * @property {string} name_prefix - the prefix to display with the name
 * @property {null} notifications
 * @property {Object.<string, Permission>} permissions - a map of permissions needed by the app
 * @property {Object.<string, Route>} routes - (application specific) a map of routes for the app
 * @property {string[]} screenshots - an array of paths to the screenshots of the application
 * @property {Object.<string, Service>} services - 	(application specific) a map of the services associated with the app
 * @property {string} slug - the default slug that should never change (alpha-numeric lowercase)
 * @property {string} source - where the files of the app can be downloaded
 * @property {string} state
 * @property {Terms} terms - an object defining properties for terms that need to be displayed/accepted by the user when installing the application
 * @property {"webapp"} type - type of application
 * @property {string} updated_at
 * @property {string} version - the current version number
 * @typedef {CozyClientDocument & AppsDocument} IOCozyApp - An io.cozy.apps document
 */

/**
 * @typedef {object} TriggersDocument
 * @property {String} [_id] - document identifier
 * @property {String} type - type of the trigger. Can be "at", "cron", "event", "every", "in", "webhook", "client"
 * @property {String} worker - type of worker. Can be "konnector" or "sendmail"
 * @property {object} message - Parameters to pass to the the worker. For example, when the worker is set to konnector, message contains the related konnector and the related account.
 * @property {IOCozyAccount['id']} [message.account] - Id of the account associated to this trigger, if any
 * @property {IOCozyKonnector['slug']} [message.konnector] - Slug of the konnector associated to this trigger, if any
 * @property {IOCozyFolder['_id']} [message.folder_to_save] - Id of the destination folder of the konnector associated to this trigger, if any
 * @property {String} [message.Data] - Legacy, same message data but encoded in base64 json string
 * @property {TriggerState} [current_state] - state of the last executed jobs related to this trigger
 * @property {String} [arguments] - Arguments related to the type attribute. For example it's a cron configuration when the type is set to @cron.
 * @typedef {CozyClientDocument & TriggersDocument} IOCozyTrigger - An io.cozy.triggers document
 */

/**
 * @typedef {object} TriggerState
 * @property {'queued'|'running'|'done'|'errored'} status - Global status of the trigger
 * @property {String} last_success - Date  of the last job in success
 * @property {String} last_successful_job_id - ID of the last job in success
 * @property {String} last_execution - Date of the last executed job
 * @property {String} last_executed_job_id - ID of the last executed job
 * @property {String} last_failure - Date of the last job in failure
 * @property {String} last_failed_job_id - ID of the last job in failure
 * @property {String} last_manual_execution - Date of the last job manually executed
 * @property {String} last_manual_job_id - ID of the last job manually executed
 * @property {String} last_error - Content of the last error
 */

/**
 * @typedef {object} Link
 * @typedef {object} Mutation
 * @typedef {object} DocumentCollection
 * @typedef {object} QueryResult
 * @typedef {object} HydratedDocument
 * @typedef {object} ReduxStore
 * @typedef {object} Token
 * @typedef {object} ClientResponse
 * @typedef {object} Manifest
 * @typedef {object} SanitizedManifest
 */

/**
 * @typedef {Object} ManifestField
 * @property {String} [type] - field type : can be "text" or "hidden" or "date" or "dropdown" or "password"
 * @property {String} [role] - field role : with "identifier" value
 * @property {Boolean} [required] - is the field required or not
 * @property {Boolean} [isRequired] - is the field required or not (legacy)
 * @property {Boolean} [encrypted] - encrypted value of the field (legacy)
 */

/**
 * @typedef {{
 *   [key: string]: ManifestField;
 * }} ManifestFields
 */

/**
 * @typedef {object} OldCozyClient
 */

/**
 * @typedef {object} NodeEnvironment
 */

/**
 * @typedef {"loading"|"loaded"|"pending"|"failed"} QueryFetchStatus
 */

/**
 * @typedef {Record<Doctype, QueryState>} QueriesStateSlice
 */

/**
 * @typedef {Record<string, CozyClientDocument>} IndexedDocuments
 */

/**
 * @typedef {Record<Doctype, IndexedDocuments>} DocumentsStateSlice
 */

/**
 * @typedef {object} QueryStateWithoutData
 * @property {string} id
 * @property {QueryDefinition} definition
 * @property {QueryFetchStatus} fetchStatus
 * @property {boolean} isFetching
 * @property {number} lastFetch
 * @property {number} lastUpdate
 * @property {number} lastErrorUpdate
 * @property {Error} lastError
 * @property {boolean} hasMore
 * @property {number} count
 * @property {number} fetchedPagesCount
 * @property {string} bookmark
 * @property {object} [execution_stats]
 * @property {QueryOptions} [options]
 */

/**
 * @typedef {object} QueryStateData
 * @property {object|Array} data
 */

/**
 * @typedef {QueryStateWithoutData & QueryStateData} QueryState
 */

/**
 * @typedef {object} AutoUpdateOptions
 * @param {boolean} update - Should documents be updated in the query (default: true)
 * @param {boolean} add - Should documents be added to the query (default: true)
 * @param {boolean} remove - Should documents be removed from the query (default: true)
 */

/**
 * @typedef {object} QueryOptions
 * @property {string} [as] - Name of the query
 * @property {Function} [fetchPolicy] - Fetch policy to bypass fetching based on what's already inside the state. See "Fetch policies"
 * @property {AutoUpdateOptions} [autoUpdate] - Options for the query auto update
 * @property {string} [update] - Does not seem to be used
 * @property {Function} [onError] - Callback when the query is errored
 * @property {boolean} [enabled=true] - If set to false, the query won't be executed
 * @property {boolean} [backgroundFetching] - If set to true, when the fetchStatus has already been loaded, it won't be updated during future fetches. Instead, a `isFetching` attribute will be used to indicate when background fetching is started.
 * @property {boolean} [hydrated=true] - Whether documents should be returned already hydrated
 * @property {boolean} [singleDocData] - If true, the "data" returned will be
 * a single doc instead of an array for single doc queries. Defaults to false for backward
 * compatibility but will be set to true in the future.
 */

/**
 * @typedef {object} Query
 * @property {QueryDefinition} definition
 * @property {QueryOptions} options
 */

/**
 * @typedef {object} FetchMoreAble
 * @property {Function} fetchMore
 */

/**
 * @typedef {object} FetchAble
 * @property {Function} fetch
 */

/**
 * @typedef {QueryState & FetchMoreAble & FetchAble} UseQueryReturnValue
 */

/**
 * @typedef {object} UseMutationWithoutMutate
 * @property {QueryFetchStatus} mutationStatus - Status of the current mutation
 * @property {object} [error] - Error if the mutation failed
 * @property {object} [data] - Data return after the mutation
 */

/**
 * @typedef {object} UseMutationMutate
 * @property {Function} mutate - Function to save the document
 */

/**
 * @typedef {UseMutationWithoutMutate & UseMutationMutate} UseMutationReturnValue
 */

/**
 * Update the setting with corresponding value and save it.
 *
 * @template {string} T
 *
 * @callback SaveSettingsFunction
 * @param {Partial<Record<T, any>>} items - The new setting's value
 */

/**
 * @template {string} T
 * @typedef {object} UseSettingsReturnValue
 * @property {Record<T, any> | undefined} values - The setting's value
 * @property {SaveSettingsFunction<T>} save - Function to edit the setting
 * @property {QueryStateWithoutData} query - Function to edit the setting
 * @property {UseMutationWithoutMutate} mutation - Status of the current mutation
 */

/**
 * A reference to a document
 *
 * @typedef {object} ReferencedByRelationship
 * @property {RelationshipParent} [parent]
 * @property {ReferencedBy} [referenced_by]
 */

/**
 * @typedef {object} RelationshipParent
 * @property {{related: string}} links
 * @property {Reference} [data]
 */

/**
 * @typedef {object} ReferencedBy
 * @property {{self: string}} links
 * @property {Reference[]|null} data
 */

/**
 * A reference to a document
 * https://docs.cozy.io/en/cozy-doctypes/docs/io.cozy.files/#references
 *
 * @typedef {object} Reference
 * @property {string} id - id of the document
 * @property {string} type - doctype of the document
 */

/**
 * @typedef {Object.<string, Array<Reference>>} ReferenceMap
 */

/**
 * @typedef {object} MutationOptions
 * @property {string} [as]
 * @property {Function} [update]
 * @property {Function} [updateQueries]
 */

/**
 * @typedef {object} CozyClientDocument - A document
 * @property {string} [_id] - Id of the document
 * @property {string} [id] - Id of the document
 * @property {string} [_type] - Type of the document
 * @property {string} [_rev] - Current revision of the document
 * @property {boolean} [_deleted] - When the document has been deleted
 * @property {ReferencedByRelationship} [relationships] - Relationships of the document
 * @property {Reference[]} [referenced_by] - referenced by of another document
 * @property {object} [cozyMetadata] - Cozy Metadata
 */

/**
 * Metadata on io.cozy.files documents
 *
 * This is a first step, to continue
 *
 * Filled according to:
 * https://docs.cozy.io/en/cozy-doctypes/docs/io.cozy.files_metadata/
 * https://docs.cozy.io/en/cozy-doctypes/docs/io.cozy.notes/
 *
 * @typedef {object} FileMetadata - A io.cozy.files document's metadata
 * @property {object} [content] - The Note's content. See https://prosemirror.net/docs/ref/#model for more informations
 * @property {object} [schema] - the schema used by prosemirror (with notes and marks serialized as arrays to preserve the order).
 * @property {string} [title] - the initial title of the note (that will also be used for the file name)
 * @property {number} [version] - Number of a note
 * @property {Qualification} [qualification] - Qualification of the file
 * @property {string} [country] - Country of the paper
 * @property {string} [expirationDate] - Expiration date of the paper
 * @property {string} [referencedDate] - Reference date of the paper
 * @property {string} [noticePeriod] - Notice period of the paper, in days
 * @property {string} [datetime] - Image EXIF date, if relevant
 */

/**
 * @typedef {object} FileDocument - An io.cozy.files document
 * @property {string} _id - Id of the file
 * @property {FilesDoctype} _type - Doctype of the file
 * @property {string} name - Name of the file
 * @property {FileMetadata} metadata - Metadata of the file
 * @property {string} type - Type of the file
 * @property {string} class - Class of the file
 * @property {string} mime - Mime of the file
 * @property {boolean} executable - Whether or not the file is executable
 * @property {boolean} encrypted - Whether or not the file is client-side encrypted
 * @property {string} created_at - Creation date of the file
 * @typedef {CozyClientDocument & FileDocument} IOCozyFile - An io.cozy.files document
 */

/**
 * @typedef {object} FolderDocument - An io.cozy.files document
 * @property {string} _id - Id of the folder
 * @property {string} dir_id - Parent folder
 * @property {FilesDoctype} _type - Doctype of the folder
 * @property {string} name - Name of the folder
 * @property {object} metadata - Metadata of the folder
 * @property {object} type - Type of the folder
 * @property {string} path - Folder path
 * @typedef {CozyClientDocument & FolderDocument} IOCozyFolder - An io.cozy.files document
 */

/**
 * @typedef {object} OAuthClientDocument - An io.cozy.oauth.clients document
 * @property {string} _id - Id of the client
 * @property {OAuthClientsDoctype} _type - Doctype of the client
 * @property {string} software_id
 * @property {string} software_version
 * @property {string} client_id
 * @property {string} client_name
 * @property {string} client_kind
 * @property {string} client_uri
 * @property {string} logo_uri
 * @property {string} policy_uri
 * @property {string} notification_platform
 * @property {string} notification_device_token
 * @property {Array<String>} redirect_uris
 * @typedef {CozyClientDocument & OAuthClientDocument} IOCozyOAuthClient - An io.cozy.oauth.clients document
 */

/**
 * @typedef {object} ContactName
 * @property {string} [familyName] - The family name (example: "House")
 * @property {string} [givenName] - The given name (example: "Gregory")
 * @property {string} [additionalName] - The additional name (example: "J.")
 * @property {string} [namePrefix] - The name prefix (example: "Dr.")
 * @property {string} [nameSuffix] - The name suffix (example: "III")
 */

/**
 * @typedef {object} ContactEmail
 * @property {string} address - Email address
 * @property {string} [type] - A user-provided localized type of email address (example: "Work", "Home", "Other")
 * @property {boolean} [primary] - Indicates a preferred-use address
 */

/**
 * @typedef {object} ContactExtendedAddress
 * @property {string} [locality] - Locality name
 * @property {string} [building] - Building number
 * @property {string} [stairs] - Stairs number
 * @property {string} [floor] - Apartment floor
 * @property {string} [apartment] - Apartment number
 * @property {string} [entrycode] - Entry code
 */

/**
 * @typedef {object} ContactGeo
 * @property {Array<number>} [geo] - Coordinates of the address, must be [long, lat]
 * @property {"home"|"work"} [cozyCategory] - The category of the address type
 */

/**
 * @typedef {object} ContactAddress
 * @property {string} [id] - Id of the address
 * @property {string} [street] - Street name
 * @property {string} [pobox] - P.O Box number
 * @property {string} [city] - City name
 * @property {string} [region] - Region name
 * @property {string} [number] - Lane number
 * @property {string} [code] - Postal code
 * @property {string} [country] - Country name
 * @property {string} [type] - A user-provided localized type of address (example: "Work", "Home", "Other")
 * @property {boolean} [primary] - Indicates a preferred-use address
 * @property {ContactExtendedAddress} [extendedAddress]
 * @property {string} [formattedAddress] - Unstructured version of the address
 * @property {ContactGeo} [geo]
 */

/**
 * @typedef {object} ContactPhone
 * @property {string} number - Phone number
 * @property {string} [type] - A user-provided localized type of phone number (example: "Work", "Home", "Other")
 * @property {boolean} [primary] - Indicates a preferred-use number
 *
 */

/**
 * @typedef {object} ContactCozy
 * @property {string} url
 * @property {string} [label] - A user-provided localized type of instance
 * @property {boolean} [primary] - Indicates a preferred-use instance
 *
 */

/**
 * @typedef {object} ContactMetadata
 * @property {boolean} cozy - Whether the contact has been created by cozy
 * @property {object} google - Google metadata
 * @property {number} version - Used for migrations. Current version is 1
 *
 */

/**
 * @typedef {object} ContactDocument
 * @property {object} indexes - Used to sort contacts in different ways
 * @property {string} indexes.byFamilyNameGivenNameEmailCozyUrl - Index for sorting
 * @property {string} displayName - Displayed name in cozy applications
 * @property {string} [fullname] - Unstructured representation of the name (example: "Dr. Gregory House, M.D.")
 * @property {ContactName} [name] - Structured representation of the name
 * @property {string} [birthday] - Birthday (example: "1959-05-15")
 * @property {string} [note] - Note
 * @property {Array<ContactEmail>} [email] - Email addresses
 * @property {Array<ContactAddress>} [address] - Addresses
 * @property {Array<ContactPhone>} [phone] - Phone numbers
 * @property {Array<ContactCozy>} [cozy] - Cozy instances
 * @property {string} company - Company
 * @property {string} jobTitle - Job title
 * @property {boolean} [trashed] - true if the contact is marked for removal and will be deleted soon (e.g. after remote deletion is confirmed)
 * @property {boolean} me - Whether the contact matches the cozy owner (defaults to false)
 * @property {Array<string>} [nationalities] - 2-letter iso3166 country codes (can be set in io.cozy.identities for legal reasons in Banks)
 * @property {string} [birthcity] - City of birth of a contact (can be set in io.cozy.identities for legal reasons in Banks)
 * @property {string} [birthcountry] - Country of birth of a contact (can be set in io.cozy.identities for legal reasons in Banks)
 * @property {ContactMetadata} metadata - Previous metadata information
 * @typedef {CozyClientDocument & ContactDocument} IOCozyContact - An io.cozy.contacts document
 */

/**
 * @typedef {object} ClientError
 * @property {string} [status]
 */

/**
 * @typedef FilePlugin
 * @property {object} [externalDataDirectory]
 * @property {object} [cacheDirectory]
 * @property {object} [externalCacheDirectory]
 * @property {object} [dataDirectory]
 */

/**
 * @typedef InAppBrowser
 * @property {Function} open
 */

/**
 * @typedef {object} AppMetadata
 * @property {string} [slug] - slug of the application/konnector which created this data
 * @property {string} [version] - version of the application/konnector which created this data
 * @property {string} [sourceAccount] - id of the account associated to the konnector which created this data
 * @property {string} [sourceAccountIdentifier] - source account identifier account associated to the konnector which created this data
 */

/**
 * @typedef {object} ClientCapabilities
 * @property {boolean} [can_auth_with_oidc] - Whether OIDC login is possible with this Cozy
 * @property {boolean} [can_auth_with_password] - Whether password login is possible with this Cozy
 * @property {boolean} [can_auth_with_magic_links] - Whether magic-link login is possible with this Cozy
 * @property {boolean} [file_versioning] - Whether file versioning is active on this Cozy
 * @property {boolean} [flat_subdomains] - Whether the stack has been configured to use flat subdomains
 * @description Read more about client capabilities here https://docs.cozy.io/en/cozy-stack/settings/#get-settingscapabilities.
 */

/**
 * @typedef Cordova
 * @property {FilePlugin} file
 * @property {InAppBrowser} InAppBrowser
 * @property {object} plugins
 */

/**
 * @typedef  CordovaWindow
 * @property {Cordova} cordova
 * @property {object} SafariViewController
 * @property {Function} resolveLocalFileSystemURL
 * @property {Function} handleOpenURL
 */

/**
 * @typedef {object} CouchDBDocument - A document
 * @property {string} _id - Id of the document
 * @property {string} _rev - Current revision of the document
 * @property {boolean} [_deleted] - When the document has been deleted
 * @property {object} [relationships] - Relationships of the document
 */

/**
 * @typedef {object} CouchDBBulkResult - An item of the CouchDB bulk docs response
 * @property {boolean} ok
 * @property {string} id
 * @property {string} rev
 * @property {string?} error?
 * @property {string?} reason?
 */

/**
 * @typedef {Array<string>|string} ViewKey
 * @typedef {string} DocId
 * @typedef {[ViewKey, DocId]} CouchDBViewCursor
 */

/**
 * @typedef {object} Theme
 * @property {string} id
 * @property {string} label
 * @property {string} icon
 * @property {Array<QualificationAttributes>} items
 * @property {Array<string>} [defaultItems]
 *
 * @typedef {Array<Theme>} ThemesList
 *
 * @typedef {'identity'|'family'|'work_study'|'health'|'home'|'transport'|'finance'|'invoice'|'others'} ThemesLabels
 */

/**
 * @typedef {object} QualificationAttributes
 * @property {string} label
 * @property {string} [purpose]
 * @property {string} [sourceCategory]
 * @property {string} [sourceSubCategory]
 * @property {Array<string>} [subjects]
 */

/**
 * @typedef {'identity_photo'|'national_id_card'|'passport'|'residence_permit'|'family_record_book'|'birth_certificate'|'driver_license'|'other_identity_document'|'citizen_registration_certificate'|'personal_sporting_licence'|'electoral_card'|'note_identity_document'} IdentityLabel
 *
 * @typedef {'family_record_book'|'birth_certificate'|'wedding'|'pacs'|'divorce'|'large_family_card'|'caf'|'other_family_document'|'payment_proof_family_allowance'|'single_parent_benefit'|'note_family_document'|'person_insurance'} FamilyLabel
 *
 * @typedef {'diploma'|'work_contract'|'pay_sheet'|'unemployment_benefit'|'pension'|'gradebook'|'student_card'|'resume'|'motivation_letter'|'other_work_document'|'work_disability_recognition'|'school_attendance_certificate'|'employment_center_certificate'|'school_insurance_certificate'|'note_work_document'|'expense_claim'} WorkStudyLabels
 *
 * @typedef {'health_certificate'|'health_book'|'national_health_insurance_card'|'health_insurance_card'|'prescription'|'health_invoice'|'national_health_insurance_right_certificate'|'work_disability_recognition'|'pregnancy_medical_certificate'|'other_health_document'|'note_health_document'} HealthLabels
 *
 * @typedef {'phone_invoice'|'isp_invoice'|'telecom_invoice'|'energy_invoice'|'water_invoice'|'other_invoice'|'house_sale_agreeement'|'building_permit'|'technical_diagnostic_record'|'lease'|'rent_receipt'|'house_insurance'|'work_quote'|'work_invoice'|'other_house_document'|'unfit_for_habitation_declaration'|'accommodation_proof'|'note_house_document'|'real_estate_insurance'|'condition_report'} HomeLabels
 *
 * @typedef {'driver_license'|'vehicle_registration'|'car_insurance'|'mechanic_invoice'|'transport_invoice'|'other_transport_document'|'transport_card'|'note_transport_document'} TransportLabels
 *
 * @typedef {'fine'|'tax_return'|'tax_notice'|'tax_timetable'|'pay_sheet'|'receipt'|'other_tax_document'|'bank_details'|'bank_statement'|'loan_agreement'|'other_bank_document'|'payment_proof_family_allowance'|'other_revenue'|'single_parent_benefit'|'real_estate_tax'|'note_finance'|'expense_claim'} FinanceLabels
 *
 * @typedef {'phone_invoice'|'isp_invoice'|'telecom_invoice'|'energy_invoice'|'water_invoice'|'appliance_invoice'|'web_service_invoice'|'restaurant_invoice'|'work_invoice'|'transport_invoice'|'health_invoice'|'other_invoice'|'note_invoice'|'expense_claim'|'energy_contract'|'grocery_invoice'} InvoiceLabels
 *
 * @typedef {'personal_sporting_licence'|'other_activity_document'|'fidelity_card'|'library_card'|'note_activity_document'} ActivityLabels
 *
 * @typedef {'other_administrative_document'|'note_other'} OthersLabels
 *
 * @typedef {IdentityLabel|FamilyLabel|WorkStudyLabels|HealthLabels|HomeLabels|TransportLabels|FinanceLabels|InvoiceLabels|ActivityLabels|OthersLabels} ItemsLabels
 */

/**
 * @typedef {'national_id_card'|'other_identity_document'|'resume'|'work_disability_recognition'} iconPeopleLabels
 *
 * @typedef {'employment_center_certificate'|'motivation_letter'|'other_work_document'|'school_attendance_certificate'|'school_insurance_certificate'|'student_card'|'unemployment_benefit'|'work_contract'} iconWorkLabels
 *
 * @typedef {'fine'} iconJusticeLabels
 *
 * @typedef {'residence_permit'} iconGlobeLabels
 *
 * @typedef {'passport'} iconPlaneLabels
 *
 * @typedef {'library_card'} iconLibraryLabels
 *
 * @typedef {'identity_photo'} iconImageLabels
 *
 * @typedef {'fidelity_card'|'grocery_invoice'} iconShopLabels
 *
 * @typedef {'electoral_card'} iconGouvLabels
 *
 * @typedef {'diploma'|'gradebook'} iconSchoolLabels
 *
 * @typedef {'birth_certificate'} iconChildLabels
 *
 * @typedef {'receipt'} iconEmailLabels
 *
 * @typedef {'appliance_invoice'} iconLaudryLabels
 *
 * @typedef {'accommodation_proof'|'building_permit'|'condition_report'|'house_insurance'|'house_sale_agreeement'|'lease'|'mechanic_invoice'|'other_house_document'|'real_estate_insurance'|'rent_receipt'|'technical_diagnostic_record'|'unfit_for_habitation_declaration'|'work_invoice'|'work_quote'} iconHomeLabels
 *
 * @typedef {'loan_agreement'|'other_revenue'|'pay_sheet'|'payment_proof_family_allowance'|'pension'} iconBenefitLabels
 *
 * @typedef {'other_bank_document'} iconEuroLabels
 *
 * @typedef {'bank_details'} iconBankCheckLabels
 *
 * @typedef {'other_administrative_document'|'other_tax_document'|'real_estate_tax'|'tax_notice'|'tax_return'|'tax_timetable'} iconBankLabels
 *
 * @typedef {'car_insurance'|'driver_license'|'other_transport_document'|'transport_card'|'transport_invoice'|'vehicle_registration'} iconCarLabels
 *
 * @typedef {'energy_contract'|'energy_invoice'} iconLightningLabels
 *
 * @typedef {'isp_invoice'|'telecom_invoice'|'web_service_invoice'} iconTelecomLabels
 *
 * @typedef {'phone_invoice'} iconTelephoneLabels
 *
 * @typedef {'water_invoice'} iconWaterLabels
 *
 * @typedef {'expense_claim'} iconRemboursementLabels
 *
 * @typedef {'restaurant_invoice'} iconRestaurantLabels
 *
 * @typedef {'other_invoice'} iconBillLabels
 *
 * @typedef {'caf'|'citizen_registration_certificate'|'divorce'|'family_record_book'|'large_family_card'|'other_family_document'|'pacs'|'single_parent_benefit'|'wedding'} iconTeamLabels
 *
 * @typedef {'other_activity_document'|'personal_sporting_licence'} iconFitnessLabels
 *
 * @typedef {'health_book'|'health_certificate'|'health_insurance_card'|'health_invoice'|'national_health_insurance_card'|'national_health_insurance_right_certificate'|'other_health_document'|'person_insurance'|'pregnancy_medical_certificate'|'prescription'} iconHeartLabels
 *
 * @typedef {'bank_statement'} iconExchangeLabels
 *
 * @typedef {'note_activity_document'|'note_family_document'|'note_finance'|'note_health_document'|'note_house_document'|'note_identity_document'|'note_invoice'|'note_transport_document'|'note_work_document'} iconFileTypeNoteLabels
 */

/**
 * @typedef {'bank-check'|'bank'|'benefit'|'bill'|'car'|'child'|'email'|'euro'|'exchange'|'file-type-note'|'fitness'|'globe'|'gouv'|'heart'|'home'|'image'|'justice'|'laudry'|'library'|'lightning'|'people'|'plane'|'remboursement'|'restaurant'|'school'|'shop'|'team'|'telecom'|'telephone'|'water'|'work'} IconQualificationLabels
 */

/**
 * @typedef {{ icon: IconQualificationLabels, labels: Array<string> }} iconLabelPairs
 */

/**
 * @typedef {object} DACCMeasure
 * See https://github.com/cozy/DACC
 *
 * @property {string} measureName - It must match an existing measure name on the DACC server
 * @property {string} startDate - Start of the aggregation period. Should be in YYYY-MM-DD format
 * @property {number} value - The measured value on the aggregation period
 * @property {string} createdBy - The slug of the app creating the measure
 * @property {object} group1 - Should be a {key: value} where the key is set in the measure definition.
 * @property {object} group2 - Should be a {key: value} where the key is set in the measure definition.
 * @property {object} group3 - Should be a {key: value} where the key is set in the measure definition.
 */

/**
 * @typedef {object} DACCAggregatesParams
 * See https://github.com/cozy/DACC
 *
 * @property {string} measureName - It must match an existing measure name on the DACC server
 * @property {string} startDate - Start of the aggregation period. Should be in YYYY-MM-DD format
 * @property {string} endDate - End of the aggregation period. Should be in YYYY-MM-DD format
 */

/**
 * @typedef {Array<DACCAggregate>} DACCAggregatesResponse
 * See https://github.com/cozy/DACC
 */

/**
 * @typedef {object} DACCAggregate
 * See https://github.com/cozy/DACC
 *
 * @property {string} measureName - The name of the measures aggregate
 * @property {string} startDate - The aggregation start date
 * @property {number} sum - The aggregate sum
 * @property {number} count - The aggregate count
 * @property {number} countNotZero - The aggregate count of values different from zero
 * @property {number} avg - The aggregate average
 * @property {number} min - The aggregate min
 * @property {number} max - The aggregate max
 * @property {number} std - The aggregate standard deviation
 *
 */

/**
 * @typedef {object} Coordinates
 * @property {number} lat - The latitude, in decimal degrees
 * @property {number} lon - The longitude, in decimal degrees
 */

/**
 * Receives the URL to present to the user as a parameter, and should return a promise that resolves with the URL the user was redirected to after accepting the permissions.
 *
 * @callback OpenURLCallback
 * @param {string} url - URL to present to the user
 */

/**
 * A session code generated by the cozy-stack that can be used to create a session
 *
 * More information: https://docs.cozy.io/en/cozy-stack/auth/#post-authsession_code
 *
 * @typedef {string} SessionCode
 */

/**
 * An object containing a code verifier and a code challenge that can be used in a
 * PKCE verification process
 *
 * More information: https://docs.cozy.io/en/cozy-stack/auth/#pkce-extension
 *
 * @typedef {object} PKCECodes
 * @property {string} [codeVerifier]
 * @property {string} [codeChallenge]
 */

/**
 * Subdomain type for a Cozy. Can be flat or nested subdomains
 *
 * Example of 'flat' domain: https://claude-notes.somedomain.fr
 * Example of 'nested' domain: https://notes.claude.somedomain.fr
 *
 * @typedef {'flat'|'nested'} SubdomainType
 */

/**
 * Represents the different parts of a deconstructed Cozy link
 *
 * @typedef {object} CozyLinkData
 * @property {string} cozyBaseDomain - The Cozy's domain (i.e. 'mycozy.cloud')
 * @property {string} cozyName - The Cozy's name (i.e. 'claude')
 * @property {string} [hash] - The link's path (i.e. '#/folder/SOME_FOLDER_ID')
 * @property {string} [pathname] - The link's path (i.e. '/public/')
 * @property {string} protocol - The link's protocol (i.e. 'https')
 * @property {string} [searchParams] - The link's searchParams (i.e. 'id=SOME_FOLDER_ID&sharecode=SOME_SHARECODE')
 * @property {string} slug - The link's slug (i.e. 'drive' or 'notes)
 */

/**
 * Represents the different parts of a deconstructed redirect link
 *
 * @typedef {object} RedirectLinkData
 * @property {string} slug - The redirect link's slug (i.e. 'drive')
 * @property {string} pathname - The redirect link's path (i.e. 'public')
 * @property {string} hash - The redirect link's path (i.e. '/folder/SOME_FOLDER_ID')
 */

/**
 * Represents available options of generateNewFileNameOnConflict method
 *
 * @typedef {object} ConflictOptions
 * @property {string} [delimiter] - Delimiter before the incremented number. Default to '_'
 */

/**
 * Template to type useState
 *
 * @template T
 * @typedef {[T, import('react').Dispatch<import('react').SetStateAction<T>>]} useState
 */

/**
 * Represents the Cozy's instance parameters
 *
 * @typedef {object} InstanceData
 * @property {string} email - The email of the instance
 * @property {string} locale - The locale used on the server
 * @property {string} [public_name] - The public displayed name of the instance
 * @property {string} [uuid] - UUID associated with the instance
 * @property {string} [context] - The name of the context attached to the instance
 * @property {string} [default_redirection] - Redirect to a specific route after the login (format: 'appslug/#/path/to/route'). This value has priority over the Context's default_redirection
 * @property {boolean} [onboarding_finished] - Whether or not the onboarding is complete
 * @property {boolean} [password_defined] - Whether or not the Cozy has a password defined (i.e. may be false for OIDC instances)
 * @property {'basic' | 'two_factor_mail'} [auth_mode] - Authentication type (basic or 2FA)
 * @property {string} [oidc_id] - An identifier to check authentication from OIDC
 * @property {string} [tos] - Terms of Service signed version
 * @property {string} [tos_latest] - Terms of Service latest version
 */

/**
 * Represents the Cozy's instance parameters
 *
 * @typedef {object} Instance
 * @property {InstanceData} data - data from Instance Query
 */

/**
 * Represents the Cozy's context parameters
 *
 * @typedef {object} ContextData
 * @property {string} [default_redirection] - Redirect to a specific route after the login (format: 'appslug/#/path/to/route')
 * @property {string} [onboarded_redirection] - Redirect to a specific route after the onboarding (format: appslug/#/path/to/route')
 * @property {string} [help_link] - Link that the user can use to get help (i.e. 'https://forum.cozy.io/')
 * @property {string} [manager_url] - Url of the instance's Manager that can be use to enable/disable premium features
 * @property {boolean} [enable_premium_links] - Whether or not the Cozy can show links to the Manager in order to enable/disable premium features
 */

/**
 * Represents the Cozy's context parameters
 *
 * @typedef {object} Context
 * @property {ContextData} data - data from Context Query
 */

/**
 * Represents the Cozy's disk usage
 *
 * @typedef {object} DiskUsageData
 * @property {string} [quota] - Value in bytes representing the maximum space available. Omitted means unlimited
 * @property {string} used - Value in bytes representing the space used
 * @property {string} files - Value in bytes representing the space used by files in their last version
 * @property {string} versions - Value in bytes representing the space used by files in their older version
 * @property {string} [trash] - Value in bytes representing the space used by files in the trash
 */

/**
 * Represents the Cozy's disk usage
 *
 * @typedef {object} DiskUsage
 * @property {DiskUsageData} data - data from DiskUsage Query
 */

/**
 * Represents the Cozy's instance info (instance level parameters, context level parameters and disk usage)
 *
 * @typedef {object} InstanceInfo
 * @property {boolean} isLoaded - Whether or not the queries have been loaded
 * @property {Instance} instance - The Cozy's instance parameters
 * @property {Context} context - The Cozy's context parameters
 * @property {DiskUsage} diskUsage - The Cozy's disk usage
 */
var _default = {};
exports.default = _default;

/***/ }),
/* 607 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireWildcard = __webpack_require__(22);

var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.normalizeAppFromRegistry = exports.APPS_REGISTRY_DOCTYPE = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(6));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(7));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));

var _createClass2 = _interopRequireDefault(__webpack_require__(13));

var _inherits2 = _interopRequireDefault(__webpack_require__(18));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(19));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(16));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(9));

var _DocumentCollection2 = _interopRequireWildcard(__webpack_require__(26));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var APPS_REGISTRY_DOCTYPE = 'io.cozy.apps_registry';
exports.APPS_REGISTRY_DOCTYPE = APPS_REGISTRY_DOCTYPE;

var normalizeAppFromRegistry = function normalizeAppFromRegistry(data, doctype) {
  var _data$latest_version;

  // The registry don't return a id, so we use the slug as id.
  // Without id the document can't be stored in the cache.
  var id = "".concat(data.type === 'webapp' ? 'io.cozy.apps' : 'io.cozy.konnectors', "/").concat(data.slug);

  var attributes = _objectSpread(_objectSpread({}, data.attributes), (_data$latest_version = data.latest_version) === null || _data$latest_version === void 0 ? void 0 : _data$latest_version.manifest);

  return _objectSpread({}, (0, _DocumentCollection2.normalizeDoc)(_objectSpread(_objectSpread({}, data), {}, {
    attributes: attributes,
    id: id,
    _id: id
  }), doctype));
};
/**
 * Extends `DocumentCollection` API along with specific methods for `io.cozy.apps_registry`.
 */


exports.normalizeAppFromRegistry = normalizeAppFromRegistry;

var AppsRegistryCollection = /*#__PURE__*/function (_DocumentCollection) {
  (0, _inherits2.default)(AppsRegistryCollection, _DocumentCollection);

  var _super = _createSuper(AppsRegistryCollection);

  function AppsRegistryCollection(stackClient) {
    var _this;

    (0, _classCallCheck2.default)(this, AppsRegistryCollection);
    _this = _super.call(this, APPS_REGISTRY_DOCTYPE, stackClient);
    _this.endpoint = '/registry/';
    return _this;
  }
  /**
   * Fetches an app from the registry.
   *
   * @param  {string} slug - Slug of the app
   * @returns {Promise<{data: object}>} JsonAPI response containing normalized document as data attribute
   * @throws {FetchError}
   */


  (0, _createClass2.default)(AppsRegistryCollection, [{
    key: "get",
    value: function () {
      var _get = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(slug) {
        var _this2 = this;

        var resp;
        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return this.stackClient.fetchJSON('GET', "".concat(this.endpoint).concat(slug));

              case 2:
                resp = _context.sent;

                if (!(slug === 'maintenance')) {
                  _context.next = 5;
                  break;
                }

                return _context.abrupt("return", {
                  data: resp.map(function (data) {
                    return normalizeAppFromRegistry(data, _this2.doctype);
                  })
                });

              case 5:
                return _context.abrupt("return", {
                  data: normalizeAppFromRegistry(resp, this.doctype)
                });

              case 6:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function get(_x) {
        return _get.apply(this, arguments);
      }

      return get;
    }()
  }, {
    key: "create",
    value: function () {
      var _create = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2() {
        return _regenerator.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                throw new Error('create() method is not available for AppsRegistryCollection');

              case 1:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));

      function create() {
        return _create.apply(this, arguments);
      }

      return create;
    }()
  }, {
    key: "destroy",
    value: function () {
      var _destroy = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3() {
        return _regenerator.default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                throw new Error('destroy() method is not available for AppsRegistryCollection');

              case 1:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3);
      }));

      function destroy() {
        return _destroy.apply(this, arguments);
      }

      return destroy;
    }()
  }]);
  return AppsRegistryCollection;
}(_DocumentCollection2.default);

var _default = AppsRegistryCollection;
exports.default = _default;

/***/ }),
/* 608 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireWildcard = __webpack_require__(22);

var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getIconURL = exports.default = exports._getIconURL = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(6));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(7));

var _types = __webpack_require__(262);

var _memoize = _interopRequireWildcard(__webpack_require__(609));

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

/**
 * Get Icon source Url
 *
 * @param  {object}  app - Apps data - io.cozy.apps
 * @param  {string}  slug - Slug - string
 * @param  {string|undefined} domain - Host to use in the origin (e.g. cozy.tools)
 * @param  {string} protocol - Url protocol (e.g. http / https)
 * @returns {string}  Source Url of icon
 * @private
 * @throws {Error} When cannot fetch or get icon source
 */
var loadIcon = function loadIcon(app, slug, domain, protocol) {
  if (!domain) throw new Error('Cannot fetch icon: missing domain');

  var source = _getAppIconURL(app, slug, domain, protocol);

  if (!source) {
    throw new Error("Cannot get icon source for app ".concat(app.name));
  }

  return source;
};
/**
 * Get App Icon URL
 *
 * @param  {object}  app - Apps data - io.cozy.apps or Slug - string
 * @param  {string}  slug - Slug - string
 * @param  {string|undefined} domain - Host to use in the origin (e.g. cozy.tools)
 * @param  {string} protocol - Url protocol (e.g. http / https)
 * @private
 * @returns {string|null}  App Icon URL
 */


var _getAppIconURL = function _getAppIconURL(app, slug, domain, protocol) {
  var path = app && app.links && app.links.icon || _getRegistryIconPath(app, slug);

  return path ? "".concat(protocol, "//").concat(domain).concat(path) : null;
};
/**
 * Get Registry Icon Path
 *
 * @param  {object}  app - Apps data - io.cozy.apps or Slug - string
 * @param  {string}  slug - Slug - string
 * @returns {string|undefined}  Registry icon path
 * @private
 */


var _getRegistryIconPath = function _getRegistryIconPath(app, slug) {
  if (slug) {
    return "/registry/".concat(slug, "/icon");
  }

  return app && app.latest_version && app.latest_version.version && "/registry/".concat(app.slug, "/").concat(app.latest_version.version, "/icon");
};

var mimeTypes = {
  gif: 'image/gif',
  ico: 'image/vnd.microsoft.icon',
  jpeg: 'image/jpeg',
  jpg: 'image/jpeg',
  png: 'image/png',
  svg: 'image/svg+xml'
};
/**
 * Get icon extension
 *
 * @param {object} app io.cozy.apps or io.cozy.konnectors document
 * @param  {string} app.icon - App Icon
 * @param  {string} app.name - App Name
 * @returns {string}  icon extension
 * @private
 * @throws {Error} When problem while detecting icon mime type
 */

var getIconExtensionFromApp = function getIconExtensionFromApp(app) {
  if (!app.icon) {
    throw new Error("".concat(app.name, ": Cannot detect icon mime type since app has no icon"));
  }

  var extension = app.icon.split('.').pop();

  if (!extension) {
    throw new Error("".concat(app.name, ": Unable to detect icon mime type from extension (").concat(app.icon, ")"));
  }

  return extension;
};

var fallbacks = /*#__PURE__*/function () {
  var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(tries, check) {
    var err, _iterator, _step, _try, res;

    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _iterator = _createForOfIteratorHelper(tries);
            _context.prev = 1;

            _iterator.s();

          case 3:
            if ((_step = _iterator.n()).done) {
              _context.next = 18;
              break;
            }

            _try = _step.value;
            _context.prev = 5;
            _context.next = 8;
            return _try();

          case 8:
            res = _context.sent;
            check && check(res);
            return _context.abrupt("return", res);

          case 13:
            _context.prev = 13;
            _context.t0 = _context["catch"](5);
            err = _context.t0;

          case 16:
            _context.next = 3;
            break;

          case 18:
            _context.next = 23;
            break;

          case 20:
            _context.prev = 20;
            _context.t1 = _context["catch"](1);

            _iterator.e(_context.t1);

          case 23:
            _context.prev = 23;

            _iterator.f();

            return _context.finish(23);

          case 26:
            throw err;

          case 27:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, null, [[1, 20, 23, 26], [5, 13]]);
  }));

  return function fallbacks(_x, _x2) {
    return _ref.apply(this, arguments);
  };
}();
/**
 * Fetch application/konnector that is installed
 *
 * @private
 */


var fetchAppOrKonnector = function fetchAppOrKonnector(stackClient, type, slug) {
  return stackClient.fetchJSON('GET', "/".concat(type, "s/").concat(slug)).then(function (x) {
    return x.data.attributes;
  });
};
/**
 * Fetch application/konnector from the registry
 *
 * @private
 */


var fetchAppOrKonnectorViaRegistry = function fetchAppOrKonnectorViaRegistry(stackClient, type, slug) {
  return stackClient.fetchJSON('GET', "/registry/".concat(slug)).then(function (x) {
    return x.latest_version.manifest;
  });
};
/**
 * Get Icon URL using blob mechanism if OAuth connected
 * or using preloaded url when blob not needed
 *
 * @param  {CozyStackClient}  stackClient - CozyStackClient
 * @param  {object} opts - Options
 * @param  {string} opts.type - Options type
 * @param  {string|undefined} opts.slug - Options slug
 * @param  {object|string|undefined}  opts.appData - Apps data - io.cozy.apps
 * @param  {string} [opts.priority='stack'] - Options priority
 * @returns {Promise<string>} DOMString containing URL source or a URL representing the Blob .
 * @private
 * @throws {Error} while fetching icon, or unknown image extension
 */


var _getIconURL = /*#__PURE__*/function () {
  var _ref2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(stackClient, opts) {
    var type, slug, appData, _opts$priority, priority, iconDataFetchers, resp, icon, app, appDataFetchers, ext, _URL, domain, protocol;

    return _regenerator.default.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            type = opts.type, slug = opts.slug, appData = opts.appData, _opts$priority = opts.priority, priority = _opts$priority === void 0 ? 'stack' : _opts$priority;

            if (!stackClient.oauthOptions) {
              _context2.next = 29;
              break;
            }

            iconDataFetchers = [function () {
              return stackClient.fetch('GET', "/".concat(type, "s/").concat(slug, "/icon"));
            }, function () {
              return stackClient.fetch('GET', "/registry/".concat(slug, "/icon"));
            }];

            if (priority === 'registry') {
              iconDataFetchers.reverse();
            }

            _context2.next = 6;
            return fallbacks(iconDataFetchers, function (resp) {
              if (!resp.ok) {
                throw new Error("Error while fetching icon ".concat(resp.statusText));
              }
            });

          case 6:
            resp = _context2.sent;
            _context2.next = 9;
            return resp.blob();

          case 9:
            icon = _context2.sent;

            if (icon.type) {
              _context2.next = 26;
              break;
            }

            // iOS10 does not set correctly mime type for images, so we assume
            // that an empty mime type could mean that the app is running on iOS10.
            // For regular images like jpeg, png or gif it still works well in the
            // Safari browser but not for SVG.
            // So let's set a mime type manually. We cannot always set it to
            // image/svg+xml and must guess the mime type based on the icon attribute
            // from app/manifest
            // See https://stackoverflow.com/questions/38318411/uiwebview-on-ios-10-beta-not-loading-any-svg-images
            appDataFetchers = [function () {
              return fetchAppOrKonnector(stackClient, type, slug);
            }, function () {
              return fetchAppOrKonnectorViaRegistry(stackClient, type, slug);
            }];

            if (priority === 'registry') {
              appDataFetchers.reverse();
            }

            _context2.t1 = appData;

            if (_context2.t1) {
              _context2.next = 18;
              break;
            }

            _context2.next = 17;
            return fallbacks(appDataFetchers);

          case 17:
            _context2.t1 = _context2.sent;

          case 18:
            _context2.t0 = _context2.t1;

            if (_context2.t0) {
              _context2.next = 21;
              break;
            }

            _context2.t0 = {};

          case 21:
            app = _context2.t0;
            ext = getIconExtensionFromApp(app);

            if (mimeTypes[ext]) {
              _context2.next = 25;
              break;
            }

            throw new Error("Unknown image extension \"".concat(ext, "\" for app ").concat(app.name));

          case 25:
            icon = new Blob([icon], {
              type: mimeTypes[ext]
            });

          case 26:
            return _context2.abrupt("return", URL.createObjectURL(icon));

          case 29:
            _context2.prev = 29;
            _URL = new URL(stackClient.uri), domain = _URL.host, protocol = _URL.protocol;
            return _context2.abrupt("return", loadIcon(appData, slug, domain, protocol));

          case 34:
            _context2.prev = 34;
            _context2.t2 = _context2["catch"](29);
            throw new Error("Cannot fetch icon: invalid stackClient.uri: ".concat(_context2.t2.message));

          case 37:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2, null, [[29, 34]]);
  }));

  return function _getIconURL(_x3, _x4) {
    return _ref2.apply(this, arguments);
  };
}();
/**
 * Get Icon URL using blob mechanism if OAuth connected
 * or using preloaded url when blob not needed
 *
 */


exports._getIconURL = _getIconURL;

var getIconURL = function getIconURL() {
  return _getIconURL.apply(this, arguments).catch(function () {
    return new _memoize.ErrorReturned();
  });
};

exports.getIconURL = getIconURL;

var _default = (0, _memoize.default)(getIconURL, {
  maxDuration: 300 * 1000,
  key: function key(stackClient, opts) {
    var type = opts.type,
        slug = opts.slug,
        priority = opts.priority;
    return stackClient.uri + +':' + type + ':' + slug + ':' + priority;
  }
});

exports.default = _default;

/***/ }),
/* 609 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ErrorReturned = exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));

var _inherits2 = _interopRequireDefault(__webpack_require__(18));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(19));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(16));

var _wrapNativeSuper2 = _interopRequireDefault(__webpack_require__(93));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var ErrorReturned = /*#__PURE__*/function (_String) {
  (0, _inherits2.default)(ErrorReturned, _String);

  var _super = _createSuper(ErrorReturned);

  function ErrorReturned() {
    (0, _classCallCheck2.default)(this, ErrorReturned);
    return _super.apply(this, arguments);
  }

  return ErrorReturned;
}( /*#__PURE__*/(0, _wrapNativeSuper2.default)(String));
/**
 * Delete outdated results from cache
 */


exports.ErrorReturned = ErrorReturned;

var garbageCollect = function garbageCollect(cache, maxDuration) {
  var now = Date.now();

  for (var _i = 0, _Object$keys = Object.keys(cache); _i < _Object$keys.length; _i++) {
    var key = _Object$keys[_i];
    var delta = now - cache[key].date;

    if (delta > maxDuration) {
      delete cache[key];
    }
  }
};

var isPromise = function isPromise(maybePromise) {
  return typeof maybePromise === 'object' && typeof maybePromise.then === 'function';
};
/**
 * Memoize with maxDuration and custom key
 */


var memoize = function memoize(fn, options) {
  var cache = {};
  return function () {
    var key = options.key.apply(null, arguments);
    garbageCollect(cache, options.maxDuration);
    var existing = cache[key];

    if (existing) {
      return existing.result;
    } else {
      var result = fn.apply(this, arguments);
      cache[key] = {
        result: result,
        date: Date.now()
      };
      /**
       * If the result is a promise and this promise
       * failed or resolved with a specific error (aka ErrorReturned),
       * let's remove the result from the cache since we don't want to
       * memoize error
       */

      if (isPromise(result)) {
        result.then(function (v) {
          if (v instanceof ErrorReturned) {
            delete cache[key];
          }
        }).catch(function (e) {
          delete cache[key];
        });
      }

      return result;
    }
  };
};

var _default = memoize;
exports.default = _default;

/***/ }),
/* 610 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.shouldXMLHTTPRequestBeUsed = exports.fetchWithXMLHttpRequest = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(6));

var _slicedToArray2 = _interopRequireDefault(__webpack_require__(32));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(7));

var _memoize = _interopRequireDefault(__webpack_require__(139));

var headersFromString = function headersFromString(headerString) {
  return new Headers(headerString.split('\r\n').map(function (x) {
    return x.split(':', 2);
  }).filter(function (x) {
    return x.length == 2;
  }));
};
/**
 * Returns a `fetch()` like response but uses XHR.
 * XMLHTTPRequest provides upload progress events unlike fetch.
 *
 * @private
 * @param {string} fullpath - Route path
 * @param {object} options - Fetch options
 * @param {Function} options.onUploadProgress - Callback to receive upload progress events
 */


var fetchWithXMLHttpRequest = /*#__PURE__*/function () {
  var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3(fullpath, options) {
    var response;
    return _regenerator.default.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            _context3.next = 2;
            return new Promise(function (resolve, reject) {
              var xhr = new XMLHttpRequest();

              if (options.onUploadProgress && xhr.upload) {
                xhr.upload.addEventListener('progress', options.onUploadProgress, false);
              }

              xhr.onload = function () {
                if (this.readyState == 4) {
                  resolve(this);
                } else {
                  reject(this);
                }
              };

              xhr.onerror = function (err) {
                reject(err);
              };

              xhr.open(options.method, fullpath, true);
              xhr.withCredentials = true;

              for (var _i = 0, _Object$entries = Object.entries(options.headers); _i < _Object$entries.length; _i++) {
                var _Object$entries$_i = (0, _slicedToArray2.default)(_Object$entries[_i], 2),
                    headerName = _Object$entries$_i[0],
                    headerValue = _Object$entries$_i[1];

                xhr.setRequestHeader(headerName, headerValue);
              }

              xhr.send(options.body);
            });

          case 2:
            response = _context3.sent;
            return _context3.abrupt("return", {
              headers: headersFromString(response.getAllResponseHeaders()),
              ok: response.status >= 200 && response.status < 300,
              text: function () {
                var _text = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {
                  return _regenerator.default.wrap(function _callee$(_context) {
                    while (1) {
                      switch (_context.prev = _context.next) {
                        case 0:
                          return _context.abrupt("return", response.responseText);

                        case 1:
                        case "end":
                          return _context.stop();
                      }
                    }
                  }, _callee);
                }));

                function text() {
                  return _text.apply(this, arguments);
                }

                return text;
              }(),
              json: function () {
                var _json = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2() {
                  return _regenerator.default.wrap(function _callee2$(_context2) {
                    while (1) {
                      switch (_context2.prev = _context2.next) {
                        case 0:
                          return _context2.abrupt("return", JSON.parse(response.responseText));

                        case 1:
                        case "end":
                          return _context2.stop();
                      }
                    }
                  }, _callee2);
                }));

                function json() {
                  return _json.apply(this, arguments);
                }

                return json;
              }(),
              status: response.status,
              statusText: response.statusText
            });

          case 4:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  }));

  return function fetchWithXMLHttpRequest(_x, _x2) {
    return _ref.apply(this, arguments);
  };
}();

exports.fetchWithXMLHttpRequest = fetchWithXMLHttpRequest;
var doesXHRSupportLoadAndProgress = (0, _memoize.default)(function () {
  var xhr = new XMLHttpRequest();
  return 'onload' in xhr && 'onprogress' in xhr;
});

var shouldXMLHTTPRequestBeUsed = function shouldXMLHTTPRequestBeUsed(method, path, options) {
  return Boolean(options.onUploadProgress) && doesXHRSupportLoadAndProgress();
};

exports.shouldXMLHTTPRequestBeUsed = shouldXMLHTTPRequestBeUsed;

/***/ }),
/* 611 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(6));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(7));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));

var _createClass2 = _interopRequireDefault(__webpack_require__(13));

/**
 * Caches promises while they are pending
 * Serves to dedupe equal queries requested at the same time
 */
var PromiseCache = /*#__PURE__*/function () {
  function PromiseCache() {
    (0, _classCallCheck2.default)(this, PromiseCache);

    /**
     * Holds pending promises
     *
     * @type {Object.<string, Promise>}
     */
    this.pending = {};
  }
  /**
   * Tries to find a pending promise corresponding to the result of keyFunc
   * - If not found, promiseFunc is executed and the resulting promise is stored while it's pending
   * - If found, it is immediately returned
   *
   * @template T
   * @param  {function(): Promise<T>} promiseFunc - Not executed only if an "equal" promise is already pending.
   * @param  {function(): string} keyFunc - Returns a key to find in cache to find a pending promise.
   * @returns {Promise<T>}
   */


  (0, _createClass2.default)(PromiseCache, [{
    key: "exec",
    value: function () {
      var _exec = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(promiseFunc, keyFunc) {
        var key, already, prom, response;
        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                key = keyFunc();
                already = this.pending[key];

                if (already) {
                  prom = already;
                } else {
                  prom = promiseFunc();
                  this.pending[key] = prom;
                }

                _context.prev = 3;
                _context.next = 6;
                return prom;

              case 6:
                response = _context.sent;
                return _context.abrupt("return", response);

              case 8:
                _context.prev = 8;
                this.pending[key] = null;
                return _context.finish(8);

              case 11:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this, [[3,, 8, 11]]);
      }));

      function exec(_x, _x2) {
        return _exec.apply(this, arguments);
      }

      return exec;
    }()
    /**
     *
     * @param {function(): string} keyFunc - Returns a key to find in cache to find a pending promise.
     * @returns {Promise | null}
     */

  }, {
    key: "get",
    value: function get(keyFunc) {
      var key = keyFunc();
      var already = this.pending[key];
      if (already) return already;
      return null;
    }
  }]);
  return PromiseCache;
}();

var _default = PromiseCache;
exports.default = _default;

/***/ }),
/* 612 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _wrapNativeSuper2 = _interopRequireDefault(__webpack_require__(93));

var _regenerator = _interopRequireDefault(__webpack_require__(6));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(7));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(9));

var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(50));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));

var _createClass2 = _interopRequireDefault(__webpack_require__(13));

var _inherits2 = _interopRequireDefault(__webpack_require__(18));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(19));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(16));

var _CozyStackClient2 = _interopRequireDefault(__webpack_require__(254));

var _AccessToken = _interopRequireDefault(__webpack_require__(280));

var _logDeprecate = _interopRequireDefault(__webpack_require__(285));

var _errors = _interopRequireDefault(__webpack_require__(56));

var _logger = _interopRequireDefault(__webpack_require__(51));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

/**
 * @typedef {string} SessionCode
 */
var defaultoauthOptions = {
  clientID: '',
  clientName: '',
  clientKind: '',
  clientSecret: '',
  clientURI: '',
  registrationAccessToken: '',
  redirectURI: '',
  softwareID: '',
  softwareVersion: '',
  logoURI: '',
  policyURI: '',
  notificationPlatform: '',
  notificationDeviceToken: ''
};
/**
 * Specialized `CozyStackClient` for mobile, implementing stack registration
 * through OAuth.
 */

var OAuthClient = /*#__PURE__*/function (_CozyStackClient) {
  (0, _inherits2.default)(OAuthClient, _CozyStackClient);

  var _super = _createSuper(OAuthClient);

  function OAuthClient(_ref) {
    var _this;

    var oauth = _ref.oauth,
        _ref$scope = _ref.scope,
        scope = _ref$scope === void 0 ? [] : _ref$scope,
        onTokenRefresh = _ref.onTokenRefresh,
        options = (0, _objectWithoutProperties2.default)(_ref, ["oauth", "scope", "onTokenRefresh"]);
    (0, _classCallCheck2.default)(this, OAuthClient);
    _this = _super.call(this, options);

    _this.setOAuthOptions(_objectSpread(_objectSpread({}, defaultoauthOptions), oauth));

    if (oauth.token) {
      _this.setToken(oauth.token);
    }

    _this.scope = scope;
    _this.onTokenRefresh = onTokenRefresh;
    return _this;
  }
  /**
   * Checks if the client has his registration information from the server
   *
   * @returns {boolean} true if registered, false otherwise
   * @private
   */


  (0, _createClass2.default)(OAuthClient, [{
    key: "isRegistered",
    value: function isRegistered() {
      return this.oauthOptions.clientID !== '';
    }
    /**
     * Converts a camel-cased data set to snake case, suitable for sending to the OAuth server
     *
     * @param   {object} data Initial data
     * @returns {object} Formatted data
     * @private
     */

  }, {
    key: "snakeCaseOAuthData",
    value: function snakeCaseOAuthData(data) {
      var mappedFields = {
        softwareID: 'software_id',
        softwareVersion: 'software_version',
        clientID: 'client_id',
        clientName: 'client_name',
        clientKind: 'client_kind',
        clientURI: 'client_uri',
        logoURI: 'logo_uri',
        policyURI: 'policy_uri',
        notificationPlatform: 'notification_platform',
        notificationDeviceToken: 'notification_device_token',
        redirectURI: 'redirect_uris'
      };
      var result = {};
      Object.keys(data).forEach(function (fieldName) {
        var key = mappedFields[fieldName] || fieldName;
        var value = data[fieldName];
        result[key] = value;
      }); // special case: turn redirect_uris into an array

      if (result['redirect_uris'] && result['redirect_uris'] instanceof Array === false) result['redirect_uris'] = [result['redirect_uris']];
      return result;
    }
    /**
     * Converts a snake-cased data set to camel case, suitable for internal use
     *
     * @param   {object} data Initial data
     * @returns {object} Formatted data
     * @private
     */

  }, {
    key: "camelCaseOAuthData",
    value: function camelCaseOAuthData(data) {
      var mappedFields = {
        client_id: 'clientID',
        client_name: 'clientName',
        client_secret: 'clientSecret',
        registration_access_token: 'registrationAccessToken',
        software_id: 'softwareID',
        redirect_uris: 'redirectURI'
      };
      var result = {};
      Object.keys(data).forEach(function (fieldName) {
        var key = mappedFields[fieldName] || fieldName;
        var value = data[fieldName];
        result[key] = value;
      });
      return result;
    }
    /** Performs the HTTP call to register the client to the server */

  }, {
    key: "doRegistration",
    value: function doRegistration() {
      return this.fetchJSON('POST', '/auth/register', this.snakeCaseOAuthData({
        redirectURI: this.oauthOptions.redirectURI,
        clientName: this.oauthOptions.clientName,
        softwareID: this.oauthOptions.softwareID,
        clientKind: this.oauthOptions.clientKind,
        clientURI: this.oauthOptions.clientURI,
        logoURI: this.oauthOptions.logoURI,
        policyURI: this.oauthOptions.policyURI,
        softwareVersion: this.oauthOptions.softwareVersion,
        notificationPlatform: this.oauthOptions.notificationPlatform,
        notificationDeviceToken: this.oauthOptions.notificationDeviceToken
      }));
    }
    /**
     * Registers the currenly configured client with the OAuth server and
     * sets internal information from the server response
     *
     * @throws {Error} When the client is already registered
     * @returns {Promise} A promise that resolves with a complete list of client information, including client ID and client secret.
     */

  }, {
    key: "register",
    value: function () {
      var _register = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {
        var mandatoryFields, fields, missingMandatoryFields, data;
        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (!this.isRegistered()) {
                  _context.next = 2;
                  break;
                }

                throw new Error('Client already registered');

              case 2:
                mandatoryFields = ['redirectURI'];
                fields = Object.keys(this.oauthOptions);
                missingMandatoryFields = mandatoryFields.filter(function (fieldName) {
                  return fields[fieldName];
                });

                if (!(missingMandatoryFields.length > 0)) {
                  _context.next = 7;
                  break;
                }

                throw new Error("Can't register client : missing ".concat(missingMandatoryFields, " fields"));

              case 7:
                _context.next = 9;
                return this.doRegistration();

              case 9:
                data = _context.sent;
                this.setOAuthOptions(_objectSpread(_objectSpread({}, this.oauthOptions), {}, {
                  client_id: data.client_id,
                  client_name: data.client_name,
                  client_secret: data.client_secret,
                  registration_access_token: data.registration_access_token,
                  software_id: data.software_id
                }));
                return _context.abrupt("return", this.oauthOptions);

              case 12:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function register() {
        return _register.apply(this, arguments);
      }

      return register;
    }()
    /**
     * Unregisters the currenly configured client with the OAuth server.
     *
     * @throws {NotRegisteredException} When the client doesn't have it's registration information
     * @returns {Promise}
     */

  }, {
    key: "unregister",
    value: function () {
      var _unregister = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2() {
        var clientID;
        return _regenerator.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                if (this.isRegistered()) {
                  _context2.next = 2;
                  break;
                }

                throw new NotRegisteredException();

              case 2:
                clientID = this.oauthOptions.clientID;
                this.oauthOptions.clientID = '';
                return _context2.abrupt("return", this.fetchJSON('DELETE', "/auth/register/".concat(clientID), null, {
                  headers: {
                    Authorization: this.registrationAccessTokenToAuthHeader()
                  }
                }));

              case 5:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function unregister() {
        return _unregister.apply(this, arguments);
      }

      return unregister;
    }()
    /**
     * Fetches the complete set of client information from the server after it has been registered.
     *
     * @throws {NotRegisteredException} When the client doesn't have it's registration information
     * @returns {Promise}
     */

  }, {
    key: "fetchInformation",
    value: function () {
      var _fetchInformation = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3() {
        return _regenerator.default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                if (this.isRegistered()) {
                  _context3.next = 2;
                  break;
                }

                throw new NotRegisteredException();

              case 2:
                return _context3.abrupt("return", this.fetchJSON('GET', "/auth/register/".concat(this.oauthOptions.clientID), null, {
                  headers: {
                    Authorization: this.registrationAccessTokenToAuthHeader()
                  }
                }));

              case 3:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function fetchInformation() {
        return _fetchInformation.apply(this, arguments);
      }

      return fetchInformation;
    }()
    /**
     * Overwrites the client own information. This method will update both the local information and the remote information on the OAuth server.
     *
     * @throws {NotRegisteredException} When the client doesn't have it's registration information
     * @param   {object} information Set of information to update. Note that some fields such as `clientID` can't be updated.
     * @param   {boolean} resetSecret = false Optionnal, whether to reset the client secret or not
     * @returns {Promise} Resolves to a complete, updated list of client information
     */

  }, {
    key: "updateInformation",
    value: function () {
      var _updateInformation = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee4(information) {
        var resetSecret,
            mandatoryFields,
            data,
            result,
            _args4 = arguments;
        return _regenerator.default.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                resetSecret = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : false;

                if (this.isRegistered()) {
                  _context4.next = 3;
                  break;
                }

                throw new NotRegisteredException();

              case 3:
                mandatoryFields = {
                  clientID: this.oauthOptions.clientID,
                  clientName: this.oauthOptions.clientName,
                  redirectURI: this.oauthOptions.redirectURI,
                  softwareID: this.oauthOptions.softwareID
                };
                data = this.snakeCaseOAuthData(_objectSpread(_objectSpread({}, mandatoryFields), information));
                if (resetSecret) data['client_secret'] = this.oauthOptions.clientSecret;
                _context4.next = 8;
                return this.fetchJSON('PUT', "/auth/register/".concat(this.oauthOptions.clientID), data, {
                  headers: {
                    Authorization: this.registrationAccessTokenToAuthHeader()
                  }
                });

              case 8:
                result = _context4.sent;
                this.setOAuthOptions(_objectSpread(_objectSpread({}, data), result));
                return _context4.abrupt("return", this.oauthOptions);

              case 11:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function updateInformation(_x) {
        return _updateInformation.apply(this, arguments);
      }

      return updateInformation;
    }()
    /**
     * Generates a random state code to be used during the OAuth process
     *
     * @returns {string}
     */

  }, {
    key: "generateStateCode",
    value: function generateStateCode() {
      var STATE_SIZE = 16;
      var hasCrypto = typeof window !== 'undefined' && typeof window.crypto !== 'undefined' && typeof window.crypto.getRandomValues === 'function';
      var buffer;

      if (hasCrypto) {
        buffer = new Uint8Array(STATE_SIZE);
        window.crypto.getRandomValues(buffer);
      } else {
        buffer = new Array(STATE_SIZE);

        for (var i = 0; i < buffer.length; i++) {
          buffer[i] = Math.floor(Math.random() * 255);
        }
      }

      return btoa(String.fromCharCode.apply(null, buffer)).replace(/=+$/, '').replace(/\//g, '_').replace(/\+/g, '-');
    }
    /**
     * Generates the URL that the user should be sent to in order to accept the app's permissions.
     *
     * @throws {NotRegisteredException} When the client doesn't have it's registration information
     * @param {object} options - URL generation options
     * @param {string} options.stateCode - A random code to be included in the URl for security. Can be generated with `client.generateStateCode()`
     * @param {Array} [options.scopes] - An array of permission scopes for the token.
     * @param {SessionCode} [options.sessionCode] - A session code that can be used to create a session.
     * @param {string} [options.codeChallenge] - A code challenge that can be used in a PKCE verification process.
     * @returns {string} The URL
     */

  }, {
    key: "getAuthCodeURL",
    value: function getAuthCodeURL(_ref2) {
      var stateCode = _ref2.stateCode,
          _ref2$scopes = _ref2.scopes,
          scopes = _ref2$scopes === void 0 ? this.scope : _ref2$scopes,
          _ref2$sessionCode = _ref2.sessionCode,
          sessionCode = _ref2$sessionCode === void 0 ? undefined : _ref2$sessionCode,
          _ref2$codeChallenge = _ref2.codeChallenge,
          codeChallenge = _ref2$codeChallenge === void 0 ? undefined : _ref2$codeChallenge;
      if (!this.isRegistered()) throw new NotRegisteredException();
      var query = {
        client_id: this.oauthOptions.clientID,
        redirect_uri: this.oauthOptions.redirectURI,
        state: stateCode,
        response_type: 'code',
        scope: scopes.join(' ')
      };

      if (this.oauthOptions.registerToken) {
        query = _objectSpread(_objectSpread({}, query), {}, {
          registerToken: this.oauthOptions.registerToken
        });
      }

      if (sessionCode) {
        query = _objectSpread(_objectSpread({}, query), {}, {
          session_code: sessionCode
        });
      }

      if (codeChallenge) {
        query = _objectSpread(_objectSpread({}, query), {}, {
          code_challenge: codeChallenge,
          code_challenge_method: 'S256'
        });
      }

      return "".concat(this.uri, "/auth/authorize?").concat(this.dataToQueryString(query));
    }
  }, {
    key: "dataToQueryString",
    value: function dataToQueryString(data) {
      return Object.keys(data).map(function (param) {
        return "".concat(param, "=").concat(encodeURIComponent(data[param]));
      }).join('&');
    }
    /**
     * Retrieves the access code contained in the URL to which the user is redirected after accepting the app's permissions (the `redirectURI`).
     *
     * @throws {Error} The URL should contain the same state code as the one generated with `client.getAuthCodeURL()`. If not, it will throw an error
     * @param   {string} pageURL The redirected page URL, containing the state code and the access code
     * @param   {string} stateCode The state code that was contained in the original URL the user was sent to (see `client.getAuthCodeURL()`)
     * @returns {string} The access code
     */

  }, {
    key: "getAccessCodeFromURL",
    value: function getAccessCodeFromURL(pageURL, stateCode) {
      if (!stateCode) throw new Error('Missing state code');
      var params = new URL(pageURL).searchParams;
      var urlStateCode = params.get('state');
      var urlAccessCode = params.get('access_code');
      if (stateCode !== urlStateCode) throw new Error('Given state does not match url query state');
      return urlAccessCode;
    }
    /**
     * Exchanges an access code for an access token. This function does **not** update the client's token.
     *
     * @throws {NotRegisteredException} When the client doesn't have it's registration information
     * @param   {string} accessCode - The access code contained in the redirection URL — see `client.getAccessCodeFromURL()`
     * @param   {object} oauthOptionsArg — To use when OAuthClient is not yet registered (during login process)
     * @param   {string} uri — To use when OAuthClient is not yet registered (during login process)
     * @param   {string} codeVerifier — The PKCE code verifier (see https://docs.cozy.io/en/cozy-stack/auth/#pkce-extension)
     * @returns {Promise} A promise that resolves with an AccessToken object.
     */

  }, {
    key: "fetchAccessToken",
    value: function () {
      var _fetchAccessToken = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee5(accessCode, oauthOptionsArg, uri, codeVerifier) {
        var oauthOptions, data, result;
        return _regenerator.default.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                if (!(!this.isRegistered() && !oauthOptionsArg)) {
                  _context5.next = 2;
                  break;
                }

                throw new NotRegisteredException();

              case 2:
                oauthOptions = oauthOptionsArg || this.oauthOptions;
                data = {
                  grant_type: 'authorization_code',
                  code: accessCode,
                  client_id: oauthOptions.clientID,
                  client_secret: oauthOptions.clientSecret
                };

                if (codeVerifier) {
                  data = _objectSpread(_objectSpread({}, data), {}, {
                    code_verifier: codeVerifier
                  });
                }

                _context5.next = 7;
                return this.fetchJSON('POST', (uri || '') + '/auth/access_token', this.dataToQueryString(data), {
                  headers: {
                    'Content-Type': 'application/x-www-form-urlencoded'
                  }
                });

              case 7:
                result = _context5.sent;
                return _context5.abrupt("return", new _AccessToken.default(result));

              case 9:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function fetchAccessToken(_x2, _x3, _x4, _x5) {
        return _fetchAccessToken.apply(this, arguments);
      }

      return fetchAccessToken;
    }()
    /**
     * Used by the flagship application in order to create a token for the konnector with the given slug.
     * This token can then be used by the client-side konnector to make requests to cozy-stack.
     * The flagship app will need to use its own access token to request the konnector token.
     *
     * @param {string} slug - The slug of the konnector
     * @returns {Promise<string>} - A promise that resolves with a new token
     */

  }, {
    key: "fetchKonnectorToken",
    value: function () {
      var _fetchKonnectorToken = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee6(slug) {
        return _regenerator.default.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                _context6.prev = 0;
                _context6.next = 3;
                return this.fetchJSON('POST', "/auth/tokens/konnectors/".concat(slug));

              case 3:
                return _context6.abrupt("return", _context6.sent);

              case 6:
                _context6.prev = 6;
                _context6.t0 = _context6["catch"](0);
                throw new Error("oAuthClient.fetchKonnectorToken(): Could not create a token for the konnector with slug \"".concat(slug, "\". \n\n").concat(_context6.t0));

              case 9:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6, this, [[0, 6]]);
      }));

      function fetchKonnectorToken(_x6) {
        return _fetchKonnectorToken.apply(this, arguments);
      }

      return fetchKonnectorToken;
    }()
    /**
     * @typedef SessionCodeRes
     * @property {string} session_code The value of the session code
     */

    /**
     * Fetches a new session code. Only usable by the Flagship application
     *
     * @throws {NotRegisteredException} When the client isn't certified to be the Flagship application
     * @returns {Promise<SessionCodeRes>} A promise that resolves with a new session_code
     */

  }, {
    key: "fetchSessionCode",
    value: function () {
      var _fetchSessionCode = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee7() {
        return _regenerator.default.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                return _context7.abrupt("return", this.fetchJSON('POST', '/auth/session_code'));

              case 1:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7, this);
      }));

      function fetchSessionCode() {
        return _fetchSessionCode.apply(this, arguments);
      }

      return fetchSessionCode;
    }()
    /**
     * Fetches a new session code. Only usable by the Flagship application
     *
     * @throws {NotRegisteredException} When the client isn't certified to be the Flagship application
     * @returns {Promise<SessionCodeRes>} A promise that resolves with a new session_code
     */

  }, {
    key: "fetchSessionCodeWithPassword",
    value: function () {
      var _fetchSessionCodeWithPassword = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee8(_ref3) {
        var passwordHash, _ref3$twoFactorToken, twoFactorToken, _ref3$twoFactorPassco, twoFactorPasscode;

        return _regenerator.default.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                passwordHash = _ref3.passwordHash, _ref3$twoFactorToken = _ref3.twoFactorToken, twoFactorToken = _ref3$twoFactorToken === void 0 ? undefined : _ref3$twoFactorToken, _ref3$twoFactorPassco = _ref3.twoFactorPasscode, twoFactorPasscode = _ref3$twoFactorPassco === void 0 ? undefined : _ref3$twoFactorPassco;
                return _context8.abrupt("return", this.fetchJSON('POST', '/auth/session_code', {
                  passphrase: passwordHash,
                  two_factor_token: twoFactorToken,
                  two_factor_passcode: twoFactorPasscode
                }));

              case 2:
              case "end":
                return _context8.stop();
            }
          }
        }, _callee8, this);
      }));

      function fetchSessionCodeWithPassword(_x7) {
        return _fetchSessionCodeWithPassword.apply(this, arguments);
      }

      return fetchSessionCodeWithPassword;
    }()
    /**
     * @typedef AccessTokenRes
     * @property {string} email_verified_code The email verified code to skip 2FA
     * @property {string} access_token The OAuth access token
     * @property {string} refresh_token The OAuth refresh token
     * @property {string} token_type The OAuth token type
     * @property {string} scope The OAuth scope
     */

    /**
     * @typedef TwoFactorNeededRes
     * @property {string} two_factor_token The 2FA token
     */

    /**
     * Get OAuth access and register tokens without having to make OAuth dance
     *
     * This endpoint returns registration tokens only from a Flagship app,
     * otherwise it returns a session_code that should be used in an OAuth dance
     *
     * More info: https://docs.cozy.io/en/cozy-stack/flagship/
     * More info: https://docs.cozy.io/en/cozy-stack/auth/#post-authloginflagship
     *
     * @returns {Promise<AccessTokenRes|TwoFactorNeededRes|SessionCodeRes>} A promise that resolves with an access token, a session_code or a 2FA code
     */

  }, {
    key: "loginFlagship",
    value: function () {
      var _loginFlagship = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee9(_ref4) {
        var _ref4$emailVerifiedCo, emailVerifiedCode, passwordHash, _ref4$twoFactorToken, twoFactorToken, _ref4$twoFactorPassco, twoFactorPasscode;

        return _regenerator.default.wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                _ref4$emailVerifiedCo = _ref4.emailVerifiedCode, emailVerifiedCode = _ref4$emailVerifiedCo === void 0 ? undefined : _ref4$emailVerifiedCo, passwordHash = _ref4.passwordHash, _ref4$twoFactorToken = _ref4.twoFactorToken, twoFactorToken = _ref4$twoFactorToken === void 0 ? undefined : _ref4$twoFactorToken, _ref4$twoFactorPassco = _ref4.twoFactorPasscode, twoFactorPasscode = _ref4$twoFactorPassco === void 0 ? undefined : _ref4$twoFactorPassco;
                return _context9.abrupt("return", this.fetchJSON('POST', '/auth/login/flagship', {
                  client_id: this.oauthOptions.clientID,
                  client_secret: this.oauthOptions.clientSecret,
                  email_verified_code: emailVerifiedCode,
                  passphrase: passwordHash,
                  two_factor_token: twoFactorToken,
                  two_factor_passcode: twoFactorPasscode
                }));

              case 2:
              case "end":
                return _context9.stop();
            }
          }
        }, _callee9, this);
      }));

      function loginFlagship(_x8) {
        return _loginFlagship.apply(this, arguments);
      }

      return loginFlagship;
    }()
    /**
     * Retrieves a new access token by refreshing the currently used token.
     *
     * @throws {NotRegisteredException} When the client doesn't have it's registration information
     * @throws {Error} The client should already have an access token to use this function
     * @returns {Promise} A promise that resolves with a new AccessToken object
     */

  }, {
    key: "refreshToken",
    value: function () {
      var _refreshToken = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee10() {
        var data, result, newToken, revoked;
        return _regenerator.default.wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                if (this.isRegistered()) {
                  _context10.next = 2;
                  break;
                }

                throw new NotRegisteredException();

              case 2:
                if (this.token) {
                  _context10.next = 4;
                  break;
                }

                throw new Error('No token to refresh');

              case 4:
                data = {
                  grant_type: 'refresh_token',
                  refresh_token: this.token.refreshToken,
                  client_id: this.oauthOptions.clientID,
                  client_secret: this.oauthOptions.clientSecret
                };
                _context10.prev = 5;
                _context10.next = 8;
                return this.fetchJSONWithCurrentToken('POST', '/auth/access_token', this.dataToQueryString(data), {
                  headers: {
                    'Content-Type': 'application/x-www-form-urlencoded'
                  }
                });

              case 8:
                result = _context10.sent;
                newToken = new _AccessToken.default(_objectSpread({
                  refresh_token: this.token.refreshToken
                }, result));
                this.setToken(newToken);

                if (this.onTokenRefresh && typeof this.onTokenRefresh === 'function') {
                  this.onTokenRefresh(newToken);
                }

                return _context10.abrupt("return", newToken);

              case 15:
                _context10.prev = 15;
                _context10.t0 = _context10["catch"](5);

                if (!this.isRevocationError(_context10.t0)) {
                  _context10.next = 21;
                  break;
                }

                this.onRevocationChange(true);

                _logger.default.warn('Client has been revoked. Please authenticate again.');

                throw _context10.t0;

              case 21:
                if (!(_errors.default.EXPIRED_TOKEN.test(_context10.t0.message) || _errors.default.INVALID_TOKEN.test(_context10.t0.message) || _errors.default.INVALID_TOKEN_ALT.test(_context10.t0.message))) {
                  _context10.next = 28;
                  break;
                }

                _context10.next = 24;
                return this.checkForRevocation();

              case 24:
                revoked = _context10.sent;

                if (!revoked) {
                  _context10.next = 28;
                  break;
                }

                _logger.default.warn('Client has been revoked. Please authenticate again.');

                throw _context10.t0;

              case 28:
                throw _context10.t0;

              case 29:
              case "end":
                return _context10.stop();
            }
          }
        }, _callee10, this, [[5, 15]]);
      }));

      function refreshToken() {
        return _refreshToken.apply(this, arguments);
      }

      return refreshToken;
    }()
  }, {
    key: "exchangeOAuthSecret",
    value: function exchangeOAuthSecret(uri, secret) {
      return this.fetchJSON('POST', uri + '/auth/secret_exchange', {
        secret: secret
      });
    }
    /**
     * Updates the client's stored token
     *
     * @param {string} token = null The new token to use — can be a string, a json object or an AccessToken instance.
     */

  }, {
    key: "setToken",
    value: function setToken(token) {
      if (token) {
        this.token = token instanceof _AccessToken.default ? token : new _AccessToken.default(token);
      } else {
        this.token = null;
      }
    }
  }, {
    key: "setCredentials",
    value: function setCredentials(token) {
      (0, _logDeprecate.default)('setCredentials is deprecated, please replace by setToken');
      return this.setToken(token);
    }
    /**
     * Updates the OAuth informations
     *
     * @param {object} options Map of OAuth options
     */

  }, {
    key: "setOAuthOptions",
    value: function setOAuthOptions(options) {
      this.oauthOptions = this.camelCaseOAuthData(options);
    }
  }, {
    key: "resetClientId",
    value: function resetClientId() {
      this.oauthOptions.clientID = '';
    }
    /**
     * Reset the current OAuth client
     */

  }, {
    key: "resetClient",
    value: function resetClient() {
      this.resetClientId();
      this.setUri(null);
      this.setToken(null);
    }
    /**
     * Turns the client's registration access token into a header suitable for HTTP requests. Used in some queries to manipulate the client on the server side.
     *
     * @returns {string}
     * @private
     */

  }, {
    key: "registrationAccessTokenToAuthHeader",
    value: function registrationAccessTokenToAuthHeader() {
      if (!this.oauthOptions.registrationAccessToken) {
        throw new Error('No registration access token');
      }

      return 'Bearer ' + this.oauthOptions.registrationAccessToken;
    }
    /**
     * This method should be used in flagship app onboarding process to finalize the
     * cozy creation by setting the user password into the cozy-stack
     *
     * More info: https://docs.cozy.io/en/cozy-stack/settings/#post-settingspassphraseflagship
     *
     * @param {object} params - parameters needed to set passphrase
     * @param {string} params.registerToken - registration token provided by the onboarding link
     * @param {string} params.passwordHash - hash of the master password
     * @param {string} params.hint - hint for the master password
     * @param {string} params.key - key (crypted) used for the vault encryption
     * @param {string} params.publicKey - public key used for sharing ciphers from the vault
     * @param {string} params.privateKey - private key (crypted) used for sharing ciphers from the vault
     * @param {string} params.iterations - number of KDF iterations applied when hashing the master password
     * @returns {object} token - The OAauth token
     */

  }, {
    key: "setPassphraseFlagship",
    value: function setPassphraseFlagship(_ref5) {
      var registerToken = _ref5.registerToken,
          passwordHash = _ref5.passwordHash,
          hint = _ref5.hint,
          key = _ref5.key,
          publicKey = _ref5.publicKey,
          privateKey = _ref5.privateKey,
          iterations = _ref5.iterations;
      return this.fetchJSON('POST', '/settings/passphrase/flagship', {
        register_token: registerToken,
        passphrase: passwordHash,
        hint: hint,
        key: key,
        public_key: publicKey,
        private_key: privateKey,
        iterations: iterations,
        client_id: this.oauthOptions.clientID,
        client_secret: this.oauthOptions.clientSecret
      }, {
        // TODO: faut il mettre le header?
        headers: {
          Authorization: this.registrationAccessTokenToAuthHeader()
        }
      });
    }
    /**
     * Check if the OAuth client's has been revoked.
     * If this is the case, call the onRevocationChange callback
     *
     * @async
     * @returns {Promise<boolean>} A Promise that resolves to `false` if client is still valid, or `true` if it has been revoked.
     */

  }, {
    key: "checkForRevocation",
    value: function () {
      var _checkForRevocation = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee11() {
        return _regenerator.default.wrap(function _callee11$(_context11) {
          while (1) {
            switch (_context11.prev = _context11.next) {
              case 0:
                _context11.prev = 0;
                _context11.next = 3;
                return this.fetchInformation();

              case 3:
                return _context11.abrupt("return", false);

              case 6:
                _context11.prev = 6;
                _context11.t0 = _context11["catch"](0);

                if (!this.isRevocationError(_context11.t0)) {
                  _context11.next = 11;
                  break;
                }

                this.onRevocationChange(true);
                return _context11.abrupt("return", true);

              case 11:
                return _context11.abrupt("return", false);

              case 12:
              case "end":
                return _context11.stop();
            }
          }
        }, _callee11, this, [[0, 6]]);
      }));

      function checkForRevocation() {
        return _checkForRevocation.apply(this, arguments);
      }

      return checkForRevocation;
    }()
  }]);
  return OAuthClient;
}(_CozyStackClient2.default);

var NotRegisteredException = /*#__PURE__*/function (_Error) {
  (0, _inherits2.default)(NotRegisteredException, _Error);

  var _super2 = _createSuper(NotRegisteredException);

  function NotRegisteredException() {
    var _this2;

    var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'Client not registered or missing OAuth information';
    (0, _classCallCheck2.default)(this, NotRegisteredException);
    _this2 = _super2.call(this, message);
    _this2.message = message;
    _this2.name = 'NotRegisteredException';
    return _this2;
  }

  return NotRegisteredException;
}( /*#__PURE__*/(0, _wrapNativeSuper2.default)(Error));

var _default = OAuthClient;
exports.default = _default;

/***/ }),
/* 613 */
/***/ (function(module, exports, __webpack_require__) {

var apply = __webpack_require__(204),
    arrayMap = __webpack_require__(37),
    unzip = __webpack_require__(251);

/**
 * This method is like `_.unzip` except that it accepts `iteratee` to specify
 * how regrouped values should be combined. The iteratee is invoked with the
 * elements of each group: (...group).
 *
 * @static
 * @memberOf _
 * @since 3.8.0
 * @category Array
 * @param {Array} array The array of grouped elements to process.
 * @param {Function} [iteratee=_.identity] The function to combine
 *  regrouped values.
 * @returns {Array} Returns the new array of regrouped elements.
 * @example
 *
 * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
 * // => [[1, 10, 100], [2, 20, 200]]
 *
 * _.unzipWith(zipped, _.add);
 * // => [3, 30, 300]
 */
function unzipWith(array, iteratee) {
  if (!(array && array.length)) {
    return [];
  }
  var result = unzip(array);
  if (iteratee == null) {
    return result;
  }
  return arrayMap(result, function(group) {
    return apply(iteratee, undefined, group);
  });
}

module.exports = unzipWith;


/***/ }),
/* 614 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/** A function that accepts a potential "extra argument" value to be injected later,
 * and returns an instance of the thunk middleware that uses that value
 */
function createThunkMiddleware(extraArgument) {
  // Standard Redux middleware definition pattern:
  // See: https://redux.js.org/tutorials/fundamentals/part-4-store#writing-custom-middleware
  var middleware = function middleware(_ref) {
    var dispatch = _ref.dispatch,
        getState = _ref.getState;
    return function (next) {
      return function (action) {
        // The thunk middleware looks for any functions that were passed to `store.dispatch`.
        // If this "action" is really a function, call it and return the result.
        if (typeof action === 'function') {
          // Inject the store's `dispatch` and `getState` methods, as well as any "extra arg"
          return action(dispatch, getState, extraArgument);
        } // Otherwise, pass the action down the middleware chain as usual


        return next(action);
      };
    };
  };

  return middleware;
}

var thunk = createThunkMiddleware(); // Attach the factory function so users can create a customized version
// with whatever "extra arg" they want to inject into their thunks

thunk.withExtraArgument = createThunkMiddleware;
/* harmony default export */ __webpack_exports__["default"] = (thunk);

/***/ }),
/* 615 */
/***/ (function(module, exports) {

/**
 * A specialized version of `baseAggregator` for arrays.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} setter The function to set `accumulator` values.
 * @param {Function} iteratee The iteratee to transform keys.
 * @param {Object} accumulator The initial aggregated object.
 * @returns {Function} Returns `accumulator`.
 */
function arrayAggregator(array, setter, iteratee, accumulator) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    var value = array[index];
    setter(accumulator, value, iteratee(value), array);
  }
  return accumulator;
}

module.exports = arrayAggregator;


/***/ }),
/* 616 */
/***/ (function(module, exports, __webpack_require__) {

var baseEach = __webpack_require__(145);

/**
 * Aggregates elements of `collection` on `accumulator` with keys transformed
 * by `iteratee` and values set by `setter`.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} setter The function to set `accumulator` values.
 * @param {Function} iteratee The iteratee to transform keys.
 * @param {Object} accumulator The initial aggregated object.
 * @returns {Function} Returns `accumulator`.
 */
function baseAggregator(collection, setter, iteratee, accumulator) {
  baseEach(collection, function(value, key, collection) {
    setter(accumulator, value, iteratee(value), collection);
  });
  return accumulator;
}

module.exports = baseAggregator;


/***/ }),
/* 617 */
/***/ (function(module, exports, __webpack_require__) {

var baseOrderBy = __webpack_require__(296),
    isArray = __webpack_require__(21);

/**
 * This method is like `_.sortBy` except that it allows specifying the sort
 * orders of the iteratees to sort by. If `orders` is unspecified, all values
 * are sorted in ascending order. Otherwise, specify an order of "desc" for
 * descending or "asc" for ascending sort order of corresponding values.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
 *  The iteratees to sort by.
 * @param {string[]} [orders] The sort orders of `iteratees`.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
 * @returns {Array} Returns the new sorted array.
 * @example
 *
 * var users = [
 *   { 'user': 'fred',   'age': 48 },
 *   { 'user': 'barney', 'age': 34 },
 *   { 'user': 'fred',   'age': 40 },
 *   { 'user': 'barney', 'age': 36 }
 * ];
 *
 * // Sort by `user` in ascending order and by `age` in descending order.
 * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
 * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
 */
function orderBy(collection, iteratees, orders, guard) {
  if (collection == null) {
    return [];
  }
  if (!isArray(iteratees)) {
    iteratees = iteratees == null ? [] : [iteratees];
  }
  orders = guard ? undefined : orders;
  if (!isArray(orders)) {
    orders = orders == null ? [] : [orders];
  }
  return baseOrderBy(collection, iteratees, orders);
}

module.exports = orderBy;


/***/ }),
/* 618 */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.sortBy` which uses `comparer` to define the
 * sort order of `array` and replaces criteria objects with their corresponding
 * values.
 *
 * @private
 * @param {Array} array The array to sort.
 * @param {Function} comparer The function to define sort order.
 * @returns {Array} Returns `array`.
 */
function baseSortBy(array, comparer) {
  var length = array.length;

  array.sort(comparer);
  while (length--) {
    array[length] = array[length].value;
  }
  return array;
}

module.exports = baseSortBy;


/***/ }),
/* 619 */
/***/ (function(module, exports, __webpack_require__) {

var compareAscending = __webpack_require__(620);

/**
 * Used by `_.orderBy` to compare multiple properties of a value to another
 * and stable sort them.
 *
 * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
 * specify an order of "desc" for descending or "asc" for ascending sort order
 * of corresponding values.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {boolean[]|string[]} orders The order to sort by for each property.
 * @returns {number} Returns the sort order indicator for `object`.
 */
function compareMultiple(object, other, orders) {
  var index = -1,
      objCriteria = object.criteria,
      othCriteria = other.criteria,
      length = objCriteria.length,
      ordersLength = orders.length;

  while (++index < length) {
    var result = compareAscending(objCriteria[index], othCriteria[index]);
    if (result) {
      if (index >= ordersLength) {
        return result;
      }
      var order = orders[index];
      return result * (order == 'desc' ? -1 : 1);
    }
  }
  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
  // that causes it, under certain circumstances, to provide the same value for
  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
  // for more details.
  //
  // This also ensures a stable sort in V8 and other engines.
  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
  return object.index - other.index;
}

module.exports = compareMultiple;


/***/ }),
/* 620 */
/***/ (function(module, exports, __webpack_require__) {

var isSymbol = __webpack_require__(86);

/**
 * Compares values to sort them in ascending order.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {number} Returns the sort order indicator for `value`.
 */
function compareAscending(value, other) {
  if (value !== other) {
    var valIsDefined = value !== undefined,
        valIsNull = value === null,
        valIsReflexive = value === value,
        valIsSymbol = isSymbol(value);

    var othIsDefined = other !== undefined,
        othIsNull = other === null,
        othIsReflexive = other === other,
        othIsSymbol = isSymbol(other);

    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
        (valIsNull && othIsDefined && othIsReflexive) ||
        (!valIsDefined && othIsReflexive) ||
        !valIsReflexive) {
      return 1;
    }
    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
        (othIsNull && valIsDefined && valIsReflexive) ||
        (!othIsDefined && valIsReflexive) ||
        !othIsReflexive) {
      return -1;
    }
  }
  return 0;
}

module.exports = compareAscending;


/***/ }),
/* 621 */
/***/ (function(module, exports, __webpack_require__) {

/*
 * Sift 3.x
 *
 * Copryright 2015, Craig Condon
 * Licensed under MIT
 *
 * Filter JavaScript objects with mongodb queries
 */

(function() {

  'use strict';

  /**
   */

  function isFunction(value) {
    return typeof value === 'function';
  }

  /**
   */

  function isArray(value) {
    return Object.prototype.toString.call(value) === '[object Array]';
  }

  /**
   */

  function comparable(value) {
    if (value instanceof Date) {
      return value.getTime();
    } else if (isArray(value)) {
      return value.map(comparable);
    } else if (value && typeof value.toJSON === 'function') {
      return value.toJSON();
    } else {
      return value;
    }
  }

  function get(obj, key) {
    return isFunction(obj.get) ? obj.get(key) : obj[key];
  }

  /**
   */

  function or(validator) {
    return function(a, b) {
      if (!isArray(b) || !b.length) {
        return validator(a, b);
      }
      for (var i = 0, n = b.length; i < n; i++) {
        if (validator(a, get(b,i))) return true;
      }
      return false;
    }
  }

  /**
   */

  function and(validator) {
    return function(a, b) {
      if (!isArray(b) || !b.length) {
        return validator(a, b);
      }
      for (var i = 0, n = b.length; i < n; i++) {
        if (!validator(a, get(b, i))) return false;
      }
      return true;
    };
  }

  function validate(validator, b, k, o) {
    return validator.v(validator.a, b, k, o);
  }

  var OPERATORS = {

    /**
     */

    $eq: or(function(a, b) {
      return a(b);
    }),

    /**
     */

    $ne: and(function(a, b) {
      return !a(b);
    }),

    /**
     */

    $gt: or(function(a, b) {
      return sift.compare(comparable(b), a) > 0;
    }),

    /**
     */

    $gte: or(function(a, b) {
      return sift.compare(comparable(b), a) >= 0;
    }),

    /**
     */

    $lt: or(function(a, b) {
      return sift.compare(comparable(b), a) < 0;
    }),

    /**
     */

    $lte: or(function(a, b) {
      return sift.compare(comparable(b), a) <= 0;
    }),

    /**
     */

    $mod: or(function(a, b) {
      return b % a[0] == a[1];
    }),

    /**
     */

    $in: function(a, b) {

      if (b instanceof Array) {
        for (var i = b.length; i--;) {
          if (~a.indexOf(comparable(get(b, i)))) {
            return true;
          }
        }
      } else {
        var comparableB = comparable(b);
        if (comparableB === b && typeof b === 'object') {
          for (var i = a.length; i--;) {
            if (String(a[i]) === String(b) && String(b) !== '[object Object]') {
              return true;
            }
          }
        }

        /*
          Handles documents that are undefined, whilst also
          having a 'null' element in the parameters to $in.
        */
        if (typeof comparableB == 'undefined') {
          for (var i = a.length; i--;) {
            if (a[i] == null) {
              return true;
            }
          }
        }

        /*
          Handles the case of {'field': {$in: [/regexp1/, /regexp2/, ...]}}
        */
        for (var i = a.length; i--;) {
          var validator = createRootValidator(get(a, i), undefined);
          var result = validate(validator, b, i, a);
          if ((result) && (String(result) !== '[object Object]') && (String(b) !== '[object Object]')) {
            return true;
          }
        }

        return !!~a.indexOf(comparableB);
      }

      return false;
    },

    /**
     */

    $nin: function(a, b, k, o) {
      return !OPERATORS.$in(a, b, k, o);
    },

    /**
     */

    $not: function(a, b, k, o) {
      return !validate(a, b, k, o);
    },

    /**
     */

    $type: function(a, b) {
      return b != void 0 ? b instanceof a || b.constructor == a : false;
     },

    /**
     */

    $all: function(a, b, k, o) {
      return OPERATORS.$and(a, b, k, o);
    },

    /**
     */

    $size: function(a, b) {
      return b ? a === b.length : false;
    },

    /**
     */

    $or: function(a, b, k, o) {
      for (var i = 0, n = a.length; i < n; i++) if (validate(get(a, i), b, k, o)) return true;
      return false;
    },

    /**
     */

    $nor: function(a, b, k, o) {
      return !OPERATORS.$or(a, b, k, o);
    },

    /**
     */

    $and: function(a, b, k, o) {
      for (var i = 0, n = a.length; i < n; i++) {
        if (!validate(get(a, i), b, k, o)) {
          return false;
        }
      }
      return true;
    },

    /**
     */

    $regex: or(function(a, b) {
      return typeof b === 'string' && a.test(b);
    }),

    /**
     */

    $where: function(a, b, k, o) {
      return a.call(b, b, k, o);
    },

    /**
     */

    $elemMatch: function(a, b, k, o) {
      if (isArray(b)) {
        return !!~search(b, a);
      }
      return validate(a, b, k, o);
    },

    /**
     */

    $exists: function(a, b, k, o) {
      return o.hasOwnProperty(k) === a;
    }
  };

  /**
   */

  var prepare = {

    /**
     */

    $eq: function(a) {

      if (a instanceof RegExp) {
        return function(b) {
          return typeof b === 'string' && a.test(b);
        };
      } else if (a instanceof Function) {
        return a;
      } else if (isArray(a) && !a.length) {
        // Special case of a == []
        return function(b) {
          return (isArray(b) && !b.length);
        };
      } else if (a === null){
        return function(b){
          //will match both null and undefined
          return b == null;
        }
      }

      return function(b) {
        return sift.compare(comparable(b), a) === 0;
      };
    },

    /**
     */

    $ne: function(a) {
      return prepare.$eq(a);
    },

    /**
     */

    $and: function(a) {
      return a.map(parse);
    },

    /**
     */

    $all: function(a) {
      return prepare.$and(a);
    },

    /**
     */

    $or: function(a) {
      return a.map(parse);
    },

    /**
     */

    $nor: function(a) {
      return a.map(parse);
    },

    /**
     */

    $not: function(a) {
      return parse(a);
    },

    /**
     */

    $regex: function(a, query) {
      return new RegExp(a, query.$options);
    },

    /**
     */

    $where: function(a) {
      return typeof a === 'string' ? new Function('obj', 'return ' + a) : a;
    },

    /**
     */

    $elemMatch: function(a) {
      return parse(a);
    },

    /**
     */

    $exists: function(a) {
      return !!a;
    }
  };

  /**
   */

  function search(array, validator) {

    for (var i = 0; i < array.length; i++) {
      var result = get(array, i);
      if (validate(validator, get(array, i))) {
        return i;
      }
    }

    return -1;
  }

  /**
   */

  function createValidator(a, validate) {
    return { a: a, v: validate };
  }

  /**
   */

  function nestedValidator(a, b) {
    var values  = [];
    findValues(b, a.k, 0, b, values);

    if (values.length === 1) {
      var first = values[0];
      return validate(a.nv, first[0], first[1], first[2]);
    }

    // If the query contains $ne, need to test all elements ANDed together
    var inclusive = a && a.q && typeof a.q.$ne !== 'undefined';
    var allValid = inclusive;
    for (var i = 0; i < values.length; i++) {
      var result = values[i];
      var isValid = validate(a.nv, result[0], result[1], result[2]);
      if (inclusive) {
        allValid &= isValid;
      } else {
        allValid |= isValid;
      }
    }
    return allValid;
  }

  /**
   */

  function findValues(current, keypath, index, object, values) {

    if (index === keypath.length || current == void 0) {

      values.push([current, keypath[index - 1], object]);
      return;
    }

    var k = get(keypath, index);

    // ensure that if current is an array, that the current key
    // is NOT an array index. This sort of thing needs to work:
    // sift({'foo.0':42}, [{foo: [42]}]);
    if (isArray(current) && isNaN(Number(k))) {
      for (var i = 0, n = current.length; i < n; i++) {
        findValues(get(current, i), keypath, index, current, values);
      }
    } else {
      findValues(get(current, k), keypath, index + 1, current, values);
    }
  }

  /**
   */

  function createNestedValidator(keypath, a, q) {
    return { a: { k: keypath, nv: a, q: q }, v: nestedValidator };
  }

  /**
   * flatten the query
   */

  function isVanillaObject(value) {
    return value && value.constructor === Object;
  }

  function parse(query) {
    query = comparable(query);

    if (!query || !isVanillaObject(query)) { // cross browser support
      query = { $eq: query };
    }

    var validators = [];

    for (var key in query) {
      var a = query[key];

      if (key === '$options') {
        continue;
      }

      if (OPERATORS[key]) {
        if (prepare[key]) a = prepare[key](a, query);
        validators.push(createValidator(comparable(a), OPERATORS[key]));
      } else {

        if (key.charCodeAt(0) === 36) {
          throw new Error('Unknown operation ' + key);
        }
        validators.push(createNestedValidator(key.split('.'), parse(a), a));
      }
    }

    return validators.length === 1 ? validators[0] : createValidator(validators, OPERATORS.$and);
  }

  /**
   */

  function createRootValidator(query, getter) {
    var validator = parse(query);
    if (getter) {
      validator = {
        a: validator,
        v: function(a, b, k, o) {
          return validate(a, getter(b), k, o);
        }
      };
    }
    return validator;
  }

  /**
   */

  function sift(query, array, getter) {

    if (isFunction(array)) {
      getter = array;
      array  = void 0;
    }

    var validator = createRootValidator(query, getter);

    function filter(b, k, o) {
      return validate(validator, b, k, o);
    }

    if (array) {
      return array.filter(filter);
    }

    return filter;
  }

  /**
   */

  sift.use = function(plugin) {
    if (isFunction(plugin)) return plugin(sift);
    for (var key in plugin) {
      /* istanbul ignore else */
      if (key.charCodeAt(0) === 36) {
        OPERATORS[key] = plugin[key];
      }
    }
  };

  /**
   */

  sift.indexOf = function(query, array, getter) {
    return search(array, createRootValidator(query, getter));
  };

  /**
   */

  sift.compare = function(a, b) {
    if(a===b) return 0;
    if(typeof a === typeof b) {
      if (a > b) {
        return 1;
      }
      if (a < b) {
        return -1;
      }
    }
  };

  /* istanbul ignore next */
  if ( true && typeof module.exports !== 'undefined') {
    Object.defineProperty(exports, "__esModule", {
      value: true
    });

    module.exports = sift;
    exports['default'] = module.exports.default = sift;
  }

  /* istanbul ignore next */
  if (typeof window !== 'undefined') {
    window.sift = sift;
  }
})();


/***/ }),
/* 622 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));

var _createClass2 = _interopRequireDefault(__webpack_require__(13));

var _get2 = _interopRequireDefault(__webpack_require__(128));

var _inherits2 = _interopRequireDefault(__webpack_require__(18));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(19));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(16));

var _HasMany2 = _interopRequireDefault(__webpack_require__(94));

var _dsl = __webpack_require__(20);

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var TRIGGERS_DOCTYPE = 'io.cozy.triggers';
/**
 * Association used for konnectors to retrieve all their related triggers.
 *
 * @augments HasMany
 */

var HasManyTriggers = /*#__PURE__*/function (_HasMany) {
  (0, _inherits2.default)(HasManyTriggers, _HasMany);

  var _super = _createSuper(HasManyTriggers);

  function HasManyTriggers() {
    (0, _classCallCheck2.default)(this, HasManyTriggers);
    return _super.apply(this, arguments);
  }

  (0, _createClass2.default)(HasManyTriggers, [{
    key: "data",
    get: function get() {
      var _this = this;

      return (0, _get2.default)((0, _getPrototypeOf2.default)(HasManyTriggers.prototype), "data", this).filter(function (_ref) {
        var slug = _ref.slug;
        return slug === _this.target.slug;
      });
    }
    /**
     * In this association the query is special, we need to fetch all the triggers
     * having for the 'konnector' worker, and then filter them based on their
     * `message.konnector` attribute
     */

  }], [{
    key: "query",
    value: function query(doc, client) {
      return (0, _dsl.Q)(TRIGGERS_DOCTYPE).where({
        worker: 'konnector'
      });
    }
  }]);
  return HasManyTriggers;
}(_HasMany2.default);

var _default = HasManyTriggers;
exports.default = _default;

/***/ }),
/* 623 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rootCozyUrl = exports.InvalidCozyUrlError = exports.BlockedCozyError = exports.InvalidProtocolError = exports.InvalidRedirectLinkError = exports.deconstructRedirectLink = exports.deconstructCozyWebLinkWithSlug = exports.generateWebLink = exports.ensureFirstSlash = void 0;

var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(41));

var _toArray2 = _interopRequireDefault(__webpack_require__(229));

var _regenerator = _interopRequireDefault(__webpack_require__(6));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(7));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));

var _inherits2 = _interopRequireDefault(__webpack_require__(18));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(19));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(16));

var _wrapNativeSuper2 = _interopRequireDefault(__webpack_require__(93));

var _slicedToArray2 = _interopRequireDefault(__webpack_require__(32));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var ensureFirstSlash = function ensureFirstSlash(path) {
  if (!path) {
    return '/';
  } else {
    return path.startsWith('/') ? path : '/' + path;
  }
};
/**
 * generateWebLink - Construct a link to a web app
 *
 * This function does not get its cozy url from a CozyClient instance so it can
 * be used to build urls that point to other Cozies than the user's own Cozy.
 * This is useful when pointing to the Cozy of the owner of a shared note for
 * example.
 *
 * @param {object} options               Object of options
 * @param {string}   options.cozyUrl       Base URL of the cozy, eg. cozy.tools or test.mycozy.cloud
 * @param {Array}    [options.searchParams]  Array of search parameters as [key, value] arrays, eg. ['username', 'bob']
 * @param {string}   [options.pathname]      Path to a specific part of the app, eg. /public
 * @param {string}   [options.hash]          Path inside the app, eg. /files/test.jpg
 * @param {string}   [options.slug]          Slug of the app
 * @param {string}   [options.subDomainType] Whether the cozy is using flat or nested subdomains. Defaults to flat.
 *
 * @returns {string} Generated URL
 */


exports.ensureFirstSlash = ensureFirstSlash;

var generateWebLink = function generateWebLink(_ref) {
  var cozyUrl = _ref.cozyUrl,
      searchParamsOption = _ref.searchParams,
      pathname = _ref.pathname,
      hash = _ref.hash,
      slug = _ref.slug,
      subDomainType = _ref.subDomainType;
  var searchParams = searchParamsOption || [];
  var url = new URL(cozyUrl);
  url.host = subDomainType === 'nested' ? "".concat(slug, ".").concat(url.host) : url.host.split('.').map(function (x, i) {
    return i === 0 ? x + '-' + slug : x;
  }).join('.');
  url.pathname = ensureFirstSlash(pathname);
  url.hash = ensureFirstSlash(hash);

  var _iterator = _createForOfIteratorHelper(searchParams),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var _step$value = (0, _slicedToArray2.default)(_step.value, 2),
          param = _step$value[0],
          value = _step$value[1];

      url.searchParams.set(param, value);
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  return url.toString();
};
/**
 * Deconstruct the given link in order to retrieve useful data like Cozy's name, domain, or slug
 *
 * The given link MUST contain a slug
 *
 * @param {string} webLink - link to deconstruct. It should be a link from a Cozy and containing a slug
 * @param {import("../types").SubdomainType} [subDomainType=flat] - whether the cozy is using flat or nested subdomains.
 * @returns {import("../types").CozyLinkData} Deconstructed link
 */


exports.generateWebLink = generateWebLink;

var deconstructCozyWebLinkWithSlug = function deconstructCozyWebLinkWithSlug(webLink) {
  var subDomainType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'flat';
  var url = new URL(webLink);
  var slug = subDomainType === 'nested' ? url.host.split('.')[0] : url.host.split('.')[0].split('-')[1];
  var cozyName = subDomainType === 'nested' ? url.host.split('.')[1] : url.host.split('.')[0].split('-')[0];
  var cozyBaseDomain = url.host.split('.').slice(subDomainType === 'nested' ? 2 : 1).join('.');
  return {
    cozyBaseDomain: cozyBaseDomain,
    cozyName: cozyName,
    pathname: url.pathname,
    hash: url.hash,
    protocol: url.protocol,
    searchParams: url.searchParams.toString(),
    slug: slug
  };
};

exports.deconstructCozyWebLinkWithSlug = deconstructCozyWebLinkWithSlug;

var isValidSlug = function isValidSlug(slug) {
  return slug.match(/^[a-z0-9]+$/);
};
/**
 * Deconstruct the given redirect link in order to retrieve slug, pathname and hash
 *
 * @param {string} redirectLink - redirect link to deconstruct (i.e. 'drive/public/#/folder/SOME_ID')
 * @returns {import("../types").RedirectLinkData} Deconstructed link
 * @throws {InvalidRedirectLinkError} Thrown when redirect link is invalid
 */


var deconstructRedirectLink = function deconstructRedirectLink(redirectLink) {
  var _redirectLink$split = redirectLink.split('#'),
      _redirectLink$split2 = (0, _slicedToArray2.default)(_redirectLink$split, 2),
      splits = _redirectLink$split2[0],
      hash = _redirectLink$split2[1];

  var _splits$split = splits.split(/\/(.*)/),
      _splits$split2 = (0, _slicedToArray2.default)(_splits$split, 2),
      slug = _splits$split2[0],
      pathname = _splits$split2[1];

  if (!isValidSlug(slug)) {
    throw new InvalidRedirectLinkError(redirectLink);
  }

  return {
    slug: slug,
    pathname: pathname,
    hash: hash
  };
};

exports.deconstructRedirectLink = deconstructRedirectLink;

var InvalidRedirectLinkError = /*#__PURE__*/function (_Error) {
  (0, _inherits2.default)(InvalidRedirectLinkError, _Error);

  var _super = _createSuper(InvalidRedirectLinkError);

  function InvalidRedirectLinkError(redirectLink) {
    var _this;

    (0, _classCallCheck2.default)(this, InvalidRedirectLinkError);
    _this = _super.call(this, "Invalid redirect link ".concat(redirectLink));
    _this.redirectLink = redirectLink;
    return _this;
  }

  return InvalidRedirectLinkError;
}( /*#__PURE__*/(0, _wrapNativeSuper2.default)(Error));

exports.InvalidRedirectLinkError = InvalidRedirectLinkError;

var InvalidProtocolError = /*#__PURE__*/function (_Error2) {
  (0, _inherits2.default)(InvalidProtocolError, _Error2);

  var _super2 = _createSuper(InvalidProtocolError);

  function InvalidProtocolError(url) {
    var _this2;

    (0, _classCallCheck2.default)(this, InvalidProtocolError);
    _this2 = _super2.call(this, "Invalid URL protocol ".concat(url.protocol));
    _this2.url = url;
    return _this2;
  }

  return InvalidProtocolError;
}( /*#__PURE__*/(0, _wrapNativeSuper2.default)(Error));

exports.InvalidProtocolError = InvalidProtocolError;

var BlockedCozyError = /*#__PURE__*/function (_Error3) {
  (0, _inherits2.default)(BlockedCozyError, _Error3);

  var _super3 = _createSuper(BlockedCozyError);

  function BlockedCozyError(url) {
    var _this3;

    (0, _classCallCheck2.default)(this, BlockedCozyError);
    _this3 = _super3.call(this, "Blocked cozy ".concat(url.toString()));
    _this3.url = url;
    return _this3;
  }

  return BlockedCozyError;
}( /*#__PURE__*/(0, _wrapNativeSuper2.default)(Error));

exports.BlockedCozyError = BlockedCozyError;

var InvalidCozyUrlError = /*#__PURE__*/function (_Error4) {
  (0, _inherits2.default)(InvalidCozyUrlError, _Error4);

  var _super4 = _createSuper(InvalidCozyUrlError);

  function InvalidCozyUrlError(url) {
    var _this4;

    (0, _classCallCheck2.default)(this, InvalidCozyUrlError);
    _this4 = _super4.call(this, "URL ".concat(url.toString(), " does not seem to be a valid Cozy URL"));
    _this4.url = url;
    return _this4;
  }

  return InvalidCozyUrlError;
}( /*#__PURE__*/(0, _wrapNativeSuper2.default)(Error));
/* uri - Returns a well formed URL origin from a protocol, a hostname and a port
 *
 * If the protocol and/or port are omitted from the argument, the function will
 * default to HTTPS and omit the port in the returned origin.
 *
 * @param {object} url          Object of URL elements
 * @param {string} url.protocol Protocol to use in the origin (e.g. http)
 * @param {string} url.hostname Hostname to use in the origin (e.g. claude.mycozy.cloud)
 * @param {string} url.port     Port to use in the origin (e.g. 8080)
 *
 * @returns {string} Generated URL origin
 */


exports.InvalidCozyUrlError = InvalidCozyUrlError;

var uri = function uri(_ref2) {
  var protocol = _ref2.protocol,
      hostname = _ref2.hostname,
      port = _ref2.port;
  return (protocol !== '' ? "".concat(protocol, "//") : 'https://') + hostname + (port !== '' ? ":".concat(port) : '');
};
/* wellKnownUrl - Returns a valid URL string to a Well Known password change page
 *
 * The built URL will point to the origin generated from the given protocol,
 * hostname and port.
 *
 * @param {object} url          Object of URL elements
 * @param {string} url.protocol Protocol to use in the origin (e.g. http)
 * @param {string} url.hostname Hostname to use in the origin (e.g. claude.mycozy.cloud)
 * @param {string} url.port     Port to use in the origin (e.g. 8080)
 *
 * @returns {string} Generated Well Known password change URL string
 */


var wellKnownUrl = function wellKnownUrl(url) {
  return uri(url) + '/.well-known/change-password';
};
/* isValidOrigin - Checks whether a given URL is a valid Cozy origin
 *
 * This method tries to fetch the Well Known change password page of the Cozy
 * supposedly at the given origin. This allows us to determine whether the given
 * origin is the root URL of a Cozy or not via the status of the response:
 * - a 200 response status means there's an actual Well Known password change
 *   page accessible from the given origin so we suppose it's a valid Cozy
 *   origin (i.e. it could be another site altogether though)
 * - a 401 response status means the pointed page requires authentication so the
 *   origin is probably pointing to a cozy-app. In that case we should consider this
 *   URL to be invalid
 * - a 503 response status with a "Blocked" reason means the pointed page is a Cozy
 *   but it is blocked. In that case we consider that the url is a valid Cozy origin
 *   but we want the method to throw as we cannot verify if the URL points to the
 *   Cozy's root or to a specifc slug. The caller is responsible to handle that exception
 * - another status means there aren't any Cozy behind to the given origin
 *
 * @param {URL} url URL to validate
 *
 * @returns {Promise<boolean>} True if we believe there's a Cozy behind the given origin
 * @throws {InvalidCozyUrlError} Thrown when we know for sure there aren't any Cozy behind the given origin
 * @throws {BlockedCozyError} Thrown when we know for sure there is Cozy behind the given origin but it is in a "Blocked" state
 */


var isValidOrigin = /*#__PURE__*/function () {
  var _ref3 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(url) {
    var response, status, responseUri, wasRedirected;
    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return fetch(wellKnownUrl(url));

          case 2:
            response = _context.sent;
            status = response.status, responseUri = response.url;

            if (!(status === 404)) {
              _context.next = 6;
              break;
            }

            throw new InvalidCozyUrlError(url);

          case 6:
            _context.next = 8;
            return isResponseAboutBlockedCozy(response);

          case 8:
            if (!_context.sent) {
              _context.next = 10;
              break;
            }

            throw new BlockedCozyError(url);

          case 10:
            wasRedirected = url.origin !== new URL(responseUri).origin;
            return _context.abrupt("return", status === 200 && !wasRedirected);

          case 12:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function isValidOrigin(_x) {
    return _ref3.apply(this, arguments);
  };
}();
/**
 * rootCozyUrl - Get the root URL of a Cozy from more precise ones
 *
 * The goal is to allow users to use any URL copied from their browser as their
 * Cozy URL rather than trying to explain to them what we expect (e.g. when
 * requesting the Cozy URL to connect an app).
 * If we can't get the root URL either because there's no Cozy or the domain
 * does not exist or anything else, we'll throw an InvalidCozyUrlError.
 * Also, since we communicate only via HTTP or HTTPS, we'll throw an
 * InvalidProtocolError if any other protocol is used.
 *
 * This function expects a fully qualified URL thus with a protocol and a valid
 * hostname. If your application accepts Cozy intances as input (e.g. `claude`
 * when the Cozy can be found at `https://claude.mycozy.cloud`), it is your
 * responsibility to add the appropriate domain to the hostname before calling
 * this function.
 *
 * Examples:
 *
 * 1. getting the root URL when your user gives you its instance name
 *
 *   const userInput = 'claude'
 *   const rootUrl = await rootCozyUrl(new URL(`https://${userInput}.mycozy.cloud`))
 *   // → returns new URL('https://claude.mycozy.cloud')
 *
 * 2. getting the root URL when your user gives you a Cozy Drive URL
 *
 *   const userInput = 'https://claude-drive.mycozy.cloud/#/folder/io.cozy.files.root-dir'
 *   const rootUrl = await rootCozyUrl(new URL(userInput))
 *   // → returns new URL('https://claude.mycozy.cloud')
 *
 * 3. getting the root URL when the Cozy uses nested sub-domains
 *
 *   const userInput = 'http://photos.camille.nimbus.com:8080/#/album/1234567890'
 *   const rootCozyUrl = await rootCozyUrl(new URL(userInput))
 *   // → returns new URL('http://camille.nimbus.com:8080')
 *
 * @param {URL} url The URL from which we'll try to get the root Cozy URL
 *
 * @returns {Promise<URL>} The root Cozy URL
 */


var rootCozyUrl = /*#__PURE__*/function () {
  var _ref4 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(url) {
    var _url$hostname$split, _url$hostname$split2, subDomain, domain, _hostname, noSlugUrl, hostname, noSubUrl;

    return _regenerator.default.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            if (['http:', 'https:'].includes(url.protocol)) {
              _context2.next = 2;
              break;
            }

            throw new InvalidProtocolError(url);

          case 2:
            _context2.next = 4;
            return isValidOrigin(url);

          case 4:
            if (!_context2.sent) {
              _context2.next = 6;
              break;
            }

            return _context2.abrupt("return", new URL(uri({
              protocol: url.protocol,
              hostname: url.hostname,
              port: url.port
            })));

          case 6:
            if (!/^[^.-][^.]+-[^.-]+\./.test(url.hostname)) {
              _context2.next = 14;
              break;
            }

            _url$hostname$split = url.hostname.split('.'), _url$hostname$split2 = (0, _toArray2.default)(_url$hostname$split), subDomain = _url$hostname$split2[0], domain = _url$hostname$split2.slice(1);
            _hostname = [subDomain.replace(/-.+/, '')].concat((0, _toConsumableArray2.default)(domain)).join('.');
            noSlugUrl = new URL(uri({
              protocol: url.protocol,
              hostname: _hostname,
              port: url.port
            }));
            _context2.next = 12;
            return isValidOrigin(noSlugUrl);

          case 12:
            if (!_context2.sent) {
              _context2.next = 14;
              break;
            }

            return _context2.abrupt("return", noSlugUrl);

          case 14:
            // Try to remove the first sub-domain in case its a nested app name
            // eslint-disable-next-line no-unused-vars
            hostname = url.hostname.split('.').splice(1).join('.');
            noSubUrl = new URL(uri({
              protocol: url.protocol,
              hostname: hostname,
              port: url.port
            }));
            _context2.next = 18;
            return isValidOrigin(noSubUrl);

          case 18:
            if (!_context2.sent) {
              _context2.next = 20;
              break;
            }

            return _context2.abrupt("return", noSubUrl);

          case 20:
            throw new InvalidCozyUrlError(url);

          case 21:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));

  return function rootCozyUrl(_x2) {
    return _ref4.apply(this, arguments);
  };
}();
/**
 * Check if the given response is about a Cozy being blocked
 *
 * @param {Response} response - Fetch API response
 * @returns {Promise<boolean>} true if the response is about a Cozy being blocked, false otherwize
 */


exports.rootCozyUrl = rootCozyUrl;

var isResponseAboutBlockedCozy = /*#__PURE__*/function () {
  var _ref5 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3(response) {
    var _data$some;

    var contentType, isJson, data;
    return _regenerator.default.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            if (!(response.status !== 503)) {
              _context3.next = 2;
              break;
            }

            return _context3.abrupt("return", false);

          case 2:
            contentType = response.headers.get('content-type');
            isJson = contentType && contentType.indexOf('json') >= 0;
            _context3.next = 6;
            return isJson ? response.json() : response.text();

          case 6:
            data = _context3.sent;

            if (!(data !== null && data !== void 0 && (_data$some = data.some) !== null && _data$some !== void 0 && _data$some.call(data, function (reason) {
              return reason.title === 'Blocked';
            }))) {
              _context3.next = 9;
              break;
            }

            return _context3.abrupt("return", true);

          case 9:
            return _context3.abrupt("return", false);

          case 10:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  }));

  return function isResponseAboutBlockedCozy(_x3) {
    return _ref5.apply(this, arguments);
  };
}();

/***/ }),
/* 624 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.dehydrate = void 0;

var _slicedToArray2 = _interopRequireDefault(__webpack_require__(32));

var _associations = __webpack_require__(129);

var dehydrate = function dehydrate(document) {
  var dehydrated = Object.entries(document).reduce(function (documentArg, _ref) {
    var _ref2 = (0, _slicedToArray2.default)(_ref, 2),
        key = _ref2[0],
        value = _ref2[1];

    var document = documentArg;

    if (!(value instanceof _associations.Association)) {
      document[key] = value; // @ts-ignore
    } else if (value.dehydrate) {
      // @ts-ignore
      document = value.dehydrate(document);
    } else {
      throw new Error("Association on key ".concat(key, " should have a dehydrate method"));
    }

    return document;
  }, {});
  return dehydrated;
};

exports.dehydrate = dehydrate;

/***/ }),
/* 625 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getQuery = exports.extractKeys = exports.editSettings = exports.normalizeSettings = exports.saveAfterFetchSettings = exports.getSettings = void 0;

var _slicedToArray2 = _interopRequireDefault(__webpack_require__(32));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(9));

var _regenerator = _interopRequireDefault(__webpack_require__(6));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(7));

var _CozyClient = _interopRequireDefault(__webpack_require__(40));

var _policies = _interopRequireDefault(__webpack_require__(186));

var _dsl = __webpack_require__(20);

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var defaultFetchPolicy = _policies.default.olderThan(60 * 60 * 1000);
/**
 * Query the cozy-app settings corresponding to the given slug and
 * extract the values corresponding to the given `keys`
 *
 * @template {string} T
 *
 * @param {CozyClient} client - Cozy client instance
 * @param {string} slug - the cozy-app's slug containing the setting (can be 'instance' for global settings)
 * @param {T[]} keys - The names of the settings to retrieve
 * @returns {Promise<Record<T, any>>} - The values of the requested settings
 */


var getSettings = /*#__PURE__*/function () {
  var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(client, slug, keys) {
    var query, currentSettingsResult, currentSettings;
    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            query = getQuery(slug);
            _context.next = 3;
            return client.fetchQueryAndGetFromState({
              definition: query.definition,
              options: query.options
            });

          case 3:
            currentSettingsResult = _context.sent;
            currentSettings = normalizeSettings(currentSettingsResult.data); // @ts-ignore

            return _context.abrupt("return", extractKeys(currentSettings, keys));

          case 6:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function getSettings(_x, _x2, _x3) {
    return _ref.apply(this, arguments);
  };
}();
/**
 * Save the given value into the corresponding cozy-app setting
 *
 * This methods will first query the cozy-app's settings before injecting the new value and then
 * save the new resulting settings into database
 *
 * @template {string} T
 *
 * @param {CozyClient} client - Cozy client instance
 * @param {string} slug - the cozy-app's slug containing the setting (special cases are: 'instance' for global settings and 'bitwarden' for cozy-pass)
 * @param {Record<string, any> | ((oldValue) => Record<T, any>)} itemsOrSetter - The new values of the settings to save. It can be a raw dictionnary, or a callback that should return a new dictionnary
 * @param {T[]=} setterKeys - The new values of the settings to save. It can be a raw dictionnary, or a callback that should return a new dictionnary
 * @returns {Promise<any>} - The result of the `client.save()` call
 */


exports.getSettings = getSettings;

var saveAfterFetchSettings = /*#__PURE__*/function () {
  var _ref2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(client, slug, itemsOrSetter, setterKeys) {
    var query, currentSettingsResult, currentSettings, items, currentItems, _currentItems, newSettings;

    return _regenerator.default.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            query = getQuery(slug);
            _context2.next = 3;
            return client.fetchQueryAndGetFromState({
              definition: query.definition,
              options: query.options
            });

          case 3:
            currentSettingsResult = _context2.sent;
            currentSettings = normalizeSettings(currentSettingsResult.data);
            items = undefined;

            if (typeof itemsOrSetter === 'function') {
              currentItems = extractKeys(currentSettings, setterKeys);
              items = itemsOrSetter(currentItems);
            } else {
              _currentItems = extractKeys(currentSettings, Object.keys(itemsOrSetter));
              items = _objectSpread(_objectSpread({}, _currentItems), itemsOrSetter);
            }

            newSettings = editSettings(slug, currentSettings, items);
            _context2.next = 10;
            return client.save(newSettings);

          case 10:
            return _context2.abrupt("return", _context2.sent);

          case 11:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));

  return function saveAfterFetchSettings(_x4, _x5, _x6, _x7) {
    return _ref2.apply(this, arguments);
  };
}();
/**
 * Convert a result from a `client.query()` or a `useQuery()` that can be
 * an object or an array of objects into a single object
 *
 * @param {Array | Object} data - Result from a client.query or a useQuery
 * @returns {Object} A single object containing the setting data
 */


exports.saveAfterFetchSettings = saveAfterFetchSettings;

var normalizeSettings = function normalizeSettings(data) {
  var settingsData = Array.isArray(data) ? data[0] : data;
  return settingsData || {};
};
/**
 * Edit the given settings by injecting `value` into the `key` entry
 * This methods takes care of the kind of settings that is edited as there are
 * some exceptions in settings formats (i.e. `io.cozy.settings.instance`)
 *
 * @param {string} slug - the cozy-app's slug containing the setting (can be 'instance' for global settings)
 * @param {Object} currentSettings - the Setting object (ideally from a `client.query()` or a `useQuery()` and normalized using `normalizeSettings`)
 * @param {Record<string, unknown>} items - The new values for the settings
 * @returns {Object} a new Setting object containing the new value
 */


exports.normalizeSettings = normalizeSettings;

var editSettings = function editSettings(slug, currentSettings, items) {
  var type = getDoctype(slug);
  var newSettings = slug === 'instance' ? mergeInstance(currentSettings, items) : mergeSettings(currentSettings, type, items);
  return newSettings;
};

exports.editSettings = editSettings;

var mergeInstance = function mergeInstance(currentSettings, items) {
  var newSettings = _objectSpread(_objectSpread({
    _id: currentSettings._id,
    _type: currentSettings._type,
    _rev: currentSettings.meta.rev
  }, currentSettings), {}, {
    attributes: _objectSpread({}, currentSettings.attributes)
  });

  for (var _i = 0, _Object$entries = Object.entries(items); _i < _Object$entries.length; _i++) {
    var _Object$entries$_i = (0, _slicedToArray2.default)(_Object$entries[_i], 2),
        key = _Object$entries$_i[0],
        value = _Object$entries$_i[1];

    newSettings[key] = value;
    newSettings.attributes[key] = value;
  }

  return newSettings;
};

var mergeSettings = function mergeSettings(currentSettings, type, items) {
  var newSettings = _objectSpread({
    _type: type
  }, currentSettings);

  for (var _i2 = 0, _Object$entries2 = Object.entries(items); _i2 < _Object$entries2.length; _i2++) {
    var _Object$entries2$_i = (0, _slicedToArray2.default)(_Object$entries2[_i2], 2),
        key = _Object$entries2$_i[0],
        value = _Object$entries2$_i[1];

    newSettings[key] = value;
  }

  return newSettings;
};
/**
 * Extract values from given settings for requested keys
 *
 * @template {string} T
 *
 * @param {Record<T, any>} settings - the Setting object (ideally from a `client.query()` or a `useQuery()` and normalized using `normalizeSettings`)
 * @param {T[]} keys - The names of the settings to extract
 * @returns {Record<T, any>} - Dictionnary containing the values for the requested keys
 */


var extractKeys = function extractKeys(settings, keys) {
  var result = {};

  var _iterator = _createForOfIteratorHelper(keys),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var key = _step.value;
      // @ts-ignore
      result[key] = settings[key];
    } // @ts-ignore

  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  return result;
};
/**
 * Create a Query that can be used to fetch the cozy-app settings for the given slug
 *
 * @param {string} slug - the cozy-app's slug containing the setting (special cases are: 'instance' for global settings and 'passwords' for bitwarden settings)
 * @returns {import('../types').Query} - the Query that can be used to fetch the cozy-app settings
 */


exports.extractKeys = extractKeys;

var getQuery = function getQuery(slug) {
  if (slug === 'instance') {
    return getNestedSettings(slug);
  }

  if (slug === 'passwords') {
    return getNestedSettings('bitwarden');
  }

  return getRootSettings(slug);
};

exports.getQuery = getQuery;

var getRootSettings = function getRootSettings(slug) {
  var settingsDoctype = getDoctype(slug);
  var query = {
    definition: (0, _dsl.Q)(settingsDoctype).limitBy(1),
    options: {
      as: settingsDoctype,
      fetchPolicy: defaultFetchPolicy,
      singleDocData: true
    }
  };
  return query;
};

var getNestedSettings = function getNestedSettings(slug) {
  var doctype = "io.cozy.settings";
  var subDoctype = getDoctype(slug);
  var query = {
    definition: (0, _dsl.Q)(doctype).getById(subDoctype),
    options: {
      as: "".concat(doctype, "/").concat(subDoctype),
      fetchPolicy: defaultFetchPolicy,
      singleDocData: true
    }
  };
  return query;
};

var getDoctype = function getDoctype(slug) {
  if (['instance', 'bitwarden'].includes(slug)) {
    return "io.cozy.settings.".concat(slug);
  }

  if (slug === 'passwords') {
    return 'io.cozy.settings.bitwarden';
  }

  return "io.cozy.".concat(slug, ".settings");
};

/***/ }),
/* 626 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.authFunction = exports.authenticateWithCordova = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(6));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(7));

var _const = __webpack_require__(57);

var _cozyDeviceHelper = __webpack_require__(301);

/* global prompt */

/**
 * @type {import("../types").CordovaWindow}
 */
// @ts-ignore
var win = typeof window !== 'undefined' ? window : null;
/**
 * Open a SafariView Controller and resolve with the URL containing the token
 *
 * @param {string} url - Url containing access_code and state
 * @returns {Promise}
 */

var authenticateWithSafari = function authenticateWithSafari(url) {
  return new Promise(function (resolve, reject) {
    win.SafariViewController.show({
      url: url,
      transition: 'curl' // (this only works in iOS 9.1/9.2 and lower) unless animated is false you can choose from: curl, flip, fade, slide (default)
      // enterReaderModeIfAvailable: readerMode, // default false
      // tintColor: "#00ffff", // default is ios blue
      // barColor: "#0000ff", // on iOS 10+ you can change the background color as well
      // controlTintColor: "#ffffff" // on iOS 10+ you can override the default tintColor

    }, // this success handler will be invoked for the lifecycle events 'opened', 'loaded' and 'closed'
    function (result) {
      if (result.event === 'closed') {
        reject(new Error(_const.REGISTRATION_ABORT));
      }
    }, function (error) {
      console.log('KO: ' + error);
      reject(new Error(_const.REGISTRATION_ABORT));
    });
    var handle = win.handleOpenURL;

    win.handleOpenURL = function (url) {
      win.SafariViewController.hide();
      resolve(url);

      if (handle) {
        win.handleOpenURL = handle;
      }
    };
  });
};
/**
 * Opens an InAppBrowser and resolves with the URL containing the token
 *
 * @param {string} url - Url containing access_code and state
 * @returns {Promise}
 */


var authenticateWithInAppBrowser = function authenticateWithInAppBrowser(url) {
  return new Promise(function (resolve, reject) {
    var target = '_blank';
    var options = 'clearcache=yes,zoom=no';
    var inAppBrowser = win.cordova.InAppBrowser.open(url, target, options);

    var removeListener = function removeListener() {
      inAppBrowser.removeEventListener('loadstart', onLoadStart);
      inAppBrowser.removeEventListener('exit', onExit);
    };

    var onLoadStart = function onLoadStart(_ref) {
      var url = _ref.url;
      var accessCode = /\?access_code=(.+)$/.test(url);
      var state = /\?state=(.+)$/.test(url);

      if (accessCode || state) {
        resolve(url);
        removeListener();
        inAppBrowser.close();
      }
    };

    var onExit = function onExit() {
      reject(new Error(_const.REGISTRATION_ABORT));
      removeListener();
      inAppBrowser.close();
    };

    inAppBrowser.addEventListener('loadstart', onLoadStart);
    inAppBrowser.addEventListener('exit', onExit);
  });
};

var authenticateWithCordova = /*#__PURE__*/function () {
  var _ref2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(url) {
    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.t0 = (0, _cozyDeviceHelper.isIOSApp)();

            if (!_context.t0) {
              _context.next = 5;
              break;
            }

            _context.next = 4;
            return (0, _cozyDeviceHelper.hasSafariPlugin)();

          case 4:
            _context.t0 = _context.sent;

          case 5:
            if (!_context.t0) {
              _context.next = 9;
              break;
            }

            return _context.abrupt("return", authenticateWithSafari(url));

          case 9:
            if (!(0, _cozyDeviceHelper.hasInAppBrowserPlugin)()) {
              _context.next = 13;
              break;
            }

            return _context.abrupt("return", authenticateWithInAppBrowser(url));

          case 13:
            /**
             * for dev purpose:
             * In oauth workflow, the server displays an authorization page
             * User must accept to give permission then the server gives an url
             * with query parameters used by cozy-client-js to initialize itself.
             *
             * This hack let developers open the authorization page in a new tab
             * then get the "access_code" url and paste it in the prompt to let the
             * application initialize and redirect to other pages.
             */
            console.log(url); // Useful for dev (see above).

            return _context.abrupt("return", new Promise(function (resolve) {
              setTimeout(function () {
                var token = prompt('Paste the url here:');
                resolve(token);
              }, 5000);
            }));

          case 15:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function authenticateWithCordova(_x) {
    return _ref2.apply(this, arguments);
  };
}();

exports.authenticateWithCordova = authenticateWithCordova;
var authFunction = authenticateWithCordova;
exports.authFunction = authFunction;

/***/ }),
/* 627 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getDeviceName = void 0;

var _capitalize = _interopRequireDefault(__webpack_require__(628));

var _cordova = __webpack_require__(131);

var _plugins = __webpack_require__(189);

var _platform = __webpack_require__(187);

var DEFAULT_DEVICE = 'Device';

// device
var getAppleModel = function getAppleModel(identifier) {
  var devices = ['iPhone', 'iPad', 'Watch', 'AppleTV'];

  for (var _i = 0, _devices = devices; _i < _devices.length; _i++) {
    var _device = _devices[_i];

    if (identifier.match(new RegExp(_device))) {
      return _device;
    }
  }

  return DEFAULT_DEVICE;
};

var getDeviceName = function getDeviceName() {
  if (!(0, _plugins.hasDevicePlugin)()) {
    if ((0, _cordova.isCordova)()) {
      console.warn('You should install `cordova-plugin-device`.'); // eslint-disable-line no-console
    }

    return DEFAULT_DEVICE;
  }

  var _window$device = window.device,
      manufacturer = _window$device.manufacturer,
      originalModel = _window$device.model;
  var model = (0, _platform.isIOSApp)() ? getAppleModel(originalModel) : originalModel;
  return "".concat((0, _capitalize.default)(manufacturer), " ").concat(model);
};

exports.getDeviceName = getDeviceName;

/***/ }),
/* 628 */
/***/ (function(module, exports, __webpack_require__) {

var toString = __webpack_require__(82),
    upperFirst = __webpack_require__(629);

/**
 * Converts the first character of `string` to upper case and the remaining
 * to lower case.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to capitalize.
 * @returns {string} Returns the capitalized string.
 * @example
 *
 * _.capitalize('FRED');
 * // => 'Fred'
 */
function capitalize(string) {
  return upperFirst(toString(string).toLowerCase());
}

module.exports = capitalize;


/***/ }),
/* 629 */
/***/ (function(module, exports, __webpack_require__) {

var createCaseFirst = __webpack_require__(630);

/**
 * Converts the first character of `string` to upper case.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.upperFirst('fred');
 * // => 'Fred'
 *
 * _.upperFirst('FRED');
 * // => 'FRED'
 */
var upperFirst = createCaseFirst('toUpperCase');

module.exports = upperFirst;


/***/ }),
/* 630 */
/***/ (function(module, exports, __webpack_require__) {

var castSlice = __webpack_require__(302),
    hasUnicode = __webpack_require__(188),
    stringToArray = __webpack_require__(303),
    toString = __webpack_require__(82);

/**
 * Creates a function like `_.lowerFirst`.
 *
 * @private
 * @param {string} methodName The name of the `String` case method to use.
 * @returns {Function} Returns the new case function.
 */
function createCaseFirst(methodName) {
  return function(string) {
    string = toString(string);

    var strSymbols = hasUnicode(string)
      ? stringToArray(string)
      : undefined;

    var chr = strSymbols
      ? strSymbols[0]
      : string.charAt(0);

    var trailing = strSymbols
      ? castSlice(strSymbols, 1).join('')
      : string.slice(1);

    return chr[methodName]() + trailing;
  };
}

module.exports = createCaseFirst;


/***/ }),
/* 631 */
/***/ (function(module, exports) {

/**
 * Converts an ASCII `string` to an array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the converted array.
 */
function asciiToArray(string) {
  return string.split('');
}

module.exports = asciiToArray;


/***/ }),
/* 632 */
/***/ (function(module, exports) {

/** Used to compose unicode character classes. */
var rsAstralRange = '\\ud800-\\udfff',
    rsComboMarksRange = '\\u0300-\\u036f',
    reComboHalfMarksRange = '\\ufe20-\\ufe2f',
    rsComboSymbolsRange = '\\u20d0-\\u20ff',
    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
    rsVarRange = '\\ufe0e\\ufe0f';

/** Used to compose unicode capture groups. */
var rsAstral = '[' + rsAstralRange + ']',
    rsCombo = '[' + rsComboRange + ']',
    rsFitz = '\\ud83c[\\udffb-\\udfff]',
    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
    rsNonAstral = '[^' + rsAstralRange + ']',
    rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
    rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
    rsZWJ = '\\u200d';

/** Used to compose unicode regexes. */
var reOptMod = rsModifier + '?',
    rsOptVar = '[' + rsVarRange + ']?',
    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
    rsSeq = rsOptVar + reOptMod + rsOptJoin,
    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

/**
 * Converts a Unicode `string` to an array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the converted array.
 */
function unicodeToArray(string) {
  return string.match(reUnicode) || [];
}

module.exports = unicodeToArray;


/***/ }),
/* 633 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.startApp = exports.default = exports.checkApp = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(6));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(7));

var _platform = __webpack_require__(187);

var cordovaPluginIsInstalled = function cordovaPluginIsInstalled() {
  return window.startApp;
};

/**
 * Normalize startApp params for Android and iOS
 */
var getParams = function getParams(_ref) {
  var appId = _ref.appId,
      uri = _ref.uri;

  if ((0, _platform.isAndroidApp)()) {
    return {
      package: appId
    };
  } else {
    return uri;
  }
};

var exported = {};
/**
 * Start an application if it is installed on the phone
 * @returns Promise - False if the application was not able to be started
 */

var startApp = exported.startApp = /*#__PURE__*/function () {
  var _ref2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(appInfo) {
    var startAppPlugin, isAppInstalled, params;
    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            startAppPlugin = window.startApp;
            _context.next = 3;
            return exported.checkApp(appInfo);

          case 3:
            isAppInstalled = _context.sent;

            if (!isAppInstalled) {
              _context.next = 9;
              break;
            }

            params = getParams(appInfo);
            return _context.abrupt("return", new Promise(function (resolve, reject) {
              if (!cordovaPluginIsInstalled()) {
                reject(new Error("Cordova plugin 'com.lampa.startapp' is not installed. This plugin is needed to start a native app. Required by cozy-bar"));
                return;
              }

              startAppPlugin.set(params).start(resolve, reject);
            }));

          case 9:
            return _context.abrupt("return", false);

          case 10:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function (_x) {
    return _ref2.apply(this, arguments);
  };
}();
/**
 * Check that an application is installed on the phone
 * @returns Promise - Promise containing information on the application
 *
 * @example
 * > checkApp({ appId: 'io.cozy.drive.mobile', uri: 'cozydrive://' })
 * Promise.resolve({
 *  versionName: "0.9.2",
 *  packageName: "io.cozy.drive.mobile",
 *  versionCode: 902,
 *  applicationInfo: "ApplicationInfo{70aa0ef io.cozy.drive.mobile}"
 * })
 */


exports.startApp = startApp;

var checkApp = exported.checkApp = /*#__PURE__*/function () {
  var _ref3 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(appInfo) {
    var startAppPlugin, params;
    return _regenerator.default.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            startAppPlugin = window.startApp;
            params = getParams(appInfo);
            return _context2.abrupt("return", new Promise(function (resolve, reject) {
              if (!cordovaPluginIsInstalled()) {
                reject(new Error("Cordova plugin 'com.lampa.startapp' is not installed."));
                return;
              }

              startAppPlugin.set(params).check(function (infos) {
                return resolve(infos === 'OK' ? true : infos);
              }, function (error) {
                if (error === false || error.indexOf('NameNotFoundException') === 0) {
                  // Plugin returns an error 'NameNotFoundException' on Android and
                  // false on iOS when an application is not found.
                  // We prefer to always return false
                  resolve(false);
                } else {
                  reject(error);
                }
              });
            }));

          case 3:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));

  return function (_x2) {
    return _ref3.apply(this, arguments);
  };
}();

exports.checkApp = checkApp;
var _default = exported;
exports.default = _default;

/***/ }),
/* 634 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.nativeLinkOpen = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(6));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(7));

var _plugins = __webpack_require__(189);

var nativeLinkOpen = /*#__PURE__*/function () {
  var _ref2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(_ref) {
    var url, target, options;
    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            url = _ref.url;
            _context.next = 3;
            return (0, _plugins.hasSafariPlugin)();

          case 3:
            _context.t0 = _context.sent;

            if (!_context.t0) {
              _context.next = 6;
              break;
            }

            _context.t0 = window.SafariViewController;

          case 6:
            if (!_context.t0) {
              _context.next = 10;
              break;
            }

            window.SafariViewController.show({
              url: url,
              transition: 'curl'
            }, function (result) {
              if (result.event === 'closed') {
                window.SafariViewController.hide();
              }
            }, function () {
              window.SafariViewController.hide();
            });
            _context.next = 11;
            break;

          case 10:
            if ((0, _plugins.hasInAppBrowserPlugin)()) {
              target = '_blank';
              options = 'clearcache=yes,zoom=no';
              window.cordova.InAppBrowser.open(url, target, options);
            } else {
              window.location = url;
            }

          case 11:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function nativeLinkOpen(_x) {
    return _ref2.apply(this, arguments);
  };
}();

exports.nativeLinkOpen = nativeLinkOpen;

/***/ }),
/* 635 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.openDeeplinkOrRedirect = void 0;

/**
 * This file is used to open the native app from a webapp
 * if this native app is installed
 *
 * From a webapp, we don't have any clue if a native app is installed.
 * The only way to know that, is to try to open the custom link
 * (aka cozydrive://) and if nothing happens (no blur) we redirect to
 * the callback
 *
 * Firefox tries to open custom link, so we need to create an iframe
 * to detect if this is supported or not
 */
var _createHiddenIframe = function _createHiddenIframe(target, uri, randomId) {
  var iframe = document.createElement('iframe');
  iframe.src = uri;
  iframe.id = "hiddenIframe_".concat(randomId);
  iframe.style.display = 'none';
  target.appendChild(iframe);
  return iframe;
};

var openUriWithHiddenFrame = function openUriWithHiddenFrame(uri, failCb) {
  var randomId = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5);
  window.addEventListener('blur', onBlur);

  var iframe = _createHiddenIframe(document.body, 'about:blank', randomId);

  var timeout = setTimeout(function () {
    failCb();
    window.removeEventListener('blur', onBlur);
    iframe.parentElement.removeChild(iframe);
  }, 500);

  function onBlur() {
    clearTimeout(timeout);
    window.removeEventListener('blur', onBlur);
    iframe.parentElement.removeChild(iframe);
  }

  iframe.contentWindow.location.href = uri;
};

var openUriWithTimeoutHack = function openUriWithTimeoutHack(uri, failCb) {
  var timeout = setTimeout(function () {
    failCb();
    target.removeEventListener('blur', onBlur);
  }, 500); // handle page running in an iframe (blur must be registered with top level window)

  var target = window;

  while (target != target.parent) {
    target = target.parent;
  }

  target.addEventListener('blur', onBlur);

  function onBlur() {
    clearTimeout(timeout);
    target.removeEventListener('blur', onBlur);
  } // Why is an uri assigned to location object?


  window.location = uri;
};

var openUriWithMsLaunchUri = function openUriWithMsLaunchUri(uri, failCb) {
  navigator.msLaunchUri(uri, undefined, failCb);
};

var checkBrowser = function checkBrowser() {
  var isOpera = !!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0;
  var ua = navigator.userAgent.toLowerCase();
  var isSafari = ua.includes('safari') && !ua.includes('chrome') || Object.prototype.toString.call(window.HTMLElement).indexOf('Constructor') > 0;
  var isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;
  var isIOS122 = isIOS && (ua.includes('os 12_2') || ua.includes('os 12_3'));
  return {
    isOpera: isOpera,
    isFirefox: typeof window.InstallTrigger !== 'undefined',
    isSafari: isSafari,
    isChrome: !!window.chrome && !isOpera,
    isIOS122: isIOS122,
    isIOS: isIOS
  };
};
/**
 *
 * @param {String} deeplink (cozydrive://)
 * @param {String} failCb (http://drive.cozy.ios)
 */


var openDeeplinkOrRedirect = function openDeeplinkOrRedirect(deeplink, failCb) {
  if (navigator.msLaunchUri) {
    // for IE and Edge in Win 8 and Win 10
    openUriWithMsLaunchUri(deeplink, failCb);
  } else {
    var browser = checkBrowser();

    if (browser.isChrome || browser.isIOS && !browser.isIOS122) {
      openUriWithTimeoutHack(deeplink, failCb);
    } else if (browser.isSafari && !browser.isIOS122 || browser.isFirefox) {
      openUriWithHiddenFrame(deeplink, failCb);
    } else {
      failCb();
    }
  }
};

exports.openDeeplinkOrRedirect = openDeeplinkOrRedirect;

/***/ }),
/* 636 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isFlagshipApp = exports.getFlagshipMetadata = exports.FlagshipRoutes = void 0;

var _cozyLogger = _interopRequireDefault(__webpack_require__(36));

var FlagshipRoutes;
exports.FlagshipRoutes = FlagshipRoutes;

(function (FlagshipRoutes) {
  FlagshipRoutes["Home"] = "home";
  FlagshipRoutes["Cozyapp"] = "cozyapp";
  FlagshipRoutes["Authenticate"] = "authenticate";
  FlagshipRoutes["Onboarding"] = "onboarding";
  FlagshipRoutes["Stack"] = "stack";
})(FlagshipRoutes || (exports.FlagshipRoutes = FlagshipRoutes = {}));

var getGlobalWindow = function getGlobalWindow() {
  return typeof window !== 'undefined' ? window : ((0, _cozyLogger.default)('error', "\"window\" is not defined. This means that getGlobalWindow() shouldn't have been called and investigation should be done to prevent this call"), undefined);
};

var getFlagshipMetadata = function getFlagshipMetadata() {
  var _getGlobalWindow$cozy, _getGlobalWindow, _getGlobalWindow$cozy2;

  return (_getGlobalWindow$cozy = (_getGlobalWindow = getGlobalWindow()) === null || _getGlobalWindow === void 0 ? void 0 : (_getGlobalWindow$cozy2 = _getGlobalWindow.cozy) === null || _getGlobalWindow$cozy2 === void 0 ? void 0 : _getGlobalWindow$cozy2.flagship) !== null && _getGlobalWindow$cozy !== void 0 ? _getGlobalWindow$cozy : {};
};

exports.getFlagshipMetadata = getFlagshipMetadata;

var isFlagshipApp = function isFlagshipApp() {
  var _getGlobalWindow2, _getGlobalWindow2$coz;

  return ((_getGlobalWindow2 = getGlobalWindow()) === null || _getGlobalWindow2 === void 0 ? void 0 : (_getGlobalWindow2$coz = _getGlobalWindow2.cozy) === null || _getGlobalWindow2$coz === void 0 ? void 0 : _getGlobalWindow2$coz.flagship) !== undefined;
};

exports.isFlagshipApp = isFlagshipApp;

/***/ }),
/* 637 */
/***/ (function(module, exports, __webpack_require__) {

const levels = {
  secret: 0,
  debug: 10,
  info: 20,
  warn: 30,
  error: 40,
  ok: 50,
  critical: 50
}

const Secret = __webpack_require__(304)

const filterSecrets = function (level, type, message) {
  if (type !== 'secret' && message instanceof Secret) {
    throw new Error('You should log a secret with log.secret')
  }
}

const filterLevel = function (level, type) {
  return levels[type] >= levels[level]
}

module.exports = {
  filterSecrets,
  filterLevel
}


/***/ }),
/* 638 */
/***/ (function(module, exports, __webpack_require__) {

const devFormat = __webpack_require__(639)
const prodFormat = __webpack_require__(648)

switch ("production") {
  case 'production':
    module.exports = prodFormat
    break
  case 'development':
    module.exports = devFormat
    break
  case 'standalone':
    module.exports = devFormat
    break
  case 'test':
    module.exports = devFormat
    break
  default:
    module.exports = prodFormat
}


/***/ }),
/* 639 */
/***/ (function(module, exports, __webpack_require__) {

const util = __webpack_require__(30)

const chalk = __webpack_require__(640)

if (util && util.inspect && util.inspect.defaultOptions) {
  util.inspect.defaultOptions.maxArrayLength = null
  util.inspect.defaultOptions.depth = 2
  util.inspect.defaultOptions.colors = true
}

const type2color = {
  debug: 'cyan',
  warn: 'yellow',
  info: 'blue',
  error: 'red',
  ok: 'green',
  secret: 'red',
  critical: 'red'
}

function devFormat(type, message, label, namespace) {
  let formatmessage = message

  if (typeof formatmessage !== 'string') {
    formatmessage = util.inspect(formatmessage)
  }

  let formatlabel = label ? ` : "${label}" ` : ''
  let formatnamespace = namespace ? chalk.magenta(`${namespace}: `) : ''

  let color = type2color[type]
  let formattype = color ? chalk[color](type) : type

  return `${formatnamespace}${formattype}${formatlabel} : ${formatmessage}`
}

module.exports = devFormat


/***/ }),
/* 640 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

const escapeStringRegexp = __webpack_require__(461);
const ansiStyles = __webpack_require__(641);
const stdoutColor = __webpack_require__(645).stdout;

const template = __webpack_require__(647);

const isSimpleWindowsTerm = process.platform === 'win32' && !(process.env.TERM || '').toLowerCase().startsWith('xterm');

// `supportsColor.level` → `ansiStyles.color[name]` mapping
const levelMapping = ['ansi', 'ansi', 'ansi256', 'ansi16m'];

// `color-convert` models to exclude from the Chalk API due to conflicts and such
const skipModels = new Set(['gray']);

const styles = Object.create(null);

function applyOptions(obj, options) {
	options = options || {};

	// Detect level if not set manually
	const scLevel = stdoutColor ? stdoutColor.level : 0;
	obj.level = options.level === undefined ? scLevel : options.level;
	obj.enabled = 'enabled' in options ? options.enabled : obj.level > 0;
}

function Chalk(options) {
	// We check for this.template here since calling `chalk.constructor()`
	// by itself will have a `this` of a previously constructed chalk object
	if (!this || !(this instanceof Chalk) || this.template) {
		const chalk = {};
		applyOptions(chalk, options);

		chalk.template = function () {
			const args = [].slice.call(arguments);
			return chalkTag.apply(null, [chalk.template].concat(args));
		};

		Object.setPrototypeOf(chalk, Chalk.prototype);
		Object.setPrototypeOf(chalk.template, chalk);

		chalk.template.constructor = Chalk;

		return chalk.template;
	}

	applyOptions(this, options);
}

// Use bright blue on Windows as the normal blue color is illegible
if (isSimpleWindowsTerm) {
	ansiStyles.blue.open = '\u001B[94m';
}

for (const key of Object.keys(ansiStyles)) {
	ansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');

	styles[key] = {
		get() {
			const codes = ansiStyles[key];
			return build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, key);
		}
	};
}

styles.visible = {
	get() {
		return build.call(this, this._styles || [], true, 'visible');
	}
};

ansiStyles.color.closeRe = new RegExp(escapeStringRegexp(ansiStyles.color.close), 'g');
for (const model of Object.keys(ansiStyles.color.ansi)) {
	if (skipModels.has(model)) {
		continue;
	}

	styles[model] = {
		get() {
			const level = this.level;
			return function () {
				const open = ansiStyles.color[levelMapping[level]][model].apply(null, arguments);
				const codes = {
					open,
					close: ansiStyles.color.close,
					closeRe: ansiStyles.color.closeRe
				};
				return build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);
			};
		}
	};
}

ansiStyles.bgColor.closeRe = new RegExp(escapeStringRegexp(ansiStyles.bgColor.close), 'g');
for (const model of Object.keys(ansiStyles.bgColor.ansi)) {
	if (skipModels.has(model)) {
		continue;
	}

	const bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);
	styles[bgModel] = {
		get() {
			const level = this.level;
			return function () {
				const open = ansiStyles.bgColor[levelMapping[level]][model].apply(null, arguments);
				const codes = {
					open,
					close: ansiStyles.bgColor.close,
					closeRe: ansiStyles.bgColor.closeRe
				};
				return build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);
			};
		}
	};
}

const proto = Object.defineProperties(() => {}, styles);

function build(_styles, _empty, key) {
	const builder = function () {
		return applyStyle.apply(builder, arguments);
	};

	builder._styles = _styles;
	builder._empty = _empty;

	const self = this;

	Object.defineProperty(builder, 'level', {
		enumerable: true,
		get() {
			return self.level;
		},
		set(level) {
			self.level = level;
		}
	});

	Object.defineProperty(builder, 'enabled', {
		enumerable: true,
		get() {
			return self.enabled;
		},
		set(enabled) {
			self.enabled = enabled;
		}
	});

	// See below for fix regarding invisible grey/dim combination on Windows
	builder.hasGrey = this.hasGrey || key === 'gray' || key === 'grey';

	// `__proto__` is used because we must return a function, but there is
	// no way to create a function with a different prototype
	builder.__proto__ = proto; // eslint-disable-line no-proto

	return builder;
}

function applyStyle() {
	// Support varags, but simply cast to string in case there's only one arg
	const args = arguments;
	const argsLen = args.length;
	let str = String(arguments[0]);

	if (argsLen === 0) {
		return '';
	}

	if (argsLen > 1) {
		// Don't slice `arguments`, it prevents V8 optimizations
		for (let a = 1; a < argsLen; a++) {
			str += ' ' + args[a];
		}
	}

	if (!this.enabled || this.level <= 0 || !str) {
		return this._empty ? '' : str;
	}

	// Turns out that on Windows dimmed gray text becomes invisible in cmd.exe,
	// see https://github.com/chalk/chalk/issues/58
	// If we're on Windows and we're dealing with a gray color, temporarily make 'dim' a noop.
	const originalDim = ansiStyles.dim.open;
	if (isSimpleWindowsTerm && this.hasGrey) {
		ansiStyles.dim.open = '';
	}

	for (const code of this._styles.slice().reverse()) {
		// Replace any instances already present with a re-opening code
		// otherwise only the part of the string until said closing code
		// will be colored, and the rest will simply be 'plain'.
		str = code.open + str.replace(code.closeRe, code.open) + code.close;

		// Close the styling before a linebreak and reopen
		// after next line to fix a bleed issue on macOS
		// https://github.com/chalk/chalk/pull/92
		str = str.replace(/\r?\n/g, `${code.close}$&${code.open}`);
	}

	// Reset the original `dim` if we changed it to work around the Windows dimmed gray issue
	ansiStyles.dim.open = originalDim;

	return str;
}

function chalkTag(chalk, strings) {
	if (!Array.isArray(strings)) {
		// If chalk() was called by itself or with a string,
		// return the string itself as a string.
		return [].slice.call(arguments, 1).join(' ');
	}

	const args = [].slice.call(arguments, 2);
	const parts = [strings.raw[0]];

	for (let i = 1; i < strings.length; i++) {
		parts.push(String(args[i - 1]).replace(/[{}\\]/g, '\\$&'));
		parts.push(String(strings.raw[i]));
	}

	return template(chalk, parts.join(''));
}

Object.defineProperties(Chalk.prototype, styles);

module.exports = Chalk(); // eslint-disable-line new-cap
module.exports.supportsColor = stdoutColor;
module.exports.default = module.exports; // For TypeScript


/***/ }),
/* 641 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {
const colorConvert = __webpack_require__(642);

const wrapAnsi16 = (fn, offset) => function () {
	const code = fn.apply(colorConvert, arguments);
	return `\u001B[${code + offset}m`;
};

const wrapAnsi256 = (fn, offset) => function () {
	const code = fn.apply(colorConvert, arguments);
	return `\u001B[${38 + offset};5;${code}m`;
};

const wrapAnsi16m = (fn, offset) => function () {
	const rgb = fn.apply(colorConvert, arguments);
	return `\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;
};

function assembleStyles() {
	const codes = new Map();
	const styles = {
		modifier: {
			reset: [0, 0],
			// 21 isn't widely supported and 22 does the same thing
			bold: [1, 22],
			dim: [2, 22],
			italic: [3, 23],
			underline: [4, 24],
			inverse: [7, 27],
			hidden: [8, 28],
			strikethrough: [9, 29]
		},
		color: {
			black: [30, 39],
			red: [31, 39],
			green: [32, 39],
			yellow: [33, 39],
			blue: [34, 39],
			magenta: [35, 39],
			cyan: [36, 39],
			white: [37, 39],
			gray: [90, 39],

			// Bright color
			redBright: [91, 39],
			greenBright: [92, 39],
			yellowBright: [93, 39],
			blueBright: [94, 39],
			magentaBright: [95, 39],
			cyanBright: [96, 39],
			whiteBright: [97, 39]
		},
		bgColor: {
			bgBlack: [40, 49],
			bgRed: [41, 49],
			bgGreen: [42, 49],
			bgYellow: [43, 49],
			bgBlue: [44, 49],
			bgMagenta: [45, 49],
			bgCyan: [46, 49],
			bgWhite: [47, 49],

			// Bright color
			bgBlackBright: [100, 49],
			bgRedBright: [101, 49],
			bgGreenBright: [102, 49],
			bgYellowBright: [103, 49],
			bgBlueBright: [104, 49],
			bgMagentaBright: [105, 49],
			bgCyanBright: [106, 49],
			bgWhiteBright: [107, 49]
		}
	};

	// Fix humans
	styles.color.grey = styles.color.gray;

	for (const groupName of Object.keys(styles)) {
		const group = styles[groupName];

		for (const styleName of Object.keys(group)) {
			const style = group[styleName];

			styles[styleName] = {
				open: `\u001B[${style[0]}m`,
				close: `\u001B[${style[1]}m`
			};

			group[styleName] = styles[styleName];

			codes.set(style[0], style[1]);
		}

		Object.defineProperty(styles, groupName, {
			value: group,
			enumerable: false
		});

		Object.defineProperty(styles, 'codes', {
			value: codes,
			enumerable: false
		});
	}

	const ansi2ansi = n => n;
	const rgb2rgb = (r, g, b) => [r, g, b];

	styles.color.close = '\u001B[39m';
	styles.bgColor.close = '\u001B[49m';

	styles.color.ansi = {
		ansi: wrapAnsi16(ansi2ansi, 0)
	};
	styles.color.ansi256 = {
		ansi256: wrapAnsi256(ansi2ansi, 0)
	};
	styles.color.ansi16m = {
		rgb: wrapAnsi16m(rgb2rgb, 0)
	};

	styles.bgColor.ansi = {
		ansi: wrapAnsi16(ansi2ansi, 10)
	};
	styles.bgColor.ansi256 = {
		ansi256: wrapAnsi256(ansi2ansi, 10)
	};
	styles.bgColor.ansi16m = {
		rgb: wrapAnsi16m(rgb2rgb, 10)
	};

	for (let key of Object.keys(colorConvert)) {
		if (typeof colorConvert[key] !== 'object') {
			continue;
		}

		const suite = colorConvert[key];

		if (key === 'ansi16') {
			key = 'ansi';
		}

		if ('ansi16' in suite) {
			styles.color.ansi[key] = wrapAnsi16(suite.ansi16, 0);
			styles.bgColor.ansi[key] = wrapAnsi16(suite.ansi16, 10);
		}

		if ('ansi256' in suite) {
			styles.color.ansi256[key] = wrapAnsi256(suite.ansi256, 0);
			styles.bgColor.ansi256[key] = wrapAnsi256(suite.ansi256, 10);
		}

		if ('rgb' in suite) {
			styles.color.ansi16m[key] = wrapAnsi16m(suite.rgb, 0);
			styles.bgColor.ansi16m[key] = wrapAnsi16m(suite.rgb, 10);
		}
	}

	return styles;
}

// Make the export immutable
Object.defineProperty(module, 'exports', {
	enumerable: true,
	get: assembleStyles
});

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(81)(module)))

/***/ }),
/* 642 */
/***/ (function(module, exports, __webpack_require__) {

var conversions = __webpack_require__(305);
var route = __webpack_require__(644);

var convert = {};

var models = Object.keys(conversions);

function wrapRaw(fn) {
	var wrappedFn = function (args) {
		if (args === undefined || args === null) {
			return args;
		}

		if (arguments.length > 1) {
			args = Array.prototype.slice.call(arguments);
		}

		return fn(args);
	};

	// preserve .conversion property if there is one
	if ('conversion' in fn) {
		wrappedFn.conversion = fn.conversion;
	}

	return wrappedFn;
}

function wrapRounded(fn) {
	var wrappedFn = function (args) {
		if (args === undefined || args === null) {
			return args;
		}

		if (arguments.length > 1) {
			args = Array.prototype.slice.call(arguments);
		}

		var result = fn(args);

		// we're assuming the result is an array here.
		// see notice in conversions.js; don't use box types
		// in conversion functions.
		if (typeof result === 'object') {
			for (var len = result.length, i = 0; i < len; i++) {
				result[i] = Math.round(result[i]);
			}
		}

		return result;
	};

	// preserve .conversion property if there is one
	if ('conversion' in fn) {
		wrappedFn.conversion = fn.conversion;
	}

	return wrappedFn;
}

models.forEach(function (fromModel) {
	convert[fromModel] = {};

	Object.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});
	Object.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});

	var routes = route(fromModel);
	var routeModels = Object.keys(routes);

	routeModels.forEach(function (toModel) {
		var fn = routes[toModel];

		convert[fromModel][toModel] = wrapRounded(fn);
		convert[fromModel][toModel].raw = wrapRaw(fn);
	});
});

module.exports = convert;


/***/ }),
/* 643 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = {
	"aliceblue": [240, 248, 255],
	"antiquewhite": [250, 235, 215],
	"aqua": [0, 255, 255],
	"aquamarine": [127, 255, 212],
	"azure": [240, 255, 255],
	"beige": [245, 245, 220],
	"bisque": [255, 228, 196],
	"black": [0, 0, 0],
	"blanchedalmond": [255, 235, 205],
	"blue": [0, 0, 255],
	"blueviolet": [138, 43, 226],
	"brown": [165, 42, 42],
	"burlywood": [222, 184, 135],
	"cadetblue": [95, 158, 160],
	"chartreuse": [127, 255, 0],
	"chocolate": [210, 105, 30],
	"coral": [255, 127, 80],
	"cornflowerblue": [100, 149, 237],
	"cornsilk": [255, 248, 220],
	"crimson": [220, 20, 60],
	"cyan": [0, 255, 255],
	"darkblue": [0, 0, 139],
	"darkcyan": [0, 139, 139],
	"darkgoldenrod": [184, 134, 11],
	"darkgray": [169, 169, 169],
	"darkgreen": [0, 100, 0],
	"darkgrey": [169, 169, 169],
	"darkkhaki": [189, 183, 107],
	"darkmagenta": [139, 0, 139],
	"darkolivegreen": [85, 107, 47],
	"darkorange": [255, 140, 0],
	"darkorchid": [153, 50, 204],
	"darkred": [139, 0, 0],
	"darksalmon": [233, 150, 122],
	"darkseagreen": [143, 188, 143],
	"darkslateblue": [72, 61, 139],
	"darkslategray": [47, 79, 79],
	"darkslategrey": [47, 79, 79],
	"darkturquoise": [0, 206, 209],
	"darkviolet": [148, 0, 211],
	"deeppink": [255, 20, 147],
	"deepskyblue": [0, 191, 255],
	"dimgray": [105, 105, 105],
	"dimgrey": [105, 105, 105],
	"dodgerblue": [30, 144, 255],
	"firebrick": [178, 34, 34],
	"floralwhite": [255, 250, 240],
	"forestgreen": [34, 139, 34],
	"fuchsia": [255, 0, 255],
	"gainsboro": [220, 220, 220],
	"ghostwhite": [248, 248, 255],
	"gold": [255, 215, 0],
	"goldenrod": [218, 165, 32],
	"gray": [128, 128, 128],
	"green": [0, 128, 0],
	"greenyellow": [173, 255, 47],
	"grey": [128, 128, 128],
	"honeydew": [240, 255, 240],
	"hotpink": [255, 105, 180],
	"indianred": [205, 92, 92],
	"indigo": [75, 0, 130],
	"ivory": [255, 255, 240],
	"khaki": [240, 230, 140],
	"lavender": [230, 230, 250],
	"lavenderblush": [255, 240, 245],
	"lawngreen": [124, 252, 0],
	"lemonchiffon": [255, 250, 205],
	"lightblue": [173, 216, 230],
	"lightcoral": [240, 128, 128],
	"lightcyan": [224, 255, 255],
	"lightgoldenrodyellow": [250, 250, 210],
	"lightgray": [211, 211, 211],
	"lightgreen": [144, 238, 144],
	"lightgrey": [211, 211, 211],
	"lightpink": [255, 182, 193],
	"lightsalmon": [255, 160, 122],
	"lightseagreen": [32, 178, 170],
	"lightskyblue": [135, 206, 250],
	"lightslategray": [119, 136, 153],
	"lightslategrey": [119, 136, 153],
	"lightsteelblue": [176, 196, 222],
	"lightyellow": [255, 255, 224],
	"lime": [0, 255, 0],
	"limegreen": [50, 205, 50],
	"linen": [250, 240, 230],
	"magenta": [255, 0, 255],
	"maroon": [128, 0, 0],
	"mediumaquamarine": [102, 205, 170],
	"mediumblue": [0, 0, 205],
	"mediumorchid": [186, 85, 211],
	"mediumpurple": [147, 112, 219],
	"mediumseagreen": [60, 179, 113],
	"mediumslateblue": [123, 104, 238],
	"mediumspringgreen": [0, 250, 154],
	"mediumturquoise": [72, 209, 204],
	"mediumvioletred": [199, 21, 133],
	"midnightblue": [25, 25, 112],
	"mintcream": [245, 255, 250],
	"mistyrose": [255, 228, 225],
	"moccasin": [255, 228, 181],
	"navajowhite": [255, 222, 173],
	"navy": [0, 0, 128],
	"oldlace": [253, 245, 230],
	"olive": [128, 128, 0],
	"olivedrab": [107, 142, 35],
	"orange": [255, 165, 0],
	"orangered": [255, 69, 0],
	"orchid": [218, 112, 214],
	"palegoldenrod": [238, 232, 170],
	"palegreen": [152, 251, 152],
	"paleturquoise": [175, 238, 238],
	"palevioletred": [219, 112, 147],
	"papayawhip": [255, 239, 213],
	"peachpuff": [255, 218, 185],
	"peru": [205, 133, 63],
	"pink": [255, 192, 203],
	"plum": [221, 160, 221],
	"powderblue": [176, 224, 230],
	"purple": [128, 0, 128],
	"rebeccapurple": [102, 51, 153],
	"red": [255, 0, 0],
	"rosybrown": [188, 143, 143],
	"royalblue": [65, 105, 225],
	"saddlebrown": [139, 69, 19],
	"salmon": [250, 128, 114],
	"sandybrown": [244, 164, 96],
	"seagreen": [46, 139, 87],
	"seashell": [255, 245, 238],
	"sienna": [160, 82, 45],
	"silver": [192, 192, 192],
	"skyblue": [135, 206, 235],
	"slateblue": [106, 90, 205],
	"slategray": [112, 128, 144],
	"slategrey": [112, 128, 144],
	"snow": [255, 250, 250],
	"springgreen": [0, 255, 127],
	"steelblue": [70, 130, 180],
	"tan": [210, 180, 140],
	"teal": [0, 128, 128],
	"thistle": [216, 191, 216],
	"tomato": [255, 99, 71],
	"turquoise": [64, 224, 208],
	"violet": [238, 130, 238],
	"wheat": [245, 222, 179],
	"white": [255, 255, 255],
	"whitesmoke": [245, 245, 245],
	"yellow": [255, 255, 0],
	"yellowgreen": [154, 205, 50]
};


/***/ }),
/* 644 */
/***/ (function(module, exports, __webpack_require__) {

var conversions = __webpack_require__(305);

/*
	this function routes a model to all other models.

	all functions that are routed have a property `.conversion` attached
	to the returned synthetic function. This property is an array
	of strings, each with the steps in between the 'from' and 'to'
	color models (inclusive).

	conversions that are not possible simply are not included.
*/

function buildGraph() {
	var graph = {};
	// https://jsperf.com/object-keys-vs-for-in-with-closure/3
	var models = Object.keys(conversions);

	for (var len = models.length, i = 0; i < len; i++) {
		graph[models[i]] = {
			// http://jsperf.com/1-vs-infinity
			// micro-opt, but this is simple.
			distance: -1,
			parent: null
		};
	}

	return graph;
}

// https://en.wikipedia.org/wiki/Breadth-first_search
function deriveBFS(fromModel) {
	var graph = buildGraph();
	var queue = [fromModel]; // unshift -> queue -> pop

	graph[fromModel].distance = 0;

	while (queue.length) {
		var current = queue.pop();
		var adjacents = Object.keys(conversions[current]);

		for (var len = adjacents.length, i = 0; i < len; i++) {
			var adjacent = adjacents[i];
			var node = graph[adjacent];

			if (node.distance === -1) {
				node.distance = graph[current].distance + 1;
				node.parent = current;
				queue.unshift(adjacent);
			}
		}
	}

	return graph;
}

function link(from, to) {
	return function (args) {
		return to(from(args));
	};
}

function wrapConversion(toModel, graph) {
	var path = [graph[toModel].parent, toModel];
	var fn = conversions[graph[toModel].parent][toModel];

	var cur = graph[toModel].parent;
	while (graph[cur].parent) {
		path.unshift(graph[cur].parent);
		fn = link(conversions[graph[cur].parent][cur], fn);
		cur = graph[cur].parent;
	}

	fn.conversion = path;
	return fn;
}

module.exports = function (fromModel) {
	var graph = deriveBFS(fromModel);
	var conversion = {};

	var models = Object.keys(graph);
	for (var len = models.length, i = 0; i < len; i++) {
		var toModel = models[i];
		var node = graph[toModel];

		if (node.parent === null) {
			// no possible conversion, or this node is the source model.
			continue;
		}

		conversion[toModel] = wrapConversion(toModel, graph);
	}

	return conversion;
};



/***/ }),
/* 645 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

const os = __webpack_require__(218);
const hasFlag = __webpack_require__(646);

const env = process.env;

let forceColor;
if (hasFlag('no-color') ||
	hasFlag('no-colors') ||
	hasFlag('color=false')) {
	forceColor = false;
} else if (hasFlag('color') ||
	hasFlag('colors') ||
	hasFlag('color=true') ||
	hasFlag('color=always')) {
	forceColor = true;
}
if ('FORCE_COLOR' in env) {
	forceColor = env.FORCE_COLOR.length === 0 || parseInt(env.FORCE_COLOR, 10) !== 0;
}

function translateLevel(level) {
	if (level === 0) {
		return false;
	}

	return {
		level,
		hasBasic: true,
		has256: level >= 2,
		has16m: level >= 3
	};
}

function supportsColor(stream) {
	if (forceColor === false) {
		return 0;
	}

	if (hasFlag('color=16m') ||
		hasFlag('color=full') ||
		hasFlag('color=truecolor')) {
		return 3;
	}

	if (hasFlag('color=256')) {
		return 2;
	}

	if (stream && !stream.isTTY && forceColor !== true) {
		return 0;
	}

	const min = forceColor ? 1 : 0;

	if (process.platform === 'win32') {
		// Node.js 7.5.0 is the first version of Node.js to include a patch to
		// libuv that enables 256 color output on Windows. Anything earlier and it
		// won't work. However, here we target Node.js 8 at minimum as it is an LTS
		// release, and Node.js 7 is not. Windows 10 build 10586 is the first Windows
		// release that supports 256 colors. Windows 10 build 14931 is the first release
		// that supports 16m/TrueColor.
		const osRelease = os.release().split('.');
		if (
			Number(process.versions.node.split('.')[0]) >= 8 &&
			Number(osRelease[0]) >= 10 &&
			Number(osRelease[2]) >= 10586
		) {
			return Number(osRelease[2]) >= 14931 ? 3 : 2;
		}

		return 1;
	}

	if ('CI' in env) {
		if (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(sign => sign in env) || env.CI_NAME === 'codeship') {
			return 1;
		}

		return min;
	}

	if ('TEAMCITY_VERSION' in env) {
		return /^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;
	}

	if (env.COLORTERM === 'truecolor') {
		return 3;
	}

	if ('TERM_PROGRAM' in env) {
		const version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);

		switch (env.TERM_PROGRAM) {
			case 'iTerm.app':
				return version >= 3 ? 3 : 2;
			case 'Apple_Terminal':
				return 2;
			// No default
		}
	}

	if (/-256(color)?$/i.test(env.TERM)) {
		return 2;
	}

	if (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {
		return 1;
	}

	if ('COLORTERM' in env) {
		return 1;
	}

	if (env.TERM === 'dumb') {
		return min;
	}

	return min;
}

function getSupportLevel(stream) {
	const level = supportsColor(stream);
	return translateLevel(level);
}

module.exports = {
	supportsColor: getSupportLevel,
	stdout: getSupportLevel(process.stdout),
	stderr: getSupportLevel(process.stderr)
};


/***/ }),
/* 646 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = (flag, argv) => {
	argv = argv || process.argv;
	const prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');
	const pos = argv.indexOf(prefix + flag);
	const terminatorPos = argv.indexOf('--');
	return pos !== -1 && (terminatorPos === -1 ? true : pos < terminatorPos);
};


/***/ }),
/* 647 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

const TEMPLATE_REGEX = /(?:\\(u[a-f\d]{4}|x[a-f\d]{2}|.))|(?:\{(~)?(\w+(?:\([^)]*\))?(?:\.\w+(?:\([^)]*\))?)*)(?:[ \t]|(?=\r?\n)))|(\})|((?:.|[\r\n\f])+?)/gi;
const STYLE_REGEX = /(?:^|\.)(\w+)(?:\(([^)]*)\))?/g;
const STRING_REGEX = /^(['"])((?:\\.|(?!\1)[^\\])*)\1$/;
const ESCAPE_REGEX = /\\(u[a-f\d]{4}|x[a-f\d]{2}|.)|([^\\])/gi;

const ESCAPES = new Map([
	['n', '\n'],
	['r', '\r'],
	['t', '\t'],
	['b', '\b'],
	['f', '\f'],
	['v', '\v'],
	['0', '\0'],
	['\\', '\\'],
	['e', '\u001B'],
	['a', '\u0007']
]);

function unescape(c) {
	if ((c[0] === 'u' && c.length === 5) || (c[0] === 'x' && c.length === 3)) {
		return String.fromCharCode(parseInt(c.slice(1), 16));
	}

	return ESCAPES.get(c) || c;
}

function parseArguments(name, args) {
	const results = [];
	const chunks = args.trim().split(/\s*,\s*/g);
	let matches;

	for (const chunk of chunks) {
		if (!isNaN(chunk)) {
			results.push(Number(chunk));
		} else if ((matches = chunk.match(STRING_REGEX))) {
			results.push(matches[2].replace(ESCAPE_REGEX, (m, escape, chr) => escape ? unescape(escape) : chr));
		} else {
			throw new Error(`Invalid Chalk template style argument: ${chunk} (in style '${name}')`);
		}
	}

	return results;
}

function parseStyle(style) {
	STYLE_REGEX.lastIndex = 0;

	const results = [];
	let matches;

	while ((matches = STYLE_REGEX.exec(style)) !== null) {
		const name = matches[1];

		if (matches[2]) {
			const args = parseArguments(name, matches[2]);
			results.push([name].concat(args));
		} else {
			results.push([name]);
		}
	}

	return results;
}

function buildStyle(chalk, styles) {
	const enabled = {};

	for (const layer of styles) {
		for (const style of layer.styles) {
			enabled[style[0]] = layer.inverse ? null : style.slice(1);
		}
	}

	let current = chalk;
	for (const styleName of Object.keys(enabled)) {
		if (Array.isArray(enabled[styleName])) {
			if (!(styleName in current)) {
				throw new Error(`Unknown Chalk style: ${styleName}`);
			}

			if (enabled[styleName].length > 0) {
				current = current[styleName].apply(current, enabled[styleName]);
			} else {
				current = current[styleName];
			}
		}
	}

	return current;
}

module.exports = (chalk, tmp) => {
	const styles = [];
	const chunks = [];
	let chunk = [];

	// eslint-disable-next-line max-params
	tmp.replace(TEMPLATE_REGEX, (m, escapeChar, inverse, style, close, chr) => {
		if (escapeChar) {
			chunk.push(unescape(escapeChar));
		} else if (style) {
			const str = chunk.join('');
			chunk = [];
			chunks.push(styles.length === 0 ? str : buildStyle(chalk, styles)(str));
			styles.push({inverse, styles: parseStyle(style)});
		} else if (close) {
			if (styles.length === 0) {
				throw new Error('Found extraneous } in Chalk template literal');
			}

			chunks.push(buildStyle(chalk, styles)(chunk.join('')));
			chunk = [];
			styles.pop();
		} else {
			chunk.push(chr);
		}
	});

	chunks.push(chunk.join(''));

	if (styles.length > 0) {
		const errMsg = `Chalk template literal is missing ${styles.length} closing bracket${styles.length === 1 ? '' : 's'} (\`}\`)`;
		throw new Error(errMsg);
	}

	return chunks.join('');
};


/***/ }),
/* 648 */
/***/ (function(module, exports, __webpack_require__) {

const stringify = __webpack_require__(462)

const LOG_LENGTH_LIMIT = 64 * 1024 - 1

function prodFormat(type, message, label, namespace) {
  const log = { time: new Date(), type, label, namespace }

  if (typeof message === 'object') {
    if (message && message.no_retry) {
      log.no_retry = message.no_retry
    }
    if (message && message.message) {
      log.message = message.message
    }
  } else {
    log.message = message
  }

  // properly display error messages
  if (log.message && log.message.stack) {
    log.message = log.message.stack
  }

  // cut the string to avoid a fail in the stack
  let result = log
  try {
    result = stringify(log).substr(0, LOG_LENGTH_LIMIT)
  } catch (err) {
    // eslint-disable-next-line no-console
    console.log(err.message, 'cozy-logger: Failed to convert message to JSON')
  }
  return result
}

module.exports = prodFormat


/***/ }),
/* 649 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _mapValues = _interopRequireDefault(__webpack_require__(109));

var _groupBy2 = _interopRequireDefault(__webpack_require__(292));

var _flatten = _interopRequireDefault(__webpack_require__(153));

var _isEqual = _interopRequireDefault(__webpack_require__(179));

var _uniq = _interopRequireDefault(__webpack_require__(84));

var _uniqWith = _interopRequireDefault(__webpack_require__(650));

var _dsl = __webpack_require__(20);

var isIdQuery = function isIdQuery(query) {
  return query.id || query.ids;
};
/**
 * Optimize queries on a single doctype
 *
 * @param  {QueryDefinition[]} queries - Queries of a same doctype
 * @returns {QueryDefinition[]} Optimized queries
 * @private
 */


var optimizeDoctypeQueries = function optimizeDoctypeQueries(queries) {
  var _groupBy = (0, _groupBy2.default)(queries, function (q) {
    return isIdQuery(q) ? 'idQueries' : 'others';
  }),
      _groupBy$idQueries = _groupBy.idQueries,
      idQueries = _groupBy$idQueries === void 0 ? [] : _groupBy$idQueries,
      _groupBy$others = _groupBy.others,
      others = _groupBy$others === void 0 ? [] : _groupBy$others;

  var groupedIdQueries = idQueries.length > 0 ? new _dsl.QueryDefinition({
    doctype: queries[0].doctype,
    ids: (0, _uniq.default)((0, _flatten.default)(idQueries.map(function (q) {
      return q.id || q.ids;
    })))
  }) : []; // Deduplicate before concataining

  return (0, _uniqWith.default)(others, _isEqual.default).concat(groupedIdQueries);
};
/**
 * Reduce the number of queries used to fetch documents.
 *
 * - Deduplication of queries
 * - Groups id queries
 *
 * @param  {QueryDefinition[]} queries - Queries to optimized
 * @returns {QueryDefinition[]} Optimized queries
 * @private
 */


var optimizeQueries = function optimizeQueries(queries) {
  var byDoctype = (0, _groupBy2.default)(queries, function (q) {
    return q.doctype;
  });
  return (0, _flatten.default)(Object.values((0, _mapValues.default)(byDoctype, optimizeDoctypeQueries)));
};

var _default = optimizeQueries;
exports.default = _default;

/***/ }),
/* 650 */
/***/ (function(module, exports, __webpack_require__) {

var baseUniq = __webpack_require__(173);

/**
 * This method is like `_.uniq` except that it accepts `comparator` which
 * is invoked to compare elements of `array`. The order of result values is
 * determined by the order they occur in the array.The comparator is invoked
 * with two arguments: (arrVal, othVal).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new duplicate free array.
 * @example
 *
 * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
 *
 * _.uniqWith(objects, _.isEqual);
 * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
 */
function uniqWith(array, comparator) {
  comparator = typeof comparator == 'function' ? comparator : undefined;
  return (array && array.length) ? baseUniq(array, undefined, comparator) : [];
}

module.exports = uniqWith;


/***/ }),
/* 651 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(6));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(7));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));

var _createClass2 = _interopRequireDefault(__webpack_require__(13));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(9));

var _keyBy = _interopRequireDefault(__webpack_require__(140));

var _mapValues = _interopRequireDefault(__webpack_require__(109));

var _merge = _interopRequireDefault(__webpack_require__(52));

var _size = _interopRequireDefault(__webpack_require__(652));

var _intersectionBy = _interopRequireDefault(__webpack_require__(656));

var _associations = __webpack_require__(129);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 * @typedef {object} DoctypeSchema
 */

/**
 * @typedef {Record<string, DoctypeSchema>} SchemaDefinition
 */

/**
 * Returns a normalized schema object from the schema definition.
 *
 * - Relationships are resolved to classes if needed
 * - The name of the relationship (its key in the schema definition)
 *   is included in the relationship
 * - Empty relationships are nulled
 *
 * @private
 */
var normalizeDoctypeSchema = function normalizeDoctypeSchema(doctypeSchema) {
  var relationships = (0, _mapValues.default)(doctypeSchema.relationships || {}, function (v, k) {
    return _objectSpread(_objectSpread({}, v), {}, {
      name: k,
      type: (0, _associations.resolveClass)(v.doctype, v.type)
    });
  });
  return _objectSpread(_objectSpread({}, doctypeSchema), {}, {
    relationships: (0, _size.default)(relationships) > 0 ? (0, _keyBy.default)(relationships, 'name') : null
  });
};

var assert = function assert(predicate, errorMessage) {
  if (!predicate) throw new Error(errorMessage);
};

var ensureCanBeAdded = function ensureCanBeAdded(newSchemas, existingSchemas) {
  var sameNames = (0, _intersectionBy.default)(newSchemas, existingSchemas, function (x) {
    return x.name;
  });
  assert(sameNames.length === 0, "Duplicated names in schemas being added: ".concat(sameNames.map(function (x) {
    return x.name;
  }).join(', ')));
  var sameDoctypes = (0, _intersectionBy.default)(newSchemas, existingSchemas, function (x) {
    return x.doctype;
  });
  assert(sameDoctypes.length === 0, "Duplicated doctypes in schemas being added: ".concat(sameDoctypes.map(function (x) {
    return x.name;
  }).join(', ')));
};
/**
 * Stores information on a particular doctype.
 *
 * - Attribute validation
 * - Relationship access
 *
 * ```js
 * const schema = new Schema({
 *   todos: {
 *     attributes: {
 *       label: {
 *         unique: true
 *       }
 *     },
 *     relationships: {
 *       author: 'has-one-in-place'
 *     }
 *   }
 * }, cozyStackClient)
 * ```
 */


var Schema = /*#__PURE__*/function () {
  /**
   * @param  {SchemaDefinition} schemaDefinition - Schema for the application documents
   * @param  {object} client - An instance of cozy client (optional)
   */
  function Schema() {
    var schemaDefinition = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var client = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
    (0, _classCallCheck2.default)(this, Schema);
    this.byDoctype = {};
    this.add(schemaDefinition);
    this.client = client;
  }
  /**
   * @param {SchemaDefinition} schemaDefinition - Additional schema to merge to current schema
   */


  (0, _createClass2.default)(Schema, [{
    key: "add",
    value: function add() {
      var schemaDefinition = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var normalizedSchemaDefinition = (0, _mapValues.default)(schemaDefinition, function (obj, name) {
        return _objectSpread({
          name: name
        }, normalizeDoctypeSchema(obj));
      });
      ensureCanBeAdded(Object.values(normalizedSchemaDefinition), Object.values(this.byDoctype));
      (0, _merge.default)(this.byDoctype, (0, _keyBy.default)(normalizedSchemaDefinition, function (x) {
        return x.doctype;
      }));
    }
    /**
     * Returns the schema for a doctype
     *
     * Creates an empty schema implicitly if it does not exist
     *
     * @param {string} doctype - Doctype
     */

  }, {
    key: "getDoctypeSchema",
    value: function getDoctypeSchema(doctype) {
      var schema = this.byDoctype[doctype];

      if (!schema) {
        schema = normalizeDoctypeSchema({
          name: doctype,
          doctype: doctype
        });
        this.byDoctype[doctype] = schema;
      }

      return schema;
    }
    /**
     * Returns the relationship for a given doctype/name
     *
     * @param {string} doctype - Doctype
     * @param {string} relationshipName - Relationship name
     */

  }, {
    key: "getRelationship",
    value: function getRelationship(doctype, relationshipName) {
      if (!doctype) {
        throw new TypeError("Invalid doctype ".concat(doctype));
      }

      var schema = this.getDoctypeSchema(doctype);

      if (!schema) {
        throw new Error("Cannot find doctype ".concat(doctype, " in schema"));
      }

      if (!schema.relationships) {
        throw new Error("Schema for doctype ".concat(doctype, " has no relationships"));
      }

      return schema.relationships[relationshipName];
    }
    /**
     * Validates a document considering the descriptions in schema.attributes.
     */

  }, {
    key: "validate",
    value: function () {
      var _validate = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(document) {
        var errors, schema, n, ret;
        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                errors = {};
                schema = this.byDoctype[document._type];

                if (schema) {
                  _context.next = 4;
                  break;
                }

                return _context.abrupt("return", true);

              case 4:
                if (schema.attributes) {
                  _context.next = 6;
                  break;
                }

                return _context.abrupt("return", true);

              case 6:
                _context.t0 = _regenerator.default.keys(schema.attributes);

              case 7:
                if ((_context.t1 = _context.t0()).done) {
                  _context.next = 15;
                  break;
                }

                n = _context.t1.value;
                _context.next = 11;
                return this.validateAttribute(document, n, schema.attributes[n]);

              case 11:
                ret = _context.sent;
                if (ret !== true) errors[n] = ret;
                _context.next = 7;
                break;

              case 15:
                if (!(Object.keys(errors).length === 0)) {
                  _context.next = 17;
                  break;
                }

                return _context.abrupt("return", true);

              case 17:
                return _context.abrupt("return", errors);

              case 18:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function validate(_x) {
        return _validate.apply(this, arguments);
      }

      return validate;
    }()
  }, {
    key: "validateAttribute",
    value: function () {
      var _validateAttribute = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(document, attrName, attrProps) {
        var ret;
        return _regenerator.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                if (!(attrProps.unique && this.client)) {
                  _context2.next = 6;
                  break;
                }

                _context2.next = 3;
                return this.client.collection(document._type).checkUniquenessOf(attrName, document[attrName]);

              case 3:
                ret = _context2.sent;

                if (!(ret !== true)) {
                  _context2.next = 6;
                  break;
                }

                return _context2.abrupt("return", 'must be unique');

              case 6:
                return _context2.abrupt("return", true);

              case 7:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function validateAttribute(_x2, _x3, _x4) {
        return _validateAttribute.apply(this, arguments);
      }

      return validateAttribute;
    }()
  }]);
  return Schema;
}();

var _default = Schema;
exports.default = _default;

/***/ }),
/* 652 */
/***/ (function(module, exports, __webpack_require__) {

var baseKeys = __webpack_require__(152),
    getTag = __webpack_require__(63),
    isArrayLike = __webpack_require__(53),
    isString = __webpack_require__(158),
    stringSize = __webpack_require__(653);

/** `Object#toString` result references. */
var mapTag = '[object Map]',
    setTag = '[object Set]';

/**
 * Gets the size of `collection` by returning its length for array-like
 * values or the number of own enumerable string keyed properties for objects.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object|string} collection The collection to inspect.
 * @returns {number} Returns the collection size.
 * @example
 *
 * _.size([1, 2, 3]);
 * // => 3
 *
 * _.size({ 'a': 1, 'b': 2 });
 * // => 2
 *
 * _.size('pebbles');
 * // => 7
 */
function size(collection) {
  if (collection == null) {
    return 0;
  }
  if (isArrayLike(collection)) {
    return isString(collection) ? stringSize(collection) : collection.length;
  }
  var tag = getTag(collection);
  if (tag == mapTag || tag == setTag) {
    return collection.size;
  }
  return baseKeys(collection).length;
}

module.exports = size;


/***/ }),
/* 653 */
/***/ (function(module, exports, __webpack_require__) {

var asciiSize = __webpack_require__(654),
    hasUnicode = __webpack_require__(188),
    unicodeSize = __webpack_require__(655);

/**
 * Gets the number of symbols in `string`.
 *
 * @private
 * @param {string} string The string to inspect.
 * @returns {number} Returns the string size.
 */
function stringSize(string) {
  return hasUnicode(string)
    ? unicodeSize(string)
    : asciiSize(string);
}

module.exports = stringSize;


/***/ }),
/* 654 */
/***/ (function(module, exports, __webpack_require__) {

var baseProperty = __webpack_require__(172);

/**
 * Gets the size of an ASCII `string`.
 *
 * @private
 * @param {string} string The string inspect.
 * @returns {number} Returns the string size.
 */
var asciiSize = baseProperty('length');

module.exports = asciiSize;


/***/ }),
/* 655 */
/***/ (function(module, exports) {

/** Used to compose unicode character classes. */
var rsAstralRange = '\\ud800-\\udfff',
    rsComboMarksRange = '\\u0300-\\u036f',
    reComboHalfMarksRange = '\\ufe20-\\ufe2f',
    rsComboSymbolsRange = '\\u20d0-\\u20ff',
    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
    rsVarRange = '\\ufe0e\\ufe0f';

/** Used to compose unicode capture groups. */
var rsAstral = '[' + rsAstralRange + ']',
    rsCombo = '[' + rsComboRange + ']',
    rsFitz = '\\ud83c[\\udffb-\\udfff]',
    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
    rsNonAstral = '[^' + rsAstralRange + ']',
    rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
    rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
    rsZWJ = '\\u200d';

/** Used to compose unicode regexes. */
var reOptMod = rsModifier + '?',
    rsOptVar = '[' + rsVarRange + ']?',
    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
    rsSeq = rsOptVar + reOptMod + rsOptJoin,
    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

/**
 * Gets the size of a Unicode `string`.
 *
 * @private
 * @param {string} string The string inspect.
 * @returns {number} Returns the string size.
 */
function unicodeSize(string) {
  var result = reUnicode.lastIndex = 0;
  while (reUnicode.test(string)) {
    ++result;
  }
  return result;
}

module.exports = unicodeSize;


/***/ }),
/* 656 */
/***/ (function(module, exports, __webpack_require__) {

var arrayMap = __webpack_require__(37),
    baseIntersection = __webpack_require__(294),
    baseIteratee = __webpack_require__(47),
    baseRest = __webpack_require__(59),
    castArrayLikeObject = __webpack_require__(295),
    last = __webpack_require__(267);

/**
 * This method is like `_.intersection` except that it accepts `iteratee`
 * which is invoked for each element of each `arrays` to generate the criterion
 * by which they're compared. The order and references of result values are
 * determined by the first array. The iteratee is invoked with one argument:
 * (value).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {...Array} [arrays] The arrays to inspect.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {Array} Returns the new array of intersecting values.
 * @example
 *
 * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
 * // => [2.1]
 *
 * // The `_.property` iteratee shorthand.
 * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
 * // => [{ 'x': 1 }]
 */
var intersectionBy = baseRest(function(arrays) {
  var iteratee = last(arrays),
      mapped = arrayMap(arrays, castArrayLikeObject);

  if (iteratee === last(mapped)) {
    iteratee = undefined;
  } else {
    mapped.pop();
  }
  return (mapped.length && mapped[0] === arrays[0])
    ? baseIntersection(mapped, baseIteratee(iteratee, 2))
    : [];
});

module.exports = intersectionBy;


/***/ }),
/* 657 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));

var _createClass2 = _interopRequireDefault(__webpack_require__(13));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(9));

var _get = _interopRequireDefault(__webpack_require__(10));

var _store = __webpack_require__(77);

/**
 * ObservableQueries are the glue between the store and observers
 * of the store. They have the responsibility to hydrate the documents
 * before passing them to the React component.
 */
var hasOwn = Object.prototype.hasOwnProperty;

var ObservableQuery = /*#__PURE__*/function () {
  function ObservableQuery(queryId, definition, client, options) {
    var _this = this;

    (0, _classCallCheck2.default)(this, ObservableQuery);
    (0, _defineProperty2.default)(this, "handleStoreChange", function () {
      var nextResult = _this.currentRawResult();

      if (!shallowEqual(nextResult, _this.lastResult)) {
        _this.lastResult = nextResult;

        _this.notifyObservers();
      }
    });

    if (!queryId || !definition || !client) {
      throw new Error('ObservableQuery takes 3 arguments: queryId, definition and client');
    }

    this.queryId = queryId;
    this.definition = definition;
    this.client = client;
    this.observers = {};
    this.idCounter = 1;
    this.lastResult = this.currentRawResult();
    this.options = options;
  }

  (0, _createClass2.default)(ObservableQuery, [{
    key: "currentResult",

    /**
     * Returns the query from the store with hydrated documents.
     *
     * @typedef {object} HydratedQueryState
     *
     * @returns {HydratedQueryState}
     */
    value: function currentResult() {
      return this.client.getQueryFromState(this.queryId, {
        hydrated: (0, _get.default)(this.options, 'hydrated', true),
        singleDocData: true
      });
    }
  }, {
    key: "fetch",
    value: function fetch() {
      return this.client.query(this.definition, {
        as: this.queryId
      });
    }
    /**
     * Generates and executes a query that is offsetted by the number of documents
     * we have in the store.
     */

  }, {
    key: "fetchMore",
    value: function fetchMore() {
      var rawResult = this.currentRawResult();
      return rawResult.bookmark ? this.client.query(this.definition.offsetBookmark(rawResult.bookmark), {
        as: this.queryId
      }) : this.client.query(this.definition.offset(rawResult.data.length), {
        as: this.queryId
      });
    }
  }, {
    key: "currentRawResult",
    value: function currentRawResult() {
      return (0, _store.getRawQueryFromState)(this.getStore().getState(), this.queryId);
    }
  }, {
    key: "notifyObservers",
    value: function notifyObservers() {
      var _this2 = this;

      Object.keys(this.observers).forEach(function (id) {
        return _this2.observers[id]();
      });
    }
  }, {
    key: "subscribeToStore",
    value: function subscribeToStore() {
      if (this._unsubscribeStore) {
        throw new Error('ObservableQuery instance is already subscribed to store.');
      }

      this._unsubscribeStore = this.getStore().subscribe(this.handleStoreChange);
    }
  }, {
    key: "unsubscribeFromStore",
    value: function unsubscribeFromStore() {
      if (!this._unsubscribeStore) {
        throw new Error('ObservableQuery instance is not subscribed to store');
      }

      this._unsubscribeStore();
    }
  }, {
    key: "subscribe",
    value: function subscribe(callback) {
      var _this3 = this;

      var callbackId = this.idCounter;
      this.idCounter++;
      this.observers[callbackId] = callback;

      if (Object.keys(this.observers).length === 1) {
        this.subscribeToStore();
      }

      return function () {
        return _this3.unsubscribe(callbackId);
      };
    }
  }, {
    key: "unsubscribe",
    value: function unsubscribe(callbackId) {
      if (!this.observers[callbackId]) {
        throw new Error("Cannot unsubscribe unknown callbackId ".concat(callbackId));
      }

      delete this.observers[callbackId];

      if (Object.keys(this.observers).length === 0) {
        this.unsubscribeFromStore();
        this._unsubscribeStore = null;
      }
    }
  }, {
    key: "getStore",
    value: function getStore() {
      return this.client.store;
    }
  }]);
  return ObservableQuery;
}();

exports.default = ObservableQuery;

function is(x, y) {
  if (x === y) {
    return x !== 0 || y !== 0 || 1 / x === 1 / y;
  } else {
    return x !== x && y !== y;
  }
}

function shallowEqual(objA, objB) {
  if (is(objA, objB)) return true;

  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);
  if (keysA.length !== keysB.length) return false;

  for (var i = 0; i < keysA.length; i++) {
    if (!hasOwn.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}

/***/ }),
/* 658 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CozyClient = void 0;

var _inherits2 = _interopRequireDefault(__webpack_require__(18));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(19));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(16));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var SnapshotObject = function SnapshotObject(attrs) {
  (0, _classCallCheck2.default)(this, SnapshotObject);
  Object.assign(this, attrs);
};

var CozyClient = /*#__PURE__*/function (_SnapshotObject) {
  (0, _inherits2.default)(CozyClient, _SnapshotObject);

  var _super = _createSuper(CozyClient);

  function CozyClient() {
    (0, _classCallCheck2.default)(this, CozyClient);
    return _super.apply(this, arguments);
  }

  return CozyClient;
}(SnapshotObject);

exports.CozyClient = CozyClient;

/***/ }),
/* 659 */
/***/ (function(module, exports, __webpack_require__) {

var json = typeof JSON !== 'undefined' ? JSON : __webpack_require__(660);

module.exports = function (obj, opts) {
    if (!opts) opts = {};
    if (typeof opts === 'function') opts = { cmp: opts };
    var space = opts.space || '';
    if (typeof space === 'number') space = Array(space+1).join(' ');
    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;
    var replacer = opts.replacer || function(key, value) { return value; };

    var cmp = opts.cmp && (function (f) {
        return function (node) {
            return function (a, b) {
                var aobj = { key: a, value: node[a] };
                var bobj = { key: b, value: node[b] };
                return f(aobj, bobj);
            };
        };
    })(opts.cmp);

    var seen = [];
    return (function stringify (parent, key, node, level) {
        var indent = space ? ('\n' + new Array(level + 1).join(space)) : '';
        var colonSeparator = space ? ': ' : ':';

        if (node && node.toJSON && typeof node.toJSON === 'function') {
            node = node.toJSON();
        }

        node = replacer.call(parent, key, node);

        if (node === undefined) {
            return;
        }
        if (typeof node !== 'object' || node === null) {
            return json.stringify(node);
        }
        if (isArray(node)) {
            var out = [];
            for (var i = 0; i < node.length; i++) {
                var item = stringify(node, i, node[i], level+1) || json.stringify(null);
                out.push(indent + space + item);
            }
            return '[' + out.join(',') + indent + ']';
        }
        else {
            if (seen.indexOf(node) !== -1) {
                if (cycles) return json.stringify('__cycle__');
                throw new TypeError('Converting circular structure to JSON');
            }
            else seen.push(node);

            var keys = objectKeys(node).sort(cmp && cmp(node));
            var out = [];
            for (var i = 0; i < keys.length; i++) {
                var key = keys[i];
                var value = stringify(node, key, node[key], level+1);

                if(!value) continue;

                var keyValue = json.stringify(key)
                    + colonSeparator
                    + value;
                ;
                out.push(indent + space + keyValue);
            }
            seen.splice(seen.indexOf(node), 1);
            return '{' + out.join(',') + indent + '}';
        }
    })({ '': obj }, '', obj, 0);
};

var isArray = Array.isArray || function (x) {
    return {}.toString.call(x) === '[object Array]';
};

var objectKeys = Object.keys || function (obj) {
    var has = Object.prototype.hasOwnProperty || function () { return true };
    var keys = [];
    for (var key in obj) {
        if (has.call(obj, key)) keys.push(key);
    }
    return keys;
};


/***/ }),
/* 660 */
/***/ (function(module, exports, __webpack_require__) {

exports.parse = __webpack_require__(661);
exports.stringify = __webpack_require__(662);


/***/ }),
/* 661 */
/***/ (function(module, exports) {

var at, // The index of the current character
    ch, // The current character
    escapee = {
        '"':  '"',
        '\\': '\\',
        '/':  '/',
        b:    '\b',
        f:    '\f',
        n:    '\n',
        r:    '\r',
        t:    '\t'
    },
    text,

    error = function (m) {
        // Call error when something is wrong.
        throw {
            name:    'SyntaxError',
            message: m,
            at:      at,
            text:    text
        };
    },
    
    next = function (c) {
        // If a c parameter is provided, verify that it matches the current character.
        if (c && c !== ch) {
            error("Expected '" + c + "' instead of '" + ch + "'");
        }
        
        // Get the next character. When there are no more characters,
        // return the empty string.
        
        ch = text.charAt(at);
        at += 1;
        return ch;
    },
    
    number = function () {
        // Parse a number value.
        var number,
            string = '';
        
        if (ch === '-') {
            string = '-';
            next('-');
        }
        while (ch >= '0' && ch <= '9') {
            string += ch;
            next();
        }
        if (ch === '.') {
            string += '.';
            while (next() && ch >= '0' && ch <= '9') {
                string += ch;
            }
        }
        if (ch === 'e' || ch === 'E') {
            string += ch;
            next();
            if (ch === '-' || ch === '+') {
                string += ch;
                next();
            }
            while (ch >= '0' && ch <= '9') {
                string += ch;
                next();
            }
        }
        number = +string;
        if (!isFinite(number)) {
            error("Bad number");
        } else {
            return number;
        }
    },
    
    string = function () {
        // Parse a string value.
        var hex,
            i,
            string = '',
            uffff;
        
        // When parsing for string values, we must look for " and \ characters.
        if (ch === '"') {
            while (next()) {
                if (ch === '"') {
                    next();
                    return string;
                } else if (ch === '\\') {
                    next();
                    if (ch === 'u') {
                        uffff = 0;
                        for (i = 0; i < 4; i += 1) {
                            hex = parseInt(next(), 16);
                            if (!isFinite(hex)) {
                                break;
                            }
                            uffff = uffff * 16 + hex;
                        }
                        string += String.fromCharCode(uffff);
                    } else if (typeof escapee[ch] === 'string') {
                        string += escapee[ch];
                    } else {
                        break;
                    }
                } else {
                    string += ch;
                }
            }
        }
        error("Bad string");
    },

    white = function () {

// Skip whitespace.

        while (ch && ch <= ' ') {
            next();
        }
    },

    word = function () {

// true, false, or null.

        switch (ch) {
        case 't':
            next('t');
            next('r');
            next('u');
            next('e');
            return true;
        case 'f':
            next('f');
            next('a');
            next('l');
            next('s');
            next('e');
            return false;
        case 'n':
            next('n');
            next('u');
            next('l');
            next('l');
            return null;
        }
        error("Unexpected '" + ch + "'");
    },

    value,  // Place holder for the value function.

    array = function () {

// Parse an array value.

        var array = [];

        if (ch === '[') {
            next('[');
            white();
            if (ch === ']') {
                next(']');
                return array;   // empty array
            }
            while (ch) {
                array.push(value());
                white();
                if (ch === ']') {
                    next(']');
                    return array;
                }
                next(',');
                white();
            }
        }
        error("Bad array");
    },

    object = function () {

// Parse an object value.

        var key,
            object = {};

        if (ch === '{') {
            next('{');
            white();
            if (ch === '}') {
                next('}');
                return object;   // empty object
            }
            while (ch) {
                key = string();
                white();
                next(':');
                if (Object.hasOwnProperty.call(object, key)) {
                    error('Duplicate key "' + key + '"');
                }
                object[key] = value();
                white();
                if (ch === '}') {
                    next('}');
                    return object;
                }
                next(',');
                white();
            }
        }
        error("Bad object");
    };

value = function () {

// Parse a JSON value. It could be an object, an array, a string, a number,
// or a word.

    white();
    switch (ch) {
    case '{':
        return object();
    case '[':
        return array();
    case '"':
        return string();
    case '-':
        return number();
    default:
        return ch >= '0' && ch <= '9' ? number() : word();
    }
};

// Return the json_parse function. It will have access to all of the above
// functions and variables.

module.exports = function (source, reviver) {
    var result;
    
    text = source;
    at = 0;
    ch = ' ';
    result = value();
    white();
    if (ch) {
        error("Syntax error");
    }

    // If there is a reviver function, we recursively walk the new structure,
    // passing each name/value pair to the reviver function for possible
    // transformation, starting with a temporary root object that holds the result
    // in an empty key. If there is not a reviver function, we simply return the
    // result.

    return typeof reviver === 'function' ? (function walk(holder, key) {
        var k, v, value = holder[key];
        if (value && typeof value === 'object') {
            for (k in value) {
                if (Object.prototype.hasOwnProperty.call(value, k)) {
                    v = walk(value, k);
                    if (v !== undefined) {
                        value[k] = v;
                    } else {
                        delete value[k];
                    }
                }
            }
        }
        return reviver.call(holder, key, value);
    }({'': result}, '')) : result;
};


/***/ }),
/* 662 */
/***/ (function(module, exports) {

var cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
    escapable = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
    gap,
    indent,
    meta = {    // table of character substitutions
        '\b': '\\b',
        '\t': '\\t',
        '\n': '\\n',
        '\f': '\\f',
        '\r': '\\r',
        '"' : '\\"',
        '\\': '\\\\'
    },
    rep;

function quote(string) {
    // If the string contains no control characters, no quote characters, and no
    // backslash characters, then we can safely slap some quotes around it.
    // Otherwise we must also replace the offending characters with safe escape
    // sequences.
    
    escapable.lastIndex = 0;
    return escapable.test(string) ? '"' + string.replace(escapable, function (a) {
        var c = meta[a];
        return typeof c === 'string' ? c :
            '\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);
    }) + '"' : '"' + string + '"';
}

function str(key, holder) {
    // Produce a string from holder[key].
    var i,          // The loop counter.
        k,          // The member key.
        v,          // The member value.
        length,
        mind = gap,
        partial,
        value = holder[key];
    
    // If the value has a toJSON method, call it to obtain a replacement value.
    if (value && typeof value === 'object' &&
            typeof value.toJSON === 'function') {
        value = value.toJSON(key);
    }
    
    // If we were called with a replacer function, then call the replacer to
    // obtain a replacement value.
    if (typeof rep === 'function') {
        value = rep.call(holder, key, value);
    }
    
    // What happens next depends on the value's type.
    switch (typeof value) {
        case 'string':
            return quote(value);
        
        case 'number':
            // JSON numbers must be finite. Encode non-finite numbers as null.
            return isFinite(value) ? String(value) : 'null';
        
        case 'boolean':
        case 'null':
            // If the value is a boolean or null, convert it to a string. Note:
            // typeof null does not produce 'null'. The case is included here in
            // the remote chance that this gets fixed someday.
            return String(value);
            
        case 'object':
            if (!value) return 'null';
            gap += indent;
            partial = [];
            
            // Array.isArray
            if (Object.prototype.toString.apply(value) === '[object Array]') {
                length = value.length;
                for (i = 0; i < length; i += 1) {
                    partial[i] = str(i, value) || 'null';
                }
                
                // Join all of the elements together, separated with commas, and
                // wrap them in brackets.
                v = partial.length === 0 ? '[]' : gap ?
                    '[\n' + gap + partial.join(',\n' + gap) + '\n' + mind + ']' :
                    '[' + partial.join(',') + ']';
                gap = mind;
                return v;
            }
            
            // If the replacer is an array, use it to select the members to be
            // stringified.
            if (rep && typeof rep === 'object') {
                length = rep.length;
                for (i = 0; i < length; i += 1) {
                    k = rep[i];
                    if (typeof k === 'string') {
                        v = str(k, value);
                        if (v) {
                            partial.push(quote(k) + (gap ? ': ' : ':') + v);
                        }
                    }
                }
            }
            else {
                // Otherwise, iterate through all of the keys in the object.
                for (k in value) {
                    if (Object.prototype.hasOwnProperty.call(value, k)) {
                        v = str(k, value);
                        if (v) {
                            partial.push(quote(k) + (gap ? ': ' : ':') + v);
                        }
                    }
                }
            }
            
        // Join all of the member texts together, separated with commas,
        // and wrap them in braces.

        v = partial.length === 0 ? '{}' : gap ?
            '{\n' + gap + partial.join(',\n' + gap) + '\n' + mind + '}' :
            '{' + partial.join(',') + '}';
        gap = mind;
        return v;
    }
}

module.exports = function (value, replacer, space) {
    var i;
    gap = '';
    indent = '';
    
    // If the space parameter is a number, make an indent string containing that
    // many spaces.
    if (typeof space === 'number') {
        for (i = 0; i < space; i += 1) {
            indent += ' ';
        }
    }
    // If the space parameter is a string, it will be used as the indent string.
    else if (typeof space === 'string') {
        indent = space;
    }

    // If there is a replacer, it must be a function or an array.
    // Otherwise, throw an error.
    rep = replacer;
    if (replacer && typeof replacer !== 'function'
    && (typeof replacer !== 'object' || typeof replacer.length !== 'number')) {
        throw new Error('JSON.stringify');
    }
    
    // Make a fake root object containing our value under the key of ''.
    // Return the result of stringifying the value.
    return str('', {'': value});
};


/***/ }),
/* 663 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(6));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(7));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));

var _createClass2 = _interopRequireDefault(__webpack_require__(13));

/**
 * Caches promises while they are pending
 * Serves to dedupe equal queries requested at the same time
 */
var PromiseCache = /*#__PURE__*/function () {
  function PromiseCache() {
    (0, _classCallCheck2.default)(this, PromiseCache);

    /**
     * Holds pending promises
     *
     * @type {Object.<string, Promise>}
     */
    this.pending = {};
  }
  /**
   * Tries to find a pending promise corresponding to the result of keyFunc
   * - If not found, promiseFunc is executed and the resulting promise is stored while it's pending
   * - If found, it is immediately returned
   *
   * @template T
   * @param  {function(): Promise<T>} promiseFunc - Not executed only if an "equal" promise is already pending.
   * @param  {function(): string} keyFunc - Returns a key to find in cache to find a pending promise.
   * @returns {Promise<T>}
   */


  (0, _createClass2.default)(PromiseCache, [{
    key: "exec",
    value: function () {
      var _exec = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(promiseFunc, keyFunc) {
        var key, already, prom, response;
        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                key = keyFunc();
                already = this.pending[key];

                if (already) {
                  prom = already;
                } else {
                  prom = promiseFunc();
                  this.pending[key] = prom;
                }

                _context.prev = 3;
                _context.next = 6;
                return prom;

              case 6:
                response = _context.sent;
                return _context.abrupt("return", response);

              case 8:
                _context.prev = 8;
                this.pending[key] = null;
                return _context.finish(8);

              case 11:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this, [[3,, 8, 11]]);
      }));

      function exec(_x, _x2) {
        return _exec.apply(this, arguments);
      }

      return exec;
    }()
    /**
     *
     * @param {function(): string} keyFunc - Returns a key to find in cache to find a pending promise.
     * @returns {Promise | null}
     */

  }, {
    key: "get",
    value: function get(keyFunc) {
      var key = keyFunc();
      var already = this.pending[key];
      if (already) return already;
      return null;
    }
  }]);
  return PromiseCache;
}();

var _default = PromiseCache;
exports.default = _default;

/***/ }),
/* 664 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.certifyFlagship = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(6));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(7));

var _CozyClient = _interopRequireDefault(__webpack_require__(40));

var _storeAttestation = __webpack_require__(665);

/**
 * Request a challenge from the Stack that can be used to request the app attestation from the app store
 *
 * @param {CozyClient} client - the CozyClient instance
 * @returns {Promise<string>} - the Nonce string returned by the stack
 */
var getStackChallenge = /*#__PURE__*/function () {
  var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(client) {
    var stackClient, result;
    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.prev = 0;
            stackClient = client.getStackClient();
            _context.next = 4;
            return stackClient.fetchJSON('POST', "/auth/clients/".concat(stackClient.oauthOptions.clientID, "/challenge"), null, {
              headers: {
                Authorization: stackClient.registrationAccessTokenToAuthHeader()
              }
            });

          case 4:
            result = _context.sent;
            return _context.abrupt("return", result.nonce);

          case 8:
            _context.prev = 8;
            _context.t0 = _context["catch"](0);
            throw new Error('[FLAGSHIP_CERTIFICATION] Something went wrong while requesting a challenge from CozyStack:\n' + _context.t0.message);

          case 11:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, null, [[0, 8]]);
  }));

  return function getStackChallenge(_x) {
    return _ref.apply(this, arguments);
  };
}();
/**
 * Give the app attestation to the Stack
 *
 * @param {import("./typedefs").AttestationResult} appAttestation - the app attestation that was returned by the app store
 * @param {string} nonce - the Nonce string retrieved from the stack
 * @param {CozyClient} client - the CozyClient instance
 */


var giveAppAttestationToStack = /*#__PURE__*/function () {
  var _ref2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(appAttestation, nonce, client) {
    var platform, attestation, keyId, issuer, stackClient;
    return _regenerator.default.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _context2.prev = 0;
            platform = appAttestation.platform, attestation = appAttestation.attestation, keyId = appAttestation.keyId, issuer = appAttestation.issuer;
            stackClient = client.getStackClient();
            _context2.next = 5;
            return stackClient.fetchJSON('POST', "/auth/clients/".concat(stackClient.oauthOptions.clientID, "/attestation"), {
              platform: platform,
              attestation: attestation,
              challenge: nonce,
              keyId: keyId,
              issuer: issuer
            }, {
              headers: {
                Authorization: stackClient.registrationAccessTokenToAuthHeader()
              }
            });

          case 5:
            _context2.next = 10;
            break;

          case 7:
            _context2.prev = 7;
            _context2.t0 = _context2["catch"](0);
            throw new Error('[FLAGSHIP_CERTIFICATION] Something went wrong while giving attestation to CozyStack:\n' + _context2.t0.message);

          case 10:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2, null, [[0, 7]]);
  }));

  return function giveAppAttestationToStack(_x2, _x3, _x4) {
    return _ref2.apply(this, arguments);
  };
}();
/**
 * Verify app's identity and integrity so the Stack can trust it
 * Verification is done on Stack side by using information from the app's store (Google Play or Apple AppStore)
 *
 * @param {import("./typedefs").CertificationConfig} certificationConfig - the required configuration to access the stores API
 * @param {CozyClient} client - the CozyClient instance
 */


var certifyFlagship = /*#__PURE__*/function () {
  var _ref3 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3(certificationConfig, client) {
    var stackChallengeNonce, appAttestation;
    return _regenerator.default.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            if (certificationConfig) {
              _context3.next = 2;
              break;
            }

            throw new Error('[FLAGSHIP_CERTIFICATION] Certification configuration is not set');

          case 2:
            _context3.prev = 2;
            _context3.next = 5;
            return getStackChallenge(client);

          case 5:
            stackChallengeNonce = _context3.sent;
            _context3.next = 8;
            return (0, _storeAttestation.getAppAttestationFromStore)(stackChallengeNonce, certificationConfig);

          case 8:
            appAttestation = _context3.sent;
            _context3.next = 11;
            return giveAppAttestationToStack(appAttestation, stackChallengeNonce, client);

          case 11:
            _context3.next = 17;
            break;

          case 13:
            _context3.prev = 13;
            _context3.t0 = _context3["catch"](2);
            console.warn("[FLAGSHIP_CERTIFICATION] Automatic certification for URI \"".concat(client.stackClient.uri, "\" failed. This is expected on dev environments and non-official phones. Cozy-stack will continue with manual certification through 2FA"));
            console.warn(_context3.t0.message);

          case 17:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3, null, [[2, 13]]);
  }));

  return function certifyFlagship(_x5, _x6) {
    return _ref3.apply(this, arguments);
  };
}();

exports.certifyFlagship = certifyFlagship;

/***/ }),
/* 665 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getAppAttestationFromStore = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(6));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(7));

/**
 * Retrieve the app's attestation from the app's store
 * /!\ This is a mock implementation that should never be called
 *
 * @param {string} nonce - the Nonce string retrieved from the stack
 * @param {import("./typedefs").CertificationConfig} certificationConfig - Configuration to access the stores certification API
 * @returns {Promise<import("./typedefs").AttestationResult>} the app's attestation
 */
var validateAppMock = /*#__PURE__*/function () {
  var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(nonce, certificationConfig) {
    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            throw new Error("getAppAttestationFromStore can only be called from a React Native container");

          case 1:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function validateAppMock(_x, _x2) {
    return _ref.apply(this, arguments);
  };
}();

var getAppAttestationFromStore = validateAppMock;
exports.getAppAttestationFromStore = getAppAttestationFromStore;

/***/ }),
/* 666 */
/***/ (function(module, exports, __webpack_require__) {

var LodashWrapper = __webpack_require__(190),
    flatRest = __webpack_require__(146),
    getData = __webpack_require__(224),
    getFuncName = __webpack_require__(306),
    isArray = __webpack_require__(21),
    isLaziable = __webpack_require__(464);

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/** Used to compose bitmasks for function metadata. */
var WRAP_CURRY_FLAG = 8,
    WRAP_PARTIAL_FLAG = 32,
    WRAP_ARY_FLAG = 128,
    WRAP_REARG_FLAG = 256;

/**
 * Creates a `_.flow` or `_.flowRight` function.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new flow function.
 */
function createFlow(fromRight) {
  return flatRest(function(funcs) {
    var length = funcs.length,
        index = length,
        prereq = LodashWrapper.prototype.thru;

    if (fromRight) {
      funcs.reverse();
    }
    while (index--) {
      var func = funcs[index];
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
        var wrapper = new LodashWrapper([], true);
      }
    }
    index = wrapper ? index : length;
    while (++index < length) {
      func = funcs[index];

      var funcName = getFuncName(func),
          data = funcName == 'wrapper' ? getData(func) : undefined;

      if (data && isLaziable(data[0]) &&
            data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&
            !data[4].length && data[9] == 1
          ) {
        wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
      } else {
        wrapper = (func.length == 1 && isLaziable(func))
          ? wrapper[funcName]()
          : wrapper.thru(func);
      }
    }
    return function() {
      var args = arguments,
          value = args[0];

      if (wrapper && args.length == 1 && isArray(value)) {
        return wrapper.plant(value).value();
      }
      var index = 0,
          result = length ? funcs[index].apply(this, args) : value;

      while (++index < length) {
        result = funcs[index].call(this, result);
      }
      return result;
    };
  });
}

module.exports = createFlow;


/***/ }),
/* 667 */
/***/ (function(module, exports) {

/** Used to lookup unminified function names. */
var realNames = {};

module.exports = realNames;


/***/ }),
/* 668 */
/***/ (function(module, exports, __webpack_require__) {

var LazyWrapper = __webpack_require__(192),
    LodashWrapper = __webpack_require__(190),
    baseLodash = __webpack_require__(191),
    isArray = __webpack_require__(21),
    isObjectLike = __webpack_require__(39),
    wrapperClone = __webpack_require__(669);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Creates a `lodash` object which wraps `value` to enable implicit method
 * chain sequences. Methods that operate on and return arrays, collections,
 * and functions can be chained together. Methods that retrieve a single value
 * or may return a primitive value will automatically end the chain sequence
 * and return the unwrapped value. Otherwise, the value must be unwrapped
 * with `_#value`.
 *
 * Explicit chain sequences, which must be unwrapped with `_#value`, may be
 * enabled using `_.chain`.
 *
 * The execution of chained methods is lazy, that is, it's deferred until
 * `_#value` is implicitly or explicitly called.
 *
 * Lazy evaluation allows several methods to support shortcut fusion.
 * Shortcut fusion is an optimization to merge iteratee calls; this avoids
 * the creation of intermediate arrays and can greatly reduce the number of
 * iteratee executions. Sections of a chain sequence qualify for shortcut
 * fusion if the section is applied to an array and iteratees accept only
 * one argument. The heuristic for whether a section qualifies for shortcut
 * fusion is subject to change.
 *
 * Chaining is supported in custom builds as long as the `_#value` method is
 * directly or indirectly included in the build.
 *
 * In addition to lodash methods, wrappers have `Array` and `String` methods.
 *
 * The wrapper `Array` methods are:
 * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
 *
 * The wrapper `String` methods are:
 * `replace` and `split`
 *
 * The wrapper methods that support shortcut fusion are:
 * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
 * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
 * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
 *
 * The chainable wrapper methods are:
 * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
 * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
 * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
 * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
 * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
 * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
 * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
 * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
 * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
 * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
 * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
 * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
 * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
 * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
 * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
 * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
 * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
 * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
 * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
 * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
 * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
 * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
 * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
 * `zipObject`, `zipObjectDeep`, and `zipWith`
 *
 * The wrapper methods that are **not** chainable by default are:
 * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
 * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
 * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
 * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
 * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
 * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
 * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
 * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
 * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
 * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
 * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
 * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
 * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
 * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
 * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
 * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
 * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
 * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
 * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
 * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
 * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
 * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
 * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
 * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
 * `upperFirst`, `value`, and `words`
 *
 * @name _
 * @constructor
 * @category Seq
 * @param {*} value The value to wrap in a `lodash` instance.
 * @returns {Object} Returns the new `lodash` wrapper instance.
 * @example
 *
 * function square(n) {
 *   return n * n;
 * }
 *
 * var wrapped = _([1, 2, 3]);
 *
 * // Returns an unwrapped value.
 * wrapped.reduce(_.add);
 * // => 6
 *
 * // Returns a wrapped value.
 * var squares = wrapped.map(square);
 *
 * _.isArray(squares);
 * // => false
 *
 * _.isArray(squares.value());
 * // => true
 */
function lodash(value) {
  if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
    if (value instanceof LodashWrapper) {
      return value;
    }
    if (hasOwnProperty.call(value, '__wrapped__')) {
      return wrapperClone(value);
    }
  }
  return new LodashWrapper(value);
}

// Ensure wrappers are instances of `baseLodash`.
lodash.prototype = baseLodash.prototype;
lodash.prototype.constructor = lodash;

module.exports = lodash;


/***/ }),
/* 669 */
/***/ (function(module, exports, __webpack_require__) {

var LazyWrapper = __webpack_require__(192),
    LodashWrapper = __webpack_require__(190),
    copyArray = __webpack_require__(110);

/**
 * Creates a clone of `wrapper`.
 *
 * @private
 * @param {Object} wrapper The wrapper to clone.
 * @returns {Object} Returns the cloned wrapper.
 */
function wrapperClone(wrapper) {
  if (wrapper instanceof LazyWrapper) {
    return wrapper.clone();
  }
  var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
  result.__actions__ = copyArray(wrapper.__actions__);
  result.__index__  = wrapper.__index__;
  result.__values__ = wrapper.__values__;
  return result;
}

module.exports = wrapperClone;


/***/ }),
/* 670 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hasQueriesBeenLoaded = exports.isQueriesLoading = exports.hasQueryBeenLoaded = exports.isQueryLoading = exports.cancelable = void 0;

var _logger = _interopRequireDefault(__webpack_require__(27));

/**
 * @typedef {Promise} CancelablePromise
 * @property {Function} cancel - Cancel the promise
 */

/**
 * Wraps a promise so that it can be canceled
 *
 * Rejects with canceled: true as soon as cancel is called
 *
 * @param  {Promise} promise  - Promise
 * @returns {CancelablePromise} - Promise with .cancel method
 */
var cancelable = function cancelable(promise) {
  var _reject;

  var wrapped = new Promise(function (resolve, reject) {
    _reject = reject;
    promise.then(resolve);
    promise.catch(reject);
  }); // @ts-ignore

  wrapped.cancel = function () {
    _reject({
      canceled: true
    });
  };

  return wrapped;
};

exports.cancelable = cancelable;

/**
 * Returns whether the result of a query (given via queryConnect or Query)
 * is loading.
 */
var isQueryLoading = function isQueryLoading(col) {
  if (!col) {
    _logger.default.warn('isQueryLoading called on falsy value.');

    return false;
  }

  return col.fetchStatus === 'loading' || col.fetchStatus === 'pending';
};
/**
 * Returns whether a query has been loaded at least once
 */


exports.isQueryLoading = isQueryLoading;

var hasQueryBeenLoaded = function hasQueryBeenLoaded(col) {
  return col.lastFetch;
};
/**
 * Returns whether the result of queries are loading
 */


exports.hasQueryBeenLoaded = hasQueryBeenLoaded;

var isQueriesLoading = function isQueriesLoading(queriesResults) {
  return Object.values(queriesResults).some(function (queryResult) {
    return isQueryLoading(queryResult);
  });
};
/**
 * Returns whether queries have been loaded at least once
 */


exports.isQueriesLoading = isQueriesLoading;

var hasQueriesBeenLoaded = function hasQueriesBeenLoaded(queriesResults) {
  return Object.values(queriesResults).some(function (queryResult) {
    return hasQueryBeenLoaded(queryResult);
  });
};

exports.hasQueriesBeenLoaded = hasQueriesBeenLoaded;

/***/ }),
/* 671 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createFakeClient = exports.createMockClient = void 0;

var _slicedToArray2 = _interopRequireDefault(__webpack_require__(32));

var _regenerator = _interopRequireDefault(__webpack_require__(6));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(7));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(9));

var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(50));

var _merge = _interopRequireDefault(__webpack_require__(52));

var _CozyClient = _interopRequireDefault(__webpack_require__(40));

var _store = __webpack_require__(77);

var _cozyStackClient = __webpack_require__(253);

var _dsl = __webpack_require__(20);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var fillQueryInsideClient = function fillQueryInsideClient(client, queryName, queryOptions) {
  var definition = queryOptions.definition,
      doctype = queryOptions.doctype,
      data = queryOptions.data,
      queryError = queryOptions.queryError,
      queryResult = (0, _objectWithoutProperties2.default)(queryOptions, ["definition", "doctype", "data", "queryError"]);
  client.store.dispatch((0, _store.initQuery)(queryName, definition || (0, _dsl.Q)(doctype)));

  if (queryError) {
    client.store.dispatch((0, _store.receiveQueryError)(queryName, queryError));
  } else {
    client.store.dispatch((0, _store.receiveQueryResult)(queryName, _objectSpread({
      data: data ? data.map(function (doc) {
        return (0, _cozyStackClient.normalizeDoc)(doc, doctype);
      }) : data
    }, queryResult)));
  }
};

var mockedQueryFromMockedRemoteData = function mockedQueryFromMockedRemoteData(remoteData) {
  return /*#__PURE__*/function () {
    var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(qdef) {
      return _regenerator.default.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              if (remoteData) {
                _context.next = 2;
                break;
              }

              return _context.abrupt("return", {
                data: null
              });

            case 2:
              if (!remoteData[qdef.doctype]) {
                _context.next = 6;
                break;
              }

              return _context.abrupt("return", {
                data: remoteData[qdef.doctype]
              });

            case 6:
              return _context.abrupt("return", {
                data: []
              });

            case 7:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function (_x) {
      return _ref.apply(this, arguments);
    };
  }();
};
/**
 * Creates a client suitable for use in tests
 *
 * - client.{query,save} are mocked
 * - client.stackClient.fetchJSON is mocked
 *
 * @param  {object} options Options
 * @param  {object} [options.queries] Prefill queries inside the store
 * @param  {object} [options.remote] Mock data from the server
 * @param  {object} [options.clientOptions] Options passed to the client
 * @param  {object} [options.clientFunctions] Functions to overide client functions
 * @returns {CozyClient}
 */


var createMockClient = function createMockClient() {
  var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      queries = _ref2.queries,
      remote = _ref2.remote,
      clientOptions = _ref2.clientOptions,
      clientFunctions = _ref2.clientFunctions;

  var mockedQuery = jest.fn().mockImplementation(mockedQueryFromMockedRemoteData(remote));
  var clientFunctionsMerge = (0, _merge.default)({
    query: mockedQuery,
    save: jest.fn(),
    saveAll: jest.fn(),
    stackClient: {
      fetchJSON: jest.fn()
    }
  }, clientFunctions);
  return createFakeClient({
    queries: queries,
    remote: remote,
    clientOptions: clientOptions,
    clientFunctions: clientFunctionsMerge
  });
};
/**
 * Creates a client with pre-filled store
 * This can be useful for demo in documentation (e.g. storybook)
 *
 * - client.{query,save} are replaced with empty functions
 * - client.stackClient.fetchJSON is replaced with empty functions
 *
 * @param  {object} options Options
 * @param  {object} [options.queries] Prefill queries inside the store
 * @param  {object} [options.remote] Mock data from the server
 * @param  {object} [options.clientOptions] Options passed to the client
 * @param  {object} [options.clientFunctions] Functions to overide client functions useful for testing
 * @returns {CozyClient}
 */


exports.createMockClient = createMockClient;

var createFakeClient = function createFakeClient() {
  var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      queries = _ref3.queries,
      remote = _ref3.remote,
      clientOptions = _ref3.clientOptions,
      clientFunctions = _ref3.clientFunctions;

  var client = new _CozyClient.default(clientOptions || {});
  client.ensureStore();

  for (var _i = 0, _Object$entries = Object.entries(queries || {}); _i < _Object$entries.length; _i++) {
    var _Object$entries$_i = (0, _slicedToArray2.default)(_Object$entries[_i], 2),
        queryName = _Object$entries$_i[0],
        queryOptions = _Object$entries$_i[1];

    fillQueryInsideClient(client, queryName, queryOptions);
  }

  client.query = mockedQueryFromMockedRemoteData(remote);
  (0, _merge.default)(client, clientFunctions);
  return client;
};

exports.createFakeClient = createFakeClient;

/***/ }),
/* 672 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createClientInteractive = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(6));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(7));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(9));

var _http = _interopRequireDefault(__webpack_require__(58));

var _open = _interopRequireDefault(__webpack_require__(673));

var _fs = _interopRequireDefault(__webpack_require__(83));

var _merge = _interopRequireDefault(__webpack_require__(52));

var _serverDestroy = _interopRequireDefault(__webpack_require__(676));

var _CozyClient = _interopRequireDefault(__webpack_require__(40));

var _cozyLogger = _interopRequireDefault(__webpack_require__(36));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var log = _cozyLogger.default.namespace('create-cli-client');

var nodeFetch = __webpack_require__(677);

var btoa = __webpack_require__(678);
/**
 * Creates and starts and HTTP server suitable for OAuth authentication
 *
 * @param  {object} serverOptions - OAuth callback server options
 * @param  {Function} serverOptions.onAuthentication - Additional callback called
 * when the user authenticates
 * @param  {string} serverOptions.route - Route used for authentication
 * @param  {number} serverOptions.port - Port on which the server will listen
 * @param  {Function} serverOptions.onListen - Callback called when the
 * server starts
 *
 * @typedef {object} DestroyableServer
 * @function destroy
 *
 * @returns {DestroyableServer}
 *
 * @private
 */


var createCallbackServer = function createCallbackServer(serverOptions) {
  var route = serverOptions.route,
      onListen = serverOptions.onListen,
      onAuthentication = serverOptions.onAuthentication,
      port = serverOptions.port;

  var server = _http.default.createServer(function (request, response) {
    if (request.url.indexOf(route) === 0) {
      onAuthentication(request.url);
      response.write('Authentication successful, you can close this page.');
      response.end();
    }
  });

  server.listen(port, function () {
    onListen();
  });
  (0, _serverDestroy.default)(server);
  return server;
};
/**
 * Creates a function suitable for usage with CozyClient::startOAuthFlow
 *
 * Starts a local server. The stack upon user authentication will
 * redirect to this local server with a URL containing credentials.
 * The callback resolves with this authenticationURL which continues
 * the authentication flow inside startOAuthFlow.
 *
 * When the server is started, the authentication page is opened on the
 * desktop browser of the user.
 *
 * @param {object} serverOptions - Options for the OAuth callback server
 * @param {number} serverOptions.port - Port used for the OAuth callback server
 * @param {Function} serverOptions.onAuthentication - Callback when the user authenticates
 * @param {Function} serverOptions.onListen - Callback called with the authentication URL
 * @param {string} serverOptions.route - Route used for authentication
 * @param {boolean} serverOptions.shouldOpenAuthenticationPage - Whether the authentication
 * page should be automatically opened (default: true)
 *
 * @private
 */


var mkServerFlowCallback = function mkServerFlowCallback(serverOptions) {
  return function (authenticationURL) {
    return new Promise(function (resolve, reject) {
      var rejectTimeout, successTimeout;
      var server = createCallbackServer(_objectSpread(_objectSpread({}, serverOptions), {}, {
        onAuthentication: function onAuthentication(callbackURL) {
          log('debug', 'Authenticated, Shutting server down');
          successTimeout = setTimeout(function () {
            // Is there a way to call destroy only after all requests have
            // been completely served ? Otherwise we close the server while
            // the successful oauth page is being served and the page does
            // not get loaded on the client side.
            server.destroy();
            resolve('http://localhost:8000/' + callbackURL);
            clearTimeout(rejectTimeout);
          }, 300);
        },
        onListen: function onListen() {
          log('debug', 'OAuth callback server started, waiting for authentication');

          if (serverOptions.shouldOpenAuthenticationPage !== false) {
            (0, _open.default)(authenticationURL, {
              wait: false
            });
          }

          if (serverOptions.onListen) {
            serverOptions.onListen({
              authenticationURL: authenticationURL
            });
          }
        }
      }));
      rejectTimeout = setTimeout(function () {
        clearTimeout(successTimeout);
        server.destroy();
        reject('Timeout for authentication');
      }, 30 * 1000);
    });
  };
};

var hashCode = function hashCode(str) {
  var hash = 0,
      i,
      chr;
  if (str.length === 0) return hash;

  for (i = 0; i < str.length; i++) {
    chr = str.charCodeAt(i);
    hash = (hash << 5) - hash + chr;
    hash |= 0; // Convert to 32bit integer
  }

  return hash;
};

var DEFAULT_SERVER_OPTIONS = {
  port: 3333,
  route: '/do_access',
  getSavedCredentials: function getSavedCredentials(clientOptions) {
    if (!clientOptions.oauth.softwareID) {
      throw new Error('Please provide oauth.softwareID in your clientOptions.');
    }

    var doctypeHash = Math.abs(hashCode(JSON.stringify(clientOptions.scope)));
    var sluggedURI = clientOptions.uri.replace(/https?:\/\//, '').replace(/\./g, '-');
    return "/tmp/cozy-client-oauth-".concat(sluggedURI, "-").concat(clientOptions.oauth.softwareID, "-").concat(doctypeHash, ".json");
  }
};

var writeJSON = function writeJSON(fs, filename, data) {
  fs.writeFileSync(filename, JSON.stringify(data));
};
/**
 * Parses a JSON from a file
 * Returns null in case of error
 *
 * @private
 */


var readJSON = function readJSON(fs, filename) {
  try {
    if (!fs.existsSync(filename)) {
      return null;
    }

    var res = JSON.parse(fs.readFileSync(filename).toString());
    return res;
  } catch (e) {
    _cozyLogger.default.warn("Could not load ".concat(filename, " (").concat(e.message, ")"));

    return null;
  }
};
/**
 * Creates a client with interactive authentication.
 *
 * - Will start an OAuth flow and open an authentication page
 * - Starts a local server to listen for the oauth callback
 * - Resolves with the client after user authentication
 *
 * @param {object} clientOptions Same as CozyClient::constructor.
 *
 * @example
 * ```
 * import { createClientInteractive } from 'cozy-client/dist/cli'
 * await createClientInteractive({
 *   uri: 'http://cozy.tools:8080',
 *   scope: ['io.cozy.bills'],
 *   oauth: {
 *     softwareID: 'my-cli-application-using-bills'
 *   }
 * })
 * ```
 *
 * @returns {Promise<CozyClient>} - A client that is ready with a token
 */


var createClientInteractive = function createClientInteractive(clientOptions, serverOpts) {
  global.fetch = nodeFetch;
  global.btoa = btoa;
  var serverOptions = (0, _merge.default)(DEFAULT_SERVER_OPTIONS, serverOpts);
  var createClientFS = serverOptions.fs || _fs.default;
  var mergedClientOptions = (0, _merge.default)({
    oauth: {
      clientName: 'cli-client',
      redirectURI: "http://localhost:".concat(serverOptions.port).concat(serverOptions.route)
    }
  }, clientOptions);

  if (!clientOptions.scope) {
    throw new Error('scope must be provided in client options');
  }

  var getSavedCredentials = serverOptions.getSavedCredentials;
  var savedCredentialsFilename = getSavedCredentials(mergedClientOptions);
  var savedCredentials = readJSON(createClientFS, savedCredentialsFilename);
  log('debug', "Starting OAuth flow");
  return new Promise( /*#__PURE__*/function () {
    var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(resolve, reject) {
      var client;
      return _regenerator.default.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              client = new _CozyClient.default(mergedClientOptions);

              if (!savedCredentials) {
                _context.next = 7;
                break;
              }

              log('debug', "Using saved credentials in ".concat(savedCredentialsFilename));
              client.stackClient.setToken(savedCredentials.token);
              client.stackClient.setOAuthOptions(savedCredentials.oauthOptions);
              resolve(client);
              return _context.abrupt("return");

            case 7:
              _context.next = 9;
              return client.startOAuthFlow(mkServerFlowCallback(serverOptions));

            case 9:
              resolve(client);
              log('debug', "Saving credentials to ".concat(savedCredentialsFilename));
              writeJSON(createClientFS, savedCredentialsFilename, {
                oauthOptions: client.stackClient.oauthOptions,
                token: client.stackClient.token
              });

            case 12:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function (_x, _x2) {
      return _ref.apply(this, arguments);
    };
  }());
};

exports.createClientInteractive = createClientInteractive;

var main = /*#__PURE__*/function () {
  var _ref2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2() {
    var client;
    return _regenerator.default.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _context2.next = 2;
            return createClientInteractive({
              scope: ['io.cozy.files'],
              uri: 'http://cozy.tools:8080',
              oauth: {
                softwareID: 'io.cozy.client.cli'
              }
            });

          case 2:
            client = _context2.sent;
            console.log(client.toJSON());

          case 4:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));

  return function main() {
    return _ref2.apply(this, arguments);
  };
}();

if (__webpack_require__.c[__webpack_require__.s] === module) {
  main().catch(function (e) {
    console.error(e);
    process.exit(1);
  });
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(81)(module)))

/***/ }),
/* 673 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__dirname) {
const {promisify} = __webpack_require__(30);
const path = __webpack_require__(137);
const childProcess = __webpack_require__(674);
const fs = __webpack_require__(83);
const isWsl = __webpack_require__(675);
const isDocker = __webpack_require__(308);

const pAccess = promisify(fs.access);
const pReadFile = promisify(fs.readFile);

// Path to included `xdg-open`.
const localXdgOpenPath = path.join(__dirname, 'xdg-open');

/**
Get the mount point for fixed drives in WSL.

@inner
@returns {string} The mount point.
*/
const getWslDrivesMountPoint = (() => {
	// Default value for "root" param
	// according to https://docs.microsoft.com/en-us/windows/wsl/wsl-config
	const defaultMountPoint = '/mnt/';

	let mountPoint;

	return async function () {
		if (mountPoint) {
			// Return memoized mount point value
			return mountPoint;
		}

		const configFilePath = '/etc/wsl.conf';

		let isConfigFileExists = false;
		try {
			await pAccess(configFilePath, fs.constants.F_OK);
			isConfigFileExists = true;
		} catch (_) {}

		if (!isConfigFileExists) {
			return defaultMountPoint;
		}

		const configContent = await pReadFile(configFilePath, {encoding: 'utf8'});
		const configMountPoint = /root\s*=\s*(.*)/g.exec(configContent);

		if (!configMountPoint) {
			return defaultMountPoint;
		}

		mountPoint = configMountPoint[1].trim();
		mountPoint = mountPoint.endsWith('/') ? mountPoint : mountPoint + '/';

		return mountPoint;
	};
})();

module.exports = async (target, options) => {
	if (typeof target !== 'string') {
		throw new TypeError('Expected a `target`');
	}

	options = {
		wait: false,
		background: false,
		allowNonzeroExitCode: false,
		...options
	};

	let command;
	let {app} = options;
	let appArguments = [];
	const cliArguments = [];
	const childProcessOptions = {};

	if (Array.isArray(app)) {
		appArguments = app.slice(1);
		app = app[0];
	}

	if (process.platform === 'darwin') {
		command = 'open';

		if (options.wait) {
			cliArguments.push('--wait-apps');
		}

		if (options.background) {
			cliArguments.push('--background');
		}

		if (app) {
			cliArguments.push('-a', app);
		}
	} else if (process.platform === 'win32' || (isWsl && !isDocker())) {
		const mountPoint = await getWslDrivesMountPoint();

		command = isWsl ?
			`${mountPoint}c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe` :
			`${process.env.SYSTEMROOT}\\System32\\WindowsPowerShell\\v1.0\\powershell`;

		cliArguments.push(
			'-NoProfile',
			'-NonInteractive',
			'–ExecutionPolicy',
			'Bypass',
			'-EncodedCommand'
		);

		if (!isWsl) {
			childProcessOptions.windowsVerbatimArguments = true;
		}

		const encodedArguments = ['Start'];

		if (options.wait) {
			encodedArguments.push('-Wait');
		}

		if (app) {
			// Double quote with double quotes to ensure the inner quotes are passed through.
			// Inner quotes are delimited for PowerShell interpretation with backticks.
			encodedArguments.push(`"\`"${app}\`""`, '-ArgumentList');
			appArguments.unshift(target);
		} else {
			encodedArguments.push(`"${target}"`);
		}

		if (appArguments.length > 0) {
			appArguments = appArguments.map(arg => `"\`"${arg}\`""`);
			encodedArguments.push(appArguments.join(','));
		}

		// Using Base64-encoded command, accepted by PowerShell, to allow special characters.
		target = Buffer.from(encodedArguments.join(' '), 'utf16le').toString('base64');
	} else {
		if (app) {
			command = app;
		} else {
			// When bundled by Webpack, there's no actual package file path and no local `xdg-open`.
			const isBundled =  false || __dirname === '/';

			// Check if local `xdg-open` exists and is executable.
			let exeLocalXdgOpen = false;
			try {
				await pAccess(localXdgOpenPath, fs.constants.X_OK);
				exeLocalXdgOpen = true;
			} catch (_) {}

			const useSystemXdgOpen = process.versions.electron ||
				process.platform === 'android' || isBundled || !exeLocalXdgOpen;
			command = useSystemXdgOpen ? 'xdg-open' : localXdgOpenPath;
		}

		if (appArguments.length > 0) {
			cliArguments.push(...appArguments);
		}

		if (!options.wait) {
			// `xdg-open` will block the process unless stdio is ignored
			// and it's detached from the parent even if it's unref'd.
			childProcessOptions.stdio = 'ignore';
			childProcessOptions.detached = true;
		}
	}

	cliArguments.push(target);

	if (process.platform === 'darwin' && appArguments.length > 0) {
		cliArguments.push('--args', ...appArguments);
	}

	const subprocess = childProcess.spawn(command, cliArguments, childProcessOptions);

	if (options.wait) {
		return new Promise((resolve, reject) => {
			subprocess.once('error', reject);

			subprocess.once('close', exitCode => {
				if (options.allowNonzeroExitCode && exitCode > 0) {
					reject(new Error(`Exited with code ${exitCode}`));
					return;
				}

				resolve(subprocess);
			});
		});
	}

	subprocess.unref();

	return subprocess;
};

/* WEBPACK VAR INJECTION */}.call(this, "/"))

/***/ }),
/* 674 */
/***/ (function(module, exports) {

module.exports = require("child_process");

/***/ }),
/* 675 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

const os = __webpack_require__(218);
const fs = __webpack_require__(83);
const isDocker = __webpack_require__(308);

const isWsl = () => {
	if (process.platform !== 'linux') {
		return false;
	}

	if (os.release().toLowerCase().includes('microsoft')) {
		if (isDocker()) {
			return false;
		}

		return true;
	}

	try {
		return fs.readFileSync('/proc/version', 'utf8').toLowerCase().includes('microsoft') ?
			!isDocker() : false;
	} catch (_) {
		return false;
	}
};

if (process.env.__IS_WSL_TEST__) {
	module.exports = isWsl;
} else {
	module.exports = isWsl();
}


/***/ }),
/* 676 */
/***/ (function(module, exports) {

module.exports = enableDestroy;

function enableDestroy(server) {
  var connections = {}

  server.on('connection', function(conn) {
    var key = conn.remoteAddress + ':' + conn.remotePort;
    connections[key] = conn;
    conn.on('close', function() {
      delete connections[key];
    });
  });

  server.destroy = function(cb) {
    server.close(cb);
    for (var key in connections)
      connections[key].destroy();
  };
}


/***/ }),
/* 677 */
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Headers", function() { return Headers; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Request", function() { return Request; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Response", function() { return Response; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FetchError", function() { return FetchError; });
/* harmony import */ var stream__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(17);
/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(58);
/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(31);
/* harmony import */ var whatwg_url__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(100);
/* harmony import */ var https__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(104);
/* harmony import */ var zlib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(25);







// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js

// fix for "Readable" isn't a named export issue
const Readable = stream__WEBPACK_IMPORTED_MODULE_0__.Readable;

const BUFFER = Symbol('buffer');
const TYPE = Symbol('type');

class Blob {
	constructor() {
		this[TYPE] = '';

		const blobParts = arguments[0];
		const options = arguments[1];

		const buffers = [];
		let size = 0;

		if (blobParts) {
			const a = blobParts;
			const length = Number(a.length);
			for (let i = 0; i < length; i++) {
				const element = a[i];
				let buffer;
				if (element instanceof Buffer) {
					buffer = element;
				} else if (ArrayBuffer.isView(element)) {
					buffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);
				} else if (element instanceof ArrayBuffer) {
					buffer = Buffer.from(element);
				} else if (element instanceof Blob) {
					buffer = element[BUFFER];
				} else {
					buffer = Buffer.from(typeof element === 'string' ? element : String(element));
				}
				size += buffer.length;
				buffers.push(buffer);
			}
		}

		this[BUFFER] = Buffer.concat(buffers);

		let type = options && options.type !== undefined && String(options.type).toLowerCase();
		if (type && !/[^\u0020-\u007E]/.test(type)) {
			this[TYPE] = type;
		}
	}
	get size() {
		return this[BUFFER].length;
	}
	get type() {
		return this[TYPE];
	}
	text() {
		return Promise.resolve(this[BUFFER].toString());
	}
	arrayBuffer() {
		const buf = this[BUFFER];
		const ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);
		return Promise.resolve(ab);
	}
	stream() {
		const readable = new Readable();
		readable._read = function () {};
		readable.push(this[BUFFER]);
		readable.push(null);
		return readable;
	}
	toString() {
		return '[object Blob]';
	}
	slice() {
		const size = this.size;

		const start = arguments[0];
		const end = arguments[1];
		let relativeStart, relativeEnd;
		if (start === undefined) {
			relativeStart = 0;
		} else if (start < 0) {
			relativeStart = Math.max(size + start, 0);
		} else {
			relativeStart = Math.min(start, size);
		}
		if (end === undefined) {
			relativeEnd = size;
		} else if (end < 0) {
			relativeEnd = Math.max(size + end, 0);
		} else {
			relativeEnd = Math.min(end, size);
		}
		const span = Math.max(relativeEnd - relativeStart, 0);

		const buffer = this[BUFFER];
		const slicedBuffer = buffer.slice(relativeStart, relativeStart + span);
		const blob = new Blob([], { type: arguments[2] });
		blob[BUFFER] = slicedBuffer;
		return blob;
	}
}

Object.defineProperties(Blob.prototype, {
	size: { enumerable: true },
	type: { enumerable: true },
	slice: { enumerable: true }
});

Object.defineProperty(Blob.prototype, Symbol.toStringTag, {
	value: 'Blob',
	writable: false,
	enumerable: false,
	configurable: true
});

/**
 * fetch-error.js
 *
 * FetchError interface for operational errors
 */

/**
 * Create FetchError instance
 *
 * @param   String      message      Error message for human
 * @param   String      type         Error type for machine
 * @param   String      systemError  For Node.js system error
 * @return  FetchError
 */
function FetchError(message, type, systemError) {
  Error.call(this, message);

  this.message = message;
  this.type = type;

  // when err.type is `system`, err.code contains system error code
  if (systemError) {
    this.code = this.errno = systemError.code;
  }

  // hide custom error implementation details from end-users
  Error.captureStackTrace(this, this.constructor);
}

FetchError.prototype = Object.create(Error.prototype);
FetchError.prototype.constructor = FetchError;
FetchError.prototype.name = 'FetchError';

let convert;
try {
	convert = require('encoding').convert;
} catch (e) {}

const INTERNALS = Symbol('Body internals');

// fix an issue where "PassThrough" isn't a named export for node <10
const PassThrough = stream__WEBPACK_IMPORTED_MODULE_0__.PassThrough;

/**
 * Body mixin
 *
 * Ref: https://fetch.spec.whatwg.org/#body
 *
 * @param   Stream  body  Readable stream
 * @param   Object  opts  Response options
 * @return  Void
 */
function Body(body) {
	var _this = this;

	var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	    _ref$size = _ref.size;

	let size = _ref$size === undefined ? 0 : _ref$size;
	var _ref$timeout = _ref.timeout;
	let timeout = _ref$timeout === undefined ? 0 : _ref$timeout;

	if (body == null) {
		// body is undefined or null
		body = null;
	} else if (isURLSearchParams(body)) {
		// body is a URLSearchParams
		body = Buffer.from(body.toString());
	} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {
		// body is ArrayBuffer
		body = Buffer.from(body);
	} else if (ArrayBuffer.isView(body)) {
		// body is ArrayBufferView
		body = Buffer.from(body.buffer, body.byteOffset, body.byteLength);
	} else if (body instanceof stream__WEBPACK_IMPORTED_MODULE_0__) ; else {
		// none of the above
		// coerce to string then buffer
		body = Buffer.from(String(body));
	}
	this[INTERNALS] = {
		body,
		disturbed: false,
		error: null
	};
	this.size = size;
	this.timeout = timeout;

	if (body instanceof stream__WEBPACK_IMPORTED_MODULE_0__) {
		body.on('error', function (err) {
			const error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);
			_this[INTERNALS].error = error;
		});
	}
}

Body.prototype = {
	get body() {
		return this[INTERNALS].body;
	},

	get bodyUsed() {
		return this[INTERNALS].disturbed;
	},

	/**
  * Decode response as ArrayBuffer
  *
  * @return  Promise
  */
	arrayBuffer() {
		return consumeBody.call(this).then(function (buf) {
			return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);
		});
	},

	/**
  * Return raw response as Blob
  *
  * @return Promise
  */
	blob() {
		let ct = this.headers && this.headers.get('content-type') || '';
		return consumeBody.call(this).then(function (buf) {
			return Object.assign(
			// Prevent copying
			new Blob([], {
				type: ct.toLowerCase()
			}), {
				[BUFFER]: buf
			});
		});
	},

	/**
  * Decode response as json
  *
  * @return  Promise
  */
	json() {
		var _this2 = this;

		return consumeBody.call(this).then(function (buffer) {
			try {
				return JSON.parse(buffer.toString());
			} catch (err) {
				return Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));
			}
		});
	},

	/**
  * Decode response as text
  *
  * @return  Promise
  */
	text() {
		return consumeBody.call(this).then(function (buffer) {
			return buffer.toString();
		});
	},

	/**
  * Decode response as buffer (non-spec api)
  *
  * @return  Promise
  */
	buffer() {
		return consumeBody.call(this);
	},

	/**
  * Decode response as text, while automatically detecting the encoding and
  * trying to decode to UTF-8 (non-spec api)
  *
  * @return  Promise
  */
	textConverted() {
		var _this3 = this;

		return consumeBody.call(this).then(function (buffer) {
			return convertBody(buffer, _this3.headers);
		});
	}
};

// In browsers, all properties are enumerable.
Object.defineProperties(Body.prototype, {
	body: { enumerable: true },
	bodyUsed: { enumerable: true },
	arrayBuffer: { enumerable: true },
	blob: { enumerable: true },
	json: { enumerable: true },
	text: { enumerable: true }
});

Body.mixIn = function (proto) {
	for (const name of Object.getOwnPropertyNames(Body.prototype)) {
		// istanbul ignore else: future proof
		if (!(name in proto)) {
			const desc = Object.getOwnPropertyDescriptor(Body.prototype, name);
			Object.defineProperty(proto, name, desc);
		}
	}
};

/**
 * Consume and convert an entire Body to a Buffer.
 *
 * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body
 *
 * @return  Promise
 */
function consumeBody() {
	var _this4 = this;

	if (this[INTERNALS].disturbed) {
		return Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));
	}

	this[INTERNALS].disturbed = true;

	if (this[INTERNALS].error) {
		return Body.Promise.reject(this[INTERNALS].error);
	}

	let body = this.body;

	// body is null
	if (body === null) {
		return Body.Promise.resolve(Buffer.alloc(0));
	}

	// body is blob
	if (isBlob(body)) {
		body = body.stream();
	}

	// body is buffer
	if (Buffer.isBuffer(body)) {
		return Body.Promise.resolve(body);
	}

	// istanbul ignore if: should never happen
	if (!(body instanceof stream__WEBPACK_IMPORTED_MODULE_0__)) {
		return Body.Promise.resolve(Buffer.alloc(0));
	}

	// body is stream
	// get ready to actually consume the body
	let accum = [];
	let accumBytes = 0;
	let abort = false;

	return new Body.Promise(function (resolve, reject) {
		let resTimeout;

		// allow timeout on slow response body
		if (_this4.timeout) {
			resTimeout = setTimeout(function () {
				abort = true;
				reject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));
			}, _this4.timeout);
		}

		// handle stream errors
		body.on('error', function (err) {
			if (err.name === 'AbortError') {
				// if the request was aborted, reject with this Error
				abort = true;
				reject(err);
			} else {
				// other errors, such as incorrect content-encoding
				reject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));
			}
		});

		body.on('data', function (chunk) {
			if (abort || chunk === null) {
				return;
			}

			if (_this4.size && accumBytes + chunk.length > _this4.size) {
				abort = true;
				reject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));
				return;
			}

			accumBytes += chunk.length;
			accum.push(chunk);
		});

		body.on('end', function () {
			if (abort) {
				return;
			}

			clearTimeout(resTimeout);

			try {
				resolve(Buffer.concat(accum, accumBytes));
			} catch (err) {
				// handle streams that have accumulated too much data (issue #414)
				reject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));
			}
		});
	});
}

/**
 * Detect buffer encoding and convert to target encoding
 * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding
 *
 * @param   Buffer  buffer    Incoming buffer
 * @param   String  encoding  Target encoding
 * @return  String
 */
function convertBody(buffer, headers) {
	if (typeof convert !== 'function') {
		throw new Error('The package `encoding` must be installed to use the textConverted() function');
	}

	const ct = headers.get('content-type');
	let charset = 'utf-8';
	let res, str;

	// header
	if (ct) {
		res = /charset=([^;]*)/i.exec(ct);
	}

	// no charset in content type, peek at response body for at most 1024 bytes
	str = buffer.slice(0, 1024).toString();

	// html5
	if (!res && str) {
		res = /<meta.+?charset=(['"])(.+?)\1/i.exec(str);
	}

	// html4
	if (!res && str) {
		res = /<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(str);
		if (!res) {
			res = /<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(str);
			if (res) {
				res.pop(); // drop last quote
			}
		}

		if (res) {
			res = /charset=(.*)/i.exec(res.pop());
		}
	}

	// xml
	if (!res && str) {
		res = /<\?xml.+?encoding=(['"])(.+?)\1/i.exec(str);
	}

	// found charset
	if (res) {
		charset = res.pop();

		// prevent decode issues when sites use incorrect encoding
		// ref: https://hsivonen.fi/encoding-menu/
		if (charset === 'gb2312' || charset === 'gbk') {
			charset = 'gb18030';
		}
	}

	// turn raw buffers into a single utf-8 buffer
	return convert(buffer, 'UTF-8', charset).toString();
}

/**
 * Detect a URLSearchParams object
 * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143
 *
 * @param   Object  obj     Object to detect by type or brand
 * @return  String
 */
function isURLSearchParams(obj) {
	// Duck-typing as a necessary condition.
	if (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {
		return false;
	}

	// Brand-checking and more duck-typing as optional condition.
	return obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';
}

/**
 * Check if `obj` is a W3C `Blob` object (which `File` inherits from)
 * @param  {*} obj
 * @return {boolean}
 */
function isBlob(obj) {
	return typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);
}

/**
 * Clone body given Res/Req instance
 *
 * @param   Mixed  instance  Response or Request instance
 * @return  Mixed
 */
function clone(instance) {
	let p1, p2;
	let body = instance.body;

	// don't allow cloning a used body
	if (instance.bodyUsed) {
		throw new Error('cannot clone body after it is used');
	}

	// check that body is a stream and not form-data object
	// note: we can't clone the form-data object without having it as a dependency
	if (body instanceof stream__WEBPACK_IMPORTED_MODULE_0__ && typeof body.getBoundary !== 'function') {
		// tee instance body
		p1 = new PassThrough();
		p2 = new PassThrough();
		body.pipe(p1);
		body.pipe(p2);
		// set instance body to teed body and return the other teed body
		instance[INTERNALS].body = p1;
		body = p2;
	}

	return body;
}

/**
 * Performs the operation "extract a `Content-Type` value from |object|" as
 * specified in the specification:
 * https://fetch.spec.whatwg.org/#concept-bodyinit-extract
 *
 * This function assumes that instance.body is present.
 *
 * @param   Mixed  instance  Any options.body input
 */
function extractContentType(body) {
	if (body === null) {
		// body is null
		return null;
	} else if (typeof body === 'string') {
		// body is string
		return 'text/plain;charset=UTF-8';
	} else if (isURLSearchParams(body)) {
		// body is a URLSearchParams
		return 'application/x-www-form-urlencoded;charset=UTF-8';
	} else if (isBlob(body)) {
		// body is blob
		return body.type || null;
	} else if (Buffer.isBuffer(body)) {
		// body is buffer
		return null;
	} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {
		// body is ArrayBuffer
		return null;
	} else if (ArrayBuffer.isView(body)) {
		// body is ArrayBufferView
		return null;
	} else if (typeof body.getBoundary === 'function') {
		// detect form data input from form-data module
		return `multipart/form-data;boundary=${body.getBoundary()}`;
	} else if (body instanceof stream__WEBPACK_IMPORTED_MODULE_0__) {
		// body is stream
		// can't really do much about this
		return null;
	} else {
		// Body constructor defaults other things to string
		return 'text/plain;charset=UTF-8';
	}
}

/**
 * The Fetch Standard treats this as if "total bytes" is a property on the body.
 * For us, we have to explicitly get it with a function.
 *
 * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes
 *
 * @param   Body    instance   Instance of Body
 * @return  Number?            Number of bytes, or null if not possible
 */
function getTotalBytes(instance) {
	const body = instance.body;


	if (body === null) {
		// body is null
		return 0;
	} else if (isBlob(body)) {
		return body.size;
	} else if (Buffer.isBuffer(body)) {
		// body is buffer
		return body.length;
	} else if (body && typeof body.getLengthSync === 'function') {
		// detect form data input from form-data module
		if (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x
		body.hasKnownLength && body.hasKnownLength()) {
			// 2.x
			return body.getLengthSync();
		}
		return null;
	} else {
		// body is stream
		return null;
	}
}

/**
 * Write a Body to a Node.js WritableStream (e.g. http.Request) object.
 *
 * @param   Body    instance   Instance of Body
 * @return  Void
 */
function writeToStream(dest, instance) {
	const body = instance.body;


	if (body === null) {
		// body is null
		dest.end();
	} else if (isBlob(body)) {
		body.stream().pipe(dest);
	} else if (Buffer.isBuffer(body)) {
		// body is buffer
		dest.write(body);
		dest.end();
	} else {
		// body is stream
		body.pipe(dest);
	}
}

// expose Promise
Body.Promise = global.Promise;

/**
 * headers.js
 *
 * Headers class offers convenient helpers
 */

const invalidTokenRegex = /[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/;
const invalidHeaderCharRegex = /[^\t\x20-\x7e\x80-\xff]/;

function validateName(name) {
	name = `${name}`;
	if (invalidTokenRegex.test(name) || name === '') {
		throw new TypeError(`${name} is not a legal HTTP header name`);
	}
}

function validateValue(value) {
	value = `${value}`;
	if (invalidHeaderCharRegex.test(value)) {
		throw new TypeError(`${value} is not a legal HTTP header value`);
	}
}

/**
 * Find the key in the map object given a header name.
 *
 * Returns undefined if not found.
 *
 * @param   String  name  Header name
 * @return  String|Undefined
 */
function find(map, name) {
	name = name.toLowerCase();
	for (const key in map) {
		if (key.toLowerCase() === name) {
			return key;
		}
	}
	return undefined;
}

const MAP = Symbol('map');
class Headers {
	/**
  * Headers class
  *
  * @param   Object  headers  Response headers
  * @return  Void
  */
	constructor() {
		let init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;

		this[MAP] = Object.create(null);

		if (init instanceof Headers) {
			const rawHeaders = init.raw();
			const headerNames = Object.keys(rawHeaders);

			for (const headerName of headerNames) {
				for (const value of rawHeaders[headerName]) {
					this.append(headerName, value);
				}
			}

			return;
		}

		// We don't worry about converting prop to ByteString here as append()
		// will handle it.
		if (init == null) ; else if (typeof init === 'object') {
			const method = init[Symbol.iterator];
			if (method != null) {
				if (typeof method !== 'function') {
					throw new TypeError('Header pairs must be iterable');
				}

				// sequence<sequence<ByteString>>
				// Note: per spec we have to first exhaust the lists then process them
				const pairs = [];
				for (const pair of init) {
					if (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {
						throw new TypeError('Each header pair must be iterable');
					}
					pairs.push(Array.from(pair));
				}

				for (const pair of pairs) {
					if (pair.length !== 2) {
						throw new TypeError('Each header pair must be a name/value tuple');
					}
					this.append(pair[0], pair[1]);
				}
			} else {
				// record<ByteString, ByteString>
				for (const key of Object.keys(init)) {
					const value = init[key];
					this.append(key, value);
				}
			}
		} else {
			throw new TypeError('Provided initializer must be an object');
		}
	}

	/**
  * Return combined header value given name
  *
  * @param   String  name  Header name
  * @return  Mixed
  */
	get(name) {
		name = `${name}`;
		validateName(name);
		const key = find(this[MAP], name);
		if (key === undefined) {
			return null;
		}

		return this[MAP][key].join(', ');
	}

	/**
  * Iterate over all headers
  *
  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)
  * @param   Boolean   thisArg   `this` context for callback function
  * @return  Void
  */
	forEach(callback) {
		let thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;

		let pairs = getHeaders(this);
		let i = 0;
		while (i < pairs.length) {
			var _pairs$i = pairs[i];
			const name = _pairs$i[0],
			      value = _pairs$i[1];

			callback.call(thisArg, value, name, this);
			pairs = getHeaders(this);
			i++;
		}
	}

	/**
  * Overwrite header values given name
  *
  * @param   String  name   Header name
  * @param   String  value  Header value
  * @return  Void
  */
	set(name, value) {
		name = `${name}`;
		value = `${value}`;
		validateName(name);
		validateValue(value);
		const key = find(this[MAP], name);
		this[MAP][key !== undefined ? key : name] = [value];
	}

	/**
  * Append a value onto existing header
  *
  * @param   String  name   Header name
  * @param   String  value  Header value
  * @return  Void
  */
	append(name, value) {
		name = `${name}`;
		value = `${value}`;
		validateName(name);
		validateValue(value);
		const key = find(this[MAP], name);
		if (key !== undefined) {
			this[MAP][key].push(value);
		} else {
			this[MAP][name] = [value];
		}
	}

	/**
  * Check for header name existence
  *
  * @param   String   name  Header name
  * @return  Boolean
  */
	has(name) {
		name = `${name}`;
		validateName(name);
		return find(this[MAP], name) !== undefined;
	}

	/**
  * Delete all header values given name
  *
  * @param   String  name  Header name
  * @return  Void
  */
	delete(name) {
		name = `${name}`;
		validateName(name);
		const key = find(this[MAP], name);
		if (key !== undefined) {
			delete this[MAP][key];
		}
	}

	/**
  * Return raw headers (non-spec api)
  *
  * @return  Object
  */
	raw() {
		return this[MAP];
	}

	/**
  * Get an iterator on keys.
  *
  * @return  Iterator
  */
	keys() {
		return createHeadersIterator(this, 'key');
	}

	/**
  * Get an iterator on values.
  *
  * @return  Iterator
  */
	values() {
		return createHeadersIterator(this, 'value');
	}

	/**
  * Get an iterator on entries.
  *
  * This is the default iterator of the Headers object.
  *
  * @return  Iterator
  */
	[Symbol.iterator]() {
		return createHeadersIterator(this, 'key+value');
	}
}
Headers.prototype.entries = Headers.prototype[Symbol.iterator];

Object.defineProperty(Headers.prototype, Symbol.toStringTag, {
	value: 'Headers',
	writable: false,
	enumerable: false,
	configurable: true
});

Object.defineProperties(Headers.prototype, {
	get: { enumerable: true },
	forEach: { enumerable: true },
	set: { enumerable: true },
	append: { enumerable: true },
	has: { enumerable: true },
	delete: { enumerable: true },
	keys: { enumerable: true },
	values: { enumerable: true },
	entries: { enumerable: true }
});

function getHeaders(headers) {
	let kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';

	const keys = Object.keys(headers[MAP]).sort();
	return keys.map(kind === 'key' ? function (k) {
		return k.toLowerCase();
	} : kind === 'value' ? function (k) {
		return headers[MAP][k].join(', ');
	} : function (k) {
		return [k.toLowerCase(), headers[MAP][k].join(', ')];
	});
}

const INTERNAL = Symbol('internal');

function createHeadersIterator(target, kind) {
	const iterator = Object.create(HeadersIteratorPrototype);
	iterator[INTERNAL] = {
		target,
		kind,
		index: 0
	};
	return iterator;
}

const HeadersIteratorPrototype = Object.setPrototypeOf({
	next() {
		// istanbul ignore if
		if (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {
			throw new TypeError('Value of `this` is not a HeadersIterator');
		}

		var _INTERNAL = this[INTERNAL];
		const target = _INTERNAL.target,
		      kind = _INTERNAL.kind,
		      index = _INTERNAL.index;

		const values = getHeaders(target, kind);
		const len = values.length;
		if (index >= len) {
			return {
				value: undefined,
				done: true
			};
		}

		this[INTERNAL].index = index + 1;

		return {
			value: values[index],
			done: false
		};
	}
}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));

Object.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {
	value: 'HeadersIterator',
	writable: false,
	enumerable: false,
	configurable: true
});

/**
 * Export the Headers object in a form that Node.js can consume.
 *
 * @param   Headers  headers
 * @return  Object
 */
function exportNodeCompatibleHeaders(headers) {
	const obj = Object.assign({ __proto__: null }, headers[MAP]);

	// http.request() only supports string as Host header. This hack makes
	// specifying custom Host header possible.
	const hostHeaderKey = find(headers[MAP], 'Host');
	if (hostHeaderKey !== undefined) {
		obj[hostHeaderKey] = obj[hostHeaderKey][0];
	}

	return obj;
}

/**
 * Create a Headers object from an object of headers, ignoring those that do
 * not conform to HTTP grammar productions.
 *
 * @param   Object  obj  Object of headers
 * @return  Headers
 */
function createHeadersLenient(obj) {
	const headers = new Headers();
	for (const name of Object.keys(obj)) {
		if (invalidTokenRegex.test(name)) {
			continue;
		}
		if (Array.isArray(obj[name])) {
			for (const val of obj[name]) {
				if (invalidHeaderCharRegex.test(val)) {
					continue;
				}
				if (headers[MAP][name] === undefined) {
					headers[MAP][name] = [val];
				} else {
					headers[MAP][name].push(val);
				}
			}
		} else if (!invalidHeaderCharRegex.test(obj[name])) {
			headers[MAP][name] = [obj[name]];
		}
	}
	return headers;
}

const INTERNALS$1 = Symbol('Response internals');

// fix an issue where "STATUS_CODES" aren't a named export for node <10
const STATUS_CODES = http__WEBPACK_IMPORTED_MODULE_1__.STATUS_CODES;

/**
 * Response class
 *
 * @param   Stream  body  Readable stream
 * @param   Object  opts  Response options
 * @return  Void
 */
class Response {
	constructor() {
		let body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
		let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

		Body.call(this, body, opts);

		const status = opts.status || 200;
		const headers = new Headers(opts.headers);

		if (body != null && !headers.has('Content-Type')) {
			const contentType = extractContentType(body);
			if (contentType) {
				headers.append('Content-Type', contentType);
			}
		}

		this[INTERNALS$1] = {
			url: opts.url,
			status,
			statusText: opts.statusText || STATUS_CODES[status],
			headers,
			counter: opts.counter
		};
	}

	get url() {
		return this[INTERNALS$1].url || '';
	}

	get status() {
		return this[INTERNALS$1].status;
	}

	/**
  * Convenience property representing if the request ended normally
  */
	get ok() {
		return this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;
	}

	get redirected() {
		return this[INTERNALS$1].counter > 0;
	}

	get statusText() {
		return this[INTERNALS$1].statusText;
	}

	get headers() {
		return this[INTERNALS$1].headers;
	}

	/**
  * Clone this response
  *
  * @return  Response
  */
	clone() {
		return new Response(clone(this), {
			url: this.url,
			status: this.status,
			statusText: this.statusText,
			headers: this.headers,
			ok: this.ok,
			redirected: this.redirected
		});
	}
}

Body.mixIn(Response.prototype);

Object.defineProperties(Response.prototype, {
	url: { enumerable: true },
	status: { enumerable: true },
	ok: { enumerable: true },
	redirected: { enumerable: true },
	statusText: { enumerable: true },
	headers: { enumerable: true },
	clone: { enumerable: true }
});

Object.defineProperty(Response.prototype, Symbol.toStringTag, {
	value: 'Response',
	writable: false,
	enumerable: false,
	configurable: true
});

const INTERNALS$2 = Symbol('Request internals');
const URL = url__WEBPACK_IMPORTED_MODULE_2__.URL || whatwg_url__WEBPACK_IMPORTED_MODULE_3__.URL;

// fix an issue where "format", "parse" aren't a named export for node <10
const parse_url = url__WEBPACK_IMPORTED_MODULE_2__.parse;
const format_url = url__WEBPACK_IMPORTED_MODULE_2__.format;

/**
 * Wrapper around `new URL` to handle arbitrary URLs
 *
 * @param  {string} urlStr
 * @return {void}
 */
function parseURL(urlStr) {
	/*
 	Check whether the URL is absolute or not
 		Scheme: https://tools.ietf.org/html/rfc3986#section-3.1
 	Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3
 */
	if (/^[a-zA-Z][a-zA-Z\d+\-.]*:/.exec(urlStr)) {
		urlStr = new URL(urlStr).toString();
	}

	// Fallback to old implementation for arbitrary URLs
	return parse_url(urlStr);
}

const streamDestructionSupported = 'destroy' in stream__WEBPACK_IMPORTED_MODULE_0__.Readable.prototype;

/**
 * Check if a value is an instance of Request.
 *
 * @param   Mixed   input
 * @return  Boolean
 */
function isRequest(input) {
	return typeof input === 'object' && typeof input[INTERNALS$2] === 'object';
}

function isAbortSignal(signal) {
	const proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);
	return !!(proto && proto.constructor.name === 'AbortSignal');
}

/**
 * Request class
 *
 * @param   Mixed   input  Url or Request instance
 * @param   Object  init   Custom options
 * @return  Void
 */
class Request {
	constructor(input) {
		let init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

		let parsedURL;

		// normalize input
		if (!isRequest(input)) {
			if (input && input.href) {
				// in order to support Node.js' Url objects; though WHATWG's URL objects
				// will fall into this branch also (since their `toString()` will return
				// `href` property anyway)
				parsedURL = parseURL(input.href);
			} else {
				// coerce input to a string before attempting to parse
				parsedURL = parseURL(`${input}`);
			}
			input = {};
		} else {
			parsedURL = parseURL(input.url);
		}

		let method = init.method || input.method || 'GET';
		method = method.toUpperCase();

		if ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {
			throw new TypeError('Request with GET/HEAD method cannot have body');
		}

		let inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;

		Body.call(this, inputBody, {
			timeout: init.timeout || input.timeout || 0,
			size: init.size || input.size || 0
		});

		const headers = new Headers(init.headers || input.headers || {});

		if (inputBody != null && !headers.has('Content-Type')) {
			const contentType = extractContentType(inputBody);
			if (contentType) {
				headers.append('Content-Type', contentType);
			}
		}

		let signal = isRequest(input) ? input.signal : null;
		if ('signal' in init) signal = init.signal;

		if (signal != null && !isAbortSignal(signal)) {
			throw new TypeError('Expected signal to be an instanceof AbortSignal');
		}

		this[INTERNALS$2] = {
			method,
			redirect: init.redirect || input.redirect || 'follow',
			headers,
			parsedURL,
			signal
		};

		// node-fetch-only options
		this.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;
		this.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;
		this.counter = init.counter || input.counter || 0;
		this.agent = init.agent || input.agent;
	}

	get method() {
		return this[INTERNALS$2].method;
	}

	get url() {
		return format_url(this[INTERNALS$2].parsedURL);
	}

	get headers() {
		return this[INTERNALS$2].headers;
	}

	get redirect() {
		return this[INTERNALS$2].redirect;
	}

	get signal() {
		return this[INTERNALS$2].signal;
	}

	/**
  * Clone this request
  *
  * @return  Request
  */
	clone() {
		return new Request(this);
	}
}

Body.mixIn(Request.prototype);

Object.defineProperty(Request.prototype, Symbol.toStringTag, {
	value: 'Request',
	writable: false,
	enumerable: false,
	configurable: true
});

Object.defineProperties(Request.prototype, {
	method: { enumerable: true },
	url: { enumerable: true },
	headers: { enumerable: true },
	redirect: { enumerable: true },
	clone: { enumerable: true },
	signal: { enumerable: true }
});

/**
 * Convert a Request to Node.js http request options.
 *
 * @param   Request  A Request instance
 * @return  Object   The options object to be passed to http.request
 */
function getNodeRequestOptions(request) {
	const parsedURL = request[INTERNALS$2].parsedURL;
	const headers = new Headers(request[INTERNALS$2].headers);

	// fetch step 1.3
	if (!headers.has('Accept')) {
		headers.set('Accept', '*/*');
	}

	// Basic fetch
	if (!parsedURL.protocol || !parsedURL.hostname) {
		throw new TypeError('Only absolute URLs are supported');
	}

	if (!/^https?:$/.test(parsedURL.protocol)) {
		throw new TypeError('Only HTTP(S) protocols are supported');
	}

	if (request.signal && request.body instanceof stream__WEBPACK_IMPORTED_MODULE_0__.Readable && !streamDestructionSupported) {
		throw new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');
	}

	// HTTP-network-or-cache fetch steps 2.4-2.7
	let contentLengthValue = null;
	if (request.body == null && /^(POST|PUT)$/i.test(request.method)) {
		contentLengthValue = '0';
	}
	if (request.body != null) {
		const totalBytes = getTotalBytes(request);
		if (typeof totalBytes === 'number') {
			contentLengthValue = String(totalBytes);
		}
	}
	if (contentLengthValue) {
		headers.set('Content-Length', contentLengthValue);
	}

	// HTTP-network-or-cache fetch step 2.11
	if (!headers.has('User-Agent')) {
		headers.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');
	}

	// HTTP-network-or-cache fetch step 2.15
	if (request.compress && !headers.has('Accept-Encoding')) {
		headers.set('Accept-Encoding', 'gzip,deflate');
	}

	let agent = request.agent;
	if (typeof agent === 'function') {
		agent = agent(parsedURL);
	}

	if (!headers.has('Connection') && !agent) {
		headers.set('Connection', 'close');
	}

	// HTTP-network fetch step 4.2
	// chunked encoding is handled by Node.js

	return Object.assign({}, parsedURL, {
		method: request.method,
		headers: exportNodeCompatibleHeaders(headers),
		agent
	});
}

/**
 * abort-error.js
 *
 * AbortError interface for cancelled requests
 */

/**
 * Create AbortError instance
 *
 * @param   String      message      Error message for human
 * @return  AbortError
 */
function AbortError(message) {
  Error.call(this, message);

  this.type = 'aborted';
  this.message = message;

  // hide custom error implementation details from end-users
  Error.captureStackTrace(this, this.constructor);
}

AbortError.prototype = Object.create(Error.prototype);
AbortError.prototype.constructor = AbortError;
AbortError.prototype.name = 'AbortError';

// fix an issue where "PassThrough", "resolve" aren't a named export for node <10
const PassThrough$1 = stream__WEBPACK_IMPORTED_MODULE_0__.PassThrough;
const resolve_url = url__WEBPACK_IMPORTED_MODULE_2__.resolve;

/**
 * Fetch function
 *
 * @param   Mixed    url   Absolute url or Request instance
 * @param   Object   opts  Fetch options
 * @return  Promise
 */
function fetch(url, opts) {

	// allow custom promise
	if (!fetch.Promise) {
		throw new Error('native promise missing, set fetch.Promise to your favorite alternative');
	}

	Body.Promise = fetch.Promise;

	// wrap http.request into fetch
	return new fetch.Promise(function (resolve, reject) {
		// build request object
		const request = new Request(url, opts);
		const options = getNodeRequestOptions(request);

		const send = (options.protocol === 'https:' ? https__WEBPACK_IMPORTED_MODULE_4__ : http__WEBPACK_IMPORTED_MODULE_1__).request;
		const signal = request.signal;

		let response = null;

		const abort = function abort() {
			let error = new AbortError('The user aborted a request.');
			reject(error);
			if (request.body && request.body instanceof stream__WEBPACK_IMPORTED_MODULE_0__.Readable) {
				request.body.destroy(error);
			}
			if (!response || !response.body) return;
			response.body.emit('error', error);
		};

		if (signal && signal.aborted) {
			abort();
			return;
		}

		const abortAndFinalize = function abortAndFinalize() {
			abort();
			finalize();
		};

		// send request
		const req = send(options);
		let reqTimeout;

		if (signal) {
			signal.addEventListener('abort', abortAndFinalize);
		}

		function finalize() {
			req.abort();
			if (signal) signal.removeEventListener('abort', abortAndFinalize);
			clearTimeout(reqTimeout);
		}

		if (request.timeout) {
			req.once('socket', function (socket) {
				reqTimeout = setTimeout(function () {
					reject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));
					finalize();
				}, request.timeout);
			});
		}

		req.on('error', function (err) {
			reject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));
			finalize();
		});

		req.on('response', function (res) {
			clearTimeout(reqTimeout);

			const headers = createHeadersLenient(res.headers);

			// HTTP fetch step 5
			if (fetch.isRedirect(res.statusCode)) {
				// HTTP fetch step 5.2
				const location = headers.get('Location');

				// HTTP fetch step 5.3
				const locationURL = location === null ? null : resolve_url(request.url, location);

				// HTTP fetch step 5.5
				switch (request.redirect) {
					case 'error':
						reject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));
						finalize();
						return;
					case 'manual':
						// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.
						if (locationURL !== null) {
							// handle corrupted header
							try {
								headers.set('Location', locationURL);
							} catch (err) {
								// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request
								reject(err);
							}
						}
						break;
					case 'follow':
						// HTTP-redirect fetch step 2
						if (locationURL === null) {
							break;
						}

						// HTTP-redirect fetch step 5
						if (request.counter >= request.follow) {
							reject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));
							finalize();
							return;
						}

						// HTTP-redirect fetch step 6 (counter increment)
						// Create a new Request object.
						const requestOpts = {
							headers: new Headers(request.headers),
							follow: request.follow,
							counter: request.counter + 1,
							agent: request.agent,
							compress: request.compress,
							method: request.method,
							body: request.body,
							signal: request.signal,
							timeout: request.timeout,
							size: request.size
						};

						// HTTP-redirect fetch step 9
						if (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {
							reject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));
							finalize();
							return;
						}

						// HTTP-redirect fetch step 11
						if (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {
							requestOpts.method = 'GET';
							requestOpts.body = undefined;
							requestOpts.headers.delete('content-length');
						}

						// HTTP-redirect fetch step 15
						resolve(fetch(new Request(locationURL, requestOpts)));
						finalize();
						return;
				}
			}

			// prepare response
			res.once('end', function () {
				if (signal) signal.removeEventListener('abort', abortAndFinalize);
			});
			let body = res.pipe(new PassThrough$1());

			const response_options = {
				url: request.url,
				status: res.statusCode,
				statusText: res.statusMessage,
				headers: headers,
				size: request.size,
				timeout: request.timeout,
				counter: request.counter
			};

			// HTTP-network fetch step 12.1.1.3
			const codings = headers.get('Content-Encoding');

			// HTTP-network fetch step 12.1.1.4: handle content codings

			// in following scenarios we ignore compression support
			// 1. compression support is disabled
			// 2. HEAD request
			// 3. no Content-Encoding header
			// 4. no content response (204)
			// 5. content not modified response (304)
			if (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {
				response = new Response(body, response_options);
				resolve(response);
				return;
			}

			// For Node v6+
			// Be less strict when decoding compressed responses, since sometimes
			// servers send slightly invalid responses that are still accepted
			// by common browsers.
			// Always using Z_SYNC_FLUSH is what cURL does.
			const zlibOptions = {
				flush: zlib__WEBPACK_IMPORTED_MODULE_5__.Z_SYNC_FLUSH,
				finishFlush: zlib__WEBPACK_IMPORTED_MODULE_5__.Z_SYNC_FLUSH
			};

			// for gzip
			if (codings == 'gzip' || codings == 'x-gzip') {
				body = body.pipe(zlib__WEBPACK_IMPORTED_MODULE_5__.createGunzip(zlibOptions));
				response = new Response(body, response_options);
				resolve(response);
				return;
			}

			// for deflate
			if (codings == 'deflate' || codings == 'x-deflate') {
				// handle the infamous raw deflate response from old servers
				// a hack for old IIS and Apache servers
				const raw = res.pipe(new PassThrough$1());
				raw.once('data', function (chunk) {
					// see http://stackoverflow.com/questions/37519828
					if ((chunk[0] & 0x0F) === 0x08) {
						body = body.pipe(zlib__WEBPACK_IMPORTED_MODULE_5__.createInflate());
					} else {
						body = body.pipe(zlib__WEBPACK_IMPORTED_MODULE_5__.createInflateRaw());
					}
					response = new Response(body, response_options);
					resolve(response);
				});
				return;
			}

			// for br
			if (codings == 'br' && typeof zlib__WEBPACK_IMPORTED_MODULE_5__.createBrotliDecompress === 'function') {
				body = body.pipe(zlib__WEBPACK_IMPORTED_MODULE_5__.createBrotliDecompress());
				response = new Response(body, response_options);
				resolve(response);
				return;
			}

			// otherwise, use response as-is
			response = new Response(body, response_options);
			resolve(response);
		});

		writeToStream(req, request);
	});
}
/**
 * Redirect code matching
 *
 * @param   Number   code  Status code
 * @return  Boolean
 */
fetch.isRedirect = function (code) {
	return code === 301 || code === 302 || code === 303 || code === 307 || code === 308;
};

// expose Promise
fetch.Promise = global.Promise;

/* harmony default export */ __webpack_exports__["default"] = (fetch);



/***/ }),
/* 678 */
/***/ (function(module, exports) {

(function () {
  "use strict";

  function btoa(str) {
    var buffer;

    if (str instanceof Buffer) {
      buffer = str;
    } else {
      buffer = Buffer.from(str.toString(), 'binary');
    }

    return buffer.toString('base64');
  }

  module.exports = btoa;
}());


/***/ }),
/* 679 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireWildcard = __webpack_require__(22);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.geo = exports.user = exports.paper = exports.dacc = exports.sharing = exports.timeseries = exports.document = exports.contact = exports.utils = exports.permission = exports.note = exports.account = exports.konnectorFolder = exports.folder = exports.file = exports.applications = exports.instance = exports.trigger = exports.accounts = exports.triggers = void 0;

var trigger = _interopRequireWildcard(__webpack_require__(680));

exports.trigger = trigger;

var instance = _interopRequireWildcard(__webpack_require__(309));

exports.instance = instance;

var applications = _interopRequireWildcard(__webpack_require__(681));

exports.applications = applications;

var file = _interopRequireWildcard(__webpack_require__(310));

exports.file = file;

var folder = _interopRequireWildcard(__webpack_require__(312));

exports.folder = folder;

var konnectorFolder = _interopRequireWildcard(__webpack_require__(685));

exports.konnectorFolder = konnectorFolder;

var account = _interopRequireWildcard(__webpack_require__(193));

exports.account = account;

var note = _interopRequireWildcard(__webpack_require__(721));

exports.note = note;

var permission = _interopRequireWildcard(__webpack_require__(722));

exports.permission = permission;

var utils = _interopRequireWildcard(__webpack_require__(723));

exports.utils = utils;

var contact = _interopRequireWildcard(__webpack_require__(141));

exports.contact = contact;

var document = _interopRequireWildcard(__webpack_require__(725));

exports.document = document;

var timeseries = _interopRequireWildcard(__webpack_require__(727));

exports.timeseries = timeseries;

var sharing = _interopRequireWildcard(__webpack_require__(728));

exports.sharing = sharing;

var dacc = _interopRequireWildcard(__webpack_require__(729));

exports.dacc = dacc;

var paper = _interopRequireWildcard(__webpack_require__(730));

exports.paper = paper;

var user = _interopRequireWildcard(__webpack_require__(733));

exports.user = user;

var geo = _interopRequireWildcard(__webpack_require__(736));

exports.geo = geo;
// For backward compatibility before 9.0.0
var triggers = trigger;
exports.triggers = triggers;
var accounts = account;
exports.accounts = accounts;

/***/ }),
/* 680 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.triggers = exports.triggerStates = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(9));

var _account = __webpack_require__(193);

var _logger = _interopRequireDefault(__webpack_require__(27));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var actionableErrors = ['CHALLENGE_ASKED', 'DISK_QUOTA_EXCEEDED', 'TERMS_VERSION_MISMATCH', 'USER_ACTION_NEEDED', 'USER_ACTION_NEEDED.CHANGE_PASSWORD', 'USER_ACTION_NEEDED.ACCOUNT_REMOVED', 'USER_ACTION_NEEDED.WEBAUTH_REQUIRED', 'USER_ACTION_NEEDED.SCA_REQUIRED', 'LOGIN_FAILED'];
/** Trigger states come from /jobs/triggers */

var triggerStates = {
  /**
   * Returns when the trigger was last executed
   *
   * @param {import('../types').IOCozyTrigger} trigger - trigger object
   * @returns {String} last execution date of any job related to the given trigger
   */
  getLastExecution: function getLastExecution(trigger) {
    var _trigger$current_stat;

    return trigger === null || trigger === void 0 ? void 0 : (_trigger$current_stat = trigger.current_state) === null || _trigger$current_stat === void 0 ? void 0 : _trigger$current_stat.last_execution;
  },

  /**
   * Returns when the trigger was last executed with success
   *
   * @param {import('../types').IOCozyTrigger} trigger - trigger object
   * @returns {String} last execution date of any job related to the given trigger and with success
   */
  getLastSuccess: function getLastSuccess(trigger) {
    var _trigger$current_stat2;

    return trigger === null || trigger === void 0 ? void 0 : (_trigger$current_stat2 = trigger.current_state) === null || _trigger$current_stat2 === void 0 ? void 0 : _trigger$current_stat2.last_success;
  },

  /**
   * Returns when the trigger was last executed with success
   *
   * @param {import('../types').IOCozyTrigger} trigger - trigger object
   * @returns {String} last execution date of any job related to the given trigger and with success
   */
  getLastsuccess: function getLastsuccess(trigger) {
    var _trigger$current_stat3;

    _logger.default.warn('Deprecated, please use getLastSuccess instead of getLastsuccess');

    return trigger === null || trigger === void 0 ? void 0 : (_trigger$current_stat3 = trigger.current_state) === null || _trigger$current_stat3 === void 0 ? void 0 : _trigger$current_stat3.last_success;
  },

  /**
   * Returns whether last job failed
   *
   * @param {import('../types').IOCozyTrigger} trigger - trigger object
   * @returns {Boolean}
   */
  isErrored: function isErrored(trigger) {
    var _trigger$current_stat4;

    return (trigger === null || trigger === void 0 ? void 0 : (_trigger$current_stat4 = trigger.current_state) === null || _trigger$current_stat4 === void 0 ? void 0 : _trigger$current_stat4.status) === 'errored';
  },

  /**
   * Returns the type of the last error to occur
   *
   * @param {import('../types').IOCozyTrigger} trigger - trigger object
   * @returns {String}
   */
  getLastErrorType: function getLastErrorType(trigger) {
    var _trigger$current_stat5;

    return trigger === null || trigger === void 0 ? void 0 : (_trigger$current_stat5 = trigger.current_state) === null || _trigger$current_stat5 === void 0 ? void 0 : _trigger$current_stat5.last_error;
  }
};
exports.triggerStates = triggerStates;
var DEFAULT_CRON = '0 0 0 * * 0'; // Once a week, sunday at midnight

var triggers = {
  /**
   * Returns whether the given trigger is associated to a konnector or not
   *
   * @param {import('../types').IOCozyTrigger} trigger - trigger object
   * @returns {Boolean}
   */
  isKonnectorWorker: function isKonnectorWorker(trigger) {
    return trigger.worker === 'konnector';
  },
  isKonnector: function isKonnector(trigger) {
    return trigger.worker === 'konnector' || trigger.worker === 'client';
  },

  /**
   * Returns the konnector slug that executed a trigger
   *
   * @param {import('../types').IOCozyTrigger} trigger - io.cozy.triggers
   *
   * @returns {string|void} A konnector slug
   */
  getKonnector: function getKonnector(trigger) {
    if (!triggers.isKonnector(trigger)) {
      return null;
    }

    if (trigger.message && trigger.message.konnector) {
      return trigger.message.konnector;
    } else if (trigger.message && trigger.message.Data) {
      // Legacy triggers
      var message = JSON.parse(atob(trigger.message.Data));
      return message.konnector;
    }
  },

  /**
   * getAccountId - Returns the account id for a trigger
   *
   * @param {import('../types').IOCozyTrigger} trigger io.cozy.triggers
   *
   * @returns {String} Id for an io.cozy.accounts
   */
  getAccountId: function getAccountId(trigger) {
    var _trigger$message;

    var legacyData = trigger === null || trigger === void 0 ? void 0 : (_trigger$message = trigger.message) === null || _trigger$message === void 0 ? void 0 : _trigger$message.Data;

    if (legacyData) {
      var message = JSON.parse(atob(legacyData));
      return message.account;
    } else {
      var _trigger$message2;

      return trigger === null || trigger === void 0 ? void 0 : (_trigger$message2 = trigger.message) === null || _trigger$message2 === void 0 ? void 0 : _trigger$message2.account;
    }
  },

  /**
   * Checks if the triggers current error has been muted in the corresponding io.cozy.accounts
   *
   * @param {import('../types').IOCozyTrigger} trigger      io.cozy.triggers
   * @param {import('../types').IOCozyAccount} account      io.cozy.accounts used by the trigger
   *
   * @returns {Boolean} Whether the error is muted or not
   */
  isLatestErrorMuted: function isLatestErrorMuted(trigger, account) {
    var lastErrorType = triggerStates.getLastErrorType(trigger);
    var lastSuccess = triggerStates.getLastSuccess(trigger);
    var lastSuccessDate = lastSuccess ? new Date(lastSuccess) : new Date();
    var mutedErrors = (0, _account.getMutedErrors)(account);
    var isErrorMuted = mutedErrors.some(function (mutedError) {
      return mutedError.type === lastErrorType && (!lastSuccess || new Date(mutedError.mutedAt) > lastSuccessDate);
    });
    return isErrorMuted;
  },

  /**
   * Returns whether the error in trigger can be solved by the user
   *
   * @param {import('../types').IOCozyTrigger} trigger      io.cozy.triggers
   *
   * @returns {Boolean} Whether the error is muted or not
   */
  hasActionableError: function hasActionableError(trigger) {
    var _trigger$current_stat6;

    return actionableErrors.includes(trigger === null || trigger === void 0 ? void 0 : (_trigger$current_stat6 = trigger.current_state) === null || _trigger$current_stat6 === void 0 ? void 0 : _trigger$current_stat6.last_error);
  },

  /**
   * Build trigger attributes given konnector and account
   *
   * @param  {Object} options - options object
   * @param  {import('../types').IOCozyKonnector} options.konnector - konnector object
   * @param  {import('../types').IOCozyAccount} options.account - account object
   * @param  {String} [options.cron] - cron string. Defaults to '0 0 0 * * 0'
   * @param  {object} [options.folder] - folder object
   * @returns {import('../types').IOCozyTrigger} created trigger
   */
  buildTriggerAttributes: function buildTriggerAttributes(_ref) {
    var account = _ref.account,
        _ref$cron = _ref.cron,
        cron = _ref$cron === void 0 ? DEFAULT_CRON : _ref$cron,
        folder = _ref.folder,
        konnector = _ref.konnector;
    var message = {
      account: account._id,
      konnector: konnector.slug
    };

    if (folder) {
      message['folder_to_save'] = folder._id;
    }

    var result = {
      worker: 'konnector',
      message: message
    };
    var options = konnector.clientSide ? {
      type: '@client'
    } : {
      type: '@cron',
      arguments: cron
    };
    return _objectSpread(_objectSpread({}, result), options);
  }
};
exports.triggers = triggers;

/***/ }),
/* 681 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getAppDisplayName = exports.getUrl = exports.isInstalled = exports.getStoreInstallationURL = exports.getStoreURL = void 0;

var _get = _interopRequireDefault(__webpack_require__(10));

var STORE_SLUG = 'store';
/**
 * Returns the store URL of an app/konnector
 *
 * @param {Array} [appData=[]] Apps data, as returned by endpoint /apps/ or /konnectors
 * @param {object} [app={}] AppObject
 * @returns {string} URL as string
 */

var getStoreURL = function getStoreURL() {
  var appData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  var app = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  if (!app.slug) {
    throw new Error('Expected app / konnector with the defined slug');
  }

  var storeApp = isInstalled(appData, {
    slug: STORE_SLUG
  });
  if (!storeApp) return null;
  var storeUrl = storeApp.links && storeApp.links.related;
  if (!storeUrl) return null;
  return "".concat(storeUrl, "#/discover/").concat(app.slug);
};
/**
 * Returns the store URL to install/update an app/konnector
 *
 * @param  {Array}  [appData=[]]   Apps data, as returned by endpoint /apps/ or
 * /konnectors/
 * @param  {object} [app={}] AppObject
 * @returns {string}                URL as string
 */


exports.getStoreURL = getStoreURL;

var getStoreInstallationURL = function getStoreInstallationURL() {
  var appData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  var app = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var storeUrl = getStoreURL(appData, app);

  if (!storeUrl) {
    return null;
  }

  return "".concat(storeUrl, "/install");
};
/**
 *
 * @param {Array} apps Array of apps returned by /apps /konnectors
 * @param {object} wantedApp io.cozy.app with at least a slug
 * @returns {object} The io.cozy.app is installed or undefined if not
 */


exports.getStoreInstallationURL = getStoreInstallationURL;

var isInstalled = function isInstalled() {
  var apps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  var wantedApp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return apps.find(function (app) {
    return app.attributes && app.attributes.slug === wantedApp.slug;
  });
};
/**
 *
 * @param {object} app io.cozy.apps document
 * @returns {string} url to the app
 */


exports.isInstalled = isInstalled;

var getUrl = function getUrl(app) {
  return app.links && app.links.related;
};
/**
 * getAppDisplayName - Combines the translated prefix and name of the app into a single string.
 *
 * @param {object} app io.cozy.apps or io.cozy.konnectors document
 * @param {string} lang Locale to use
 *
 * @returns {string} Name of the app suitable for display
 */


exports.getUrl = getUrl;

var getAppDisplayName = function getAppDisplayName(app, lang) {
  var basePrefix = (0, _get.default)(app, 'name_prefix');
  var baseName = (0, _get.default)(app, 'name');
  var translatedName = (0, _get.default)(app, ['locales', lang, 'name'], baseName);
  var translatedPrefix = (0, _get.default)(app, ['locales', lang, 'name_prefix'], basePrefix);
  return translatedPrefix && translatedPrefix.toLowerCase() !== 'cozy' ? "".concat(translatedPrefix, " ").concat(translatedName) : translatedName;
};

exports.getAppDisplayName = getAppDisplayName;

/***/ }),
/* 682 */
/***/ (function(module, exports, __webpack_require__) {

var baseToString = __webpack_require__(171),
    castSlice = __webpack_require__(302),
    charsEndIndex = __webpack_require__(683),
    stringToArray = __webpack_require__(303),
    toString = __webpack_require__(82),
    trimmedEndIndex = __webpack_require__(272);

/**
 * Removes trailing whitespace or specified characters from `string`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to trim.
 * @param {string} [chars=whitespace] The characters to trim.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {string} Returns the trimmed string.
 * @example
 *
 * _.trimEnd('  abc  ');
 * // => '  abc'
 *
 * _.trimEnd('-_-abc-_-', '_-');
 * // => '-_-abc'
 */
function trimEnd(string, chars, guard) {
  string = toString(string);
  if (string && (guard || chars === undefined)) {
    return string.slice(0, trimmedEndIndex(string) + 1);
  }
  if (!string || !(chars = baseToString(chars))) {
    return string;
  }
  var strSymbols = stringToArray(string),
      end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;

  return castSlice(strSymbols, 0, end).join('');
}

module.exports = trimEnd;


/***/ }),
/* 683 */
/***/ (function(module, exports, __webpack_require__) {

var baseIndexOf = __webpack_require__(221);

/**
 * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
 * that is not found in the character symbols.
 *
 * @private
 * @param {Array} strSymbols The string symbols to inspect.
 * @param {Array} chrSymbols The character symbols to find.
 * @returns {number} Returns the index of the last unmatched string symbol.
 */
function charsEndIndex(strSymbols, chrSymbols) {
  var index = strSymbols.length;

  while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
  return index;
}

module.exports = charsEndIndex;


/***/ }),
/* 684 */
/***/ (function(module) {

module.exports = JSON.parse("{\"qualifications\":[{\"label\":\"identity_photo\",\"purpose\":\"attestation\",\"subjects\":[\"identity\"]},{\"label\":\"national_id_card\",\"purpose\":\"attestation\",\"sourceCategory\":\"gov\",\"sourceSubCategory\":\"civil_registration\",\"subjects\":[\"identity\"]},{\"label\":\"passport\",\"purpose\":\"attestation\",\"sourceCategory\":\"gov\",\"sourceSubCategory\":\"civil_registration\",\"subjects\":[\"identity\"]},{\"label\":\"residence_permit\",\"purpose\":\"attestation\",\"sourceCategory\":\"gov\",\"sourceSubCategory\":\"immigration\",\"subjects\":[\"permit\",\"identity\"]},{\"label\":\"family_record_book\",\"purpose\":\"attestation\",\"sourceCategory\":\"gov\",\"sourceSubCategory\":\"civil_registration\",\"subjects\":[\"family\"]},{\"label\":\"birth_certificate\",\"purpose\":\"attestation\",\"sourceCategory\":\"gov\",\"sourceSubCategory\":\"civil_registration\",\"subjects\":[\"identity\",\"family\"]},{\"label\":\"driver_license\",\"purpose\":\"attestation\",\"sourceCategory\":\"gov\",\"sourceSubCategory\":\"transport\",\"subjects\":[\"permit\",\"driving\"]},{\"label\":\"other_identity_document\",\"purpose\":\"attestation\",\"subjects\":[\"identity\"]},{\"label\":\"wedding\",\"purpose\":\"contract\",\"sourceCategory\":\"gov\",\"sourceSubCategory\":\"civil_registration\",\"subjects\":[\"family\"]},{\"label\":\"pacs\",\"purpose\":\"contract\",\"sourceCategory\":\"gov\",\"sourceSubCategory\":\"civil_registration\",\"subjects\":[\"family\"]},{\"label\":\"divorce\",\"purpose\":\"contract\",\"sourceCategory\":\"gov\",\"sourceSubCategory\":\"civil_registration\",\"subjects\":[\"family\"]},{\"label\":\"large_family_card\",\"purpose\":\"attestation\",\"sourceCategory\":\"transport\",\"subjects\":[\"right\"]},{\"label\":\"caf\",\"purpose\":\"attestation\",\"sourceCategory\":\"gov\",\"sourceSubCategory\":\"family\",\"subjects\":[\"right\"]},{\"label\":\"other_family_document\",\"subjects\":[\"family\"]},{\"label\":\"diploma\",\"purpose\":\"attestation\",\"sourceCategory\":\"education\",\"subjects\":[\"achievement\"]},{\"label\":\"work_contract\",\"purpose\":\"contract\",\"sourceCategory\":\"employer\",\"subjects\":[\"work\",\"employment\"]},{\"label\":\"pay_sheet\",\"purpose\":\"attestation\",\"sourceCategory\":\"employer\",\"subjects\":[\"work\",\"revenues\"]},{\"label\":\"fidelity_card\",\"sourceCategory\":\"shopping\"},{\"label\":\"library_card\",\"sourceCategory\":\"individual\"},{\"label\":\"single_parent_benefit\",\"purpose\":\"attestation\",\"sourceCategory\":\"gov\",\"sourceSubCategory\":\"family\",\"subjects\":[\"revenues\"]},{\"label\":\"transport_card\",\"sourceCategory\":\"transport\",\"subjects\":[\"vehicule\"]},{\"label\":\"electoral_card\",\"sourceCategory\":\"gov\"},{\"label\":\"employment_center_certificate\",\"purpose\":\"attestation\",\"sourceCategory\":\"gov\",\"subjects\":[\"employment\"]},{\"label\":\"unemployment_benefit\",\"purpose\":\"attestation\",\"sourceCategory\":\"gov\",\"subjects\":[\"revenues\"]},{\"label\":\"pension\",\"purpose\":\"attestation\",\"sourceCategory\":\"gov\",\"subjects\":[\"revenues\"]},{\"label\":\"other_revenue\",\"purpose\":\"attestation\",\"subjects\":[\"revenues\"]},{\"label\":\"gradebook\",\"purpose\":\"report\",\"sourceCategory\":\"education\",\"subjects\":[\"history\"]},{\"label\":\"student_card\",\"purpose\":\"attestation\",\"sourceCategory\":\"education\",\"subjects\":[\"identity\",\"right\",\"employment\",\"education\"]},{\"label\":\"resume\",\"purpose\":\"description\",\"subjects\":[\"employment\"]},{\"label\":\"motivation_letter\",\"purpose\":\"description\",\"subjects\":[\"employment\"]},{\"label\":\"other_work_document\",\"purpose\":\"employment\"},{\"label\":\"health_book\",\"purpose\":\"attestation\",\"sourceCategory\":\"health\",\"subjects\":[\"capacity\",\"vaccine\"]},{\"label\":\"health_certificate\",\"purpose\":\"attestation\",\"sourceCategory\":\"health\",\"subjects\":[\"capacity\",\"vaccine\"]},{\"label\":\"pregnancy_medical_certificate\",\"purpose\":\"attestation\",\"sourceCategory\":\"health\",\"subjects\":[\"pregnancy\"]},{\"label\":\"work_disability_recognition\",\"purpose\":\"attestation\",\"sourceCategory\":\"health\",\"subjects\":[\"right\"]},{\"label\":\"national_health_insurance_card\",\"purpose\":\"attestation\",\"sourceCategory\":\"gov\",\"sourceSubCategory\":\"health\",\"subjects\":[\"insurance\"]},{\"label\":\"national_health_insurance_right_certificate\",\"purpose\":\"attestation\",\"sourceCategory\":\"gov\",\"sourceSubCategory\":\"health\",\"subjects\":[\"right\",\"insurance\"]},{\"label\":\"health_insurance_card\",\"purpose\":\"attestation\",\"sourceCategory\":\"insurance\",\"sourceSubCategory\":\"health\",\"subjects\":[\"insurance\"]},{\"label\":\"prescription\",\"purpose\":\"attestation\",\"sourceCategory\":\"health\",\"subjects\":[\"right\",\"medecine\"]},{\"label\":\"health_invoice\",\"purpose\":\"invoice\",\"sourceCategory\":\"health\"},{\"label\":\"other_health_document\",\"subjects\":[\"health\"]},{\"label\":\"vehicle_registration\",\"purpose\":\"attestation\",\"sourceCategory\":\"gov\",\"sourceSubCategory\":\"transport\",\"subjects\":[\"vehicule\",\"identity\",\"right\"]},{\"label\":\"car_insurance\",\"purpose\":\"attestation\",\"sourceCategory\":\"insurance\",\"sourceSubCategory\":\"transport\",\"subjects\":[\"insurance\",\"car\"]},{\"label\":\"mechanic_invoice\",\"purpose\":\"invoice\",\"sourceCategory\":\"transport\"},{\"label\":\"transport_invoice\",\"purpose\":\"invoice\",\"sourceCategory\":\"transport\"},{\"label\":\"other_transport_document\",\"sourceCategory\":\"transport\"},{\"label\":\"house_sale_agreeement\",\"purpose\":\"contract\",\"sourceCategory\":\"real_estate\",\"subjects\":[\"house\"]},{\"label\":\"real_estate_tax\",\"purpose\":\"invoice\",\"sourceCategory\":\"gov\",\"sourceSubCategory\":\"real_estate\",\"subjects\":[\"tax\",\"house\"]},{\"label\":\"building_permit\",\"purpose\":\"attestation\",\"sourceCategory\":\"gov\",\"sourceSubCategory\":\"real_estate\",\"subjects\":[\"permit\",\"house\"]},{\"label\":\"technical_diagnostic_record\",\"purpose\":\"report\",\"sourceCategory\":\"real_estate\",\"subjects\":[\"compliance\",\"house\"]},{\"label\":\"lease\",\"purpose\":\"contract\",\"sourceCategory\":\"real_estate\",\"subjects\":[\"house\"]},{\"label\":\"rent_receipt\",\"purpose\":\"invoice\",\"sourceCategory\":\"real_estate\",\"subjects\":[\"house\"]},{\"label\":\"house_insurance\",\"purpose\":\"contract\",\"sourceCategory\":\"insurance\",\"sourceSubCategory\":\"real_estate\",\"subjects\":[\"insurance\",\"house\"]},{\"label\":\"work_quote\",\"purpose\":\"description\",\"sourceCategory\":\"building\",\"subjects\":[\"building\",\"house\"]},{\"label\":\"work_invoice\",\"purpose\":\"invoice\",\"sourceCategory\":\"building\",\"subjects\":[\"building\",\"house\"]},{\"label\":\"other_house_document\",\"subjects\":[\"house\"]},{\"label\":\"phone_invoice\",\"purpose\":\"invoice\",\"sourceCategory\":\"telecom\",\"sourceSubCategory\":\"mobile\"},{\"label\":\"isp_invoice\",\"purpose\":\"invoice\",\"sourceCategory\":\"telecom\",\"sourceSubCategory\":\"internet\",\"subjects\":[\"subscription\"]},{\"label\":\"telecom_invoice\",\"purpose\":\"invoice\",\"sourceCategory\":\"telecom\"},{\"label\":\"energy_invoice\",\"purpose\":\"invoice\",\"sourceCategory\":\"energy\"},{\"label\":\"water_invoice\",\"purpose\":\"invoice\",\"sourceCategory\":\"water\"},{\"label\":\"energy_contract\",\"purpose\":\"contract\",\"sourceCategory\":\"energy\"},{\"label\":\"appliance_invoice\",\"purpose\":\"invoice\",\"sourceCategory\":\"retail\"},{\"label\":\"web_service_invoice\",\"purpose\":\"invoice\",\"sourceCategory\":\"web\"},{\"label\":\"restaurant_invoice\",\"purpose\":\"invoice\",\"sourceCategory\":\"alimentation\"},{\"label\":\"grocery_invoice\",\"purpose\":\"invoice\",\"sourceCategory\":\"shopping\"},{\"label\":\"other_invoice\",\"purpose\":\"invoice\"},{\"label\":\"tax_return\",\"purpose\":\"report\",\"sourceCategory\":\"gov\",\"sourceSubCategory\":\"tax\",\"subjects\":[\"tax\"]},{\"label\":\"tax_notice\",\"purpose\":\"invoice\",\"sourceCategory\":\"gov\",\"sourceSubCategory\":\"tax\",\"subjects\":[\"tax\"]},{\"label\":\"tax_timetable\",\"purpose\":\"report\",\"sourceCategory\":\"gov\",\"sourceSubCategory\":\"tax\",\"subjects\":[\"tax\"]},{\"label\":\"other_tax_document\",\"subjects\":[\"tax\"]},{\"label\":\"bank_details\",\"purpose\":\"attestation\",\"sourceCategory\":\"bank\",\"subjects\":[\"bank_account\"]},{\"label\":\"bank_statement\",\"purpose\":\"report\",\"sourceCategory\":\"bank\",\"subjects\":[\"history\"]},{\"label\":\"loan_agreement\",\"purpose\":\"contract\",\"sourceCategory\":\"bank\"},{\"label\":\"other_bank_document\",\"sourceCategory\":\"bank\"},{\"label\":\"receipt\",\"purpose\":\"report\"},{\"label\":\"payment_proof_family_allowance\",\"purpose\":\"attestation\",\"sourceCategory\":\"gov\",\"sourceSubCategory\":\"tax\",\"subjects\":[\"subvention\"]},{\"label\":\"school_attendance_certificate\",\"purpose\":\"attestation\",\"sourceCategory\":\"education\",\"subjects\":[\"identity\",\"right\",\"education\"]},{\"label\":\"school_insurance_certificate\",\"purpose\":\"attestation\",\"sourceCategory\":\"education\",\"subjects\":[\"education\",\"insurance\"]},{\"label\":\"unfit_for_habitation_declaration\",\"purpose\":\"attestation\",\"sourceCategory\":\"gov\",\"sourceSubCategory\":\"real_estate\",\"subjects\":[\"compliance\"]},{\"label\":\"accommodation_proof\",\"purpose\":\"attestation\",\"sourceCategory\":\"individual\",\"subjects\":[\"address\"]},{\"label\":\"citizen_registration_certificate\",\"purpose\":\"attestation\",\"sourceCategory\":\"gov\",\"sourceSubCategory\":\"civil_registration\",\"subjects\":[\"achievement\",\"education\"]},{\"label\":\"personal_sporting_licence\",\"purpose\":\"attestation\",\"sourceCategory\":\"gov\",\"sourceSubCategory\":\"sport\",\"subjects\":[\"permit\",\"invoice\"]},{\"label\":\"other_activity_document\",\"sourceSubCategory\":\"sport\",\"subjects\":[\"permit\",\"invoice\"]},{\"label\":\"real_estate_insurance\",\"purpose\":\"contract\",\"sourceCategory\":\"insurance\",\"sourceSubCategory\":\"real_estate\",\"subjects\":[\"insurance\"]},{\"label\":\"person_insurance\",\"purpose\":\"contract\",\"sourceCategory\":\"insurance\",\"subjects\":[\"insurance\"]},{\"label\":\"other_administrative_document\"},{\"label\":\"expense_claim\",\"purpose\":\"invoice\"},{\"label\":\"fine\",\"purpose\":\"invoice\",\"sourceCategory\":\"gov\"},{\"label\":\"condition_report\",\"purpose\":\"contract\",\"sourceCategory\":\"real_estate\",\"subjects\":[\"house\"]},{\"label\":\"note_identity_document\"},{\"label\":\"note_family_document\"},{\"label\":\"note_work_document\"},{\"label\":\"note_health_document\"},{\"label\":\"note_house_document\"},{\"label\":\"note_transport_document\"},{\"label\":\"note_activity_document\"},{\"label\":\"note_finance\"},{\"label\":\"note_invoice\"}],\"purposeKnownValues\":[\"attestation\",\"contract\",\"invoice\",\"report\",\"description\",\"evaluation\",\"employment\"],\"sourceCategoryKnownValues\":[\"bank\",\"insurance\",\"retail\",\"telecom\",\"energy\",\"water\",\"health\",\"gov\",\"association\",\"education\",\"employer\",\"transport\",\"goods\",\"alimentation\",\"building\",\"real_estate\",\"web\",\"individual\",\"shopping\"],\"sourceSubCategoryKnownValues\":[\"civil_registration\",\"immigration\",\"transport\",\"family\",\"tax\",\"health\",\"real_estate\",\"mobile\",\"internet\",\"citizen\",\"sport\"],\"subjectsKnownValues\":[\"identity\",\"permit\",\"family\",\"address\",\"driving\",\"right\",\"subvention\",\"achievement\",\"degree\",\"work\",\"employment\",\"revenues\",\"history\",\"insurance\",\"medical_act\",\"vehicule\",\"car\",\"moto\",\"truck\",\"boat\",\"subscription\",\"buy/sale\",\"house\",\"compliance\",\"building\",\"food\",\"real_estate\",\"tax\",\"address\",\"education\",\"statement\",\"course\",\"internet\",\"phone\",\"vaccine\",\"capacity\",\"health\",\"drugs\",\"child\",\"pregnancy\",\"bank_account\"]}");

/***/ }),
/* 685 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.findKonnectorAccountFolderByReference = exports.buildFolderPermission = exports.buildFolderPath = exports.statDirectoryByPath = exports.createDirectoryByPath = exports.ensureKonnectorFolder = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(6));

var _slicedToArray2 = _interopRequireDefault(__webpack_require__(32));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(7));

var _folder = __webpack_require__(312);

var _CozyClient = _interopRequireDefault(__webpack_require__(40));

var _account = __webpack_require__(193);

var _locales = __webpack_require__(195);

var _dsl = __webpack_require__(20);

//@ts-check
var FILES_DOCTYPE = 'io.cozy.files';
var PERMISSIONS_DOCTYPE = 'io.cozy.permissions'; // Default name for base directory

var DEFAULT_LOCALIZED_BASE_DIR = 'Administrative';
/**
 * Ensures the destination folder of a konnector exists and is initiated with proper permissions and references
 *
 * @param {CozyClient} client - CozyClient instance
 * @param {Object} options - options object
 * @param {import('../types').IOCozyKonnector} options.konnector - io.cozy.konnectors document
 * @param {import('../types').IOCozyAccount} options.account - io.cozy.accounts document
 * @param {String} options.lang - instance current language. ex: 'fr'
 * @returns {Promise<import('../types').IOCozyFolder>}
 */

var ensureKonnectorFolder = /*#__PURE__*/function () {
  var _ref2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(client, _ref) {
    var konnector, account, lang, permissions, fileCollection, t, _yield$Promise$all, _yield$Promise$all2, adminFolder, photosFolder, sourceAccountIdentifier, alreadyExistingAccountFolder, alreadyExistingKonnectorMainFolder, path, folder, _yield$fileCollection, konnectorFolder;

    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            konnector = _ref.konnector, account = _ref.account, lang = _ref.lang;
            permissions = client.collection(PERMISSIONS_DOCTYPE);
            fileCollection = client.collection(FILES_DOCTYPE);
            t = (0, _locales.getLocalizer)(lang);
            _context.next = 6;
            return Promise.all([(0, _folder.ensureMagicFolder)(client, _folder.MAGIC_FOLDERS.ADMINISTRATIVE, t('MagicFolders.administrative')), (0, _folder.ensureMagicFolder)(client, _folder.MAGIC_FOLDERS.PHOTOS, t('MagicFolders.photos'))]);

          case 6:
            _yield$Promise$all = _context.sent;
            _yield$Promise$all2 = (0, _slicedToArray2.default)(_yield$Promise$all, 2);
            adminFolder = _yield$Promise$all2[0];
            photosFolder = _yield$Promise$all2[1];
            sourceAccountIdentifier = (0, _account.getAccountName)(account);
            _context.next = 13;
            return findKonnectorAccountFolderByReference({
              client: client,
              slug: konnector.slug,
              sourceAccountIdentifier: sourceAccountIdentifier
            });

          case 13:
            alreadyExistingAccountFolder = _context.sent;

            if (!alreadyExistingAccountFolder) {
              _context.next = 16;
              break;
            }

            return _context.abrupt("return", alreadyExistingAccountFolder);

          case 16:
            _context.next = 18;
            return findKonnectorMainFolderByReference({
              client: client,
              slug: konnector.slug
            });

          case 18:
            alreadyExistingKonnectorMainFolder = _context.sent;

            if (!alreadyExistingKonnectorMainFolder) {
              _context.next = 23;
              break;
            }

            _context.next = 22;
            return saveKonnectorAccountFolder({
              client: client,
              mainFolder: alreadyExistingKonnectorMainFolder,
              konnector: konnector,
              sourceAccountIdentifier: sourceAccountIdentifier
            });

          case 22:
            return _context.abrupt("return", _context.sent);

          case 23:
            // if the previous shortcuts did not work, create the folders like we did before but with proper references
            path = buildFolderPath(konnector, account, {
              administrative: adminFolder.path,
              photos: photosFolder.path
            });
            _context.next = 26;
            return statDirectoryByPath(client, path);

          case 26:
            _context.t0 = _context.sent;

            if (_context.t0) {
              _context.next = 31;
              break;
            }

            _context.next = 30;
            return createDirectoryByPath(client, path);

          case 30:
            _context.t0 = _context.sent;

          case 31:
            folder = _context.t0;
            _context.next = 34;
            return fileCollection.statById(folder.dir_id);

          case 34:
            _yield$fileCollection = _context.sent;
            konnectorFolder = _yield$fileCollection.data;
            _context.next = 38;
            return Promise.all([permissions.add(konnector, buildFolderPermission(folder)), ensureKonnectorReference({
              client: client,
              folder: folder,
              konnector: konnector
            }), ensureSourceAccountIdentifierReference({
              client: client,
              folder: folder,
              sourceAccountIdentifier: sourceAccountIdentifier
            }), ensureKonnectorReference({
              client: client,
              folder: konnectorFolder,
              konnector: konnector
            })]);

          case 38:
            return _context.abrupt("return", folder);

          case 39:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function ensureKonnectorFolder(_x, _x2) {
    return _ref2.apply(this, arguments);
  };
}();
/**
 * Creates a directory from a given path
 *
 * @param  {CozyClient}  client CozyClient
 * @param  {string}  path   Directory path
 * @returns {Promise<import('../types').IOCozyFolder>}         Directory attributes
 */


exports.ensureKonnectorFolder = ensureKonnectorFolder;

var createDirectoryByPath = /*#__PURE__*/function () {
  var _ref3 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(client, path) {
    var _yield$client$collect, data;

    return _regenerator.default.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _context2.next = 2;
            return client.collection(FILES_DOCTYPE).createDirectoryByPath(path);

          case 2:
            _yield$client$collect = _context2.sent;
            data = _yield$client$collect.data;
            return _context2.abrupt("return", data);

          case 5:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));

  return function createDirectoryByPath(_x3, _x4) {
    return _ref3.apply(this, arguments);
  };
}();
/**
 * Retrieves a directory from its path
 *
 * @param  {CozyClient}  client CozyClient
 * @param  {string}  path   Directory path
 * @returns {Promise<import('../types').IOCozyFolder|null>}        Created io.cozy.files document
 * @throws will throw an error on any error without status === 404
 */


exports.createDirectoryByPath = createDirectoryByPath;

var statDirectoryByPath = /*#__PURE__*/function () {
  var _ref4 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3(client, path) {
    var response;
    return _regenerator.default.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            _context3.prev = 0;
            _context3.next = 3;
            return client.collection(FILES_DOCTYPE).statByPath(path);

          case 3:
            response = _context3.sent;

            if (!response.data.trashed) {
              _context3.next = 6;
              break;
            }

            return _context3.abrupt("return", null);

          case 6:
            return _context3.abrupt("return", response.data);

          case 9:
            _context3.prev = 9;
            _context3.t0 = _context3["catch"](0);

            if (!(_context3.t0 && _context3.t0.status === 404)) {
              _context3.next = 13;
              break;
            }

            return _context3.abrupt("return", null);

          case 13:
            throw new Error(_context3.t0.message);

          case 14:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3, null, [[0, 9]]);
  }));

  return function statDirectoryByPath(_x5, _x6) {
    return _ref4.apply(this, arguments);
  };
}();
/**
 * Build folder path for a given konnector and a given account.
 *
 * If konnector.folders[0].defaultDir exists, it is used as default directory.
 *
 * Occurrences of following strings in base directory are replaced by:
 * * `$administrative`: Administrative folder
 * * `$photos`: Photos folder
 *
 * Occurrences of following strings in path are replaced by:
 * * `$account: Account label (id or name)`
 * * `$konnector`: Konnector name
 *
 * If no konnectors.folders[0].defaultDir is set, the default dir used is
 * *  `$administrative/$konnector/$account`
 *
 * @param  {import('../types').IOCozyKonnector} konnector Konnector document
 * @param  {import('../types').IOCozyAccount} account   Account document
 * @param  {Object<string, string>} magicFolders   Object containing a mapping from folder
 * identifiers (ex: $administrative) to their localized values (ex:
 * Administratif).
 * @returns {String}           The result path
 */


exports.statDirectoryByPath = statDirectoryByPath;

var buildFolderPath = function buildFolderPath(konnector, account) {
  var _konnector$folders, _konnector$folders$;

  var magicFolders = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var fullPath = (konnector === null || konnector === void 0 ? void 0 : (_konnector$folders = konnector.folders) === null || _konnector$folders === void 0 ? void 0 : (_konnector$folders$ = _konnector$folders[0]) === null || _konnector$folders$ === void 0 ? void 0 : _konnector$folders$.defaultDir) || '$administrative/$konnector/$account'; // Trim `/` and avoid multiple `/` characters with regexp

  var sanitizedPath = trim(fullPath.replace(/(\/+)/g, '/'), '/'); // If the konnector doesn't have any of our base dir, we set it to $administrative

  if (!hasBaseDir(sanitizedPath)) {
    sanitizedPath = '$administrative/' + sanitizedPath;
  }
  /**
   * Now that we have our sanitizedPath, we can split it in two strings
   * * `baseDir` containing the baseDir path
   * * `buildedSubDir` containing the rest of the path (ie the path without baseDir)
   */


  var baseDir = sanitizedPath.split('/', 1);
  var buildedSubDir = buildSubDir(sanitizedPath, baseDir[0]);
  var renderedBaseDir = renderBaseDir(baseDir[0], magicFolders);
  var renderedPath = renderSubDir(buildedSubDir, {
    // When adding a new allowed variable here, please keep documentation
    // of `renderSubDir` function up to date.
    konnector: konnector.name,
    account: (0, _account.getAccountName)(account).replace(sanitizeAccountIdentifierRx, '-')
  });
  return "/".concat(renderedBaseDir, "/").concat(renderedPath);
};
/**
 * Check if the provided Path start withs our allowedBaseDirPath to see
 *
 * @param {String} path - path to test
 * @returns {Boolean}
 */


exports.buildFolderPath = buildFolderPath;

var hasBaseDir = function hasBaseDir(path) {
  return allowedBaseDirVariables.some(function (baseDirVar) {
    return path.startsWith(baseDirVar);
  });
};
/**
 * Base directories are directory where konnector may copy their data.
 * They are expressed as variables which then need to be localized.
 * Default is `$administrative`.
 */


var allowedBaseDirVariables = ['$administrative', '$photos'];
/**
 * This method creates the subDir. We can't have an empty subDir, so we set
 * it to our default '$konnector/$account'
 *
 * @param {String} fullPath String containing potentially the defaultDir
 * @param {String} defaultDir String to remove from the fullPath
 * @returns {String}
 */

var buildSubDir = function buildSubDir(fullPath, defaultDir) {
  var buildedSubDir = fullPath.substring(defaultDir.length);

  if (buildedSubDir === '') {
    buildedSubDir = '$konnector/$account';
  }

  return buildedSubDir;
};
/**
 * Render base directory, based on given magicFolders object.
 * For example, it will render `$administrative` with the given value passed in
 * folders object. We expect to find in folders a localized value.
 *
 * @param  {String} baseDir base directory variable, expects `$administrative`
 * or `$photos`
 * @param  {Object<string, string>} magicFolders Object indexing base directory variable with
 * corresponding localized name.
 * @returns {String}         Localized directory
 */


var renderBaseDir = function renderBaseDir(baseDir) {
  var magicFolders = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  // Look for variable name into folders but without $ prefix
  var renderedBaseDir = magicFolders[baseDir.slice(1)] || DEFAULT_LOCALIZED_BASE_DIR; // Trim `/` and avoid multiple `/` characters with regexp

  return trim(renderedBaseDir.replace(/(\/+)/g, '/'), '/');
};
/**
 * Render the given folder path using the given `variables` object.
 * Available variable are `$konnector` (konnector name) and `$account`
 * (account label, i.e. id or name)
 *
 * @param  {String} path      Path to render : ex '/Administratif/$konnector/$account'
 * @param  {Object} variables Object mapping variable to actual values
 * @param  {import('../types').IOCozyKonnector['name']} variables.konnector - konnector name
 * @param  {String} variables.account - account name
 * @returns {String}           Rendered path
 */


var renderSubDir = function renderSubDir(path, variables) {
  // Trim `/` and avoid multiple `/` characters with regexp
  var sanitizedPath = trim(path.replace(/(\/+)/g, '/'), '/'); // Let's get only full variable name limited by '/'. We want to avoid false
  // positive like parsing `$variableInString` to `valueInString`

  var segments = sanitizedPath.split('/');
  return segments.map(function (segment) {
    return (variables === null || variables === void 0 ? void 0 : variables[segment.slice(1)]) || segment;
  }).join('/');
};

var sanitizeAccountIdentifierRx = /\//g;
/**
 * Returns a permission ready to be passed to
 * client.collection('io.cozy.permissions').add().
 *
 * @param  {import('../types').IOCozyFolder} folder    The folder which the konnector should have access
 * @returns {Object}           Permission object
 */

var buildFolderPermission = function buildFolderPermission(folder) {
  return {
    // Legacy name
    saveFolder: {
      type: FILES_DOCTYPE,
      values: [folder._id],
      verbs: ['GET', 'PATCH', 'POST']
    }
  };
};
/**
 * Replacer of the lodash/trim function
 *
 * @param {String} str - Input string
 * @param {String} c - String to trim from the input string
 * @returns {String}
 */


exports.buildFolderPermission = buildFolderPermission;

var trim = function trim(str) {
  var c = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '\\s';
  return str.replace(new RegExp("^([".concat(c, "]*)(.*?)([").concat(c, "]*)$")), '$2');
};
/**
 * Test if a given folder has a given konnector reference
 *
 * @param {import('../types').IOCozyFolder} folder - folder to test
 * @param {string} slug -  konnector slug
 * @returns {boolean}
 */


var hasKonnectorReference = function hasKonnectorReference(folder, slug) {
  var _folder$referenced_by;

  return Boolean((_folder$referenced_by = folder.referenced_by) === null || _folder$referenced_by === void 0 ? void 0 : _folder$referenced_by.find(function (ref) {
    return ref.type === 'io.cozy.konnectors' && ref.id === 'io.cozy.konnectors/' + slug;
  }));
};
/**
 * Test if a given folder has a given source account identifier reference
 *
 * @param {import('../types').IOCozyFolder} folder - folder to test
 * @param {string} [sourceAccountIdentifier] - source account identifier
 * @returns {boolean}
 */


var hasSourceAccountIdentifierReference = function hasSourceAccountIdentifierReference(folder, sourceAccountIdentifier) {
  var _folder$referenced_by2;

  return Boolean((_folder$referenced_by2 = folder.referenced_by) === null || _folder$referenced_by2 === void 0 ? void 0 : _folder$referenced_by2.find(function (ref) {
    return ref.type === 'io.cozy.accounts.sourceAccountIdentifier' && (sourceAccountIdentifier ? ref.id === sourceAccountIdentifier : true);
  }));
};
/**
 * Ensure that a given folder has the given konnector reference
 *
 * @param {object} options - options object
 * @param {CozyClient} options.client - CozyClient instance
 * @param {import('../types').IOCozyFolder} options.folder - folder to test
 * @param {import('../types').IOCozyKonnector} options.konnector - konnector to which we want the reference
 * @returns {Promise<void>}
 */


var ensureKonnectorReference = /*#__PURE__*/function () {
  var _ref6 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee4(_ref5) {
    var client, folder, konnector, fileCollection;
    return _regenerator.default.wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            client = _ref5.client, folder = _ref5.folder, konnector = _ref5.konnector;
            fileCollection = client.collection(FILES_DOCTYPE);

            if (hasKonnectorReference(folder, konnector.slug)) {
              _context4.next = 5;
              break;
            }

            _context4.next = 5;
            return fileCollection.addReferencesTo(konnector, [folder]);

          case 5:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4);
  }));

  return function ensureKonnectorReference(_x7) {
    return _ref6.apply(this, arguments);
  };
}();
/**
 * Ensure that a given folder has the given source account identifier reference
 *
 * @param {object} options - options object
 * @param {CozyClient} options.client - CozyClient instance
 * @param {import('../types').IOCozyFolder} options.folder - folder to test
 * @param {string} options.sourceAccountIdentifier - source account identifier to which we want the reference
 * @returns {Promise<void>}
 */


var ensureSourceAccountIdentifierReference = /*#__PURE__*/function () {
  var _ref8 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee5(_ref7) {
    var client, folder, sourceAccountIdentifier, fileCollection;
    return _regenerator.default.wrap(function _callee5$(_context5) {
      while (1) {
        switch (_context5.prev = _context5.next) {
          case 0:
            client = _ref7.client, folder = _ref7.folder, sourceAccountIdentifier = _ref7.sourceAccountIdentifier;
            fileCollection = client.collection(FILES_DOCTYPE);

            if (hasSourceAccountIdentifierReference(folder, sourceAccountIdentifier)) {
              _context5.next = 5;
              break;
            }

            _context5.next = 5;
            return fileCollection.addReferencesTo({
              _id: sourceAccountIdentifier,
              _type: 'io.cozy.accounts.sourceAccountIdentifier'
            }, [folder]);

          case 5:
          case "end":
            return _context5.stop();
        }
      }
    }, _callee5);
  }));

  return function ensureSourceAccountIdentifierReference(_x8) {
    return _ref8.apply(this, arguments);
  };
}();
/**
 * try to find a konnector account folder using file references
 *
 * @param {object} options - options object
 * @param {CozyClient} options.client - CozyClient instance
 * @param {string} options.slug - konnector slug
 * @param {string} options.sourceAccountIdentifier - source account identifier
 * @returns {Promise<import('../types').IOCozyFolder>}
 */


var findKonnectorAccountFolderByReference = /*#__PURE__*/function () {
  var _ref10 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee6(_ref9) {
    var client, slug, sourceAccountIdentifier, _yield$client$query, folders;

    return _regenerator.default.wrap(function _callee6$(_context6) {
      while (1) {
        switch (_context6.prev = _context6.next) {
          case 0:
            client = _ref9.client, slug = _ref9.slug, sourceAccountIdentifier = _ref9.sourceAccountIdentifier;
            _context6.next = 3;
            return client.query((0, _dsl.Q)(FILES_DOCTYPE).partialIndex({
              type: 'directory',
              trashed: false
            }).referencedBy({
              _type: 'io.cozy.konnectors',
              _id: "io.cozy.konnectors/".concat(slug)
            }));

          case 3:
            _yield$client$query = _context6.sent;
            folders = _yield$client$query.included;
            return _context6.abrupt("return", folders.find(function (folder) {
              return hasSourceAccountIdentifierReference(folder, sourceAccountIdentifier);
            }));

          case 6:
          case "end":
            return _context6.stop();
        }
      }
    }, _callee6);
  }));

  return function findKonnectorAccountFolderByReference(_x9) {
    return _ref10.apply(this, arguments);
  };
}();
/**
 * try to find a konnector main folder using file references
 *
 * @param {object} options - options object
 * @param {CozyClient} options.client - CozyClient instance
 * @param {string} options.slug - konnector slug
 * @returns {Promise<import('../types').IOCozyFolder>}
 */


exports.findKonnectorAccountFolderByReference = findKonnectorAccountFolderByReference;

var findKonnectorMainFolderByReference = /*#__PURE__*/function () {
  var _ref12 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee7(_ref11) {
    var client, slug, _yield$client$query2, files;

    return _regenerator.default.wrap(function _callee7$(_context7) {
      while (1) {
        switch (_context7.prev = _context7.next) {
          case 0:
            client = _ref11.client, slug = _ref11.slug;
            _context7.next = 3;
            return client.query((0, _dsl.Q)(FILES_DOCTYPE).partialIndex({
              type: 'directory',
              trashed: false
            }).referencedBy({
              _type: 'io.cozy.konnectors',
              _id: "io.cozy.konnectors/".concat(slug)
            }));

          case 3:
            _yield$client$query2 = _context7.sent;
            files = _yield$client$query2.included;
            return _context7.abrupt("return", files.find(function (file) {
              return !hasSourceAccountIdentifierReference(file);
            }));

          case 6:
          case "end":
            return _context7.stop();
        }
      }
    }, _callee7);
  }));

  return function findKonnectorMainFolderByReference(_x10) {
    return _ref12.apply(this, arguments);
  };
}();
/**
 * Will create or update an account folder with proper references
 *
 * @param {object} options - options object
 * @param {CozyClient} options.client - CozyClient instance
 * @param {import('../types').IOCozyFolder} options.mainFolder - Main konnector folder where the account folder may be created
 * @param {import('../types').IOCozyKonnector} options.konnector - Konnector associated to the main folder
 * @param {string} options.sourceAccountIdentifier - source account identifier
 * @returns {Promise<import('../types').IOCozyFolder>}
 */


function saveKonnectorAccountFolder(_x11) {
  return _saveKonnectorAccountFolder.apply(this, arguments);
}

function _saveKonnectorAccountFolder() {
  _saveKonnectorAccountFolder = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee8(_ref13) {
    var client, mainFolder, konnector, sourceAccountIdentifier, path, folder;
    return _regenerator.default.wrap(function _callee8$(_context8) {
      while (1) {
        switch (_context8.prev = _context8.next) {
          case 0:
            client = _ref13.client, mainFolder = _ref13.mainFolder, konnector = _ref13.konnector, sourceAccountIdentifier = _ref13.sourceAccountIdentifier;
            path = mainFolder.path + '/' + sourceAccountIdentifier;
            _context8.next = 4;
            return statDirectoryByPath(client, path);

          case 4:
            _context8.t0 = _context8.sent;

            if (_context8.t0) {
              _context8.next = 9;
              break;
            }

            _context8.next = 8;
            return createDirectoryByPath(client, path);

          case 8:
            _context8.t0 = _context8.sent;

          case 9:
            folder = _context8.t0;
            _context8.next = 12;
            return ensureKonnectorReference({
              client: client,
              folder: folder,
              konnector: konnector
            });

          case 12:
            _context8.next = 14;
            return ensureSourceAccountIdentifierReference({
              client: client,
              folder: folder,
              sourceAccountIdentifier: sourceAccountIdentifier
            });

          case 14:
            return _context8.abrupt("return", folder);

          case 15:
          case "end":
            return _context8.stop();
        }
      }
    }, _callee8);
  }));
  return _saveKonnectorAccountFolder.apply(this, arguments);
}

/***/ }),
/* 686 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var define = __webpack_require__(78);
var callBind = __webpack_require__(60);
var callBound = __webpack_require__(24);
var RequireObjectCoercible = __webpack_require__(95);

var implementation = __webpack_require__(314);
var getPolyfill = __webpack_require__(318);
var polyfill = getPolyfill();
var shim = __webpack_require__(713);

var $slice = callBound('Array.prototype.slice');

var bound = callBind.apply(polyfill);
// eslint-disable-next-line no-unused-vars
var boundCoercible = function forEach(array, callbackfn) {
	RequireObjectCoercible(array);
	return bound(array, $slice(arguments, 1));
};

define(boundCoercible, {
	getPolyfill: getPolyfill,
	implementation: implementation,
	shim: shim
});

module.exports = boundCoercible;


/***/ }),
/* 687 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var keysShim;
if (!Object.keys) {
	// modified from https://github.com/es-shims/es5-shim
	var has = Object.prototype.hasOwnProperty;
	var toStr = Object.prototype.toString;
	var isArgs = __webpack_require__(313); // eslint-disable-line global-require
	var isEnumerable = Object.prototype.propertyIsEnumerable;
	var hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');
	var hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');
	var dontEnums = [
		'toString',
		'toLocaleString',
		'valueOf',
		'hasOwnProperty',
		'isPrototypeOf',
		'propertyIsEnumerable',
		'constructor'
	];
	var equalsConstructorPrototype = function (o) {
		var ctor = o.constructor;
		return ctor && ctor.prototype === o;
	};
	var excludedKeys = {
		$applicationCache: true,
		$console: true,
		$external: true,
		$frame: true,
		$frameElement: true,
		$frames: true,
		$innerHeight: true,
		$innerWidth: true,
		$onmozfullscreenchange: true,
		$onmozfullscreenerror: true,
		$outerHeight: true,
		$outerWidth: true,
		$pageXOffset: true,
		$pageYOffset: true,
		$parent: true,
		$scrollLeft: true,
		$scrollTop: true,
		$scrollX: true,
		$scrollY: true,
		$self: true,
		$webkitIndexedDB: true,
		$webkitStorageInfo: true,
		$window: true
	};
	var hasAutomationEqualityBug = (function () {
		/* global window */
		if (typeof window === 'undefined') { return false; }
		for (var k in window) {
			try {
				if (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {
					try {
						equalsConstructorPrototype(window[k]);
					} catch (e) {
						return true;
					}
				}
			} catch (e) {
				return true;
			}
		}
		return false;
	}());
	var equalsConstructorPrototypeIfNotBuggy = function (o) {
		/* global window */
		if (typeof window === 'undefined' || !hasAutomationEqualityBug) {
			return equalsConstructorPrototype(o);
		}
		try {
			return equalsConstructorPrototype(o);
		} catch (e) {
			return false;
		}
	};

	keysShim = function keys(object) {
		var isObject = object !== null && typeof object === 'object';
		var isFunction = toStr.call(object) === '[object Function]';
		var isArguments = isArgs(object);
		var isString = isObject && toStr.call(object) === '[object String]';
		var theKeys = [];

		if (!isObject && !isFunction && !isArguments) {
			throw new TypeError('Object.keys called on a non-object');
		}

		var skipProto = hasProtoEnumBug && isFunction;
		if (isString && object.length > 0 && !has.call(object, 0)) {
			for (var i = 0; i < object.length; ++i) {
				theKeys.push(String(i));
			}
		}

		if (isArguments && object.length > 0) {
			for (var j = 0; j < object.length; ++j) {
				theKeys.push(String(j));
			}
		} else {
			for (var name in object) {
				if (!(skipProto && name === 'prototype') && has.call(object, name)) {
					theKeys.push(String(name));
				}
			}
		}

		if (hasDontEnumBug) {
			var skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);

			for (var k = 0; k < dontEnums.length; ++k) {
				if (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {
					theKeys.push(dontEnums[k]);
				}
			}
		}
		return theKeys;
	};
}
module.exports = keysShim;


/***/ }),
/* 688 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var GetIntrinsic = __webpack_require__(23);

var $TypeError = GetIntrinsic('%TypeError%');

// http://262.ecma-international.org/5.1/#sec-9.10

module.exports = function CheckObjectCoercible(value, optMessage) {
	if (value == null) {
		throw new $TypeError(optMessage || ('Cannot call method on ' + value));
	}
	return value;
};


/***/ }),
/* 689 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var GetIntrinsic = __webpack_require__(23);
var callBound = __webpack_require__(24);

var $TypeError = GetIntrinsic('%TypeError%');

var IsArray = __webpack_require__(690);

var $apply = GetIntrinsic('%Reflect.apply%', true) || callBound('%Function.prototype.apply%');

// https://ecma-international.org/ecma-262/6.0/#sec-call

module.exports = function Call(F, V) {
	var argumentsList = arguments.length > 2 ? arguments[2] : [];
	if (!IsArray(argumentsList)) {
		throw new $TypeError('Assertion failed: optional `argumentsList`, if provided, must be a List');
	}
	return $apply(F, V, argumentsList);
};


/***/ }),
/* 690 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// https://ecma-international.org/ecma-262/6.0/#sec-isarray
module.exports = __webpack_require__(691);


/***/ }),
/* 691 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var GetIntrinsic = __webpack_require__(23);

var $Array = GetIntrinsic('%Array%');

// eslint-disable-next-line global-require
var toStr = !$Array.isArray && __webpack_require__(24)('Object.prototype.toString');

module.exports = $Array.isArray || function IsArray(argument) {
	return toStr(argument) === '[object Array]';
};


/***/ }),
/* 692 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// https://262.ecma-international.org/5.1/#sec-8

module.exports = function Type(x) {
	if (x === null) {
		return 'Null';
	}
	if (typeof x === 'undefined') {
		return 'Undefined';
	}
	if (typeof x === 'function' || typeof x === 'object') {
		return 'Object';
	}
	if (typeof x === 'number') {
		return 'Number';
	}
	if (typeof x === 'boolean') {
		return 'Boolean';
	}
	if (typeof x === 'string') {
		return 'String';
	}
};


/***/ }),
/* 693 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var GetIntrinsic = __webpack_require__(23);

var $TypeError = GetIntrinsic('%TypeError%');

var IsPropertyKey = __webpack_require__(316);
var Type = __webpack_require__(132);

// https://ecma-international.org/ecma-262/6.0/#sec-hasproperty

module.exports = function HasProperty(O, P) {
	if (Type(O) !== 'Object') {
		throw new $TypeError('Assertion failed: `O` must be an Object');
	}
	if (!IsPropertyKey(P)) {
		throw new $TypeError('Assertion failed: `P` must be a Property Key');
	}
	return P in O;
};


/***/ }),
/* 694 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// http://262.ecma-international.org/5.1/#sec-9.11

module.exports = __webpack_require__(197);


/***/ }),
/* 695 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var GetIntrinsic = __webpack_require__(23);

var $TypeError = GetIntrinsic('%TypeError%');

var Get = __webpack_require__(315);
var ToLength = __webpack_require__(696);
var Type = __webpack_require__(132);

// https://262.ecma-international.org/11.0/#sec-lengthofarraylike

module.exports = function LengthOfArrayLike(obj) {
	if (Type(obj) !== 'Object') {
		throw new $TypeError('Assertion failed: `obj` must be an Object');
	}
	return ToLength(Get(obj, 'length'));
};

// TODO: use this all over


/***/ }),
/* 696 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var MAX_SAFE_INTEGER = __webpack_require__(697);

var ToIntegerOrInfinity = __webpack_require__(698);

module.exports = function ToLength(argument) {
	var len = ToIntegerOrInfinity(argument);
	if (len <= 0) { return 0; } // includes converting -0 to +0
	if (len > MAX_SAFE_INTEGER) { return MAX_SAFE_INTEGER; }
	return len;
};


/***/ }),
/* 697 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var GetIntrinsic = __webpack_require__(23);

var $Math = GetIntrinsic('%Math%');
var $Number = GetIntrinsic('%Number%');

module.exports = $Number.MAX_SAFE_INTEGER || $Math.pow(2, 53) - 1;


/***/ }),
/* 698 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var abs = __webpack_require__(699);
var floor = __webpack_require__(700);
var ToNumber = __webpack_require__(701);

var $isNaN = __webpack_require__(709);
var $isFinite = __webpack_require__(710);
var $sign = __webpack_require__(711);

// https://262.ecma-international.org/12.0/#sec-tointegerorinfinity

module.exports = function ToIntegerOrInfinity(value) {
	var number = ToNumber(value);
	if ($isNaN(number) || number === 0) { return 0; }
	if (!$isFinite(number)) { return number; }
	var integer = floor(abs(number));
	if (integer === 0) { return 0; }
	return $sign(number) * integer;
};


/***/ }),
/* 699 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var GetIntrinsic = __webpack_require__(23);

var $abs = GetIntrinsic('%Math.abs%');

// http://262.ecma-international.org/5.1/#sec-5.2

module.exports = function abs(x) {
	return $abs(x);
};


/***/ }),
/* 700 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// var modulo = require('./modulo');
var $floor = Math.floor;

// http://262.ecma-international.org/5.1/#sec-5.2

module.exports = function floor(x) {
	// return x - modulo(x, 1);
	return $floor(x);
};


/***/ }),
/* 701 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var GetIntrinsic = __webpack_require__(23);

var $TypeError = GetIntrinsic('%TypeError%');
var $Number = GetIntrinsic('%Number%');
var isPrimitive = __webpack_require__(702);

var ToPrimitive = __webpack_require__(703);
var StringToNumber = __webpack_require__(707);

// https://ecma-international.org/ecma-262/13.0/#sec-tonumber

module.exports = function ToNumber(argument) {
	var value = isPrimitive(argument) ? argument : ToPrimitive(argument, $Number);
	if (typeof value === 'symbol') {
		throw new $TypeError('Cannot convert a Symbol value to a number');
	}
	if (typeof value === 'bigint') {
		throw new $TypeError('Conversion from \'BigInt\' to \'number\' is not allowed.');
	}
	if (typeof value === 'string') {
		return StringToNumber(value);
	}
	return $Number(value);
};


/***/ }),
/* 702 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function isPrimitive(value) {
	return value === null || (typeof value !== 'function' && typeof value !== 'object');
};


/***/ }),
/* 703 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var toPrimitive = __webpack_require__(329);

// https://ecma-international.org/ecma-262/6.0/#sec-toprimitive

module.exports = function ToPrimitive(input) {
	if (arguments.length > 1) {
		return toPrimitive(input, arguments[1]);
	}
	return toPrimitive(input);
};


/***/ }),
/* 704 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function isPrimitive(value) {
	return value === null || (typeof value !== 'function' && typeof value !== 'object');
};


/***/ }),
/* 705 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var getDay = Date.prototype.getDay;
var tryDateObject = function tryDateGetDayCall(value) {
	try {
		getDay.call(value);
		return true;
	} catch (e) {
		return false;
	}
};

var toStr = Object.prototype.toString;
var dateClass = '[object Date]';
var hasToStringTag = __webpack_require__(196)();

module.exports = function isDateObject(value) {
	if (typeof value !== 'object' || value === null) {
		return false;
	}
	return hasToStringTag ? tryDateObject(value) : toStr.call(value) === dateClass;
};


/***/ }),
/* 706 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var toStr = Object.prototype.toString;
var hasSymbols = __webpack_require__(136)();

if (hasSymbols) {
	var symToStr = Symbol.prototype.toString;
	var symStringRegex = /^Symbol\(.*\)$/;
	var isSymbolObject = function isRealSymbolObject(value) {
		if (typeof value.valueOf() !== 'symbol') {
			return false;
		}
		return symStringRegex.test(symToStr.call(value));
	};

	module.exports = function isSymbol(value) {
		if (typeof value === 'symbol') {
			return true;
		}
		if (toStr.call(value) !== '[object Symbol]') {
			return false;
		}
		try {
			return isSymbolObject(value);
		} catch (e) {
			return false;
		}
	};
} else {

	module.exports = function isSymbol(value) {
		// this environment does not support Symbols.
		return  false && false;
	};
}


/***/ }),
/* 707 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var GetIntrinsic = __webpack_require__(23);

var $Number = GetIntrinsic('%Number%');
var $RegExp = GetIntrinsic('%RegExp%');
var $TypeError = GetIntrinsic('%TypeError%');
var $parseInteger = GetIntrinsic('%parseInt%');

var callBound = __webpack_require__(24);
var regexTester = __webpack_require__(330);

var $strSlice = callBound('String.prototype.slice');
var isBinary = regexTester(/^0b[01]+$/i);
var isOctal = regexTester(/^0o[0-7]+$/i);
var isInvalidHexLiteral = regexTester(/^[-+]0x[0-9a-f]+$/i);
var nonWS = ['\u0085', '\u200b', '\ufffe'].join('');
var nonWSregex = new $RegExp('[' + nonWS + ']', 'g');
var hasNonWS = regexTester(nonWSregex);

// whitespace from: https://es5.github.io/#x15.5.4.20
// implementation from https://github.com/es-shims/es5-shim/blob/v3.4.0/es5-shim.js#L1304-L1324
var ws = [
	'\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003',
	'\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028',
	'\u2029\uFEFF'
].join('');
var trimRegex = new RegExp('(^[' + ws + ']+)|([' + ws + ']+$)', 'g');
var $replace = callBound('String.prototype.replace');
var $trim = function (value) {
	return $replace(value, trimRegex, '');
};

var Type = __webpack_require__(132);

// https://ecma-international.org/ecma-262/13.0/#sec-stringtonumber

module.exports = function StringToNumber(argument) {
	if (Type(argument) !== 'String') {
		throw new $TypeError('Conversion from \'BigInt\' to \'number\' is not allowed.');
	}
	if (isBinary(argument)) {
		return $Number($parseInteger($strSlice(argument, 2), 2));
	}
	if (isOctal(argument)) {
		return $Number($parseInteger($strSlice(argument, 2), 8));
	}
	if (hasNonWS(argument) || isInvalidHexLiteral(argument)) {
		return NaN;
	}
	var trimmed = $trim(argument);
	if (trimmed !== argument) {
		return StringToNumber(trimmed);
	}
	return $Number(argument);
};


/***/ }),
/* 708 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var callBound = __webpack_require__(24);
var hasToStringTag = __webpack_require__(196)();
var has;
var $exec;
var isRegexMarker;
var badStringifier;

if (hasToStringTag) {
	has = callBound('Object.prototype.hasOwnProperty');
	$exec = callBound('RegExp.prototype.exec');
	isRegexMarker = {};

	var throwRegexMarker = function () {
		throw isRegexMarker;
	};
	badStringifier = {
		toString: throwRegexMarker,
		valueOf: throwRegexMarker
	};

	if (typeof Symbol.toPrimitive === 'symbol') {
		badStringifier[Symbol.toPrimitive] = throwRegexMarker;
	}
}

var $toString = callBound('Object.prototype.toString');
var gOPD = Object.getOwnPropertyDescriptor;
var regexClass = '[object RegExp]';

module.exports = hasToStringTag
	// eslint-disable-next-line consistent-return
	? function isRegex(value) {
		if (!value || typeof value !== 'object') {
			return false;
		}

		var descriptor = gOPD(value, 'lastIndex');
		var hasLastIndexDataProperty = descriptor && has(descriptor, 'value');
		if (!hasLastIndexDataProperty) {
			return false;
		}

		try {
			$exec(value, badStringifier);
		} catch (e) {
			return e === isRegexMarker;
		}
	}
	: function isRegex(value) {
		// In older browsers, typeof regex incorrectly returns 'function'
		if (!value || (typeof value !== 'object' && typeof value !== 'function')) {
			return false;
		}

		return $toString(value) === regexClass;
	};


/***/ }),
/* 709 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = Number.isNaN || function isNaN(a) {
	return a !== a;
};


/***/ }),
/* 710 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $isNaN = Number.isNaN || function (a) { return a !== a; };

module.exports = Number.isFinite || function (x) { return typeof x === 'number' && !$isNaN(x) && x !== Infinity && x !== -Infinity; };


/***/ }),
/* 711 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function sign(number) {
	return number >= 0 ? 1 : -1;
};


/***/ }),
/* 712 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var GetIntrinsic = __webpack_require__(23);

var $Object = GetIntrinsic('%Object%');

var RequireObjectCoercible = __webpack_require__(95);

// https://ecma-international.org/ecma-262/6.0/#sec-toobject

module.exports = function ToObject(value) {
	RequireObjectCoercible(value);
	return $Object(value);
};


/***/ }),
/* 713 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var define = __webpack_require__(78);
var getPolyfill = __webpack_require__(318);

module.exports = function shimForEach() {
	var polyfill = getPolyfill();
	define(
		Array.prototype,
		{ forEach: polyfill },
		{ forEach: function () { return Array.prototype.forEach !== polyfill; } }
	);
	return polyfill;
};


/***/ }),
/* 714 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var define = __webpack_require__(78);
var callBind = __webpack_require__(60);

var implementation = __webpack_require__(319);
var getPolyfill = __webpack_require__(320);
var shim = __webpack_require__(715);

var polyfill = callBind(getPolyfill(), Object);

define(polyfill, {
	getPolyfill: getPolyfill,
	implementation: implementation,
	shim: shim
});

module.exports = polyfill;


/***/ }),
/* 715 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var getPolyfill = __webpack_require__(320);
var define = __webpack_require__(78);

module.exports = function shimEntries() {
	var polyfill = getPolyfill();
	define(Object, { entries: polyfill }, {
		entries: function testEntries() {
			return Object.entries !== polyfill;
		}
	});
	return polyfill;
};


/***/ }),
/* 716 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var callBind = __webpack_require__(60);
var define = __webpack_require__(78);
var RequireObjectCoercible = __webpack_require__(95);

var implementation = __webpack_require__(321);
var getPolyfill = __webpack_require__(322);
var shim = __webpack_require__(717);

var bound = callBind(getPolyfill());
var boundMethod = function trim(receiver) {
	RequireObjectCoercible(receiver);
	return bound(receiver);
};

define(boundMethod, {
	getPolyfill: getPolyfill,
	implementation: implementation,
	shim: shim
});

module.exports = boundMethod;


/***/ }),
/* 717 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var define = __webpack_require__(78);
var getPolyfill = __webpack_require__(322);

module.exports = function shimStringTrim() {
	var polyfill = getPolyfill();
	define(String.prototype, { trim: polyfill }, {
		trim: function testTrim() {
			return String.prototype.trim !== polyfill;
		}
	});
	return polyfill;
};


/***/ }),
/* 718 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getEmojiByCountry = void 0;
var emojiCountry = {
  fr: '🇫🇷'
};
/**
 * @param {string} country - fr, en, etc
 * @param {Function} t - Translation function
 * @returns {string} - Emoji of country
 */

var getEmojiByCountry = function getEmojiByCountry(country, t) {
  if (country === 'stranger') return t('country.stranger');
  return emojiCountry[country];
};

exports.getEmojiByCountry = getEmojiByCountry;

/***/ }),
/* 719 */
/***/ (function(module) {

module.exports = JSON.parse("{\"country\":{\"stranger\":\"Stranger\"},\"Scan\":{\"scan_a_doc\":\"Scan a doc\",\"save_doc\":\"Save the doc\",\"filename\":\"Filename\",\"save\":\"Save\",\"cancel\":\"Cancel\",\"qualify\":\"Describe\",\"apply\":\"Apply\",\"error\":{\"offline\":\"You are currently offline and you can't use this functionality. Please, try again later.\",\"uploading\":\"You are already uploading a file. Please wait until the end of this upload and try again.\",\"generic\":\"Something went wrong. Please try again.\"},\"successful\":{\"qualified_ok\":\"You just have successfully described your file! \"},\"items\":{\"accommodation_proof\":\"Proof of accommodation |||| Proof of accommodations\",\"appliance_invoice\":\"Appliance invoice |||| Appliance invoices\",\"bank_details\":\"Bank detail |||| Bank details\",\"bank_statement\":\"Bank statement |||| Bank statements\",\"birth_certificate\":\"Birth certificate |||| Birth certificates\",\"building_permit\":\"Building permit |||| Building permits\",\"caf\":\"Social benefit rate |||| Social benefit rates\",\"car_insurance\":\"Car insurance certificate |||| Car insurance certificates\",\"citizen_registration_certificate\":\"Certificate of citizen registration |||| Certificates of citizen registration\",\"condition_report\":\"Condition report |||| Condition reports\",\"diploma\":\"Diploma |||| Diplomas\",\"divorce\":\"Divorce |||| Divorces\",\"driver_license\":\"Driving license |||| Driving licenses\",\"electoral_card\":\"Electoral card |||| Electoral cards\",\"employment_center_certificate\":\"Employment center certificate |||| Employment center certificates\",\"energy_contract\":\"Energy provider contract |||| Energy provider contracts\",\"energy_invoice\":\"Energy invoice |||| Energy invoices\",\"expense_claim\":\"Expense claim |||| Expense claims\",\"family_record_book\":\"Family record book |||| Family record books\",\"family\":\"Family\",\"fidelity_card\":\"Fidelity card |||| Fidelity cards\",\"fine\":\"Fine |||| Fines\",\"gradebook\":\"Gradebook |||| Gradebooks\",\"grocery_invoice\":\"Grocery invoice |||| Grocery invoices\",\"health_book\":\"Health book |||| Health books\",\"health_certificate\":\"Health/Vaccination certificate |||| Health/Vaccination certificates\",\"health_insurance_card\":\"Insurance card |||| Insurance cards\",\"health_invoice\":\"Health invoice |||| Health invoices\",\"health\":\"Health\",\"home\":\"Home\",\"house_insurance\":\"Home insurance |||| Home insurances\",\"house_sale_agreeement\":\"House sale agreement |||| House sale agreements\",\"identity_photo\":\"Identity photo |||| Identity photos\",\"identity\":\"Identity\",\"invoice\":\"Invoice |||| Invoices\",\"isp_invoice\":\"ISP invoice |||| ISP invoices\",\"large_family_card\":\" Large Family Card |||| Large Family Cards\",\"lease\":\"Lease |||| Leases\",\"library_card\":\"library card |||| library cards\",\"loan_agreement\":\"Loan agreement |||| Loan agreements\",\"mechanic_invoice\":\"Repair bill |||| Repair bills\",\"motivation_letter\":\"Motivation letter |||| Motivation letters\",\"national_health_insurance_card\":\"National health insurance card |||| National health insurance cards\",\"national_health_insurance_right_certificate\":\"National health insurance right certificate |||| National health insurance right certificates\",\"national_id_card\":\"ID card |||| ID cards\",\"note_identity_document\":\"Note Identity |||| Notes Identity\",\"note_family_document\":\"Note Family |||| Notes Family\",\"note_work_document\":\"Note Work & Study |||| Notes Work & Study\",\"note_health_document\":\"Note Health |||| Notes Health\",\"note_house_document\":\"Note Home |||| Notes Home\",\"note_transport_document\":\"Note Transport |||| Notes Transport\",\"note_activity_document\":\"Note Activities |||| Notes Activities\",\"note_finance\":\"Note Finance |||| Notes Finance\",\"note_invoice\":\"Note Invoice |||| Notes Invoice\",\"other_activity_document\":\"Other sports document |||| Other sports documents\",\"other_bank_document\":\"Other financial document |||| Other financial documents\",\"other_family_document\":\"Other family document |||| Other family documents\",\"other_health_document\":\"Other health document |||| Other health documents\",\"other_house_document\":\"Other house document |||| Other house documents\",\"other_identity_document\":\"Other document of identity |||| Other documents of identity\",\"other_invoice\":\"Other invoice |||| Other invoices\",\"other_revenue\":\"Other revenue |||| Other revenues\",\"other_tax_document\":\"Other tax document |||| Other tax documents\",\"other_transport_document\":\"Other transport document |||| Other transport documents\",\"other_work_document\":\"Other work document |||| Other work documents\",\"other_administrative_document\":\"Other administrative document |||| Other administrative documents\",\"others\":\"Others\",\"pacs\":\"Civil union |||| Civil unions\",\"passport\":\"Passeport |||| Passeports\",\"pay_sheet\":\"Pay sheet |||| Pay sheets\",\"payment_proof_family_allowance\":\"family allowance payment proof |||| family allowance payment proofs\",\"pension\":\"Pension |||| Pensions\",\"person_insurance\":\"Individual insurance certificate |||| Individual insurance certificates\",\"personal_sporting_licence\":\"Sporting licence |||| Sporting licences\",\"phone_invoice\":\"Phone invoice |||| Phone invoices\",\"pregnancy_medical_certificate\":\"Certificate of pregnancy |||| Certificates of pregnancy\",\"prescription\":\"Prescription |||| Prescriptions\",\"real_estate_insurance\":\"Real estate insurance certificate |||| Real estate insurance certificates\",\"real_estate_tax\":\"Real estate tax |||| Real estate taxes\",\"receipt\":\"Receipt |||| Receipts\",\"rent_receipt\":\"Rent receipt |||| Rent receipts\",\"residence_permit\":\"Residence permit |||| Residence permits\",\"restaurant_invoice\":\"Restaurant invoice |||| Restaurant invoices\",\"resume\":\"Resume |||| Resumes\",\"school_attendance_certificate\":\"Certificate of school attendance |||| Certificates of school attendance\",\"school_insurance_certificate\":\"Certificate of school insurance |||| Certificates of school insurance\",\"single_parent_benefit\":\"Single parent benefit |||| Single parent benefits\",\"student_card\":\"Student card |||| Student cards\",\"tax_notice\":\"Tax notice |||| Tax notices\",\"tax_return\":\"Tax return |||| Tax returns\",\"tax_timetable\":\"Payment Plans Installment Agreement |||| Payment Plans Installment Agreements\",\"technical_diagnostic_record\":\"Technical diagnostic record |||| Technical diagnostic records\",\"telecom_invoice\":\"Telecom invoice |||| Telecom invoices\",\"transport_card\":\"Transport card |||| Transport cards\",\"transport_invoice\":\"Transport invoice |||| Transport invoices\",\"transport\":\"Transport\",\"unemployment_benefit\":\"Unemployment benefit |||| Unemployment benefits\",\"unfit_for_habitation_declaration\":\"Declaration of unfit for habitation |||| Declarations of unfit for habitation\",\"vehicle_registration\":\"Vehicle registration |||| Vehicle registrations\",\"water_invoice\":\"Water invoice |||| Water invoices\",\"web_service_invoice\":\"Web service invoice |||| Web service invoices\",\"wedding\":\"Wedding contract |||| Wedding contracts\",\"work_contract\":\"Work contract |||| Work contracts\",\"work_disability_recognition\":\"Recognition of disability |||| Recognitions of disability\",\"work_invoice\":\"Work invoice |||| Work invoices\",\"work_quote\":\"Work quote |||| Work quotes\",\"work_study\":\"Work & Study\"},\"attributes\":{\"contractType\":{\"cdi\":\"CDI\",\"cdd\":\"CDD\",\"alternate\":\"Alternate\",\"internship\":\"Internship\",\"other\":\"Other\"},\"noticePeriod\":{\"oneWeek\":\"1 week before\",\"oneMonth\":\"1 month before\",\"threeMonth\":\"3 months before\",\"oneYear\":\"1 year before\",\"custom\":\"Custom\",\"noAlert\":\"Do not be alerted\"}},\"themes\":{\"activity\":\"Activities\",\"family\":\"Family\",\"finance\":\"Finance\",\"health\":\"Health\",\"home\":\"Home\",\"identity\":\"Identity\",\"invoice\":\"Invoice\",\"others\":\"Others\",\"transport\":\"Transport\",\"undefined\":\"Undefined\",\"work_study\":\"Work & Study\"},\"qualification\":{\"date\":{\"title\":{\"datetime\":\"Added on\",\"AObtentionDate\":\"License A, delivered on\",\"BObtentionDate\":\"License B, delivered on\",\"CObtentionDate\":\"License C, delivered on\",\"DObtentionDate\":\"License D, delivered on\",\"issueDate\":\"Delivered on\",\"expirationDate\":\"Expiration date\",\"referencedDate\":\"Referenced date\",\"shootingDate\":\"Shooting date\",\"obtentionDate\":\"Date obtained\",\"date\":\"Document date\"}},\"information\":{\"title\":{\"fine\":{\"number\":\"Amount of the fine\"},\"fidelity_card\":{\"number\":\"Card number\"},\"caf\":{\"number\":\"CAF file number\"},\"payment_proof_family_allowance\":{\"number\":\"CAF file number\"},\"vehicle\":{\"licenseNumber\":\"Vehicle registration number\",\"confidentialNumber\":\"Confidential code\"},\"vehicle_registration\":{\"number\":\"Vehicle registration number (VIN)\"},\"national_id_card\":{\"number\":\"National ID card number\"},\"bank_details\":{\"number\":\"IBAN number\"},\"passport\":{\"number\":\"Passport number\"},\"driver_license\":{\"number\":\"License number\"},\"residence_permit\":{\"number\":\"License number\"},\"national_health_insurance_card\":{\"number\":\"National health insurance card number\"},\"pay_sheet\":{\"number\":\"Gross remuneration\"},\"tax_return\":{\"number\":\"Reference tax number\"},\"tax_notice\":{\"number\":\"Reference tax number\"},\"real_estate_tax\":{\"number\":\"Reference tax number\"},\"tax_timetable\":{\"number\":\"Reference tax number\"},\"country\":\"Beneficiary nationality\",\"refTaxIncome\":\"Reference tax income\",\"contractType\":\"Contract type\",\"noticePeriod\":\"Expiration alert\",\"netSocialAmount\":\"Net social amount\",\"employerName\":\"Name of employer\",\"bicNumber\":\"BIC number\"},\"day\":\"day |||| days\"},\"contact\":\"Owner\",\"page\":\"Side of the document\",\"front\":\"Front side\",\"back\":\"Back side\",\"qualification\":\"Qualification\",\"noInfo\":\"No information\"}},\"MagicFolders\":{\"administrative\":\"Administrative\",\"photos\":\"Photos\"}}");

/***/ }),
/* 720 */
/***/ (function(module) {

module.exports = JSON.parse("{\"country\":{\"stranger\":\"Étranger\"},\"Scan\":{\"scan_a_doc\":\"Numériser un doc\",\"save_doc\":\"Enregistrer le document\",\"filename\":\"Nom du fichier\",\"save\":\"Sauvegarder\",\"cancel\":\"Annuler\",\"qualify\":\"Qualifier\",\"apply\":\"Appliquer\",\"error\":{\"offline\":\"Vous êtes actuellement déconnecté, vous ne pouvez donc pas utiliser cette fonctionnalité. Connectez-vous à internet et recommencez. \",\"uploading\":\"Vous avez déjà un fichier en cours de téléchargement. Attendez la fin et recommencez.\",\"generic\":\"Un problème est survenu. Veuillez réessayer. \"},\"successful\":{\"qualified_ok\":\"Vous venez de qualifier votre fichier avec succès !\"},\"items\":{\"accommodation_proof\":\"Attestation d'hébergement |||| Attestations d'hébergement\",\"appliance_invoice\":\"Facture d'électroménager |||| Factures d'électroménager\",\"bank_details\":\"RIB\",\"bank_statement\":\"Relevé de compte |||| Relevés de compte\",\"birth_certificate\":\"Acte de naissance |||| Actes de naissance\",\"building_permit\":\"Permis de construire\",\"caf\":\"Attestation de quotient familial CAF |||| Attestations de quotient familial CAF\",\"car_insurance\":\"Attestation d'assurance auto |||| Attestations d'assurance auto\",\"citizen_registration_certificate\":\"Attestation de recensement citoyen |||| Attestations de recensement citoyen\",\"condition_report\":\"État des lieux - Entrée/Sortie |||| États des lieux - Entrée/Sortie\",\"diploma\":\"Diplôme |||| Diplômes\",\"divorce\":\"Attestation de divorce |||| Attestations de divorce\",\"driver_license\":\"Permis de conduire\",\"electoral_card\":\"Carte électorale |||| Cartes électorales\",\"employment_center_certificate\":\"Attestation de Pôle emploi |||| Attestations de Pôle emploi\",\"energy_contract\":\"Contrat de fournisseur d'énergies |||| Contrats de fournisseur d'énergies\",\"energy_invoice\":\"Facture d'énergie |||| Factures d'énergie\",\"expense_claim\":\"Note de frais |||| Notes de frais\",\"family_record_book\":\"Livret de famille |||| Livrets de famille\",\"family\":\"Famille\",\"fidelity_card\":\"Carte de fidélité |||| Cartes de fidélité\",\"fine\":\"Amende |||| Amendes\",\"gradebook\":\"Bulletin de notes |||| Bulletins de notes\",\"grocery_invoice\":\"Facture de courses |||| Factures de courses\",\"health_book\":\"Carnet de santé |||| Carnets de santé\",\"health_certificate\":\"Certificat de santé/vaccination |||| Certificats de santé/vaccination\",\"health_insurance_card\":\"Carte de mutuelle |||| Cartes de mutuelle\",\"health_invoice\":\"Facture médicale |||| Factures médicales\",\"health\":\"Santé\",\"home\":\"Logement\",\"house_insurance\":\"Assurance logement |||| Assurances logement\",\"house_sale_agreeement\":\"Compromis de vente\",\"identity_photo\":\"Photo d'identité |||| Photos d'identité\",\"identity\":\"Identité\",\"invoice\":\"Facture |||| Factures\",\"isp_invoice\":\"Facture d'internet |||| Factures d'internet\",\"large_family_card\":\"Carte famille nombreuse |||| Cartes famille nombreuse\",\"lease\":\"Bail |||| Baux\",\"library_card\":\"Carte de bibliothèque |||| Cartes de bibliothèque\",\"loan_agreement\":\"Contrat de prêt |||| Contrats de prêt\",\"mechanic_invoice\":\"Facture de réparation |||| Factures de réparation\",\"motivation_letter\":\"Lettre de motivation |||| Lettres de motivation\",\"national_health_insurance_card\":\"Carte vitale |||| Cartes vitales\",\"national_health_insurance_right_certificate\":\"Attestation de droits de l'Assurance Maladie |||| Attestations de droits de l'Assurance Maladie\",\"national_id_card\":\"Carte d'identité |||| Cartes d'identité\",\"note_identity_document\":\"Note Identité |||| Notes Identité\",\"note_family_document\":\"Note Famille |||| Notes Famille\",\"note_work_document\":\"Note Travail & Études |||| Notes Travail & Études\",\"note_health_document\":\"Note Santé |||| Notes Santé\",\"note_house_document\":\"Note Logement |||| Notes Logement\",\"note_transport_document\":\"Note Transport |||| Notes Transport\",\"note_activity_document\":\"Note Activités & loisirs |||| Notes Activités & loisirs\",\"note_finance\":\"Note Finances |||| Notes Finances\",\"note_invoice\":\"Note Factures |||| Notes Factures\",\"other_activity_document\":\"Autre document sportif |||| Autres documents sportifs\",\"other_bank_document\":\"Autre document financier |||| Autres documents financiers\",\"other_family_document\":\"Autre document de famille |||| Autres documents de famille\",\"other_health_document\":\"Autre document de santé |||| Autres documents de santé\",\"other_house_document\":\"Autre document de logement |||| Autres documents de logement\",\"other_identity_document\":\"Autre document d'identité |||| Autres documents d'identité\",\"other_invoice\":\"Autre facture |||| Autres factures\",\"other_revenue\":\"Autre revenu |||| Autres revenus\",\"other_tax_document\":\"Impôts - Autre document |||| Impôts - Autres documents\",\"other_transport_document\":\"Autre document de transport |||| Autres documents de transport\",\"other_work_document\":\"Autre document de travail |||| Autres documents de travail\",\"other_administrative_document\":\"Autre document administratif |||| Autres documents administratifs\",\"others\":\"Autres\",\"pacs\":\"Attestation de PACS |||| Attestations de PACS\",\"passport\":\"Passeport |||| Passeports\",\"pay_sheet\":\"Fiche de paie |||| Fiches de paie\",\"payment_proof_family_allowance\":\"Attestation de paiement CAF |||| Attestations de paiement CAF\",\"pension\":\"Retraite |||| Retraites\",\"person_insurance\":\"Attestation d'assurance individuelle |||| Attestations d'assurance individuelle\",\"personal_sporting_licence\":\"Licence sportive |||| Licences sportives\",\"phone_invoice\":\"Facture de téléphone |||| Factures de téléphone\",\"pregnancy_medical_certificate\":\"Certificat de grossesse |||| Certificats de grossesse\",\"prescription\":\"Ordonnance |||| Ordonnances\",\"real_estate_insurance\":\"Attestation d'assurance immobilière |||| Attestations d'assurance immobilière\",\"real_estate_tax\":\"Impôts - Taxe foncière |||| Impôts - Taxes foncières\",\"receipt\":\"Accusé de réception |||| Accusés de réception\",\"rent_receipt\":\"Quittance de loyer |||| Quittances de loyer\",\"residence_permit\":\"Titre de séjour |||| Titres de séjour\",\"restaurant_invoice\":\"Facture de restaurant |||| Factures de restaurant\",\"resume\":\"CV\",\"school_attendance_certificate\":\"Certificat de scolarité |||| Certificats de scolarité\",\"school_insurance_certificate\":\"Attestation d'assurance scolaire |||| Attestations d'assurance scolaire\",\"single_parent_benefit\":\"Allocation parent isolé |||| Allocations parent isolé\",\"student_card\":\"Carte d'étudiant |||| Cartes d'étudiant\",\"tax_notice\":\"Impôts - Avis d'imposition\",\"tax_return\":\"Impôts - Déclaration de revenus |||| Impôts - Déclarations de revenus\",\"tax_timetable\":\"Impôts - Echéancier |||| Impôts - Echéanciers\",\"technical_diagnostic_record\":\"Dossier de diagnostic technique |||| Dossiers de diagnostic technique\",\"telecom_invoice\":\"Facture de télécom |||| Factures de télécom\",\"transport_card\":\"Carte de transport |||| Cartes de transport\",\"transport_invoice\":\"Facture de transport |||| Factures de transport\",\"transport\":\"Transport\",\"unemployment_benefit\":\"Allocation chômage |||| Allocations chômage\",\"unfit_for_habitation_declaration\":\"Arrêté d'insalubrité |||| Arrêtés d'insalubrité\",\"vehicle_registration\":\"Carte grise |||| Cartes grises\",\"water_invoice\":\"Facture d'eau |||| Factures d'eau\",\"web_service_invoice\":\"Facture de service web |||| Factures de service web\",\"wedding\":\"Contrat de mariage |||| Contrats de mariage\",\"work_contract\":\"Contrat de travail |||| Contrats de travail\",\"work_disability_recognition\":\"Reconnaissance de handicap - RQTH |||| Reconnaissances de handicap - RQTH\",\"work_invoice\":\"Facture de travaux |||| Factures de travaux\",\"work_quote\":\"Devis de travaux\",\"work_study\":\"Travail & Études\"},\"attributes\":{\"contractType\":{\"cdi\":\"CDI\",\"cdd\":\"CDD\",\"alternate\":\"Alternance\",\"internship\":\"Stage\",\"other\":\"Autre\"},\"noticePeriod\":{\"oneWeek\":\"1 semaine avant\",\"oneMonth\":\"1 mois avant\",\"threeMonth\":\"3 mois avant\",\"oneYear\":\"1 an avant\",\"custom\":\"Personnalisé\",\"noAlert\":\"Ne pas être alerté\"}},\"themes\":{\"activity\":\"Activités & loisirs\",\"family\":\"Famille\",\"finance\":\"Finances\",\"health\":\"Santé\",\"home\":\"Logement\",\"identity\":\"Identité\",\"invoice\":\"Factures\",\"others\":\"Autres\",\"transport\":\"Transport\",\"undefined\":\"Indéfini\",\"work_study\":\"Travail & Études\"},\"qualification\":{\"date\":{\"title\":{\"datetime\":\"Ajouté le\",\"AObtentionDate\":\"Permis A, délivré le\",\"BObtentionDate\":\"Permis B, délivré le\",\"CObtentionDate\":\"Permis C, délivré le\",\"DObtentionDate\":\"Permis D, délivré le\",\"issueDate\":\"Délivré le\",\"expirationDate\":\"Date d'expiration\",\"referencedDate\":\"Date de référence\",\"shootingDate\":\"Date de prise de vue\",\"obtentionDate\":\"Date d'obtention\",\"date\":\"Date du document\"}},\"information\":{\"title\":{\"fine\":{\"number\":\"Montant de l'amende\"},\"fidelity_card\":{\"number\":\"Numéro de la carte\"},\"caf\":{\"number\":\"Numéro de dossier CAF\"},\"payment_proof_family_allowance\":{\"number\":\"Numéro de dossier CAF\"},\"vehicle\":{\"licenseNumber\":\"Plaque d'immatriculation\",\"confidentialNumber\":\"Code confidentiel\"},\"vehicle_registration\":{\"number\":\"Numéro de la carte grise (VIN)\"},\"national_id_card\":{\"number\":\"Numéro de la carte d'identité\"},\"bank_details\":{\"number\":\"Numéro d'IBAN\"},\"passport\":{\"number\":\"Numéro du passeport\"},\"driver_license\":{\"number\":\"Numéro du permis\"},\"residence_permit\":{\"number\":\"Numéro du permis\"},\"national_health_insurance_card\":{\"number\":\"Numéro de la carte vitale\"},\"pay_sheet\":{\"number\":\"Rémunération brute\"},\"tax_return\":{\"number\":\"Numéro fiscal de référence\"},\"tax_notice\":{\"number\":\"Numéro fiscal de référence\"},\"real_estate_tax\":{\"number\":\"Numéro fiscal de référence\"},\"tax_timetable\":{\"number\":\"Numéro fiscal de référence\"},\"country\":\"Nationalité du bénéficiaire\",\"refTaxIncome\":\"Revenu fiscal de référence\",\"contractType\":\"Type de contrat\",\"noticePeriod\":\"Alerte d’expiration\",\"netSocialAmount\":\"Montant net social\",\"employerName\":\"Nom de l'employeur\",\"bicNumber\":\"Numéro BIC\"},\"day\":\"jour |||| jours\"},\"contact\":\"Titulaire\",\"page\":\"Face du document\",\"front\":\"Face avant\",\"back\":\"Face arrière\",\"qualification\":\"Qualification\",\"noInfo\":\"Non renseigné(e)\"}},\"MagicFolders\":{\"administrative\":\"Administratif\",\"photos\":\"Photos\"}}");

/***/ }),
/* 721 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fetchURL = exports.generateUrlForNote = exports.generatePrivateUrl = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(6));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(7));

var _helpers = __webpack_require__(130);

var _logger = _interopRequireDefault(__webpack_require__(27));

/**
 *
 * @param {string} notesAppUrl URL to the Notes App (https://notes.foo.mycozy.cloud)
 * @param {object} file io.cozy.files object
 */
var generatePrivateUrl = function generatePrivateUrl(notesAppUrl, file) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var returnUrl = options.returnUrl;
  var url = new URL(notesAppUrl);

  if (returnUrl) {
    url.searchParams.set('returnUrl', returnUrl);
  }

  url.hash = "#/n/".concat(file.id);
  return url.toString();
};

exports.generatePrivateUrl = generatePrivateUrl;

var generateUrlForNote = function generateUrlForNote(notesAppUrl, file) {
  _logger.default.warn('generateUrlForNote is deprecated. Please use models.note.generatePrivateUrl instead');

  return generatePrivateUrl(notesAppUrl, file);
};
/**
 * Fetch and build an URL to open a note.
 *
 * @param {object} client CozyClient instance
 * @param {object} file io.cozy.file object
 * @param {object} options Options
 * @param {string} [options.pathname] Pathname to use in the URL
 * @returns {Promise<string>} url
 */


exports.generateUrlForNote = generateUrlForNote;

var fetchURL = /*#__PURE__*/function () {
  var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(client, file) {
    var options,
        _yield$client$getStac,
        _yield$client$getStac2,
        note_id,
        subdomain,
        protocol,
        instance,
        sharecode,
        public_name,
        _options$pathname,
        searchParams,
        _options$pathname2,
        _args = arguments;

    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            options = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};
            _context.next = 3;
            return client.getStackClient().collection('io.cozy.notes').fetchURL({
              _id: file.id
            });

          case 3:
            _yield$client$getStac = _context.sent;
            _yield$client$getStac2 = _yield$client$getStac.data;
            note_id = _yield$client$getStac2.note_id;
            subdomain = _yield$client$getStac2.subdomain;
            protocol = _yield$client$getStac2.protocol;
            instance = _yield$client$getStac2.instance;
            sharecode = _yield$client$getStac2.sharecode;
            public_name = _yield$client$getStac2.public_name;

            if (!sharecode) {
              _context.next = 18;
              break;
            }

            searchParams = [['id', note_id]];
            searchParams.push(['sharecode', sharecode]);
            if (public_name) searchParams.push(['username', public_name]);
            return _context.abrupt("return", (0, _helpers.generateWebLink)({
              cozyUrl: "".concat(protocol, "://").concat(instance),
              searchParams: searchParams,
              pathname: (_options$pathname = options.pathname) !== null && _options$pathname !== void 0 ? _options$pathname : '/public/',
              slug: 'notes',
              subDomainType: subdomain
            }));

          case 18:
            return _context.abrupt("return", (0, _helpers.generateWebLink)({
              cozyUrl: "".concat(protocol, "://").concat(instance),
              pathname: (_options$pathname2 = options.pathname) !== null && _options$pathname2 !== void 0 ? _options$pathname2 : '',
              slug: 'notes',
              subDomainType: subdomain,
              hash: "/n/".concat(note_id)
            }));

          case 19:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function fetchURL(_x, _x2) {
    return _ref.apply(this, arguments);
  };
}();

exports.fetchURL = fetchURL;

/***/ }),
/* 722 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isReadOnly = isReadOnly;
exports.fetchOwn = fetchOwn;
exports.isForType = isForType;
exports.isDocumentReadOnly = isDocumentReadOnly;
exports.isShortcutCreatedOnTheRecipientCozy = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(9));

var _regenerator = _interopRequireDefault(__webpack_require__(6));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(7));

var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(41));

var _intersection = _interopRequireDefault(__webpack_require__(293));

var _get = _interopRequireDefault(__webpack_require__(10));

var _CozyClient = _interopRequireDefault(__webpack_require__(40));

var _dsl = __webpack_require__(20);

var _file = __webpack_require__(310);

var _const = __webpack_require__(57);

var _logger = _interopRequireDefault(__webpack_require__(27));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 * @typedef {object} Document - Couchdb document like an io.cozy.files
 * @property {string} _id
 * @property {string} id
 * @property {string} _type
 * @property {string} type
 */

/**
 * @typedef {('ALL'|'GET'|'PATCH'|'POST'|'PUT'|'DELETE')} PermissionVerb
 */

/**
 * @typedef {object} PermissionItem
 * @property {PermissionVerb[]} verbs - ALL, GET, PUT, PATCH, DELETE, POST…
 * @property {string} selector - defaults to `id`
 * @property {string[]} values
 * @property {string} type - a couch db database like 'io.cozy.files'
 */

/**
 * Is this permission read only ?
 *
 * @private
 * @param {PermissionItem} perm - permission node in a io.cozy.permissions document
 * @param {object} options - Options
 * @param {PermissionVerb[]} [options.writability] - Writability
 * @returns {boolean} true if the note should be displayed read-only
 */
function isReadOnly(perm) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var _options$writability = options.writability,
      writability = _options$writability === void 0 ? ['PATCH', 'POST', 'PUT', 'DELETE'] : _options$writability;
  return perm.verbs && // no verbs is equivalent to ['ALL']
  perm.verbs.length > 0 && // empty array is equivalent to ['ALL']
  (0, _intersection.default)(perm.verbs, ['ALL'].concat((0, _toConsumableArray2.default)(writability))).length === 0;
}
/**
 * Fetches the list of permissions blocks
 *
 * @param {CozyClient} client -
 * @returns {Promise<PermissionItem[]>} list of permissions
 */


function fetchOwn(_x) {
  return _fetchOwn.apply(this, arguments);
}
/**
 * Checks if the permission item is about a specific doctype
 *
 * @param {PermissionItem} permission -
 * @param {string} type - doctype
 */


function _fetchOwn() {
  _fetchOwn = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(client) {
    var collection, data, permissions;
    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            collection = client.collection('io.cozy.permissions');
            _context.next = 3;
            return collection.fetchOwnPermissions();

          case 3:
            data = _context.sent;
            permissions = (0, _get.default)(data, 'data.attributes.permissions');

            if (permissions) {
              _context.next = 7;
              break;
            }

            throw "Can't get self permissions";

          case 7:
            return _context.abrupt("return", Object.values(permissions));

          case 8:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _fetchOwn.apply(this, arguments);
}

function isForType(permission, type) {
  return permission.type === type || permission.type + '.*' === type;
}
/**
 * Finds the permission block for the the file
 * in the permissions owned by the current cozy-client.
 *
 * Iterates through parent folders if needed
 * until we can find the permissions attached to the share
 *
 * @private
 * @param {object} options - Options
 * @param {Document} options.document - a couchdb document
 * @param {CozyClient} options.client - A cozy client
 * @param {PermissionItem[]} options.permissions -
 * @returns {Promise<PermissionItem|undefined>} the corresponding permission block
 */


function findPermissionFor(_x2) {
  return _findPermissionFor2.apply(this, arguments);
}

function _findPermissionFor2() {
  _findPermissionFor2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee4(options) {
    var document, client, permissions, id, type, doc, definedPermissions, perms, getFile, _getFile, _findPermissionFor, _findPermissionFor3;

    return _regenerator.default.wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            _findPermissionFor3 = function _findPermissionFor5() {
              _findPermissionFor3 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3(_ref) {
                var doc, client, perms, perm, parentId, parentFolder;
                return _regenerator.default.wrap(function _callee3$(_context3) {
                  while (1) {
                    switch (_context3.prev = _context3.next) {
                      case 0:
                        doc = _ref.doc, client = _ref.client, perms = _ref.perms;
                        perm = perms.find(function (perm) {
                          if (perm.values) {
                            var selector = perm.selector || 'id';
                            var value = doc[selector];
                            return perm.values.includes(value);
                          } else {
                            return true;
                          }
                        });

                        if (!perm) {
                          _context3.next = 6;
                          break;
                        }

                        return _context3.abrupt("return", perm);

                      case 6:
                        if (!(type === _const.DOCTYPE_FILES)) {
                          _context3.next = 16;
                          break;
                        }

                        // for files, we recursively try to check for parent folders
                        parentId = (0, _file.getParentFolderId)(doc);
                        _context3.t0 = parentId;

                        if (!_context3.t0) {
                          _context3.next = 13;
                          break;
                        }

                        _context3.next = 12;
                        return getFile(parentId);

                      case 12:
                        _context3.t0 = _context3.sent;

                      case 13:
                        parentFolder = _context3.t0;

                        if (!parentFolder) {
                          _context3.next = 16;
                          break;
                        }

                        return _context3.abrupt("return", _findPermissionFor({
                          doc: parentFolder,
                          perms: perms,
                          client: client
                        }));

                      case 16:
                        return _context3.abrupt("return", undefined);

                      case 17:
                      case "end":
                        return _context3.stop();
                    }
                  }
                }, _callee3);
              }));
              return _findPermissionFor3.apply(this, arguments);
            };

            _findPermissionFor = function _findPermissionFor4(_x5) {
              return _findPermissionFor3.apply(this, arguments);
            };

            _getFile = function _getFile3() {
              _getFile = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(id) {
                var query, data;
                return _regenerator.default.wrap(function _callee2$(_context2) {
                  while (1) {
                    switch (_context2.prev = _context2.next) {
                      case 0:
                        query = (0, _dsl.Q)(_const.DOCTYPE_FILES).getById(id);
                        _context2.next = 3;
                        return client.query(query);

                      case 3:
                        data = _context2.sent;
                        return _context2.abrupt("return", data && data.data);

                      case 5:
                      case "end":
                        return _context2.stop();
                    }
                  }
                }, _callee2);
              }));
              return _getFile.apply(this, arguments);
            };

            getFile = function _getFile2(_x4) {
              return _getFile.apply(this, arguments);
            };

            document = options.document, client = options.client, permissions = options.permissions;
            id = document._id || document.id;
            type = document._type || document.type;
            doc = _objectSpread(_objectSpread({}, document), {}, {
              id: id,
              type: type
            });

            if (!permissions) {
              _context4.next = 12;
              break;
            }

            _context4.t0 = permissions;
            _context4.next = 15;
            break;

          case 12:
            _context4.next = 14;
            return fetchOwn(client);

          case 14:
            _context4.t0 = _context4.sent;

          case 15:
            definedPermissions = _context4.t0;
            perms = definedPermissions.filter(function (p) {
              return isForType(p, type);
            });
            return _context4.abrupt("return", _findPermissionFor({
              doc: doc,
              client: client,
              perms: perms
            }));

          case 18:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4);
  }));
  return _findPermissionFor2.apply(this, arguments);
}

function isDocumentReadOnly(_x3) {
  return _isDocumentReadOnly.apply(this, arguments);
}
/**
 * When a cozy to cozy sharing is created Cozy's stack creates a
 * shortcut in `/Inbox of sharing` on the recipient's cozy to have a
 * quick access even when the sharing is not accepted yet.
 *
 * However, this file is created only if the stack knows the URL of the cozy.
 * This is not always the case.
 *
 * This method is here to tell us if the shortcut's file is created
 * on the recipient's cozy. It can be used to make an UI distinction between the
 * both situation.
 *
 * @typedef  {object} Permission
 * @property {object} data Permission document
 * @property {Array} included Member information from the sharing
 *
 * @param {Permission} permission From getOwnPermissions mainly
 */


function _isDocumentReadOnly() {
  _isDocumentReadOnly = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee5(args) {
    var document, client, writability, _args$permissions, permissions, perm;

    return _regenerator.default.wrap(function _callee5$(_context5) {
      while (1) {
        switch (_context5.prev = _context5.next) {
          case 0:
            document = args.document;
            client = args.client;
            writability = args.writability;
            _args$permissions = args.permissions;

            if (!(_args$permissions === void 0)) {
              _context5.next = 10;
              break;
            }

            _context5.next = 7;
            return fetchOwn(client);

          case 7:
            _context5.t0 = _context5.sent;
            _context5.next = 11;
            break;

          case 10:
            _context5.t0 = _args$permissions;

          case 11:
            permissions = _context5.t0;

            if (!(permissions.length <= 1)) {
              _context5.next = 16;
              break;
            }

            _context5.t1 = permissions[0] // shortcut because most of time, there will be only one permission block
            ;
            _context5.next = 19;
            break;

          case 16:
            _context5.next = 18;
            return findPermissionFor({
              document: document,
              client: client,
              permissions: permissions
            });

          case 18:
            _context5.t1 = _context5.sent;

          case 19:
            perm = _context5.t1;

            if (!perm) {
              _context5.next = 24;
              break;
            }

            return _context5.abrupt("return", isReadOnly(perm, {
              writability: writability
            }));

          case 24:
            _logger.default.warn("can't find the document in current attached permissions");

            return _context5.abrupt("return", undefined);

          case 26:
          case "end":
            return _context5.stop();
        }
      }
    }, _callee5);
  }));
  return _isDocumentReadOnly.apply(this, arguments);
}

var isShortcutCreatedOnTheRecipientCozy = function isShortcutCreatedOnTheRecipientCozy(permission) {
  if (!permission.included) return false;
  var sharingMember = permission.included.find(function (item) {
    return item.type === 'io.cozy.sharings.members';
  });

  if (sharingMember && sharingMember.attributes.instance) {
    return true;
  }

  return false;
};

exports.isShortcutCreatedOnTheRecipientCozy = isShortcutCreatedOnTheRecipientCozy;

/***/ }),
/* 723 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getFlagshipDownloadLink = exports.getCreatedByApp = exports.hasBeenUpdatedByApp = void 0;

var _get = _interopRequireDefault(__webpack_require__(10));

var _cozyDeviceHelper = __webpack_require__(301);

var _cozyFlags = _interopRequireDefault(__webpack_require__(48));

/**
 * Checks if a document has been updated by a specific app
 *
 * @param {object} doc - The document to check
 * @param {string} appSlug - The slug of the app to check
 * @returns {boolean} - True if the document has been updated by the app, false otherwise
 */
var hasBeenUpdatedByApp = function hasBeenUpdatedByApp(doc, appSlug) {
  var updatedByApps = (0, _get.default)(doc, 'cozyMetadata.updatedByApps');
  return Boolean(updatedByApps && updatedByApps.find(function (x) {
    return x.slug === appSlug;
  }));
};
/**
 * Gets the app that created a document
 *
 * @param {object} doc - The document to check
 * @returns {string} - The slug of the app that created the document
 */


exports.hasBeenUpdatedByApp = hasBeenUpdatedByApp;

var getCreatedByApp = function getCreatedByApp(doc) {
  return (0, _get.default)(doc, 'cozyMetadata.createdByApp');
};
/**
 * Gets the download link for the Cozy Flagship app and his white-labels versions
 *
 * @param {string} lang - The language code for the download page
 * @returns {string} - The URL of the download page
 */


exports.getCreatedByApp = getCreatedByApp;

var getFlagshipDownloadLink = function getFlagshipDownloadLink(lang) {
  if ((0, _cozyDeviceHelper.isAndroid)()) {
    var id = (0, _cozyFlags.default)('flagship.playstore-id') || 'io.cozy.flagship.mobile';
    return "https://play.google.com/store/apps/details?id=".concat(id, "&hl=").concat(lang);
  }

  if ((0, _cozyDeviceHelper.isIOS)()) {
    var _id = (0, _cozyFlags.default)('flagship.appstore-id') || 'id1600636174';

    return "https://apps.apple.com/".concat(lang, "/app/").concat(_id);
  }

  return (0, _cozyFlags.default)('flagship.download-link') || "https://cozy.io/".concat(lang, "/download");
};

exports.getFlagshipDownloadLink = getFlagshipDownloadLink;

/***/ }),
/* 724 */
/***/ (function(module, exports, __webpack_require__) {

var baseKeys = __webpack_require__(152),
    getTag = __webpack_require__(63),
    isArguments = __webpack_require__(89),
    isArray = __webpack_require__(21),
    isArrayLike = __webpack_require__(53),
    isBuffer = __webpack_require__(91),
    isPrototype = __webpack_require__(112),
    isTypedArray = __webpack_require__(125);

/** `Object#toString` result references. */
var mapTag = '[object Map]',
    setTag = '[object Set]';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Checks if `value` is an empty object, collection, map, or set.
 *
 * Objects are considered empty if they have no own enumerable string keyed
 * properties.
 *
 * Array-like values such as `arguments` objects, arrays, buffers, strings, or
 * jQuery-like collections are considered empty if they have a `length` of `0`.
 * Similarly, maps and sets are considered empty if they have a `size` of `0`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is empty, else `false`.
 * @example
 *
 * _.isEmpty(null);
 * // => true
 *
 * _.isEmpty(true);
 * // => true
 *
 * _.isEmpty(1);
 * // => true
 *
 * _.isEmpty([1, 2, 3]);
 * // => false
 *
 * _.isEmpty({ 'a': 1 });
 * // => false
 */
function isEmpty(value) {
  if (value == null) {
    return true;
  }
  if (isArrayLike(value) &&
      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
        isBuffer(value) || isTypedArray(value) || isArguments(value))) {
    return !value.length;
  }
  var tag = getTag(value);
  if (tag == mapTag || tag == setTag) {
    return !value.size;
  }
  if (isPrototype(value)) {
    return !baseKeys(value).length;
  }
  for (var key in value) {
    if (hasOwnProperty.call(value, key)) {
      return false;
    }
  }
  return true;
}

module.exports = isEmpty;


/***/ }),
/* 725 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireWildcard = __webpack_require__(22);

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "Qualification", {
  enumerable: true,
  get: function get() {
    return _qualification.Qualification;
  }
});
Object.defineProperty(exports, "setQualification", {
  enumerable: true,
  get: function get() {
    return _qualification.setQualification;
  }
});
Object.defineProperty(exports, "getQualification", {
  enumerable: true,
  get: function get() {
    return _qualification.getQualification;
  }
});
exports.helpers = exports.themes = exports.locales = void 0;

var _qualification = __webpack_require__(194);

var locales = _interopRequireWildcard(__webpack_require__(195));

exports.locales = locales;

var themes = _interopRequireWildcard(__webpack_require__(323));

exports.themes = themes;

var helpers = _interopRequireWildcard(__webpack_require__(726));

exports.helpers = helpers;

/***/ }),
/* 726 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isQualificationNote = exports.getThemeByItem = void 0;

var _documentTypeData = __webpack_require__(323);

/**
 * @param {import("../../types").QualificationAttributes} item - Qualification item
 * @returns {import("../../types").Theme|undefined}
 */
var findDefaultItemTheme = function findDefaultItemTheme(item) {
  return _documentTypeData.themesList.find(function (theme) {
    return theme.defaultItems && theme.defaultItems.includes(item.label);
  });
};
/**
 * @param {import("../../types").QualificationAttributes} item - Qualification item
 * @returns {import("../../types").Theme|undefined}
 */


var getThemeByItem = function getThemeByItem(item) {
  var defaultTheme = findDefaultItemTheme(item);

  if (defaultTheme) {
    return defaultTheme;
  }

  return _documentTypeData.themesList.find(function (theme) {
    return theme.items.some(function (it) {
      return it.label === item.label;
    });
  });
};
/**
 * Check if a qualification is a note
 *
 * @param {import("../../types").QualificationAttributes} item - Qualification item
 * @returns {boolean}
 */


exports.getThemeByItem = getThemeByItem;

var isQualificationNote = function isQualificationNote(item) {
  return item.label.toLowerCase().startsWith('note_');
};

exports.isQualificationNote = isQualificationNote;

/***/ }),
/* 727 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fetchTimeSeriesByIntervalAndSource = exports.saveTimeSeries = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(6));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(7));

var _dsl = __webpack_require__(20);

var validateTimeSeriesFormat = function validateTimeSeriesFormat(timeseries) {
  if (!timeseries.startDate || !timeseries.endDate) {
    throw new Error('You must specify a startDate and endDate for the time serie');
  }

  if (!Date.parse(timeseries.startDate) || !Date.parse(timeseries.endDate)) {
    throw new Error('Invalid date format for the time serie');
  }

  if (!timeseries.dataType) {
    throw new Error('You must specify a dataType for the time serie');
  }

  if (!timeseries.series || !Array.isArray(timeseries.series)) {
    throw new Error('You must specify a series array for the time serie');
  }
};
/**
 * @typedef TimeSeries
 * @property dataType {String} - The type of time series, e.g. 'electricity'
 * @property startDate {Date} - The starting date of the series
 * @property endDate {Date} - The end date of the series
 * @property endType {Date} - The starting date of the series
 * @property source {String} - The data source, e.g. 'enedis.fr'
 * @property theme {String} - The theme used to group time series, e.g. 'energy'
 * @property series {Array} - An array of objects representing the time series
 */

/**
 * Helper to save a time series document.
 *
 * @param {object} client - The CozyClient instance
 *
 
 * @param {TimeSeries} timeseriesOption - The time series to save
 */


var saveTimeSeries = /*#__PURE__*/function () {
  var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(client, timeseriesOption) {
    var dataType, series, startDate, endDate, source, theme, doctype, timeseries;
    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            dataType = timeseriesOption.dataType, series = timeseriesOption.series, startDate = timeseriesOption.startDate, endDate = timeseriesOption.endDate, source = timeseriesOption.source, theme = timeseriesOption.theme;
            validateTimeSeriesFormat({
              dataType: dataType,
              series: series,
              startDate: startDate,
              endDate: endDate,
              source: source
            });
            doctype = "io.cozy.timeseries.".concat(dataType);
            timeseries = {
              _type: doctype,
              startDate: startDate,
              endDate: endDate,
              source: source,
              theme: theme,
              series: series
            };
            return _context.abrupt("return", client.save(timeseries));

          case 5:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function saveTimeSeries(_x, _x2) {
    return _ref.apply(this, arguments);
  };
}();
/**
 * Helper to retrieve time series by their date interval and source.
 *
 * @param {object} client - The CozyClient instance
 * @param {object} params - The query params
 * @param {Date} params.startDate - The starting date of the series
 * @param {Date} params.endDate - The end date of the series
 * @param {String} params.dataType - The type of time series, e.g. 'electricity'
 * @param {String} params.source - The data source, e.g. 'enedis.fr'
 * @param {number} params.limit - Number of serie items to retrieve
 *
 * @typedef TimeSeriesJSONAPI
 * @property data {Array<TimeSeries>} - The JSON-API data response
 * @returns {Promise<TimeSeriesJSONAPI>} The TimeSeries found by the query in JSON-API format
 */


exports.saveTimeSeries = saveTimeSeries;

var fetchTimeSeriesByIntervalAndSource = /*#__PURE__*/function () {
  var _ref3 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(client, _ref2) {
    var startDate, endDate, dataType, source, limit, doctype, query;
    return _regenerator.default.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            startDate = _ref2.startDate, endDate = _ref2.endDate, dataType = _ref2.dataType, source = _ref2.source, limit = _ref2.limit;

            /**
             * @type {import("../types").Doctype}
             */
            doctype = "io.cozy.timeseries.".concat(dataType);
            query = (0, _dsl.Q)(doctype).where({
              source: source,
              startDate: {
                $gte: startDate
              },
              endDate: {
                $lte: endDate
              }
            }).indexFields(['source', 'startDate', 'endDate']).sortBy([{
              source: 'desc'
            }, {
              startDate: 'desc'
            }, {
              endDate: 'desc'
            }]).limitBy(limit || 5);
            return _context2.abrupt("return", client.query(query));

          case 4:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));

  return function fetchTimeSeriesByIntervalAndSource(_x3, _x4) {
    return _ref3.apply(this, arguments);
  };
}();

exports.fetchTimeSeriesByIntervalAndSource = fetchTimeSeriesByIntervalAndSource;

/***/ }),
/* 728 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getSharingLink = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(6));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(9));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(7));

var _const = __webpack_require__(57);

var _CozyClient = _interopRequireDefault(__webpack_require__(40));

var _helpers = __webpack_require__(130);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 * Generate Sharing link for one or many files
 *
 * @param {CozyClient} client - Instance of CozyClient
 * @param {string[]} filesIds - Array of io.cozy.files ids
 * @param {object} options - Options
 * @param {string} [options.ttl] - Time to live (bigduration format, e.g. "4Y3M2D1h30m15s")
 * @param {string} [options.password] - To generate a password-protected link
 * @returns {Promise<string>} Shared link
 */
var getSharingLink = /*#__PURE__*/function () {
  var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(client, filesIds) {
    var _sharedLink$attribute, _sharedLink$attribute2;

    var _ref2,
        ttl,
        password,
        PERMS,
        _yield$client$save,
        sharedLink,
        webLink,
        _args = arguments;

    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _ref2 = _args.length > 2 && _args[2] !== undefined ? _args[2] : {}, ttl = _ref2.ttl, password = _ref2.password;
            PERMS = _objectSpread(_objectSpread({
              _type: _const.DOCTYPE_PERMISSIONS,
              permissions: {
                files: {
                  type: _const.DOCTYPE_FILES,
                  values: filesIds,
                  verbs: ['GET']
                }
              }
            }, ttl && {
              ttl: ttl
            }), password && {
              password: password
            });
            _context.next = 4;
            return client.save(PERMS);

          case 4:
            _yield$client$save = _context.sent;
            sharedLink = _yield$client$save.data;
            webLink = (0, _helpers.generateWebLink)({
              cozyUrl: client.getStackClient().uri,
              searchParams: [['sharecode', sharedLink === null || sharedLink === void 0 ? void 0 : (_sharedLink$attribute = sharedLink.attributes) === null || _sharedLink$attribute === void 0 ? void 0 : (_sharedLink$attribute2 = _sharedLink$attribute.shortcodes) === null || _sharedLink$attribute2 === void 0 ? void 0 : _sharedLink$attribute2.code]],
              pathname: '/public',
              slug: 'drive',
              subDomainType: client.capabilities.flat_subdomains ? 'flat' : 'nested'
            });
            return _context.abrupt("return", webLink);

          case 8:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function getSharingLink(_x, _x2) {
    return _ref.apply(this, arguments);
  };
}();

exports.getSharingLink = getSharingLink;

/***/ }),
/* 729 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fetchAggregatesFromDACC = exports.buildAggregateParams = exports.sendMeasureToDACC = exports.checkMeasureParams = exports.isCorrectDateFormat = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(6));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(7));

var _cozyLogger = _interopRequireDefault(__webpack_require__(36));

var _CozyClient = _interopRequireDefault(__webpack_require__(40));

/**
 * Check whether or not the given date is in YYYY-MM-DD format
 *
 * @param {string} date - The date to check
 * @returns {boolean}
 */
var isCorrectDateFormat = function isCorrectDateFormat(date) {
  try {
    var parsedDate = new Date(Date.parse(date));
    return !!parsedDate.toISOString().startsWith(date);
  } catch (err) {
    return false;
  }
};
/**
 * Throw an errror if a DACC parameter is incorrect.
 *
 * @param { import("../types").DACCMeasure} measure - The DACC measure
 */


exports.isCorrectDateFormat = isCorrectDateFormat;

var checkMeasureParams = function checkMeasureParams(measure) {
  var createdBy = measure.createdBy,
      measureName = measure.measureName,
      startDate = measure.startDate,
      value = measure.value,
      group1 = measure.group1,
      group2 = measure.group2,
      group3 = measure.group3;

  if (!createdBy || typeof createdBy !== 'string') {
    throw new Error('Missing or wrong type parameter: createdBy');
  }

  if (!measureName || typeof measureName !== 'string') {
    throw new Error('Missing or wrong type parameter: measureName');
  }

  if (!startDate) {
    throw new Error('Missing parameter: startDate');
  }

  if (!isCorrectDateFormat(startDate)) {
    throw new Error('Date should be in YYYY-MM-DD format');
  }

  if (typeof value !== 'number') {
    throw new Error('Missing or wrong type parameter: value');
  }

  if (group1 && (typeof group1 !== 'object' || Object.keys(group1).length === 0) || group2 && (typeof group2 !== 'object' || Object.keys(group2).length === 0) || group3 && (typeof group3 !== 'object' || Object.keys(group3).length === 0)) {
    throw new Error('Groups should be key-value objects');
  }

  if (group3 && (!group2 || !group1) || group2 && !group1) {
    throw new Error('Group order must be respected');
  }
};
/**
 * Send measures to a DACC through a remote doctype
 *
 * @param {CozyClient} client - The CozyClient instance
 * @param {string} remoteDoctype - The remote doctype to use
 * @param {import("../types").DACCMeasure} measure - The DACC measure
 */


exports.checkMeasureParams = checkMeasureParams;

var sendMeasureToDACC = /*#__PURE__*/function () {
  var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(client, remoteDoctype, measure) {
    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.prev = 0;
            checkMeasureParams(measure);
            _context.next = 4;
            return client.getStackClient().fetchJSON('POST', "/remote/".concat(remoteDoctype), {
              data: JSON.stringify(measure),
              path: 'measure'
            });

          case 4:
            _context.next = 10;
            break;

          case 6:
            _context.prev = 6;
            _context.t0 = _context["catch"](0);
            (0, _cozyLogger.default)('error', "Error while sending measure to remote doctype: ".concat(_context.t0.message));
            throw _context.t0;

          case 10:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, null, [[0, 6]]);
  }));

  return function sendMeasureToDACC(_x, _x2, _x3) {
    return _ref.apply(this, arguments);
  };
}();
/**
 * Build parameters to request DACC aggregate
 *
 *
 * @typedef Params - The unformatted DACC aggregate params
 * @property {string} [measureName] - The measure name
 * @property {string} [startDate]   - The measure start date
 * @property {string} [endDate]     - The measure end date
 *
 * @param {Params} params - The unformatted DACC aggregate params
 * @returns {import("../types").DACCAggregatesParams}
 */


exports.sendMeasureToDACC = sendMeasureToDACC;

var buildAggregateParams = function buildAggregateParams(params) {
  var measureName = params.measureName;

  if (!measureName || typeof measureName !== 'string') {
    throw new Error('Missing or wrong type parameter: measureName');
  }

  var startDate = params.startDate || new Date(0).toISOString();
  var endDate = params.endDate || new Date(Date.now()).toISOString();

  if (!isCorrectDateFormat(startDate) || !isCorrectDateFormat(endDate)) {
    (0, _cozyLogger.default)('error', "Date should be in YYYY-MM-DD format but received: startDate: ".concat(startDate, " | endDate: ").concat(endDate));
    throw new Error('Date should be in YYYY-MM-DD format');
  }

  return {
    measureName: measureName,
    startDate: startDate,
    endDate: endDate
  };
};
/**
 * Send measures to a DACC through a remote doctype
 *
 * @param {CozyClient} client - The CozyClient instance
 * @param {string} remoteDoctype - The remote doctype to use
 * @param {import("../types").DACCAggregatesParams} params - The request params
 * @returns { Promise<import("../types").DACCAggregatesResponse> }
 */


exports.buildAggregateParams = buildAggregateParams;

var fetchAggregatesFromDACC = /*#__PURE__*/function () {
  var _ref2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(client, remoteDoctype, params) {
    var aggregateParams;
    return _regenerator.default.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _context2.prev = 0;
            aggregateParams = buildAggregateParams(params);
            _context2.next = 4;
            return client.getStackClient().fetchJSON('POST', "/remote/".concat(remoteDoctype), {
              data: JSON.stringify(aggregateParams),
              path: 'aggregate'
            });

          case 4:
            return _context2.abrupt("return", _context2.sent);

          case 7:
            _context2.prev = 7;
            _context2.t0 = _context2["catch"](0);
            (0, _cozyLogger.default)('error', "Error while fetching aggregates to remote doctype: ".concat(_context2.t0.message));
            throw _context2.t0;

          case 11:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2, null, [[0, 7]]);
  }));

  return function fetchAggregatesFromDACC(_x4, _x5, _x6) {
    return _ref2.apply(this, arguments);
  };
}();

exports.fetchAggregatesFromDACC = fetchAggregatesFromDACC;

/***/ }),
/* 730 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.formatContactValue = exports.getTranslatedNameForContact = exports.formatOtherMetadataValue = exports.getTranslatedNameForOtherMetadata = exports.formatInformationMetadataValue = exports.getTranslatedNameForInformationMetadata = exports.formatDateMetadataValue = exports.getTranslatedNameForDateMetadata = exports.getMetadataQualificationType = exports.formatMetadataQualification = exports.isExpiringSoon = exports.isExpired = exports.computeExpirationNoticeLink = exports.computeExpirationNoticeDate = exports.computeExpirationDate = exports.isExpiring = exports.KNOWN_OTHER_METADATA_NAMES = exports.KNOWN_INFORMATION_METADATA_NAMES = exports.KNOWN_DATE_METADATA_NAMES = void 0;

var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(41));

var _add = _interopRequireDefault(__webpack_require__(731));

var _sub = _interopRequireDefault(__webpack_require__(732));

var _locales = __webpack_require__(195);

var _contact = __webpack_require__(141);

var _get = _interopRequireDefault(__webpack_require__(10));

/**
 * @typedef {import("../types").IOCozyFile} IOCozyFile
 */
var PERSONAL_SPORTING_LICENCE_PERIOD_DAYS = 365;
var PERSONAL_SPORTING_LICENCE_NOTICE_PERIOD_DAYS = 15;
var EXPIRATION_LINK_BY_LABEL = {
  national_id_card: 'https://www.service-public.fr/particuliers/vosdroits/N358',
  residence_permit: 'https://www.service-public.fr/particuliers/vosdroits/N110',
  passport: 'https://www.service-public.fr/particuliers/vosdroits/N360',
  driver_license: 'https://permisdeconduire.ants.gouv.fr/demarches-en-ligne/perte-vol-deterioration-fin-de-validite-ou-changement-d-etat-civil'
};
var KNOWN_DATE_METADATA_NAMES = ['AObtentionDate', 'BObtentionDate', 'CObtentionDate', 'DObtentionDate', 'obtentionDate', 'expirationDate', 'referencedDate', 'issueDate', 'shootingDate', 'date', 'datetime'];
exports.KNOWN_DATE_METADATA_NAMES = KNOWN_DATE_METADATA_NAMES;
var KNOWN_INFORMATION_METADATA_NAMES = ['number', 'bicNumber', 'country', 'refTaxIncome', 'contractType', 'netSocialAmount', 'employerName', 'vehicle.licenseNumber', 'vehicle.confidentialNumber', 'noticePeriod'];
exports.KNOWN_INFORMATION_METADATA_NAMES = KNOWN_INFORMATION_METADATA_NAMES;
var KNOWN_OTHER_METADATA_NAMES = ['contact', 'page', 'qualification'];
/**
 * @param {IOCozyFile} file - io.cozy.files document
 * @returns {boolean}
 * @description Tells if a given file is a national id card, is French, has an expiration date set and has a notice period set
 */

exports.KNOWN_OTHER_METADATA_NAMES = KNOWN_OTHER_METADATA_NAMES;

var isExpiringFrenchNationalIdCard = function isExpiringFrenchNationalIdCard(file) {
  var _file$metadata, _file$metadata$qualif, _file$metadata2, _file$metadata3, _file$metadata4;

  var label = (_file$metadata = file.metadata) === null || _file$metadata === void 0 ? void 0 : (_file$metadata$qualif = _file$metadata.qualification) === null || _file$metadata$qualif === void 0 ? void 0 : _file$metadata$qualif.label;
  var country = (_file$metadata2 = file.metadata) === null || _file$metadata2 === void 0 ? void 0 : _file$metadata2.country;
  var expirationDate = (_file$metadata3 = file.metadata) === null || _file$metadata3 === void 0 ? void 0 : _file$metadata3.expirationDate;
  var noticePeriod = (_file$metadata4 = file.metadata) === null || _file$metadata4 === void 0 ? void 0 : _file$metadata4.noticePeriod;

  if (label === 'national_id_card' && (!country || country === 'fr') && expirationDate && noticePeriod) {
    return true;
  }

  return false;
};
/**
 * @param {IOCozyFile} file - io.cozy.files document
 * @returns {boolean}
 * @description Tells if a given file has an expiration date set and a notice period set
 */


var isExpiringGeneric = function isExpiringGeneric(file) {
  var _file$metadata5, _file$metadata6;

  var expirationDate = (_file$metadata5 = file.metadata) === null || _file$metadata5 === void 0 ? void 0 : _file$metadata5.expirationDate;
  var noticePeriod = (_file$metadata6 = file.metadata) === null || _file$metadata6 === void 0 ? void 0 : _file$metadata6.noticePeriod;

  if (expirationDate && noticePeriod) {
    return true;
  }

  return false;
};
/**
 * @param {IOCozyFile} file - io.cozy.files document
 * @returns {boolean}
 * @description Tells if a given file is a sporting license, has a reference date set or a creation date if not
 */


var isExpiringPersonalSportingLicense = function isExpiringPersonalSportingLicense(file) {
  var _file$metadata7, _file$metadata7$quali, _file$metadata8;

  var label = (_file$metadata7 = file.metadata) === null || _file$metadata7 === void 0 ? void 0 : (_file$metadata7$quali = _file$metadata7.qualification) === null || _file$metadata7$quali === void 0 ? void 0 : _file$metadata7$quali.label;
  var referencedDate = (_file$metadata8 = file.metadata) === null || _file$metadata8 === void 0 ? void 0 : _file$metadata8.referencedDate;
  var created_at = file.created_at;

  if (label === 'personal_sporting_licence' && (referencedDate || created_at)) {
    return true;
  }

  return false;
};
/**
 * @param {IOCozyFile} file - io.cozy.files document
 * @returns {boolean}
 * @description Tells if a given file matches one of the known types of expiring papers
 */


var isExpiring = function isExpiring(file) {
  if (isExpiringFrenchNationalIdCard(file)) {
    return true;
  }

  if (isExpiringGeneric(file)) {
    return true;
  }

  if (isExpiringPersonalSportingLicense(file)) {
    return true;
  }

  return false;
};
/**
 * @param {IOCozyFile} file - io.cozy.files document
 * @returns {Date | null} Expiration date
 * @description Computes et returns the expiration date of the given file, or null if it is not expiring
 */


exports.isExpiring = isExpiring;

var computeExpirationDate = function computeExpirationDate(file) {
  if (isExpiringFrenchNationalIdCard(file) || isExpiringGeneric(file)) {
    var _file$metadata9;

    var expirationDate = (_file$metadata9 = file.metadata) === null || _file$metadata9 === void 0 ? void 0 : _file$metadata9.expirationDate;
    return new Date(expirationDate);
  }

  if (isExpiringPersonalSportingLicense(file)) {
    var _file$metadata10;

    var referencedDate = (_file$metadata10 = file.metadata) === null || _file$metadata10 === void 0 ? void 0 : _file$metadata10.referencedDate;
    var created_at = file.created_at;
    return (0, _add.default)(new Date(referencedDate !== null && referencedDate !== void 0 ? referencedDate : created_at), {
      days: PERSONAL_SPORTING_LICENCE_PERIOD_DAYS
    });
  }

  return null;
};
/**
 * @param {IOCozyFile} file - io.cozy.files document
 * @returns {number | null} Expiration notice period in days
 * @description Computes et returns the expiration notice period of the given file, or null if it is not expiring
 */


exports.computeExpirationDate = computeExpirationDate;

var computeExpirationNoticePeriodInDays = function computeExpirationNoticePeriodInDays(file) {
  if (isExpiringFrenchNationalIdCard(file) || isExpiringGeneric(file)) {
    var _file$metadata11;

    var noticePeriodInDays = (_file$metadata11 = file.metadata) === null || _file$metadata11 === void 0 ? void 0 : _file$metadata11.noticePeriod;
    return parseInt(noticePeriodInDays, 10);
  }

  if (isExpiringPersonalSportingLicense(file)) {
    return PERSONAL_SPORTING_LICENCE_NOTICE_PERIOD_DAYS;
  }

  return null;
};
/**
 * @param {IOCozyFile} file - io.cozy.files document
 * @returns {Date | null} Expiration notice date
 * @description Computes et returns the expiration notice date of the given file, or null if it is not expiring
 */


var computeExpirationNoticeDate = function computeExpirationNoticeDate(file) {
  var expirationDate = computeExpirationDate(file);

  if (expirationDate == null) {
    return null;
  }

  var noticePeriodInDays = computeExpirationNoticePeriodInDays(file);

  if (noticePeriodInDays == null) {
    return null;
  }

  return (0, _sub.default)(expirationDate, {
    days: noticePeriodInDays
  });
};
/**
 * @param {IOCozyFile} file - io.cozy.files document
 * @returns {string | null} Expiration notice link
 * @description Computes and returns the expiration notice link of the given file, or null if it has none
 */


exports.computeExpirationNoticeDate = computeExpirationNoticeDate;

var computeExpirationNoticeLink = function computeExpirationNoticeLink(file) {
  var _file$metadata12, _file$metadata12$qual;

  var qualificationLabel = (_file$metadata12 = file.metadata) === null || _file$metadata12 === void 0 ? void 0 : (_file$metadata12$qual = _file$metadata12.qualification) === null || _file$metadata12$qual === void 0 ? void 0 : _file$metadata12$qual.label;
  if (!qualificationLabel) return null;
  return EXPIRATION_LINK_BY_LABEL[qualificationLabel] || null;
};
/**
 * @param {IOCozyFile} file - io.cozy.files document
 * @returns {boolean}
 * @description Tells if the given file is expiring and if today is after its expiration date
 */


exports.computeExpirationNoticeLink = computeExpirationNoticeLink;

var isExpired = function isExpired(file) {
  var now = new Date();
  var expirationDate = computeExpirationDate(file);
  var isExpired = expirationDate != null && expirationDate <= now;
  return isExpired;
};
/**
 * @param {IOCozyFile} file - io.cozy.files document
 * @returns {boolean}
 * @description Tells if the given file is expiring and if today is between its expiration notice date and its expiration date
 */


exports.isExpired = isExpired;

var isExpiringSoon = function isExpiringSoon(file) {
  var now = new Date();
  var expirationDate = computeExpirationDate(file);
  var expirationNoticeDate = computeExpirationNoticeDate(file);
  var isExpiringSoon = expirationDate != null && expirationNoticeDate != null && expirationNoticeDate <= now && now < expirationDate;
  return isExpiringSoon;
};
/**
 * @param {Object} params -
 * @param {Object} params.metadata - An io.cozy.files metadata object
 * @param {string} params.knownMetadataPath - Path of the metadata
 * @param {string | null} [params.value] - Value of the metadata
 * @returns {{ name: string, value: string | null }} displayable metadata
 */


exports.isExpiringSoon = isExpiringSoon;

var makeMetadataQualification = function makeMetadataQualification(_ref) {
  var metadata = _ref.metadata,
      knownMetadataPath = _ref.knownMetadataPath,
      value = _ref.value;

  var _value = value || (0, _get.default)(metadata, knownMetadataPath, null) || null;

  var shouldReturnThisMetadata = Object.keys(metadata).some(function (val) {
    return knownMetadataPath.startsWith(val);
  });

  if (shouldReturnThisMetadata || knownMetadataPath === 'contact') {
    return {
      name: knownMetadataPath,
      value: _value
    };
  }

  return null;
};
/**
 * @param {Object} metadata - An io.cozy.files metadata object
 * @returns {{ name: string, value: string | null }[]} Array of displayable metadata
 * @description Select and format displayable metadata of a paper
 */


var formatMetadataQualification = function formatMetadataQualification(metadata) {
  var dates = KNOWN_DATE_METADATA_NAMES.map(function (dateName) {
    return makeMetadataQualification({
      metadata: metadata,
      knownMetadataPath: dateName
    });
  }).filter(Boolean).filter(function (data, _, arr) {
    if (arr.length > 1) return data.name !== 'datetime';
    return data;
  });
  var informations = KNOWN_INFORMATION_METADATA_NAMES.map(function (infoName) {
    return makeMetadataQualification({
      metadata: metadata,
      knownMetadataPath: infoName
    });
  }).filter(Boolean);
  var others = KNOWN_OTHER_METADATA_NAMES.map(function (otherName) {
    var _metadata$otherName;

    var value = otherName === 'qualification' ? (_metadata$otherName = metadata[otherName]) === null || _metadata$otherName === void 0 ? void 0 : _metadata$otherName.label : metadata[otherName];
    return makeMetadataQualification({
      metadata: metadata,
      knownMetadataPath: otherName,
      value: value
    });
  }).filter(Boolean);
  return [].concat((0, _toConsumableArray2.default)(dates), (0, _toConsumableArray2.default)(informations), (0, _toConsumableArray2.default)(others));
};
/**
 * @typedef {('date' | 'information' | 'contact' | 'other')} MetadataQualificationType
 */

/**
 * @param {string} metadataName - A metadata name
 * @returns {MetadataQualificationType | null} The type of the metadata
 * @description Returns the type of the metatada from a metadata name
 */


exports.formatMetadataQualification = formatMetadataQualification;

var getMetadataQualificationType = function getMetadataQualificationType(metadataName) {
  if (KNOWN_DATE_METADATA_NAMES.includes(metadataName)) {
    return 'date';
  }

  if (KNOWN_INFORMATION_METADATA_NAMES.includes(metadataName)) {
    return 'information';
  }

  if (KNOWN_OTHER_METADATA_NAMES.includes(metadataName)) {
    if (metadataName === 'contact') {
      return 'contact';
    }

    return 'other';
  }

  return null;
};
/**
 * @param {string} name - The name of a metadata of type date like 'expirationDate' or 'shootingDate'
 * @param {Object} options - Options
 * @param {string} options.lang - Lang requested for the translation like 'fr' or 'en'
 * @returns {string} Translated name for the metadata
 */


exports.getMetadataQualificationType = getMetadataQualificationType;

var getTranslatedNameForDateMetadata = function getTranslatedNameForDateMetadata(name, _ref2) {
  var lang = _ref2.lang;
  var t = (0, _locales.getLocalizer)(lang);
  return t("Scan.qualification.date.title.".concat(name));
};
/**
 * @param {string} value - The value of a metadata of type date
 * @param {Object} options - Options
 * @param {string} options.lang - Lang requested for the translation
 * @param {function} options.f - Date formatting function
 * @returns {string} Formatted and translated value for the metadata
 */


exports.getTranslatedNameForDateMetadata = getTranslatedNameForDateMetadata;

var formatDateMetadataValue = function formatDateMetadataValue(value, _ref3) {
  var lang = _ref3.lang,
      f = _ref3.f;
  var t = (0, _locales.getLocalizer)(lang);

  if (value) {
    if (lang === 'en') {
      return f(value, 'MM/DD/YYYY');
    }

    return f(value, 'DD/MM/YYYY');
  } else {
    return t('Scan.qualification.noInfo');
  }
};
/**
 * @param {string} name - The name of a metadata of type information like 'national_id_card' or 'fine'
 * @param {Object} options - Options
 * @param {string} options.lang - Lang requested for the translation
 * @param {string} options.qualificationLabel - The qualification label of the metadata
 * @returns {string} Translated name for the metadata
 */


exports.formatDateMetadataValue = formatDateMetadataValue;

var getTranslatedNameForInformationMetadata = function getTranslatedNameForInformationMetadata(name, _ref4) {
  var lang = _ref4.lang,
      qualificationLabel = _ref4.qualificationLabel;
  var t = (0, _locales.getLocalizer)(lang);

  if (name === 'number') {
    return t("Scan.qualification.information.title.".concat(qualificationLabel, ".").concat(name));
  } else {
    return t("Scan.qualification.information.title.".concat(name));
  }
};
/**
 * @param {string} value - The value of a metadata of type information
 * @param {Object} options - Options
 * @param {string} options.lang - Lang requested for the translation
 * @param {string} options.name - The name of the metadata
 * @param {string} options.qualificationLabel - The qualification label of the metadata
 * @returns {string} Formatted and translated value for the metadata
 */


exports.getTranslatedNameForInformationMetadata = getTranslatedNameForInformationMetadata;

var formatInformationMetadataValue = function formatInformationMetadataValue(value, _ref5) {
  var lang = _ref5.lang,
      name = _ref5.name,
      qualificationLabel = _ref5.qualificationLabel;
  var t = (0, _locales.getLocalizer)(lang);

  if (typeof value !== 'number' && !value) {
    return t('Scan.qualification.noInfo');
  }

  if (name === 'noticePeriod') {
    return "".concat(value, " ").concat(t('Scan.qualification.information.day', {
      smart_count: value
    }));
  }

  if (name === 'contractType') {
    return t("Scan.attributes.contractType.".concat(value), {
      _: value
    });
  }

  if (name === 'refTaxIncome' || name === 'netSocialAmount' || name === 'number' && qualificationLabel === 'pay_sheet') {
    return "".concat(value, " \u20AC");
  }

  return value;
};
/**
 * @param {string} name - The name of a metadata of type other like 'page' or 'qualification'
 * @param {Object} options - Options
 * @param {string} options.lang - Lang requested for the translation
 * @returns {string} Translated name for the metadata
 */


exports.formatInformationMetadataValue = formatInformationMetadataValue;

var getTranslatedNameForOtherMetadata = function getTranslatedNameForOtherMetadata(name, _ref6) {
  var lang = _ref6.lang;
  var t = (0, _locales.getLocalizer)(lang);
  return t("Scan.qualification.".concat(name));
};
/**
 * @param {string} value - The value of a metadata of type other
 * @param {Object} options - Options
 * @param {string} options.lang - Lang requested for the translation
 * @param {string} options.name - The name of the metadata
 * @returns {string} Formatted and translated value for the metadata
 */


exports.getTranslatedNameForOtherMetadata = getTranslatedNameForOtherMetadata;

var formatOtherMetadataValue = function formatOtherMetadataValue(value, _ref7) {
  var lang = _ref7.lang,
      name = _ref7.name;
  var t = (0, _locales.getLocalizer)(lang);

  if (name === 'qualification') {
    return t("Scan.items.".concat(value), {
      smart_count: 1
    });
  } else {
    return t("Scan.qualification.".concat(value));
  }
};
/**
 * @param {Object} options - Options
 * @param {string} options.lang - Lang requested for the translation
 * @returns {string} Translated name for contact
 */


exports.formatOtherMetadataValue = formatOtherMetadataValue;

var getTranslatedNameForContact = function getTranslatedNameForContact(_ref8) {
  var lang = _ref8.lang;
  var t = (0, _locales.getLocalizer)(lang);
  return t('Scan.qualification.contact');
};
/**
 * @param {object[]} contacts - An array of contact
 * @returns {string} Formatted and translated value of an array of contact
 */


exports.getTranslatedNameForContact = getTranslatedNameForContact;

var formatContactValue = function formatContactValue(contacts) {
  return contacts && contacts.length > 0 ? contacts.map(function (contact) {
    return "".concat((0, _contact.getDisplayName)(contact));
  }).join(', ') : '';
};

exports.formatContactValue = formatContactValue;

/***/ }),
/* 731 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return add; });
/* harmony import */ var _addDays_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(134);
/* harmony import */ var _addMonths_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(65);
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(11);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(5);
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(14);
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }







/**
 * @name add
 * @category Common Helpers
 * @summary Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.
 *
 * @description
 * Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 *
 * | Key            | Description                        |
 * |----------------|------------------------------------|
 * | years          | Amount of years to be added        |
 * | months         | Amount of months to be added       |
 * | weeks          | Amount of weeks to be added        |
 * | days           | Amount of days to be added         |
 * | hours          | Amount of hours to be added        |
 * | minutes        | Amount of minutes to be added      |
 * | seconds        | Amount of seconds to be added      |
 *
 * All values default to 0
 *
 * @returns {Date} the new date with the seconds added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add the following duration to 1 September 2014, 10:19:50
 * const result = add(new Date(2014, 8, 1, 10, 19, 50), {
 *   years: 2,
 *   months: 9,
 *   weeks: 1,
 *   days: 7,
 *   hours: 5,
 *   minutes: 9,
 *   seconds: 30,
 * })
 * //=> Thu Jun 15 2017 15:29:20
 */
function add(dirtyDate, duration) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__[/* default */ "a"])(2, arguments);
  if (!duration || _typeof(duration) !== 'object') return new Date(NaN);
  var years = duration.years ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__[/* default */ "a"])(duration.years) : 0;
  var months = duration.months ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__[/* default */ "a"])(duration.months) : 0;
  var weeks = duration.weeks ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__[/* default */ "a"])(duration.weeks) : 0;
  var days = duration.days ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__[/* default */ "a"])(duration.days) : 0;
  var hours = duration.hours ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__[/* default */ "a"])(duration.hours) : 0;
  var minutes = duration.minutes ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__[/* default */ "a"])(duration.minutes) : 0;
  var seconds = duration.seconds ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__[/* default */ "a"])(duration.seconds) : 0; // Add years and months

  var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(dirtyDate);
  var dateWithMonths = months || years ? Object(_addMonths_index_js__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])(date, months + years * 12) : date; // Add weeks and days

  var dateWithDays = days || weeks ? Object(_addDays_index_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(dateWithMonths, days + weeks * 7) : dateWithMonths; // Add days, hours, minutes and seconds

  var minutesToAdd = minutes + hours * 60;
  var secondsToAdd = seconds + minutesToAdd * 60;
  var msToAdd = secondsToAdd * 1000;
  var finalDate = new Date(dateWithDays.getTime() + msToAdd);
  return finalDate;
}

/***/ }),
/* 732 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return sub; });
/* harmony import */ var _subDays_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(159);
/* harmony import */ var _subMonths_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(99);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(5);
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(14);
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }





/**
 * @name sub
 * @category Common Helpers
 * @summary Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.
 *
 * @description
 * Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be subtracted
 *
 * | Key     | Description                        |
 * |---------|------------------------------------|
 * | years   | Amount of years to be subtracted   |
 * | months  | Amount of months to be subtracted  |
 * | weeks   | Amount of weeks to be subtracted   |
 * | days    | Amount of days to be subtracted    |
 * | hours   | Amount of hours to be subtracted   |
 * | minutes | Amount of minutes to be subtracted |
 * | seconds | Amount of seconds to be subtracted |
 *
 * All values default to 0
 *
 * @returns {Date} the new date with the seconds subtracted
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Subtract the following duration from 15 June 2017 15:29:20
 * const result = sub(new Date(2017, 5, 15, 15, 29, 20), {
 *   years: 2,
 *   months: 9,
 *   weeks: 1,
 *   days: 7,
 *   hours: 5,
 *   minutes: 9,
 *   seconds: 30
 * })
 * //=> Mon Sep 1 2014 10:19:50
 */

function sub(date, duration) {
  Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(2, arguments);
  if (!duration || _typeof(duration) !== 'object') return new Date(NaN);
  var years = duration.years ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_3__[/* default */ "a"])(duration.years) : 0;
  var months = duration.months ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_3__[/* default */ "a"])(duration.months) : 0;
  var weeks = duration.weeks ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_3__[/* default */ "a"])(duration.weeks) : 0;
  var days = duration.days ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_3__[/* default */ "a"])(duration.days) : 0;
  var hours = duration.hours ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_3__[/* default */ "a"])(duration.hours) : 0;
  var minutes = duration.minutes ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_3__[/* default */ "a"])(duration.minutes) : 0;
  var seconds = duration.seconds ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_3__[/* default */ "a"])(duration.seconds) : 0; // Subtract years and months

  var dateWithoutMonths = Object(_subMonths_index_js__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])(date, months + years * 12); // Subtract weeks and days

  var dateWithoutDays = Object(_subDays_index_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(dateWithoutMonths, days + weeks * 7); // Subtract hours, minutes and seconds

  var minutestoSub = minutes + hours * 60;
  var secondstoSub = seconds + minutestoSub * 60;
  var mstoSub = secondstoSub * 1000;
  var finalDate = new Date(dateWithoutDays.getTime() - mstoSub);
  return finalDate;
}

/***/ }),
/* 733 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hasPassword = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(6));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(7));

var _instance = __webpack_require__(309);

var _bitwarden = __webpack_require__(734);

var _capability = __webpack_require__(735);

/**
 * Checks whether the user has a password
 *
 * @param {import("../CozyClient").default} client - The CozyClient instance
 * @returns {Promise<boolean>} - Returns true if the user has a password
 */
var hasPassword = /*#__PURE__*/function () {
  var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(client) {
    var hasExtensionInstalled, hasPasswordDefined;
    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return (0, _bitwarden.hasExtensionInstalledAttribute)(client);

          case 2:
            hasExtensionInstalled = _context.sent;
            _context.next = 5;
            return (0, _instance.hasPasswordDefinedAttribute)(client);

          case 5:
            hasPasswordDefined = _context.sent;
            return _context.abrupt("return", !((0, _capability.isMagicLink)(client) || (0, _capability.isOIDC)(client)) || hasExtensionInstalled || hasPasswordDefined);

          case 7:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function hasPassword(_x) {
    return _ref.apply(this, arguments);
  };
}();

exports.hasPassword = hasPassword;

/***/ }),
/* 734 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hasExtensionInstalledAttribute = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(6));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(7));

var _dsl = __webpack_require__(20);

/**
 * Checks the value of the extension_installed attribute
 *
 * @param {import("../CozyClient").default} client - The CozyClient instance
 * @returns {Promise<boolean>} - Returns the value of the extension_installed attribute
 */
var hasExtensionInstalledAttribute = /*#__PURE__*/function () {
  var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(client) {
    var _yield$client$fetchQu, extension_installed;

    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.prev = 0;
            _context.next = 3;
            return client.fetchQueryAndGetFromState({
              definition: (0, _dsl.Q)('io.cozy.settings').getById('io.cozy.settings.bitwarden'),
              options: {
                as: 'io.cozy.settings/io.cozy.settings.bitwarden',
                singleDocData: true
              }
            });

          case 3:
            _yield$client$fetchQu = _context.sent;
            extension_installed = _yield$client$fetchQu.data.extension_installed;
            return _context.abrupt("return", Boolean(extension_installed));

          case 8:
            _context.prev = 8;
            _context.t0 = _context["catch"](0);
            return _context.abrupt("return", false);

          case 11:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, null, [[0, 8]]);
  }));

  return function hasExtensionInstalledAttribute(_x) {
    return _ref.apply(this, arguments);
  };
}();

exports.hasExtensionInstalledAttribute = hasExtensionInstalledAttribute;

/***/ }),
/* 735 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isMagicLink = exports.isOIDC = void 0;

/**
 * Checks if the instance can auth with OIDC
 *
 * @param {import("../CozyClient").default} client - The CozyClient instance
 * @returns {boolean} - Returns true if the instance can auth with OIDC
 */
var isOIDC = function isOIDC(client) {
  var _client$capabilities$;

  return (_client$capabilities$ = client.capabilities.can_auth_with_oidc) !== null && _client$capabilities$ !== void 0 ? _client$capabilities$ : false;
};
/**
 * Checks if the instance can auth with magic link
 *
 * @param {import("../CozyClient").default} client - The CozyClient instance
 * @returns {boolean} - Returns true if the instance can auth with magic link
 */


exports.isOIDC = isOIDC;

var isMagicLink = function isMagicLink(client) {
  var _client$capabilities$2;

  return (_client$capabilities$2 = client.capabilities.can_auth_with_magic_links) !== null && _client$capabilities$2 !== void 0 ? _client$capabilities$2 : false;
};

exports.isMagicLink = isMagicLink;

/***/ }),
/* 736 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.deltaLatitude = exports.deltaLongitude = exports.computeSphericalCenter = exports.geodesicDistance = exports.computeSpeed = void 0;

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

// @ts-check
var EARTH_RADIUS_M = 6378137;
var EARTH_CIRCUMFERENCE_M = 40075000;
/**
 * Compute the speed from distance and duration
 *
 * @param {number} distance - The distance in meters
 * @param {number} duration - The duration in seconds
 * @returns {number} - The speed, in m/s, rounded to 2 decimals
 */

var computeSpeed = function computeSpeed(distance, duration) {
  if (!distance || !duration) {
    return 0;
  }

  return Math.round(distance / duration * 100) / 100;
};
/**
 * Convert degrees to radians
 *
 * @param {number} degrees - The degrees to convert
 * @returns {number} The converted radians
 */


exports.computeSpeed = computeSpeed;

var degreesToRadians = function degreesToRadians(degrees) {
  return degrees * Math.PI / 180;
};
/**
 * Convert radians to degrees
 *
 * @param {number} radians - The radians to convert
 * @returns {number} The converted degrees
 */


var radiansToDegrees = function radiansToDegrees(radians) {
  return radians * 180 / Math.PI;
};
/**
 * Round the value to the n decimal
 *
 * @param {number} value - The value to round
 * @param {number} n - The number of decimals
 * @returns {number} The rounded value
 */


var roundToNDecimals = function roundToNDecimals(value, n) {
  var multiplier = Math.pow(10, n);
  return Math.round(value * multiplier) / multiplier;
};
/**
 * Compute the distance between 2 geographic points, in meters.
 *
 * This is an implementation of the Haversine formula, that
 * supposes a perfect sphere. We know this is not exactly the case
 * for Earth, especially at the poles, but this approximation is good enough.
 * More complex methods do exist, such as Vincenty formula, but we prefer
 * simplicity over precision here.
 * See https://en.wikipedia.org/wiki/Geodesics_on_an_ellipsoid
 *
 * @param {import("../types").Coordinates} point1 - The first point coordinates, in decimal degrees
 * @param {import("../types").Coordinates} point2 - The second point coordinates, in decimal degrees
 * @returns {number} The distance between the points, in meters, rounded to 2 decimals
 */


var geodesicDistance = function geodesicDistance(point1, point2) {
  if ((point1 === null || point1 === void 0 ? void 0 : point1.lon) === undefined || (point1 === null || point1 === void 0 ? void 0 : point1.lat) === undefined || (point2 === null || point2 === void 0 ? void 0 : point2.lon) === undefined || (point2 === null || point2 === void 0 ? void 0 : point2.lat) === undefined) {
    return null;
  }

  var lon1 = degreesToRadians(point1.lon);
  var lat1 = degreesToRadians(point1.lat);
  var lon2 = degreesToRadians(point2.lon);
  var lat2 = degreesToRadians(point2.lat);
  var diffLon = lon2 - lon1;
  var diffLat = lat2 - lat1;
  var aLat = Math.pow(Math.sin(diffLat / 2), 2);
  var aLon = Math.pow(Math.sin(diffLon / 2), 2);
  var a = aLat + Math.cos(lat1) * Math.cos(lat2) * aLon;
  var c = 2 * Math.asin(Math.sqrt(a));
  var distance = EARTH_RADIUS_M * c;
  return roundToNDecimals(distance, 2);
};
/**
 * Compute the geographical center of the given points
 *
 * This consists of finding the centroid of a set of points
 * in a sphere.
 * Note this assumes the Earth is a perfect sphere, which is not,
 * but the approximation should be good enough.
 *
 * @param {Array<import("../types").Coordinates>} coordinates - The geo points
 * @returns {import("../types").Coordinates} The center point
 */


exports.geodesicDistance = geodesicDistance;

var computeSphericalCenter = function computeSphericalCenter(coordinates) {
  if (coordinates.length < 1) {
    return null;
  }

  if (coordinates.length === 1) {
    return coordinates[0];
  }

  var totalX = 0;
  var totalY = 0;
  var totalZ = 0;

  var _iterator = _createForOfIteratorHelper(coordinates),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var coord = _step.value;
      var lon = degreesToRadians(coord.lon);
      var lat = degreesToRadians(coord.lat); // Convert spherical coordinates to Cartesian coordinates

      var x = Math.cos(lat) * Math.cos(lon);
      var y = Math.cos(lat) * Math.sin(lon);
      var z = Math.sin(lat);
      totalX += x;
      totalY += y;
      totalZ += z;
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  var avgX = totalX / coordinates.length;
  var avgY = totalY / coordinates.length;
  var avgZ = totalZ / coordinates.length; // Don't forget to convert Cartesian coordinates back to spherical

  var centralLon = radiansToDegrees(Math.atan2(avgY, avgX));
  var hyp = Math.sqrt(avgX * avgX + avgY * avgY);
  var centralLat = radiansToDegrees(Math.atan2(avgZ, hyp));
  return {
    lat: roundToNDecimals(centralLat, 13),
    lon: roundToNDecimals(centralLon, 13)
  };
};
/**
 * Compute the longitude delta from a distance, in meters.
 *
 * This requires the latitude: we want to compute the horizontal delta
 * on the Earth surface. As it is a sphere (kind of), this delta won't be
 * the same depending on whether it is on the equator (min variation)
 * or on the poles (max variation), for instance.
 *
 * @param {number} latitude - The latitude
 * @param {number} distance - The distance in meters
 * @returns {number} the longitude delta degrees
 */


exports.computeSphericalCenter = computeSphericalCenter;

var deltaLongitude = function deltaLongitude(latitude, distance) {
  var phi = degreesToRadians(latitude);
  var deltaLambda = distance / (EARTH_RADIUS_M * Math.cos(phi));
  return roundToNDecimals(radiansToDegrees(deltaLambda), 13);
};
/**
 * Compute the latitude delta from a distance, in meters.
 *
 * The reasoning is rather simple: there are 360° of latitudes of same distance.
 * Then, it consists of computing 1 degree distance, and divide the
 * given distance by this value.
 *
 * @param {number} distance - The distance in meters
 * @returns {number} The delta latitude degrees
 */


exports.deltaLongitude = deltaLongitude;

var deltaLatitude = function deltaLatitude(distance) {
  var distOneLatDegree = EARTH_CIRCUMFERENCE_M / 360; // 111 319 meters per degree

  var deltaLat = distance / distOneLatDegree;
  return roundToNDecimals(deltaLat, 13);
};

exports.deltaLatitude = deltaLatitude;

/***/ }),
/* 737 */,
/* 738 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "__DO_NOT_USE__ActionTypes", function() { return /* binding */ ActionTypes; });
__webpack_require__.d(__webpack_exports__, "applyMiddleware", function() { return /* binding */ applyMiddleware; });
__webpack_require__.d(__webpack_exports__, "bindActionCreators", function() { return /* binding */ bindActionCreators; });
__webpack_require__.d(__webpack_exports__, "combineReducers", function() { return /* binding */ combineReducers; });
__webpack_require__.d(__webpack_exports__, "compose", function() { return /* binding */ compose; });
__webpack_require__.d(__webpack_exports__, "createStore", function() { return /* binding */ redux_createStore; });

// CONCATENATED MODULE: ./node_modules/redux/node_modules/@babel/runtime/helpers/esm/defineProperty.js
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}
// CONCATENATED MODULE: ./node_modules/redux/node_modules/@babel/runtime/helpers/esm/objectSpread2.js


function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {
      _defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }

  return target;
}
// CONCATENATED MODULE: ./node_modules/redux/es/redux.js


/**
 * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js
 *
 * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes
 * during build.
 * @param {number} code
 */
function formatProdErrorMessage(code) {
  return "Minified Redux error #" + code + "; visit https://redux.js.org/Errors?code=" + code + " for the full message or " + 'use the non-minified dev environment for full errors. ';
}

// Inlined version of the `symbol-observable` polyfill
var $$observable = (function () {
  return typeof Symbol === 'function' && Symbol.observable || '@@observable';
})();

/**
 * These are private action types reserved by Redux.
 * For any unknown actions, you must return the current state.
 * If the current state is undefined, you must return the initial state.
 * Do not reference these action types directly in your code.
 */
var randomString = function randomString() {
  return Math.random().toString(36).substring(7).split('').join('.');
};

var ActionTypes = {
  INIT: "@@redux/INIT" + randomString(),
  REPLACE: "@@redux/REPLACE" + randomString(),
  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {
    return "@@redux/PROBE_UNKNOWN_ACTION" + randomString();
  }
};

/**
 * @param {any} obj The object to inspect.
 * @returns {boolean} True if the argument appears to be a plain object.
 */
function isPlainObject(obj) {
  if (typeof obj !== 'object' || obj === null) return false;
  var proto = obj;

  while (Object.getPrototypeOf(proto) !== null) {
    proto = Object.getPrototypeOf(proto);
  }

  return Object.getPrototypeOf(obj) === proto;
}

// Inlined / shortened version of `kindOf` from https://github.com/jonschlinkert/kind-of
function miniKindOf(val) {
  if (val === void 0) return 'undefined';
  if (val === null) return 'null';
  var type = typeof val;

  switch (type) {
    case 'boolean':
    case 'string':
    case 'number':
    case 'symbol':
    case 'function':
      {
        return type;
      }
  }

  if (Array.isArray(val)) return 'array';
  if (isDate(val)) return 'date';
  if (isError(val)) return 'error';
  var constructorName = ctorName(val);

  switch (constructorName) {
    case 'Symbol':
    case 'Promise':
    case 'WeakMap':
    case 'WeakSet':
    case 'Map':
    case 'Set':
      return constructorName;
  } // other


  return type.slice(8, -1).toLowerCase().replace(/\s/g, '');
}

function ctorName(val) {
  return typeof val.constructor === 'function' ? val.constructor.name : null;
}

function isError(val) {
  return val instanceof Error || typeof val.message === 'string' && val.constructor && typeof val.constructor.stackTraceLimit === 'number';
}

function isDate(val) {
  if (val instanceof Date) return true;
  return typeof val.toDateString === 'function' && typeof val.getDate === 'function' && typeof val.setDate === 'function';
}

function kindOf(val) {
  var typeOfVal = typeof val;

  if (false) {}

  return typeOfVal;
}

/**
 * Creates a Redux store that holds the state tree.
 * The only way to change the data in the store is to call `dispatch()` on it.
 *
 * There should only be a single store in your app. To specify how different
 * parts of the state tree respond to actions, you may combine several reducers
 * into a single reducer function by using `combineReducers`.
 *
 * @param {Function} reducer A function that returns the next state tree, given
 * the current state tree and the action to handle.
 *
 * @param {any} [preloadedState] The initial state. You may optionally specify it
 * to hydrate the state from the server in universal apps, or to restore a
 * previously serialized user session.
 * If you use `combineReducers` to produce the root reducer function, this must be
 * an object with the same shape as `combineReducers` keys.
 *
 * @param {Function} [enhancer] The store enhancer. You may optionally specify it
 * to enhance the store with third-party capabilities such as middleware,
 * time travel, persistence, etc. The only store enhancer that ships with Redux
 * is `applyMiddleware()`.
 *
 * @returns {Store} A Redux store that lets you read the state, dispatch actions
 * and subscribe to changes.
 */

function redux_createStore(reducer, preloadedState, enhancer) {
  var _ref2;

  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {
    throw new Error( true ? formatProdErrorMessage(0) : undefined);
  }

  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {
    enhancer = preloadedState;
    preloadedState = undefined;
  }

  if (typeof enhancer !== 'undefined') {
    if (typeof enhancer !== 'function') {
      throw new Error( true ? formatProdErrorMessage(1) : undefined);
    }

    return enhancer(redux_createStore)(reducer, preloadedState);
  }

  if (typeof reducer !== 'function') {
    throw new Error( true ? formatProdErrorMessage(2) : undefined);
  }

  var currentReducer = reducer;
  var currentState = preloadedState;
  var currentListeners = [];
  var nextListeners = currentListeners;
  var isDispatching = false;
  /**
   * This makes a shallow copy of currentListeners so we can use
   * nextListeners as a temporary list while dispatching.
   *
   * This prevents any bugs around consumers calling
   * subscribe/unsubscribe in the middle of a dispatch.
   */

  function ensureCanMutateNextListeners() {
    if (nextListeners === currentListeners) {
      nextListeners = currentListeners.slice();
    }
  }
  /**
   * Reads the state tree managed by the store.
   *
   * @returns {any} The current state tree of your application.
   */


  function getState() {
    if (isDispatching) {
      throw new Error( true ? formatProdErrorMessage(3) : undefined);
    }

    return currentState;
  }
  /**
   * Adds a change listener. It will be called any time an action is dispatched,
   * and some part of the state tree may potentially have changed. You may then
   * call `getState()` to read the current state tree inside the callback.
   *
   * You may call `dispatch()` from a change listener, with the following
   * caveats:
   *
   * 1. The subscriptions are snapshotted just before every `dispatch()` call.
   * If you subscribe or unsubscribe while the listeners are being invoked, this
   * will not have any effect on the `dispatch()` that is currently in progress.
   * However, the next `dispatch()` call, whether nested or not, will use a more
   * recent snapshot of the subscription list.
   *
   * 2. The listener should not expect to see all state changes, as the state
   * might have been updated multiple times during a nested `dispatch()` before
   * the listener is called. It is, however, guaranteed that all subscribers
   * registered before the `dispatch()` started will be called with the latest
   * state by the time it exits.
   *
   * @param {Function} listener A callback to be invoked on every dispatch.
   * @returns {Function} A function to remove this change listener.
   */


  function subscribe(listener) {
    if (typeof listener !== 'function') {
      throw new Error( true ? formatProdErrorMessage(4) : undefined);
    }

    if (isDispatching) {
      throw new Error( true ? formatProdErrorMessage(5) : undefined);
    }

    var isSubscribed = true;
    ensureCanMutateNextListeners();
    nextListeners.push(listener);
    return function unsubscribe() {
      if (!isSubscribed) {
        return;
      }

      if (isDispatching) {
        throw new Error( true ? formatProdErrorMessage(6) : undefined);
      }

      isSubscribed = false;
      ensureCanMutateNextListeners();
      var index = nextListeners.indexOf(listener);
      nextListeners.splice(index, 1);
      currentListeners = null;
    };
  }
  /**
   * Dispatches an action. It is the only way to trigger a state change.
   *
   * The `reducer` function, used to create the store, will be called with the
   * current state tree and the given `action`. Its return value will
   * be considered the **next** state of the tree, and the change listeners
   * will be notified.
   *
   * The base implementation only supports plain object actions. If you want to
   * dispatch a Promise, an Observable, a thunk, or something else, you need to
   * wrap your store creating function into the corresponding middleware. For
   * example, see the documentation for the `redux-thunk` package. Even the
   * middleware will eventually dispatch plain object actions using this method.
   *
   * @param {Object} action A plain object representing “what changed”. It is
   * a good idea to keep actions serializable so you can record and replay user
   * sessions, or use the time travelling `redux-devtools`. An action must have
   * a `type` property which may not be `undefined`. It is a good idea to use
   * string constants for action types.
   *
   * @returns {Object} For convenience, the same action object you dispatched.
   *
   * Note that, if you use a custom middleware, it may wrap `dispatch()` to
   * return something else (for example, a Promise you can await).
   */


  function dispatch(action) {
    if (!isPlainObject(action)) {
      throw new Error( true ? formatProdErrorMessage(7) : undefined);
    }

    if (typeof action.type === 'undefined') {
      throw new Error( true ? formatProdErrorMessage(8) : undefined);
    }

    if (isDispatching) {
      throw new Error( true ? formatProdErrorMessage(9) : undefined);
    }

    try {
      isDispatching = true;
      currentState = currentReducer(currentState, action);
    } finally {
      isDispatching = false;
    }

    var listeners = currentListeners = nextListeners;

    for (var i = 0; i < listeners.length; i++) {
      var listener = listeners[i];
      listener();
    }

    return action;
  }
  /**
   * Replaces the reducer currently used by the store to calculate the state.
   *
   * You might need this if your app implements code splitting and you want to
   * load some of the reducers dynamically. You might also need this if you
   * implement a hot reloading mechanism for Redux.
   *
   * @param {Function} nextReducer The reducer for the store to use instead.
   * @returns {void}
   */


  function replaceReducer(nextReducer) {
    if (typeof nextReducer !== 'function') {
      throw new Error( true ? formatProdErrorMessage(10) : undefined);
    }

    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.
    // Any reducers that existed in both the new and old rootReducer
    // will receive the previous state. This effectively populates
    // the new state tree with any relevant data from the old one.

    dispatch({
      type: ActionTypes.REPLACE
    });
  }
  /**
   * Interoperability point for observable/reactive libraries.
   * @returns {observable} A minimal observable of state changes.
   * For more information, see the observable proposal:
   * https://github.com/tc39/proposal-observable
   */


  function observable() {
    var _ref;

    var outerSubscribe = subscribe;
    return _ref = {
      /**
       * The minimal observable subscription method.
       * @param {Object} observer Any object that can be used as an observer.
       * The observer object should have a `next` method.
       * @returns {subscription} An object with an `unsubscribe` method that can
       * be used to unsubscribe the observable from the store, and prevent further
       * emission of values from the observable.
       */
      subscribe: function subscribe(observer) {
        if (typeof observer !== 'object' || observer === null) {
          throw new Error( true ? formatProdErrorMessage(11) : undefined);
        }

        function observeState() {
          if (observer.next) {
            observer.next(getState());
          }
        }

        observeState();
        var unsubscribe = outerSubscribe(observeState);
        return {
          unsubscribe: unsubscribe
        };
      }
    }, _ref[$$observable] = function () {
      return this;
    }, _ref;
  } // When a store is created, an "INIT" action is dispatched so that every
  // reducer returns their initial state. This effectively populates
  // the initial state tree.


  dispatch({
    type: ActionTypes.INIT
  });
  return _ref2 = {
    dispatch: dispatch,
    subscribe: subscribe,
    getState: getState,
    replaceReducer: replaceReducer
  }, _ref2[$$observable] = observable, _ref2;
}

/**
 * Prints a warning in the console if it exists.
 *
 * @param {String} message The warning message.
 * @returns {void}
 */
function warning(message) {
  /* eslint-disable no-console */
  if (typeof console !== 'undefined' && typeof console.error === 'function') {
    console.error(message);
  }
  /* eslint-enable no-console */


  try {
    // This error was thrown as a convenience so that if you enable
    // "break on all exceptions" in your console,
    // it would pause the execution at this line.
    throw new Error(message);
  } catch (e) {} // eslint-disable-line no-empty

}

function getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {
  var reducerKeys = Object.keys(reducers);
  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';

  if (reducerKeys.length === 0) {
    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';
  }

  if (!isPlainObject(inputState)) {
    return "The " + argumentName + " has unexpected type of \"" + kindOf(inputState) + "\". Expected argument to be an object with the following " + ("keys: \"" + reducerKeys.join('", "') + "\"");
  }

  var unexpectedKeys = Object.keys(inputState).filter(function (key) {
    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];
  });
  unexpectedKeys.forEach(function (key) {
    unexpectedKeyCache[key] = true;
  });
  if (action && action.type === ActionTypes.REPLACE) return;

  if (unexpectedKeys.length > 0) {
    return "Unexpected " + (unexpectedKeys.length > 1 ? 'keys' : 'key') + " " + ("\"" + unexpectedKeys.join('", "') + "\" found in " + argumentName + ". ") + "Expected to find one of the known reducer keys instead: " + ("\"" + reducerKeys.join('", "') + "\". Unexpected keys will be ignored.");
  }
}

function assertReducerShape(reducers) {
  Object.keys(reducers).forEach(function (key) {
    var reducer = reducers[key];
    var initialState = reducer(undefined, {
      type: ActionTypes.INIT
    });

    if (typeof initialState === 'undefined') {
      throw new Error( true ? formatProdErrorMessage(12) : undefined);
    }

    if (typeof reducer(undefined, {
      type: ActionTypes.PROBE_UNKNOWN_ACTION()
    }) === 'undefined') {
      throw new Error( true ? formatProdErrorMessage(13) : undefined);
    }
  });
}
/**
 * Turns an object whose values are different reducer functions, into a single
 * reducer function. It will call every child reducer, and gather their results
 * into a single state object, whose keys correspond to the keys of the passed
 * reducer functions.
 *
 * @param {Object} reducers An object whose values correspond to different
 * reducer functions that need to be combined into one. One handy way to obtain
 * it is to use ES6 `import * as reducers` syntax. The reducers may never return
 * undefined for any action. Instead, they should return their initial state
 * if the state passed to them was undefined, and the current state for any
 * unrecognized action.
 *
 * @returns {Function} A reducer function that invokes every reducer inside the
 * passed object, and builds a state object with the same shape.
 */


function combineReducers(reducers) {
  var reducerKeys = Object.keys(reducers);
  var finalReducers = {};

  for (var i = 0; i < reducerKeys.length; i++) {
    var key = reducerKeys[i];

    if (false) {}

    if (typeof reducers[key] === 'function') {
      finalReducers[key] = reducers[key];
    }
  }

  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same
  // keys multiple times.

  var unexpectedKeyCache;

  if (false) {}

  var shapeAssertionError;

  try {
    assertReducerShape(finalReducers);
  } catch (e) {
    shapeAssertionError = e;
  }

  return function combination(state, action) {
    if (state === void 0) {
      state = {};
    }

    if (shapeAssertionError) {
      throw shapeAssertionError;
    }

    if (false) { var warningMessage; }

    var hasChanged = false;
    var nextState = {};

    for (var _i = 0; _i < finalReducerKeys.length; _i++) {
      var _key = finalReducerKeys[_i];
      var reducer = finalReducers[_key];
      var previousStateForKey = state[_key];
      var nextStateForKey = reducer(previousStateForKey, action);

      if (typeof nextStateForKey === 'undefined') {
        var actionType = action && action.type;
        throw new Error( true ? formatProdErrorMessage(14) : undefined);
      }

      nextState[_key] = nextStateForKey;
      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;
    }

    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;
    return hasChanged ? nextState : state;
  };
}

function bindActionCreator(actionCreator, dispatch) {
  return function () {
    return dispatch(actionCreator.apply(this, arguments));
  };
}
/**
 * Turns an object whose values are action creators, into an object with the
 * same keys, but with every function wrapped into a `dispatch` call so they
 * may be invoked directly. This is just a convenience method, as you can call
 * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.
 *
 * For convenience, you can also pass an action creator as the first argument,
 * and get a dispatch wrapped function in return.
 *
 * @param {Function|Object} actionCreators An object whose values are action
 * creator functions. One handy way to obtain it is to use ES6 `import * as`
 * syntax. You may also pass a single function.
 *
 * @param {Function} dispatch The `dispatch` function available on your Redux
 * store.
 *
 * @returns {Function|Object} The object mimicking the original object, but with
 * every action creator wrapped into the `dispatch` call. If you passed a
 * function as `actionCreators`, the return value will also be a single
 * function.
 */


function bindActionCreators(actionCreators, dispatch) {
  if (typeof actionCreators === 'function') {
    return bindActionCreator(actionCreators, dispatch);
  }

  if (typeof actionCreators !== 'object' || actionCreators === null) {
    throw new Error( true ? formatProdErrorMessage(16) : undefined);
  }

  var boundActionCreators = {};

  for (var key in actionCreators) {
    var actionCreator = actionCreators[key];

    if (typeof actionCreator === 'function') {
      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);
    }
  }

  return boundActionCreators;
}

/**
 * Composes single-argument functions from right to left. The rightmost
 * function can take multiple arguments as it provides the signature for
 * the resulting composite function.
 *
 * @param {...Function} funcs The functions to compose.
 * @returns {Function} A function obtained by composing the argument functions
 * from right to left. For example, compose(f, g, h) is identical to doing
 * (...args) => f(g(h(...args))).
 */
function compose() {
  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {
    funcs[_key] = arguments[_key];
  }

  if (funcs.length === 0) {
    return function (arg) {
      return arg;
    };
  }

  if (funcs.length === 1) {
    return funcs[0];
  }

  return funcs.reduce(function (a, b) {
    return function () {
      return a(b.apply(void 0, arguments));
    };
  });
}

/**
 * Creates a store enhancer that applies middleware to the dispatch method
 * of the Redux store. This is handy for a variety of tasks, such as expressing
 * asynchronous actions in a concise manner, or logging every action payload.
 *
 * See `redux-thunk` package as an example of the Redux middleware.
 *
 * Because middleware is potentially asynchronous, this should be the first
 * store enhancer in the composition chain.
 *
 * Note that each middleware will be given the `dispatch` and `getState` functions
 * as named arguments.
 *
 * @param {...Function} middlewares The middleware chain to be applied.
 * @returns {Function} A store enhancer applying the middleware.
 */

function applyMiddleware() {
  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {
    middlewares[_key] = arguments[_key];
  }

  return function (createStore) {
    return function () {
      var store = createStore.apply(void 0, arguments);

      var _dispatch = function dispatch() {
        throw new Error( true ? formatProdErrorMessage(15) : undefined);
      };

      var middlewareAPI = {
        getState: store.getState,
        dispatch: function dispatch() {
          return _dispatch.apply(void 0, arguments);
        }
      };
      var chain = middlewares.map(function (middleware) {
        return middleware(middlewareAPI);
      });
      _dispatch = compose.apply(void 0, chain)(store.dispatch);
      return _objectSpread2(_objectSpread2({}, store), {}, {
        dispatch: _dispatch
      });
    };
  };
}

/*
 * This is a dummy function to check if the function name has been altered by minification.
 * If the function has been minified and NODE_ENV !== 'production', warn the user.
 */

function isCrushed() {}

if (false) {}




/***/ }),
/* 739 */,
/* 740 */,
/* 741 */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.sum` and `_.sumBy` without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {number} Returns the sum.
 */
function baseSum(array, iteratee) {
  var result,
      index = -1,
      length = array.length;

  while (++index < length) {
    var current = iteratee(array[index]);
    if (current !== undefined) {
      result = result === undefined ? current : (result + current);
    }
  }
  return result;
}

module.exports = baseSum;


/***/ }),
/* 742 */
/***/ (function(module, exports, __webpack_require__) {

var baseToPairs = __webpack_require__(743),
    getTag = __webpack_require__(63),
    mapToArray = __webpack_require__(326),
    setToPairs = __webpack_require__(744);

/** `Object#toString` result references. */
var mapTag = '[object Map]',
    setTag = '[object Set]';

/**
 * Creates a `_.toPairs` or `_.toPairsIn` function.
 *
 * @private
 * @param {Function} keysFunc The function to get the keys of a given object.
 * @returns {Function} Returns the new pairs function.
 */
function createToPairs(keysFunc) {
  return function(object) {
    var tag = getTag(object);
    if (tag == mapTag) {
      return mapToArray(object);
    }
    if (tag == setTag) {
      return setToPairs(object);
    }
    return baseToPairs(object, keysFunc(object));
  };
}

module.exports = createToPairs;


/***/ }),
/* 743 */
/***/ (function(module, exports, __webpack_require__) {

var arrayMap = __webpack_require__(37);

/**
 * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
 * of key-value pairs for `object` corresponding to the property names of `props`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array} props The property names to get values for.
 * @returns {Object} Returns the key-value pairs.
 */
function baseToPairs(object, props) {
  return arrayMap(props, function(key) {
    return [key, object[key]];
  });
}

module.exports = baseToPairs;


/***/ }),
/* 744 */
/***/ (function(module, exports) {

/**
 * Converts `set` to its value-value pairs.
 *
 * @private
 * @param {Object} set The set to convert.
 * @returns {Array} Returns the value-value pairs.
 */
function setToPairs(set) {
  var index = -1,
      result = Array(set.size);

  set.forEach(function(value) {
    result[++index] = [value, value];
  });
  return result;
}

module.exports = setToPairs;


/***/ }),
/* 745 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// default filter
var Transform = __webpack_require__(34);

var levelMap = {
  debug: 1,
  info: 2,
  warn: 3,
  error: 4
};

function Filter() {
  this.enabled = true;
  this.defaultResult = true;
  this.clear();
}

Transform.mixin(Filter); // allow all matching, with level >= given level

Filter.prototype.allow = function (name, level) {
  this._white.push({
    n: name,
    l: levelMap[level]
  });

  return this;
}; // deny all matching, with level <= given level


Filter.prototype.deny = function (name, level) {
  this._black.push({
    n: name,
    l: levelMap[level]
  });

  return this;
};

Filter.prototype.clear = function () {
  this._white = [];
  this._black = [];
  return this;
};

function test(rule, name) {
  // use .test for RegExps
  return rule.n.test ? rule.n.test(name) : rule.n == name;
}

Filter.prototype.test = function (name, level) {
  var i,
      len = Math.max(this._white.length, this._black.length);

  for (i = 0; i < len; i++) {
    if (this._white[i] && test(this._white[i], name) && levelMap[level] >= this._white[i].l) {
      return true;
    }

    if (this._black[i] && test(this._black[i], name) && levelMap[level] <= this._black[i].l) {
      return false;
    }
  }

  return this.defaultResult;
};

Filter.prototype.write = function (name, level, args) {
  if (!this.enabled || this.test(name, level)) {
    return this.emit('item', name, level, args);
  }
};

module.exports = Filter;

/***/ }),
/* 746 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/* eslint-disable no-console */
var Transform = __webpack_require__(34);

function ConsoleBackend() {}

Transform.mixin(ConsoleBackend);

ConsoleBackend.prototype.write = function () {
  console.log.apply(console, arguments);
};

var e = new ConsoleBackend(); // eslint-disable-next-line no-unused-vars

var levelMap = __webpack_require__(96).levelMap;

e.filterEnv = function () {
  console.error('Minilog.backends.console.filterEnv is deprecated in Minilog v2.'); // return the instance of Minilog

  return __webpack_require__(338);
};

e.formatters = ['formatClean', 'formatColor', 'formatNpm', 'formatLearnboost', 'formatMinilog', 'formatWithStack', 'formatTime'];
e.formatClean = new (__webpack_require__(747))();
e.formatColor = new (__webpack_require__(748))();
e.formatNpm = new (__webpack_require__(749))();
e.formatLearnboost = new (__webpack_require__(750))();
e.formatMinilog = new (__webpack_require__(751))();
e.formatWithStack = new (__webpack_require__(752))();
e.formatTime = new (__webpack_require__(753))();
exports.ConsoleBackend = ConsoleBackend;
module.exports = e;

/***/ }),
/* 747 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Transform = __webpack_require__(34);

function FormatClean() {}

Transform.mixin(FormatClean);

FormatClean.prototype.write = function (name, level, args) {
  // eslint-disable-next-line no-unused-vars
  function pad(s) {
    return s.toString().length == 1 ? '0' + s : s;
  }

  this.emit('item', (name ? name + ' ' : '') + (level ? level + ' ' : '') + args.join(' '));
};

module.exports = FormatClean;

/***/ }),
/* 748 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Transform = __webpack_require__(34),
    style = __webpack_require__(96).style;

function FormatColor() {}

Transform.mixin(FormatColor);

FormatColor.prototype.write = function (name, level, args) {
  var colors = {
    debug: 'magenta',
    info: 'cyan',
    warn: 'yellow',
    error: 'red'
  };

  function pad(s) {
    return s.toString().length == 4 ? ' ' + s : s;
  }

  this.emit('item', (name ? name + ' ' : '') + (level ? style('- ' + pad(level.toUpperCase()) + ' -', colors[level]) + ' ' : '') + args.join(' '));
};

module.exports = FormatColor;

/***/ }),
/* 749 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Transform = __webpack_require__(34);

function FormatNpm() {}

Transform.mixin(FormatNpm);

FormatNpm.prototype.write = function (name, level, args) {
  var out = {
    debug: '\x1B[34;40m' + 'debug' + '\x1B[39m ',
    info: '\x1B[32m' + 'info' + '\x1B[39m  ',
    warn: '\x1B[30;41m' + 'WARN' + '\x1B[0m  ',
    error: '\x1B[31;40m' + 'ERR!' + '\x1B[0m  '
  };
  this.emit('item', (name ? '\x1B[37;40m' + name + '\x1B[0m ' : '') + (level && out[level] ? out[level] : '') + args.join(' '));
};

module.exports = FormatNpm;

/***/ }),
/* 750 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Transform = __webpack_require__(34),
    style = __webpack_require__(96).style;

function FormatLearnboost() {}

Transform.mixin(FormatLearnboost);

FormatLearnboost.prototype.write = function (name, level, args) {
  var colors = {
    debug: 'grey',
    info: 'cyan',
    warn: 'yellow',
    error: 'red'
  };
  this.emit('item', (name ? style(name + ' ', 'grey') : '') + (level ? style(level, colors[level]) + ' ' : '') + args.join(' '));
};

module.exports = FormatLearnboost;

/***/ }),
/* 751 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Transform = __webpack_require__(34),
    style = __webpack_require__(96).style,
    util = __webpack_require__(30);

function FormatMinilog() {}

Transform.mixin(FormatMinilog);

FormatMinilog.prototype.write = function (name, level, args) {
  var colors = {
    debug: 'blue',
    info: 'cyan',
    warn: 'yellow',
    error: 'red'
  };
  this.emit('item', (name ? style(name + ' ', 'grey') : '') + (level ? style(level, colors[level]) + ' ' : '') + args.map(function (item) {
    return typeof item == 'string' ? item : util.inspect(item, null, 3, true);
  }).join(' '));
};

module.exports = FormatMinilog;

/***/ }),
/* 752 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Transform = __webpack_require__(34),
    style = __webpack_require__(96).style;

function FormatNpm() {}

Transform.mixin(FormatNpm);

function noop(a) {
  return a;
}

var types = {
  string: noop,
  number: noop,
  default: JSON.stringify.bind(JSON)
};

function stringify(args) {
  return args.map(function (arg) {
    return (types[typeof arg] || types.default)(arg);
  });
}

FormatNpm.prototype.write = function (name, level, args) {
  var colors = {
    debug: 'magenta',
    info: 'cyan',
    warn: 'yellow',
    error: 'red'
  };

  function pad(s) {
    return s.toString().length == 4 ? ' ' + s : s;
  }

  function getStack() {
    var orig = Error.prepareStackTrace;

    Error.prepareStackTrace = function (err, stack) {
      return stack;
    };

    var err = new Error();
    Error.captureStackTrace(err, arguments.callee);
    var stack = err.stack;
    Error.prepareStackTrace = orig;
    return stack;
  }

  var frame = getStack()[5],
      fileName = FormatNpm.fullPath ? frame.getFileName() : frame.getFileName().replace(/^.*\/(.+)$/, '/$1');
  this.emit('item', (name ? name + ' ' : '') + (level ? style(pad(level), colors[level]) + ' ' : '') + style(fileName + ':' + frame.getLineNumber(), 'grey') + ' ' + stringify(args).join(' '));
};

FormatNpm.fullPath = true;
module.exports = FormatNpm;

/***/ }),
/* 753 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Transform = __webpack_require__(34),
    style = __webpack_require__(96).style,
    util = __webpack_require__(30);

function FormatTime() {}

function timestamp() {
  var d = new Date();
  return ('0' + d.getDate()).slice(-2) + '-' + ('0' + (d.getMonth() + 1)).slice(-2) + '-' + d.getFullYear() + ' ' + ('0' + d.getHours()).slice(-2) + ':' + ('0' + d.getMinutes()).slice(-2) + ':' + ('0' + d.getSeconds()).slice(-2) + '.' + ('00' + d.getMilliseconds()).slice(-3);
}

Transform.mixin(FormatTime);

FormatTime.prototype.write = function (name, level, args) {
  var colors = {
    debug: 'blue',
    info: 'cyan',
    warn: 'yellow',
    error: 'red'
  };
  this.emit('item', style(timestamp() + ' ', 'grey') + (name ? style(name + ' ', 'grey') : '') + (level ? style(level, colors[level]) + ' ' : '') + args.map(function (item) {
    return typeof item == 'string' ? item : util.inspect(item, null, 3, true);
  }).join(' '));
};

module.exports = FormatTime;

/***/ }),
/* 754 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/* eslint-disable no-console */
var Transform = __webpack_require__(34);

var newlines = /\n+$/,
    logger = new Transform();

logger.write = function (name, level, args) {
  var i = args.length - 1;

  if (typeof console === 'undefined' || !console.log) {
    return;
  }

  if (console.log.apply) {
    return console.log.apply(console, [name, level].concat(args));
  } else if (JSON && JSON.stringify) {
    // console.log.apply is undefined in IE8 and IE9
    // for IE8/9: make console.log at least a bit less awful
    if (args[i] && typeof args[i] == 'string') {
      args[i] = args[i].replace(newlines, '');
    }

    try {
      for (i = 0; i < args.length; i++) {
        args[i] = JSON.stringify(args[i]);
      }
    } catch (e) {// ignore
    }

    console.log(args.join(' '));
  }
};

logger.formatters = ['color', 'minilog'];
logger.color = __webpack_require__(755);
logger.minilog = __webpack_require__(756);
module.exports = logger;

/***/ }),
/* 755 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/* eslint-disable no-console */
var Transform = __webpack_require__(34),
    color = __webpack_require__(339);

var colors = {
  debug: ['cyan'],
  info: ['purple'],
  warn: ['yellow', true],
  error: ['red', true]
},
    logger = new Transform();

logger.write = function (name, level, args) {
  var fn = console.log;

  if (console[level] && console[level].apply) {
    fn = console[level];
    fn.apply(console, ['%c' + name + ' %c' + level, color('gray'), color.apply(color, colors[level])].concat(args));
  }
}; // NOP, because piping the formatted logs can only cause trouble.


logger.pipe = function () {};

module.exports = logger;

/***/ }),
/* 756 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/* eslint-disable no-console */
var Transform = __webpack_require__(34),
    color = __webpack_require__(339),
    colors = {
  debug: ['gray'],
  info: ['purple'],
  warn: ['yellow', true],
  error: ['red', true]
},
    logger = new Transform();

logger.write = function (name, level, args) {
  var fn = console.log;

  if (level != 'debug' && console[level]) {
    fn = console[level];
  } // eslint-disable-next-line no-unused-vars


  var subset = [],
      i = 0;

  if (level != 'info') {
    for (; i < args.length; i++) {
      if (typeof args[i] != 'string') break;
    }

    fn.apply(console, ['%c' + name + ' ' + args.slice(0, i).join(' '), color.apply(color, colors[level])].concat(args.slice(i)));
  } else {
    fn.apply(console, ['%c' + name, color.apply(color, colors[level])].concat(args));
  }
}; // NOP, because piping the formatted logs can only cause trouble.


logger.pipe = function () {};

module.exports = logger;

/***/ }),
/* 757 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Transform = __webpack_require__(34);

function Stringify() {}

Transform.mixin(Stringify);

Stringify.prototype.write = function (name, level, args) {
  var result = [];
  if (name) result.push(name);
  if (level) result.push(level);
  result = result.concat(args);

  for (var i = 0; i < result.length; i++) {
    if (result[i] && typeof result[i] == 'object') {
      // Buffers in Node.js look bad when stringified
      if (result[i].constructor && result[i].constructor.isBuffer) {
        result[i] = result[i].toString();
      } else {
        try {
          result[i] = JSON.stringify(result[i]);
        } catch (stringifyError) {// happens when an object has a circular structure
          // do not throw an error, when printing, the toString() method of the object will be used
        }
      }
    } else {
      // eslint-disable-next-line no-self-assign
      result[i] = result[i];
    }
  }

  this.emit('item', result.join(' ') + '\n');
};

module.exports = Stringify;

/***/ }),
/* 758 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function RedisBackend(options) {
  this.client = options.client;
  this.key = options.key;
}

RedisBackend.prototype.write = function (str) {
  this.client.rpush(this.key, str);
};

RedisBackend.prototype.end = function () {};

RedisBackend.prototype.clear = function (cb) {
  this.client.del(this.key, cb);
};

module.exports = RedisBackend;

/***/ }),
/* 759 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var l=Symbol.for("react.element"),n=Symbol.for("react.portal"),p=Symbol.for("react.fragment"),q=Symbol.for("react.strict_mode"),r=Symbol.for("react.profiler"),t=Symbol.for("react.provider"),u=Symbol.for("react.context"),v=Symbol.for("react.forward_ref"),w=Symbol.for("react.suspense"),x=Symbol.for("react.memo"),y=Symbol.for("react.lazy"),z=Symbol.iterator;function A(a){if(null===a||"object"!==typeof a)return null;a=z&&a[z]||a["@@iterator"];return"function"===typeof a?a:null}
var B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};
E.prototype.setState=function(a,b){if("object"!==typeof a&&"function"!==typeof a&&null!=a)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,a,b,"setState")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,"forceUpdate")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;
H.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};
function M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=""+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}
function N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return"object"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={"=":"=0",":":"=2"};return"$"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\/+/g;function Q(a,b){return"object"===typeof a&&null!==a&&null!=a.key?escape(""+a.key):b.toString(36)}
function R(a,b,e,d,c){var k=typeof a;if("undefined"===k||"boolean"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case "string":case "number":h=!0;break;case "object":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=""===d?"."+Q(h,0):d,I(c)?(e="",null!=a&&(e=a.replace(P,"$&/")+"/"),R(c,b,e,"",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?"":(""+c.key).replace(P,"$&/")+"/")+a)),b.push(c)),1;h=0;d=""===d?".":d+":";if(I(a))for(var g=0;g<a.length;g++){k=
a[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),"function"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if("object"===k)throw b=String(a),Error("Objects are not valid as a React child (found: "+("[object Object]"===b?"object with keys {"+Object.keys(a).join(", ")+"}":b)+"). If you meant to render a collection of children, use an array instead.");return h}
function S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,"","",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}
var U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};exports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error("React.Children.only expected to receive a single React element child.");return a}};exports.Component=E;exports.Fragment=p;
exports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;
exports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+a+".");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=""+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);
for(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};
exports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.");};
exports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};exports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};
exports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};exports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};
exports.useTransition=function(){return U.current.useTransition()};exports.version="18.2.0";


/***/ }),
/* 760 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var define = __webpack_require__(97);
var callBind = __webpack_require__(60);
var callBound = __webpack_require__(24);
var RequireObjectCoercible = __webpack_require__(114);

var implementation = __webpack_require__(343);
var getPolyfill = __webpack_require__(353);
var polyfill = getPolyfill();
var shim = __webpack_require__(787);

var $slice = callBound('Array.prototype.slice');

var bound = callBind.apply(polyfill);
// eslint-disable-next-line no-unused-vars
var boundCoercible = function forEach(array, callbackfn) {
	RequireObjectCoercible(array);
	return bound(array, $slice(arguments, 1));
};

define(boundCoercible, {
	getPolyfill: getPolyfill,
	implementation: implementation,
	shim: shim
});

module.exports = boundCoercible;


/***/ }),
/* 761 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var GetIntrinsic = __webpack_require__(42);

var $TypeError = GetIntrinsic('%TypeError%');

// http://262.ecma-international.org/5.1/#sec-9.10

module.exports = function CheckObjectCoercible(value, optMessage) {
	if (value == null) {
		throw new $TypeError(optMessage || ('Cannot call method on ' + value));
	}
	return value;
};


/***/ }),
/* 762 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var test = {
	foo: {}
};

var $Object = Object;

module.exports = function hasProto() {
	return { __proto__: test }.foo === test.foo && !({ __proto__: null } instanceof $Object);
};


/***/ }),
/* 763 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var GetIntrinsic = __webpack_require__(42);
var callBound = __webpack_require__(24);

var $TypeError = GetIntrinsic('%TypeError%');

var IsArray = __webpack_require__(764);

var $apply = GetIntrinsic('%Reflect.apply%', true) || callBound('Function.prototype.apply');

// https://262.ecma-international.org/6.0/#sec-call

module.exports = function Call(F, V) {
	var argumentsList = arguments.length > 2 ? arguments[2] : [];
	if (!IsArray(argumentsList)) {
		throw new $TypeError('Assertion failed: optional `argumentsList`, if provided, must be a List');
	}
	return $apply(F, V, argumentsList);
};


/***/ }),
/* 764 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// https://262.ecma-international.org/6.0/#sec-isarray
module.exports = __webpack_require__(765);


/***/ }),
/* 765 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var GetIntrinsic = __webpack_require__(42);

var $Array = GetIntrinsic('%Array%');

// eslint-disable-next-line global-require
var toStr = !$Array.isArray && __webpack_require__(24)('Object.prototype.toString');

module.exports = $Array.isArray || function IsArray(argument) {
	return toStr(argument) === '[object Array]';
};


/***/ }),
/* 766 */
/***/ (function(module, exports, __webpack_require__) {

var hasMap = typeof Map === 'function' && Map.prototype;
var mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;
var mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;
var mapForEach = hasMap && Map.prototype.forEach;
var hasSet = typeof Set === 'function' && Set.prototype;
var setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;
var setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;
var setForEach = hasSet && Set.prototype.forEach;
var hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;
var weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;
var hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;
var weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;
var hasWeakRef = typeof WeakRef === 'function' && WeakRef.prototype;
var weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;
var booleanValueOf = Boolean.prototype.valueOf;
var objectToString = Object.prototype.toString;
var functionToString = Function.prototype.toString;
var $match = String.prototype.match;
var $slice = String.prototype.slice;
var $replace = String.prototype.replace;
var $toUpperCase = String.prototype.toUpperCase;
var $toLowerCase = String.prototype.toLowerCase;
var $test = RegExp.prototype.test;
var $concat = Array.prototype.concat;
var $join = Array.prototype.join;
var $arrSlice = Array.prototype.slice;
var $floor = Math.floor;
var bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;
var gOPS = Object.getOwnPropertySymbols;
var symToString = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? Symbol.prototype.toString : null;
var hasShammedSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'object';
// ie, `has-tostringtag/shams
var toStringTag = typeof Symbol === 'function' && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? 'object' : 'symbol')
    ? Symbol.toStringTag
    : null;
var isEnumerable = Object.prototype.propertyIsEnumerable;

var gPO = (typeof Reflect === 'function' ? Reflect.getPrototypeOf : Object.getPrototypeOf) || (
    [].__proto__ === Array.prototype // eslint-disable-line no-proto
        ? function (O) {
            return O.__proto__; // eslint-disable-line no-proto
        }
        : null
);

function addNumericSeparator(num, str) {
    if (
        num === Infinity
        || num === -Infinity
        || num !== num
        || (num && num > -1000 && num < 1000)
        || $test.call(/e/, str)
    ) {
        return str;
    }
    var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;
    if (typeof num === 'number') {
        var int = num < 0 ? -$floor(-num) : $floor(num); // trunc(num)
        if (int !== num) {
            var intStr = String(int);
            var dec = $slice.call(str, intStr.length + 1);
            return $replace.call(intStr, sepRegex, '$&_') + '.' + $replace.call($replace.call(dec, /([0-9]{3})/g, '$&_'), /_$/, '');
        }
    }
    return $replace.call(str, sepRegex, '$&_');
}

var utilInspect = __webpack_require__(767);
var inspectCustom = utilInspect.custom;
var inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;

module.exports = function inspect_(obj, options, depth, seen) {
    var opts = options || {};

    if (has(opts, 'quoteStyle') && (opts.quoteStyle !== 'single' && opts.quoteStyle !== 'double')) {
        throw new TypeError('option "quoteStyle" must be "single" or "double"');
    }
    if (
        has(opts, 'maxStringLength') && (typeof opts.maxStringLength === 'number'
            ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity
            : opts.maxStringLength !== null
        )
    ) {
        throw new TypeError('option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`');
    }
    var customInspect = has(opts, 'customInspect') ? opts.customInspect : true;
    if (typeof customInspect !== 'boolean' && customInspect !== 'symbol') {
        throw new TypeError('option "customInspect", if provided, must be `true`, `false`, or `\'symbol\'`');
    }

    if (
        has(opts, 'indent')
        && opts.indent !== null
        && opts.indent !== '\t'
        && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)
    ) {
        throw new TypeError('option "indent" must be "\\t", an integer > 0, or `null`');
    }
    if (has(opts, 'numericSeparator') && typeof opts.numericSeparator !== 'boolean') {
        throw new TypeError('option "numericSeparator", if provided, must be `true` or `false`');
    }
    var numericSeparator = opts.numericSeparator;

    if (typeof obj === 'undefined') {
        return 'undefined';
    }
    if (obj === null) {
        return 'null';
    }
    if (typeof obj === 'boolean') {
        return obj ? 'true' : 'false';
    }

    if (typeof obj === 'string') {
        return inspectString(obj, opts);
    }
    if (typeof obj === 'number') {
        if (obj === 0) {
            return Infinity / obj > 0 ? '0' : '-0';
        }
        var str = String(obj);
        return numericSeparator ? addNumericSeparator(obj, str) : str;
    }
    if (typeof obj === 'bigint') {
        var bigIntStr = String(obj) + 'n';
        return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;
    }

    var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;
    if (typeof depth === 'undefined') { depth = 0; }
    if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {
        return isArray(obj) ? '[Array]' : '[Object]';
    }

    var indent = getIndent(opts, depth);

    if (typeof seen === 'undefined') {
        seen = [];
    } else if (indexOf(seen, obj) >= 0) {
        return '[Circular]';
    }

    function inspect(value, from, noIndent) {
        if (from) {
            seen = $arrSlice.call(seen);
            seen.push(from);
        }
        if (noIndent) {
            var newOpts = {
                depth: opts.depth
            };
            if (has(opts, 'quoteStyle')) {
                newOpts.quoteStyle = opts.quoteStyle;
            }
            return inspect_(value, newOpts, depth + 1, seen);
        }
        return inspect_(value, opts, depth + 1, seen);
    }

    if (typeof obj === 'function' && !isRegExp(obj)) { // in older engines, regexes are callable
        var name = nameOf(obj);
        var keys = arrObjKeys(obj, inspect);
        return '[Function' + (name ? ': ' + name : ' (anonymous)') + ']' + (keys.length > 0 ? ' { ' + $join.call(keys, ', ') + ' }' : '');
    }
    if (isSymbol(obj)) {
        var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\(.*\))_[^)]*$/, '$1') : symToString.call(obj);
        return typeof obj === 'object' && !hasShammedSymbols ? markBoxed(symString) : symString;
    }
    if (isElement(obj)) {
        var s = '<' + $toLowerCase.call(String(obj.nodeName));
        var attrs = obj.attributes || [];
        for (var i = 0; i < attrs.length; i++) {
            s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value), 'double', opts);
        }
        s += '>';
        if (obj.childNodes && obj.childNodes.length) { s += '...'; }
        s += '</' + $toLowerCase.call(String(obj.nodeName)) + '>';
        return s;
    }
    if (isArray(obj)) {
        if (obj.length === 0) { return '[]'; }
        var xs = arrObjKeys(obj, inspect);
        if (indent && !singleLineValues(xs)) {
            return '[' + indentedJoin(xs, indent) + ']';
        }
        return '[ ' + $join.call(xs, ', ') + ' ]';
    }
    if (isError(obj)) {
        var parts = arrObjKeys(obj, inspect);
        if (!('cause' in Error.prototype) && 'cause' in obj && !isEnumerable.call(obj, 'cause')) {
            return '{ [' + String(obj) + '] ' + $join.call($concat.call('[cause]: ' + inspect(obj.cause), parts), ', ') + ' }';
        }
        if (parts.length === 0) { return '[' + String(obj) + ']'; }
        return '{ [' + String(obj) + '] ' + $join.call(parts, ', ') + ' }';
    }
    if (typeof obj === 'object' && customInspect) {
        if (inspectSymbol && typeof obj[inspectSymbol] === 'function' && utilInspect) {
            return utilInspect(obj, { depth: maxDepth - depth });
        } else if (customInspect !== 'symbol' && typeof obj.inspect === 'function') {
            return obj.inspect();
        }
    }
    if (isMap(obj)) {
        var mapParts = [];
        if (mapForEach) {
            mapForEach.call(obj, function (value, key) {
                mapParts.push(inspect(key, obj, true) + ' => ' + inspect(value, obj));
            });
        }
        return collectionOf('Map', mapSize.call(obj), mapParts, indent);
    }
    if (isSet(obj)) {
        var setParts = [];
        if (setForEach) {
            setForEach.call(obj, function (value) {
                setParts.push(inspect(value, obj));
            });
        }
        return collectionOf('Set', setSize.call(obj), setParts, indent);
    }
    if (isWeakMap(obj)) {
        return weakCollectionOf('WeakMap');
    }
    if (isWeakSet(obj)) {
        return weakCollectionOf('WeakSet');
    }
    if (isWeakRef(obj)) {
        return weakCollectionOf('WeakRef');
    }
    if (isNumber(obj)) {
        return markBoxed(inspect(Number(obj)));
    }
    if (isBigInt(obj)) {
        return markBoxed(inspect(bigIntValueOf.call(obj)));
    }
    if (isBoolean(obj)) {
        return markBoxed(booleanValueOf.call(obj));
    }
    if (isString(obj)) {
        return markBoxed(inspect(String(obj)));
    }
    if (!isDate(obj) && !isRegExp(obj)) {
        var ys = arrObjKeys(obj, inspect);
        var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;
        var protoTag = obj instanceof Object ? '' : 'null prototype';
        var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj), 8, -1) : protoTag ? 'Object' : '';
        var constructorTag = isPlainObject || typeof obj.constructor !== 'function' ? '' : obj.constructor.name ? obj.constructor.name + ' ' : '';
        var tag = constructorTag + (stringTag || protoTag ? '[' + $join.call($concat.call([], stringTag || [], protoTag || []), ': ') + '] ' : '');
        if (ys.length === 0) { return tag + '{}'; }
        if (indent) {
            return tag + '{' + indentedJoin(ys, indent) + '}';
        }
        return tag + '{ ' + $join.call(ys, ', ') + ' }';
    }
    return String(obj);
};

function wrapQuotes(s, defaultStyle, opts) {
    var quoteChar = (opts.quoteStyle || defaultStyle) === 'double' ? '"' : "'";
    return quoteChar + s + quoteChar;
}

function quote(s) {
    return $replace.call(String(s), /"/g, '&quot;');
}

function isArray(obj) { return toStr(obj) === '[object Array]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }
function isDate(obj) { return toStr(obj) === '[object Date]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }
function isRegExp(obj) { return toStr(obj) === '[object RegExp]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }
function isError(obj) { return toStr(obj) === '[object Error]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }
function isString(obj) { return toStr(obj) === '[object String]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }
function isNumber(obj) { return toStr(obj) === '[object Number]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }
function isBoolean(obj) { return toStr(obj) === '[object Boolean]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }

// Symbol and BigInt do have Symbol.toStringTag by spec, so that can't be used to eliminate false positives
function isSymbol(obj) {
    if (hasShammedSymbols) {
        return obj && typeof obj === 'object' && obj instanceof Symbol;
    }
    if (typeof obj === 'symbol') {
        return true;
    }
    if (!obj || typeof obj !== 'object' || !symToString) {
        return false;
    }
    try {
        symToString.call(obj);
        return true;
    } catch (e) {}
    return false;
}

function isBigInt(obj) {
    if (!obj || typeof obj !== 'object' || !bigIntValueOf) {
        return false;
    }
    try {
        bigIntValueOf.call(obj);
        return true;
    } catch (e) {}
    return false;
}

var hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };
function has(obj, key) {
    return hasOwn.call(obj, key);
}

function toStr(obj) {
    return objectToString.call(obj);
}

function nameOf(f) {
    if (f.name) { return f.name; }
    var m = $match.call(functionToString.call(f), /^function\s*([\w$]+)/);
    if (m) { return m[1]; }
    return null;
}

function indexOf(xs, x) {
    if (xs.indexOf) { return xs.indexOf(x); }
    for (var i = 0, l = xs.length; i < l; i++) {
        if (xs[i] === x) { return i; }
    }
    return -1;
}

function isMap(x) {
    if (!mapSize || !x || typeof x !== 'object') {
        return false;
    }
    try {
        mapSize.call(x);
        try {
            setSize.call(x);
        } catch (s) {
            return true;
        }
        return x instanceof Map; // core-js workaround, pre-v2.5.0
    } catch (e) {}
    return false;
}

function isWeakMap(x) {
    if (!weakMapHas || !x || typeof x !== 'object') {
        return false;
    }
    try {
        weakMapHas.call(x, weakMapHas);
        try {
            weakSetHas.call(x, weakSetHas);
        } catch (s) {
            return true;
        }
        return x instanceof WeakMap; // core-js workaround, pre-v2.5.0
    } catch (e) {}
    return false;
}

function isWeakRef(x) {
    if (!weakRefDeref || !x || typeof x !== 'object') {
        return false;
    }
    try {
        weakRefDeref.call(x);
        return true;
    } catch (e) {}
    return false;
}

function isSet(x) {
    if (!setSize || !x || typeof x !== 'object') {
        return false;
    }
    try {
        setSize.call(x);
        try {
            mapSize.call(x);
        } catch (m) {
            return true;
        }
        return x instanceof Set; // core-js workaround, pre-v2.5.0
    } catch (e) {}
    return false;
}

function isWeakSet(x) {
    if (!weakSetHas || !x || typeof x !== 'object') {
        return false;
    }
    try {
        weakSetHas.call(x, weakSetHas);
        try {
            weakMapHas.call(x, weakMapHas);
        } catch (s) {
            return true;
        }
        return x instanceof WeakSet; // core-js workaround, pre-v2.5.0
    } catch (e) {}
    return false;
}

function isElement(x) {
    if (!x || typeof x !== 'object') { return false; }
    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {
        return true;
    }
    return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';
}

function inspectString(str, opts) {
    if (str.length > opts.maxStringLength) {
        var remaining = str.length - opts.maxStringLength;
        var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');
        return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + trailer;
    }
    // eslint-disable-next-line no-control-regex
    var s = $replace.call($replace.call(str, /(['\\])/g, '\\$1'), /[\x00-\x1f]/g, lowbyte);
    return wrapQuotes(s, 'single', opts);
}

function lowbyte(c) {
    var n = c.charCodeAt(0);
    var x = {
        8: 'b',
        9: 't',
        10: 'n',
        12: 'f',
        13: 'r'
    }[n];
    if (x) { return '\\' + x; }
    return '\\x' + (n < 0x10 ? '0' : '') + $toUpperCase.call(n.toString(16));
}

function markBoxed(str) {
    return 'Object(' + str + ')';
}

function weakCollectionOf(type) {
    return type + ' { ? }';
}

function collectionOf(type, size, entries, indent) {
    var joinedEntries = indent ? indentedJoin(entries, indent) : $join.call(entries, ', ');
    return type + ' (' + size + ') {' + joinedEntries + '}';
}

function singleLineValues(xs) {
    for (var i = 0; i < xs.length; i++) {
        if (indexOf(xs[i], '\n') >= 0) {
            return false;
        }
    }
    return true;
}

function getIndent(opts, depth) {
    var baseIndent;
    if (opts.indent === '\t') {
        baseIndent = '\t';
    } else if (typeof opts.indent === 'number' && opts.indent > 0) {
        baseIndent = $join.call(Array(opts.indent + 1), ' ');
    } else {
        return null;
    }
    return {
        base: baseIndent,
        prev: $join.call(Array(depth + 1), baseIndent)
    };
}

function indentedJoin(xs, indent) {
    if (xs.length === 0) { return ''; }
    var lineJoiner = '\n' + indent.prev + indent.base;
    return lineJoiner + $join.call(xs, ',' + lineJoiner) + '\n' + indent.prev;
}

function arrObjKeys(obj, inspect) {
    var isArr = isArray(obj);
    var xs = [];
    if (isArr) {
        xs.length = obj.length;
        for (var i = 0; i < obj.length; i++) {
            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';
        }
    }
    var syms = typeof gOPS === 'function' ? gOPS(obj) : [];
    var symMap;
    if (hasShammedSymbols) {
        symMap = {};
        for (var k = 0; k < syms.length; k++) {
            symMap['$' + syms[k]] = syms[k];
        }
    }

    for (var key in obj) { // eslint-disable-line no-restricted-syntax
        if (!has(obj, key)) { continue; } // eslint-disable-line no-restricted-syntax, no-continue
        if (isArr && String(Number(key)) === key && key < obj.length) { continue; } // eslint-disable-line no-restricted-syntax, no-continue
        if (hasShammedSymbols && symMap['$' + key] instanceof Symbol) {
            // this is to prevent shammed Symbols, which are stored as strings, from being included in the string key section
            continue; // eslint-disable-line no-restricted-syntax, no-continue
        } else if ($test.call(/[^\w$]/, key)) {
            xs.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));
        } else {
            xs.push(key + ': ' + inspect(obj[key], obj));
        }
    }
    if (typeof gOPS === 'function') {
        for (var j = 0; j < syms.length; j++) {
            if (isEnumerable.call(obj, syms[j])) {
                xs.push('[' + inspect(syms[j]) + ']: ' + inspect(obj[syms[j]], obj));
            }
        }
    }
    return xs;
}


/***/ }),
/* 767 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(30).inspect;


/***/ }),
/* 768 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// https://262.ecma-international.org/5.1/#sec-8

module.exports = function Type(x) {
	if (x === null) {
		return 'Null';
	}
	if (typeof x === 'undefined') {
		return 'Undefined';
	}
	if (typeof x === 'function' || typeof x === 'object') {
		return 'Object';
	}
	if (typeof x === 'number') {
		return 'Number';
	}
	if (typeof x === 'boolean') {
		return 'Boolean';
	}
	if (typeof x === 'string') {
		return 'String';
	}
};


/***/ }),
/* 769 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var GetIntrinsic = __webpack_require__(42);

var $TypeError = GetIntrinsic('%TypeError%');

var IsPropertyKey = __webpack_require__(345);
var Type = __webpack_require__(115);

// https://262.ecma-international.org/6.0/#sec-hasproperty

module.exports = function HasProperty(O, P) {
	if (Type(O) !== 'Object') {
		throw new $TypeError('Assertion failed: `O` must be an Object');
	}
	if (!IsPropertyKey(P)) {
		throw new $TypeError('Assertion failed: `P` must be a Property Key');
	}
	return P in O;
};


/***/ }),
/* 770 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// http://262.ecma-international.org/5.1/#sec-9.11

module.exports = __webpack_require__(197);


/***/ }),
/* 771 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var GetIntrinsic = __webpack_require__(42);

var $TypeError = GetIntrinsic('%TypeError%');

var Get = __webpack_require__(344);
var ToLength = __webpack_require__(772);
var Type = __webpack_require__(115);

// https://262.ecma-international.org/11.0/#sec-lengthofarraylike

module.exports = function LengthOfArrayLike(obj) {
	if (Type(obj) !== 'Object') {
		throw new $TypeError('Assertion failed: `obj` must be an Object');
	}
	return ToLength(Get(obj, 'length'));
};

// TODO: use this all over


/***/ }),
/* 772 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var MAX_SAFE_INTEGER = __webpack_require__(773);

var ToIntegerOrInfinity = __webpack_require__(774);

module.exports = function ToLength(argument) {
	var len = ToIntegerOrInfinity(argument);
	if (len <= 0) { return 0; } // includes converting -0 to +0
	if (len > MAX_SAFE_INTEGER) { return MAX_SAFE_INTEGER; }
	return len;
};


/***/ }),
/* 773 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var GetIntrinsic = __webpack_require__(42);

var $Math = GetIntrinsic('%Math%');
var $Number = GetIntrinsic('%Number%');

module.exports = $Number.MAX_SAFE_INTEGER || $Math.pow(2, 53) - 1;


/***/ }),
/* 774 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var ToNumber = __webpack_require__(775);
var truncate = __webpack_require__(783);

var $isNaN = __webpack_require__(351);
var $isFinite = __webpack_require__(785);

// https://262.ecma-international.org/14.0/#sec-tointegerorinfinity

module.exports = function ToIntegerOrInfinity(value) {
	var number = ToNumber(value);
	if ($isNaN(number) || number === 0) { return 0; }
	if (!$isFinite(number)) { return number; }
	return truncate(number);
};


/***/ }),
/* 775 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var GetIntrinsic = __webpack_require__(42);

var $TypeError = GetIntrinsic('%TypeError%');
var $Number = GetIntrinsic('%Number%');
var isPrimitive = __webpack_require__(776);

var ToPrimitive = __webpack_require__(777);
var StringToNumber = __webpack_require__(778);

// https://262.ecma-international.org/13.0/#sec-tonumber

module.exports = function ToNumber(argument) {
	var value = isPrimitive(argument) ? argument : ToPrimitive(argument, $Number);
	if (typeof value === 'symbol') {
		throw new $TypeError('Cannot convert a Symbol value to a number');
	}
	if (typeof value === 'bigint') {
		throw new $TypeError('Conversion from \'BigInt\' to \'number\' is not allowed.');
	}
	if (typeof value === 'string') {
		return StringToNumber(value);
	}
	return $Number(value);
};


/***/ }),
/* 776 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function isPrimitive(value) {
	return value === null || (typeof value !== 'function' && typeof value !== 'object');
};


/***/ }),
/* 777 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var toPrimitive = __webpack_require__(329);

// https://262.ecma-international.org/6.0/#sec-toprimitive

module.exports = function ToPrimitive(input) {
	if (arguments.length > 1) {
		return toPrimitive(input, arguments[1]);
	}
	return toPrimitive(input);
};


/***/ }),
/* 778 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var GetIntrinsic = __webpack_require__(42);

var $Number = GetIntrinsic('%Number%');
var $RegExp = GetIntrinsic('%RegExp%');
var $TypeError = GetIntrinsic('%TypeError%');
var $parseInteger = GetIntrinsic('%parseInt%');

var callBound = __webpack_require__(24);
var regexTester = __webpack_require__(330);

var $strSlice = callBound('String.prototype.slice');
var isBinary = regexTester(/^0b[01]+$/i);
var isOctal = regexTester(/^0o[0-7]+$/i);
var isInvalidHexLiteral = regexTester(/^[-+]0x[0-9a-f]+$/i);
var nonWS = ['\u0085', '\u200b', '\ufffe'].join('');
var nonWSregex = new $RegExp('[' + nonWS + ']', 'g');
var hasNonWS = regexTester(nonWSregex);

var $trim = __webpack_require__(779);

var Type = __webpack_require__(115);

// https://262.ecma-international.org/13.0/#sec-stringtonumber

module.exports = function StringToNumber(argument) {
	if (Type(argument) !== 'String') {
		throw new $TypeError('Assertion failed: `argument` is not a String');
	}
	if (isBinary(argument)) {
		return $Number($parseInteger($strSlice(argument, 2), 2));
	}
	if (isOctal(argument)) {
		return $Number($parseInteger($strSlice(argument, 2), 8));
	}
	if (hasNonWS(argument) || isInvalidHexLiteral(argument)) {
		return NaN;
	}
	var trimmed = $trim(argument);
	if (trimmed !== argument) {
		return StringToNumber(trimmed);
	}
	return $Number(argument);
};


/***/ }),
/* 779 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var callBind = __webpack_require__(60);
var define = __webpack_require__(346);
var RequireObjectCoercible = __webpack_require__(347);

var implementation = __webpack_require__(349);
var getPolyfill = __webpack_require__(350);
var shim = __webpack_require__(782);

var bound = callBind(getPolyfill());
var boundMethod = function trim(receiver) {
	RequireObjectCoercible(receiver);
	return bound(receiver);
};

define(boundMethod, {
	getPolyfill: getPolyfill,
	implementation: implementation,
	shim: shim
});

module.exports = boundMethod;


/***/ }),
/* 780 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var GetIntrinsic = __webpack_require__(348);

var $TypeError = GetIntrinsic('%TypeError%');

// http://262.ecma-international.org/5.1/#sec-9.10

module.exports = function CheckObjectCoercible(value, optMessage) {
	if (value == null) {
		throw new $TypeError(optMessage || ('Cannot call method on ' + value));
	}
	return value;
};


/***/ }),
/* 781 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var GetIntrinsic = __webpack_require__(348);

var $String = GetIntrinsic('%String%');
var $TypeError = GetIntrinsic('%TypeError%');

// https://ecma-international.org/ecma-262/6.0/#sec-tostring

module.exports = function ToString(argument) {
	if (typeof argument === 'symbol') {
		throw new $TypeError('Cannot convert a Symbol value to a string');
	}
	return $String(argument);
};


/***/ }),
/* 782 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var define = __webpack_require__(346);
var getPolyfill = __webpack_require__(350);

module.exports = function shimStringTrim() {
	var polyfill = getPolyfill();
	define(String.prototype, { trim: polyfill }, {
		trim: function testTrim() {
			return String.prototype.trim !== polyfill;
		}
	});
	return polyfill;
};


/***/ }),
/* 783 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var GetIntrinsic = __webpack_require__(42);

var floor = __webpack_require__(784);

var $TypeError = GetIntrinsic('%TypeError%');

// https://262.ecma-international.org/14.0/#eqn-truncate

module.exports = function truncate(x) {
	if (typeof x !== 'number' && typeof x !== 'bigint') {
		throw new $TypeError('argument must be a Number or a BigInt');
	}
	var result = x < 0 ? -floor(-x) : floor(x);
	return result === 0 ? 0 : result; // in the spec, these are math values, so we filter out -0 here
};


/***/ }),
/* 784 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Type = __webpack_require__(115);

// var modulo = require('./modulo');
var $floor = Math.floor;

// http://262.ecma-international.org/11.0/#eqn-floor

module.exports = function floor(x) {
	// return x - modulo(x, 1);
	if (Type(x) === 'BigInt') {
		return x;
	}
	return $floor(x);
};


/***/ }),
/* 785 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $isNaN = __webpack_require__(351);

module.exports = function (x) { return (typeof x === 'number' || typeof x === 'bigint') && !$isNaN(x) && x !== Infinity && x !== -Infinity; };


/***/ }),
/* 786 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var GetIntrinsic = __webpack_require__(42);

var $Object = GetIntrinsic('%Object%');

var RequireObjectCoercible = __webpack_require__(114);

// https://262.ecma-international.org/6.0/#sec-toobject

module.exports = function ToObject(value) {
	RequireObjectCoercible(value);
	return $Object(value);
};


/***/ }),
/* 787 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var define = __webpack_require__(97);
var getPolyfill = __webpack_require__(353);

module.exports = function shimForEach() {
	var polyfill = getPolyfill();
	define(
		Array.prototype,
		{ forEach: polyfill },
		{ forEach: function () { return Array.prototype.forEach !== polyfill; } }
	);
	return polyfill;
};


/***/ }),
/* 788 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var define = __webpack_require__(97);
var callBind = __webpack_require__(60);

var implementation = __webpack_require__(354);
var getPolyfill = __webpack_require__(355);
var shim = __webpack_require__(789);

var polyfill = callBind(getPolyfill(), Object);

define(polyfill, {
	getPolyfill: getPolyfill,
	implementation: implementation,
	shim: shim
});

module.exports = polyfill;


/***/ }),
/* 789 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var getPolyfill = __webpack_require__(355);
var define = __webpack_require__(97);

module.exports = function shimEntries() {
	var polyfill = getPolyfill();
	define(Object, { entries: polyfill }, {
		entries: function testEntries() {
			return Object.entries !== polyfill;
		}
	});
	return polyfill;
};


/***/ }),
/* 790 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var callBind = __webpack_require__(60);
var define = __webpack_require__(97);
var RequireObjectCoercible = __webpack_require__(114);

var implementation = __webpack_require__(356);
var getPolyfill = __webpack_require__(357);
var shim = __webpack_require__(791);

var bound = callBind(getPolyfill());
var boundMethod = function trim(receiver) {
	RequireObjectCoercible(receiver);
	return bound(receiver);
};

define(boundMethod, {
	getPolyfill: getPolyfill,
	implementation: implementation,
	shim: shim
});

module.exports = boundMethod;


/***/ }),
/* 791 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var define = __webpack_require__(97);
var getPolyfill = __webpack_require__(357);

module.exports = function shimStringTrim() {
	var polyfill = getPolyfill();
	define(String.prototype, { trim: polyfill }, {
		trim: function testTrim() {
			return String.prototype.trim !== polyfill;
		}
	});
	return polyfill;
};


/***/ }),
/* 792 */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__(205)["default"];
function _toPrimitive(input, hint) {
  if (_typeof(input) !== "object" || input === null) return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== undefined) {
    var res = prim.call(input, hint || "default");
    if (_typeof(res) !== "object") return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
module.exports = _toPrimitive, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 793 */
/***/ (function(module, exports) {

function _setPrototypeOf(o, p) {
  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  return _setPrototypeOf(o, p);
}
module.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 794 */
/***/ (function(module, exports, __webpack_require__) {

var parse = __webpack_require__(29)
var startOfYear = __webpack_require__(796)
var differenceInCalendarDays = __webpack_require__(209)

/**
 * @category Day Helpers
 * @summary Get the day of the year of the given date.
 *
 * @description
 * Get the day of the year of the given date.
 *
 * @param {Date|String|Number} date - the given date
 * @returns {Number} the day of year
 *
 * @example
 * // Which day of the year is 2 July 2014?
 * var result = getDayOfYear(new Date(2014, 6, 2))
 * //=> 183
 */
function getDayOfYear (dirtyDate) {
  var date = parse(dirtyDate)
  var diff = differenceInCalendarDays(date, startOfYear(date))
  var dayOfYear = diff + 1
  return dayOfYear
}

module.exports = getDayOfYear


/***/ }),
/* 795 */
/***/ (function(module, exports) {

var MILLISECONDS_IN_MINUTE = 60000

/**
 * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.
 * They usually appear for dates that denote time before the timezones were introduced
 * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891
 * and GMT+01:00:00 after that date)
 *
 * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,
 * which would lead to incorrect calculations.
 *
 * This function returns the timezone offset in milliseconds that takes seconds in account.
 */
module.exports = function getTimezoneOffsetInMilliseconds (dirtyDate) {
  var date = new Date(dirtyDate.getTime())
  var baseTimezoneOffset = date.getTimezoneOffset()
  date.setSeconds(0, 0)
  var millisecondsPartOfTimezoneOffset = date.getTime() % MILLISECONDS_IN_MINUTE

  return baseTimezoneOffset * MILLISECONDS_IN_MINUTE + millisecondsPartOfTimezoneOffset
}


/***/ }),
/* 796 */
/***/ (function(module, exports, __webpack_require__) {

var parse = __webpack_require__(29)

/**
 * @category Year Helpers
 * @summary Return the start of a year for the given date.
 *
 * @description
 * Return the start of a year for the given date.
 * The result will be in the local timezone.
 *
 * @param {Date|String|Number} date - the original date
 * @returns {Date} the start of a year
 *
 * @example
 * // The start of a year for 2 September 2014 11:55:00:
 * var result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))
 * //=> Wed Jan 01 2014 00:00:00
 */
function startOfYear (dirtyDate) {
  var cleanDate = parse(dirtyDate)
  var date = new Date(0)
  date.setFullYear(cleanDate.getFullYear(), 0, 1)
  date.setHours(0, 0, 0, 0)
  return date
}

module.exports = startOfYear


/***/ }),
/* 797 */
/***/ (function(module, exports, __webpack_require__) {

var parse = __webpack_require__(29)

/**
 * @category Day Helpers
 * @summary Return the start of a day for the given date.
 *
 * @description
 * Return the start of a day for the given date.
 * The result will be in the local timezone.
 *
 * @param {Date|String|Number} date - the original date
 * @returns {Date} the start of a day
 *
 * @example
 * // The start of a day for 2 September 2014 11:55:00:
 * var result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Tue Sep 02 2014 00:00:00
 */
function startOfDay (dirtyDate) {
  var date = parse(dirtyDate)
  date.setHours(0, 0, 0, 0)
  return date
}

module.exports = startOfDay


/***/ }),
/* 798 */
/***/ (function(module, exports, __webpack_require__) {

var parse = __webpack_require__(29)
var startOfISOWeek = __webpack_require__(206)
var startOfISOYear = __webpack_require__(800)

var MILLISECONDS_IN_WEEK = 604800000

/**
 * @category ISO Week Helpers
 * @summary Get the ISO week of the given date.
 *
 * @description
 * Get the ISO week of the given date.
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * @param {Date|String|Number} date - the given date
 * @returns {Number} the ISO week
 *
 * @example
 * // Which week of the ISO-week numbering year is 2 January 2005?
 * var result = getISOWeek(new Date(2005, 0, 2))
 * //=> 53
 */
function getISOWeek (dirtyDate) {
  var date = parse(dirtyDate)
  var diff = startOfISOWeek(date).getTime() - startOfISOYear(date).getTime()

  // Round the number of days to the nearest integer
  // because the number of milliseconds in a week is not constant
  // (e.g. it's different in the week of the daylight saving time clock shift)
  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1
}

module.exports = getISOWeek


/***/ }),
/* 799 */
/***/ (function(module, exports, __webpack_require__) {

var parse = __webpack_require__(29)

/**
 * @category Week Helpers
 * @summary Return the start of a week for the given date.
 *
 * @description
 * Return the start of a week for the given date.
 * The result will be in the local timezone.
 *
 * @param {Date|String|Number} date - the original date
 * @param {Object} [options] - the object with options
 * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
 * @returns {Date} the start of a week
 *
 * @example
 * // The start of a week for 2 September 2014 11:55:00:
 * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Sun Aug 31 2014 00:00:00
 *
 * @example
 * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:
 * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), {weekStartsOn: 1})
 * //=> Mon Sep 01 2014 00:00:00
 */
function startOfWeek (dirtyDate, dirtyOptions) {
  var weekStartsOn = dirtyOptions ? (Number(dirtyOptions.weekStartsOn) || 0) : 0

  var date = parse(dirtyDate)
  var day = date.getDay()
  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn

  date.setDate(date.getDate() - diff)
  date.setHours(0, 0, 0, 0)
  return date
}

module.exports = startOfWeek


/***/ }),
/* 800 */
/***/ (function(module, exports, __webpack_require__) {

var getISOYear = __webpack_require__(360)
var startOfISOWeek = __webpack_require__(206)

/**
 * @category ISO Week-Numbering Year Helpers
 * @summary Return the start of an ISO week-numbering year for the given date.
 *
 * @description
 * Return the start of an ISO week-numbering year,
 * which always starts 3 days before the year's first Thursday.
 * The result will be in the local timezone.
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * @param {Date|String|Number} date - the original date
 * @returns {Date} the start of an ISO year
 *
 * @example
 * // The start of an ISO week-numbering year for 2 July 2005:
 * var result = startOfISOYear(new Date(2005, 6, 2))
 * //=> Mon Jan 03 2005 00:00:00
 */
function startOfISOYear (dirtyDate) {
  var year = getISOYear(dirtyDate)
  var fourthOfJanuary = new Date(0)
  fourthOfJanuary.setFullYear(year, 0, 4)
  fourthOfJanuary.setHours(0, 0, 0, 0)
  var date = startOfISOWeek(fourthOfJanuary)
  return date
}

module.exports = startOfISOYear


/***/ }),
/* 801 */
/***/ (function(module, exports, __webpack_require__) {

var isDate = __webpack_require__(359)

/**
 * @category Common Helpers
 * @summary Is the given date valid?
 *
 * @description
 * Returns false if argument is Invalid Date and true otherwise.
 * Invalid Date is a Date, whose time value is NaN.
 *
 * Time value of Date: http://es5.github.io/#x15.9.1.1
 *
 * @param {Date} date - the date to check
 * @returns {Boolean} the date is valid
 * @throws {TypeError} argument must be an instance of Date
 *
 * @example
 * // For the valid date:
 * var result = isValid(new Date(2014, 1, 31))
 * //=> true
 *
 * @example
 * // For the invalid date:
 * var result = isValid(new Date(''))
 * //=> false
 */
function isValid (dirtyDate) {
  if (isDate(dirtyDate)) {
    return !isNaN(dirtyDate)
  } else {
    throw new TypeError(toString.call(dirtyDate) + ' is not an instance of Date')
  }
}

module.exports = isValid


/***/ }),
/* 802 */
/***/ (function(module, exports, __webpack_require__) {

var compareDesc = __webpack_require__(363)
var parse = __webpack_require__(29)
var differenceInSeconds = __webpack_require__(364)
var differenceInMonths = __webpack_require__(804)
var enLocale = __webpack_require__(147)

var MINUTES_IN_DAY = 1440
var MINUTES_IN_ALMOST_TWO_DAYS = 2520
var MINUTES_IN_MONTH = 43200
var MINUTES_IN_TWO_MONTHS = 86400

/**
 * @category Common Helpers
 * @summary Return the distance between the given dates in words.
 *
 * @description
 * Return the distance between the given dates in words.
 *
 * | Distance between dates                                            | Result              |
 * |-------------------------------------------------------------------|---------------------|
 * | 0 ... 30 secs                                                     | less than a minute  |
 * | 30 secs ... 1 min 30 secs                                         | 1 minute            |
 * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |
 * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |
 * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |
 * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |
 * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |
 * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |
 * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |
 * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |
 * | 1 yr ... 1 yr 3 months                                            | about 1 year        |
 * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |
 * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |
 * | N yrs ... N yrs 3 months                                          | about N years       |
 * | N yrs 3 months ... N yrs 9 months                                 | over N years        |
 * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |
 *
 * With `options.includeSeconds == true`:
 * | Distance between dates | Result               |
 * |------------------------|----------------------|
 * | 0 secs ... 5 secs      | less than 5 seconds  |
 * | 5 secs ... 10 secs     | less than 10 seconds |
 * | 10 secs ... 20 secs    | less than 20 seconds |
 * | 20 secs ... 40 secs    | half a minute        |
 * | 40 secs ... 60 secs    | less than a minute   |
 * | 60 secs ... 90 secs    | 1 minute             |
 *
 * @param {Date|String|Number} dateToCompare - the date to compare with
 * @param {Date|String|Number} date - the other date
 * @param {Object} [options] - the object with options
 * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed
 * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first
 * @param {Object} [options.locale=enLocale] - the locale object
 * @returns {String} the distance in words
 *
 * @example
 * // What is the distance between 2 July 2014 and 1 January 2015?
 * var result = distanceInWords(
 *   new Date(2014, 6, 2),
 *   new Date(2015, 0, 1)
 * )
 * //=> '6 months'
 *
 * @example
 * // What is the distance between 1 January 2015 00:00:15
 * // and 1 January 2015 00:00:00, including seconds?
 * var result = distanceInWords(
 *   new Date(2015, 0, 1, 0, 0, 15),
 *   new Date(2015, 0, 1, 0, 0, 0),
 *   {includeSeconds: true}
 * )
 * //=> 'less than 20 seconds'
 *
 * @example
 * // What is the distance from 1 January 2016
 * // to 1 January 2015, with a suffix?
 * var result = distanceInWords(
 *   new Date(2016, 0, 1),
 *   new Date(2015, 0, 1),
 *   {addSuffix: true}
 * )
 * //=> 'about 1 year ago'
 *
 * @example
 * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?
 * var eoLocale = require('date-fns/locale/eo')
 * var result = distanceInWords(
 *   new Date(2016, 7, 1),
 *   new Date(2015, 0, 1),
 *   {locale: eoLocale}
 * )
 * //=> 'pli ol 1 jaro'
 */
function distanceInWords (dirtyDateToCompare, dirtyDate, dirtyOptions) {
  var options = dirtyOptions || {}

  var comparison = compareDesc(dirtyDateToCompare, dirtyDate)

  var locale = options.locale
  var localize = enLocale.distanceInWords.localize
  if (locale && locale.distanceInWords && locale.distanceInWords.localize) {
    localize = locale.distanceInWords.localize
  }

  var localizeOptions = {
    addSuffix: Boolean(options.addSuffix),
    comparison: comparison
  }

  var dateLeft, dateRight
  if (comparison > 0) {
    dateLeft = parse(dirtyDateToCompare)
    dateRight = parse(dirtyDate)
  } else {
    dateLeft = parse(dirtyDate)
    dateRight = parse(dirtyDateToCompare)
  }

  var seconds = differenceInSeconds(dateRight, dateLeft)
  var offset = dateRight.getTimezoneOffset() - dateLeft.getTimezoneOffset()
  var minutes = Math.round(seconds / 60) - offset
  var months

  // 0 up to 2 mins
  if (minutes < 2) {
    if (options.includeSeconds) {
      if (seconds < 5) {
        return localize('lessThanXSeconds', 5, localizeOptions)
      } else if (seconds < 10) {
        return localize('lessThanXSeconds', 10, localizeOptions)
      } else if (seconds < 20) {
        return localize('lessThanXSeconds', 20, localizeOptions)
      } else if (seconds < 40) {
        return localize('halfAMinute', null, localizeOptions)
      } else if (seconds < 60) {
        return localize('lessThanXMinutes', 1, localizeOptions)
      } else {
        return localize('xMinutes', 1, localizeOptions)
      }
    } else {
      if (minutes === 0) {
        return localize('lessThanXMinutes', 1, localizeOptions)
      } else {
        return localize('xMinutes', minutes, localizeOptions)
      }
    }

  // 2 mins up to 0.75 hrs
  } else if (minutes < 45) {
    return localize('xMinutes', minutes, localizeOptions)

  // 0.75 hrs up to 1.5 hrs
  } else if (minutes < 90) {
    return localize('aboutXHours', 1, localizeOptions)

  // 1.5 hrs up to 24 hrs
  } else if (minutes < MINUTES_IN_DAY) {
    var hours = Math.round(minutes / 60)
    return localize('aboutXHours', hours, localizeOptions)

  // 1 day up to 1.75 days
  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {
    return localize('xDays', 1, localizeOptions)

  // 1.75 days up to 30 days
  } else if (minutes < MINUTES_IN_MONTH) {
    var days = Math.round(minutes / MINUTES_IN_DAY)
    return localize('xDays', days, localizeOptions)

  // 1 month up to 2 months
  } else if (minutes < MINUTES_IN_TWO_MONTHS) {
    months = Math.round(minutes / MINUTES_IN_MONTH)
    return localize('aboutXMonths', months, localizeOptions)
  }

  months = differenceInMonths(dateRight, dateLeft)

  // 2 months up to 12 months
  if (months < 12) {
    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH)
    return localize('xMonths', nearestMonth, localizeOptions)

  // 1 year up to max Date
  } else {
    var monthsSinceStartOfYear = months % 12
    var years = Math.floor(months / 12)

    // N years up to 1 years 3 months
    if (monthsSinceStartOfYear < 3) {
      return localize('aboutXYears', years, localizeOptions)

    // N years 3 months up to N years 9 months
    } else if (monthsSinceStartOfYear < 9) {
      return localize('overXYears', years, localizeOptions)

    // N years 9 months up to N year 12 months
    } else {
      return localize('almostXYears', years + 1, localizeOptions)
    }
  }
}

module.exports = distanceInWords


/***/ }),
/* 803 */
/***/ (function(module, exports, __webpack_require__) {

var parse = __webpack_require__(29)

/**
 * @category Millisecond Helpers
 * @summary Get the number of milliseconds between the given dates.
 *
 * @description
 * Get the number of milliseconds between the given dates.
 *
 * @param {Date|String|Number} dateLeft - the later date
 * @param {Date|String|Number} dateRight - the earlier date
 * @returns {Number} the number of milliseconds
 *
 * @example
 * // How many milliseconds are between
 * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?
 * var result = differenceInMilliseconds(
 *   new Date(2014, 6, 2, 12, 30, 21, 700),
 *   new Date(2014, 6, 2, 12, 30, 20, 600)
 * )
 * //=> 1100
 */
function differenceInMilliseconds (dirtyDateLeft, dirtyDateRight) {
  var dateLeft = parse(dirtyDateLeft)
  var dateRight = parse(dirtyDateRight)
  return dateLeft.getTime() - dateRight.getTime()
}

module.exports = differenceInMilliseconds


/***/ }),
/* 804 */
/***/ (function(module, exports, __webpack_require__) {

var parse = __webpack_require__(29)
var differenceInCalendarMonths = __webpack_require__(805)
var compareAsc = __webpack_require__(806)

/**
 * @category Month Helpers
 * @summary Get the number of full months between the given dates.
 *
 * @description
 * Get the number of full months between the given dates.
 *
 * @param {Date|String|Number} dateLeft - the later date
 * @param {Date|String|Number} dateRight - the earlier date
 * @returns {Number} the number of full months
 *
 * @example
 * // How many full months are between 31 January 2014 and 1 September 2014?
 * var result = differenceInMonths(
 *   new Date(2014, 8, 1),
 *   new Date(2014, 0, 31)
 * )
 * //=> 7
 */
function differenceInMonths (dirtyDateLeft, dirtyDateRight) {
  var dateLeft = parse(dirtyDateLeft)
  var dateRight = parse(dirtyDateRight)

  var sign = compareAsc(dateLeft, dateRight)
  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight))
  dateLeft.setMonth(dateLeft.getMonth() - sign * difference)

  // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full
  // If so, result must be decreased by 1 in absolute value
  var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign
  return sign * (difference - isLastMonthNotFull)
}

module.exports = differenceInMonths


/***/ }),
/* 805 */
/***/ (function(module, exports, __webpack_require__) {

var parse = __webpack_require__(29)

/**
 * @category Month Helpers
 * @summary Get the number of calendar months between the given dates.
 *
 * @description
 * Get the number of calendar months between the given dates.
 *
 * @param {Date|String|Number} dateLeft - the later date
 * @param {Date|String|Number} dateRight - the earlier date
 * @returns {Number} the number of calendar months
 *
 * @example
 * // How many calendar months are between 31 January 2014 and 1 September 2014?
 * var result = differenceInCalendarMonths(
 *   new Date(2014, 8, 1),
 *   new Date(2014, 0, 31)
 * )
 * //=> 8
 */
function differenceInCalendarMonths (dirtyDateLeft, dirtyDateRight) {
  var dateLeft = parse(dirtyDateLeft)
  var dateRight = parse(dirtyDateRight)

  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear()
  var monthDiff = dateLeft.getMonth() - dateRight.getMonth()

  return yearDiff * 12 + monthDiff
}

module.exports = differenceInCalendarMonths


/***/ }),
/* 806 */
/***/ (function(module, exports, __webpack_require__) {

var parse = __webpack_require__(29)

/**
 * @category Common Helpers
 * @summary Compare the two dates and return -1, 0 or 1.
 *
 * @description
 * Compare the two dates and return 1 if the first date is after the second,
 * -1 if the first date is before the second or 0 if dates are equal.
 *
 * @param {Date|String|Number} dateLeft - the first date to compare
 * @param {Date|String|Number} dateRight - the second date to compare
 * @returns {Number} the result of the comparison
 *
 * @example
 * // Compare 11 February 1987 and 10 July 1989:
 * var result = compareAsc(
 *   new Date(1987, 1, 11),
 *   new Date(1989, 6, 10)
 * )
 * //=> -1
 *
 * @example
 * // Sort the array of dates:
 * var result = [
 *   new Date(1995, 6, 2),
 *   new Date(1987, 1, 11),
 *   new Date(1989, 6, 10)
 * ].sort(compareAsc)
 * //=> [
 * //   Wed Feb 11 1987 00:00:00,
 * //   Mon Jul 10 1989 00:00:00,
 * //   Sun Jul 02 1995 00:00:00
 * // ]
 */
function compareAsc (dirtyDateLeft, dirtyDateRight) {
  var dateLeft = parse(dirtyDateLeft)
  var timeLeft = dateLeft.getTime()
  var dateRight = parse(dirtyDateRight)
  var timeRight = dateRight.getTime()

  if (timeLeft < timeRight) {
    return -1
  } else if (timeLeft > timeRight) {
    return 1
  } else {
    return 0
  }
}

module.exports = compareAsc


/***/ }),
/* 807 */
/***/ (function(module, exports, __webpack_require__) {

var buildDistanceInWordsLocale = __webpack_require__(366)
var buildFormatLocale = __webpack_require__(367)

/**
 * @category Locales
 * @summary Arabic locale (Modern Standard Arabic - Al-fussha).
 * @author Abdallah Hassan [@AbdallahAHO]{@link https://github.com/AbdallahAHO}
 */
module.exports = {
  distanceInWords: buildDistanceInWordsLocale(),
  format: buildFormatLocale()
}


/***/ }),
/* 808 */
/***/ (function(module, exports, __webpack_require__) {

var buildDistanceInWordsLocale = __webpack_require__(368)
var buildFormatLocale = __webpack_require__(369)

/**
 * @category Locales
 * @summary Belarusian locale.
 * @author Martin Wind [@arvigeus]{@link https://github.com/mawi12345}
 */
module.exports = {
  distanceInWords: buildDistanceInWordsLocale(),
  format: buildFormatLocale()
}


/***/ }),
/* 809 */
/***/ (function(module, exports, __webpack_require__) {

var buildDistanceInWordsLocale = __webpack_require__(370)
var buildFormatLocale = __webpack_require__(371)

/**
 * @category Locales
 * @summary Bulgarian locale.
 * @author Nikolay Stoynov [@arvigeus]{@link https://github.com/arvigeus}
 */
module.exports = {
  distanceInWords: buildDistanceInWordsLocale(),
  format: buildFormatLocale()
}


/***/ }),
/* 810 */
/***/ (function(module, exports, __webpack_require__) {

var buildDistanceInWordsLocale = __webpack_require__(372)
var buildFormatLocale = __webpack_require__(373)

/**
 * @category Locales
 * @summary Catalan locale.
 * @author Guillermo Grau [@guigrpa]{@link https://github.com/guigrpa}
 */
module.exports = {
  distanceInWords: buildDistanceInWordsLocale(),
  format: buildFormatLocale()
}


/***/ }),
/* 811 */
/***/ (function(module, exports, __webpack_require__) {

var buildDistanceInWordsLocale = __webpack_require__(374)
var buildFormatLocale = __webpack_require__(375)

/**
 * @category Locales
 * @summary Czech locale.
 * @author David Rus [@davidrus]{@link https://github.com/davidrus}
 */
module.exports = {
  distanceInWords: buildDistanceInWordsLocale(),
  format: buildFormatLocale()
}


/***/ }),
/* 812 */
/***/ (function(module, exports, __webpack_require__) {

var buildDistanceInWordsLocale = __webpack_require__(376)
var buildFormatLocale = __webpack_require__(377)

/**
 * @category Locales
 * @summary Danish locale.
 * @author Anders B. Hansen [@Andersbiha]{@link https://github.com/Andersbiha}
 * @author [@kgram]{@link https://github.com/kgram}
 */
module.exports = {
  distanceInWords: buildDistanceInWordsLocale(),
  format: buildFormatLocale()
}


/***/ }),
/* 813 */
/***/ (function(module, exports, __webpack_require__) {

var buildDistanceInWordsLocale = __webpack_require__(378)
var buildFormatLocale = __webpack_require__(379)

/**
 * @category Locales
 * @summary German locale.
 * @author Thomas Eilmsteiner [@DeMuu]{@link https://github.com/DeMuu}
 * @author Asia [@asia-t]{@link https://github.com/asia-t}
 */
module.exports = {
  distanceInWords: buildDistanceInWordsLocale(),
  format: buildFormatLocale()
}


/***/ }),
/* 814 */
/***/ (function(module, exports, __webpack_require__) {

var buildDistanceInWordsLocale = __webpack_require__(380)
var buildFormatLocale = __webpack_require__(381)

/**
 * @category Locales
 * @summary Greek locale.
 * @author Theodoros Orfanidis [@teoulas]{@link https://github.com/teoulas}
 */
module.exports = {
  distanceInWords: buildDistanceInWordsLocale(),
  format: buildFormatLocale()
}


/***/ }),
/* 815 */
/***/ (function(module, exports, __webpack_require__) {

var buildDistanceInWordsLocale = __webpack_require__(382)
var buildFormatLocale = __webpack_require__(383)

/**
 * @category Locales
 * @summary Esperanto locale.
 */
module.exports = {
  distanceInWords: buildDistanceInWordsLocale(),
  format: buildFormatLocale()
}


/***/ }),
/* 816 */
/***/ (function(module, exports, __webpack_require__) {

var buildDistanceInWordsLocale = __webpack_require__(384)
var buildFormatLocale = __webpack_require__(385)

/**
 * @category Locales
 * @summary Spanish locale.
 * @author Juan Angosto [@juanangosto]{@link https://github.com/juanangosto}
 * @author Guillermo Grau [@guigrpa]{@link https://github.com/guigrpa}
 * @author Fernando Agüero [@fjaguero]{@link https://github.com/fjaguero}
 */
module.exports = {
  distanceInWords: buildDistanceInWordsLocale(),
  format: buildFormatLocale()
}


/***/ }),
/* 817 */
/***/ (function(module, exports, __webpack_require__) {

var buildDistanceInWordsLocale = __webpack_require__(386)
var buildFormatLocale = __webpack_require__(387)

/**
 * @category Locales
 * @summary Finnish locale.
 * @author Pyry-Samuli Lahti [@Pyppe]{@link https://github.com/Pyppe}
 */
module.exports = {
  distanceInWords: buildDistanceInWordsLocale(),
  format: buildFormatLocale()
}


/***/ }),
/* 818 */
/***/ (function(module, exports, __webpack_require__) {

var buildDistanceInWordsLocale = __webpack_require__(388)
var buildFormatLocale = __webpack_require__(389)

/**
 * @category Locales
 * @summary Filipino locale.
 * @author Ian De La Cruz [@RIanDeLaCruz]{@link https://github.com/RIanDeLaCruz}
 */
module.exports = {
  distanceInWords: buildDistanceInWordsLocale(),
  format: buildFormatLocale()
}


/***/ }),
/* 819 */
/***/ (function(module, exports, __webpack_require__) {

var buildDistanceInWordsLocale = __webpack_require__(390)
var buildFormatLocale = __webpack_require__(391)

/**
 * @category Locales
 * @summary French locale.
 * @author Jean Dupouy [@izeau]{@link https://github.com/izeau}
 * @author François B [@fbonzon]{@link https://github.com/fbonzon}
 */
module.exports = {
  distanceInWords: buildDistanceInWordsLocale(),
  format: buildFormatLocale()
}


/***/ }),
/* 820 */
/***/ (function(module, exports, __webpack_require__) {

var buildDistanceInWordsLocale = __webpack_require__(392)
var buildFormatLocale = __webpack_require__(393)

/**
 * @category Locales
 * @summary Croatian locale.
 * @author Matija Marohnić [@silvenon]{@link https://github.com/silvenon}
 */
module.exports = {
  distanceInWords: buildDistanceInWordsLocale(),
  format: buildFormatLocale()
}


/***/ }),
/* 821 */
/***/ (function(module, exports, __webpack_require__) {

var buildDistanceInWordsLocale = __webpack_require__(394)
var buildFormatLocale = __webpack_require__(395)

/**
 * @category Locales
 * @summary English locale.
 */
module.exports = {
  distanceInWords: buildDistanceInWordsLocale(),
  format: buildFormatLocale()
}


/***/ }),
/* 822 */
/***/ (function(module, exports, __webpack_require__) {

var buildDistanceInWordsLocale = __webpack_require__(396)
var buildFormatLocale = __webpack_require__(397)

/**
 * @category Locales
 * @summary Indonesian locale.
 * @author Rahmat Budiharso [@rbudiharso]{@link https://github.com/rbudiharso}
 * @author Benget Nata [@bentinata]{@link https://github.com/bentinata}
 */
module.exports = {
  distanceInWords: buildDistanceInWordsLocale(),
  format: buildFormatLocale()
}


/***/ }),
/* 823 */
/***/ (function(module, exports, __webpack_require__) {

var buildDistanceInWordsLocale = __webpack_require__(398)
var buildFormatLocale = __webpack_require__(399)

/**
 * @category Locales
 * @summary Icelandic locale.
 * @author Derek Blank [@derekblank]{@link https://github.com/derekblank}
 */
module.exports = {
  distanceInWords: buildDistanceInWordsLocale(),
  format: buildFormatLocale()
}


/***/ }),
/* 824 */
/***/ (function(module, exports, __webpack_require__) {

var buildDistanceInWordsLocale = __webpack_require__(400)
var buildFormatLocale = __webpack_require__(401)

/**
 * @category Locales
 * @summary Italian locale.
 * @author Alberto Restifo [@albertorestifo]{@link https://github.com/albertorestifo}
 */
module.exports = {
  distanceInWords: buildDistanceInWordsLocale(),
  format: buildFormatLocale()
}


/***/ }),
/* 825 */
/***/ (function(module, exports, __webpack_require__) {

var buildDistanceInWordsLocale = __webpack_require__(402)
var buildFormatLocale = __webpack_require__(403)

/**
 * @category Locales
 * @summary Japanese locale.
 * @author Thomas Eilmsteiner [@DeMuu]{@link https://github.com/DeMuu}
 * @author Yamagishi Kazutoshi [@ykzts]{@link https://github.com/ykzts}
 */
module.exports = {
  distanceInWords: buildDistanceInWordsLocale(),
  format: buildFormatLocale()
}


/***/ }),
/* 826 */
/***/ (function(module, exports, __webpack_require__) {

var buildDistanceInWordsLocale = __webpack_require__(404)
var buildFormatLocale = __webpack_require__(405)

/**
 * @category Locales
 * @summary Korean locale.
 * @author Hong Chulju [@angdev]{@link https://github.com/angdev}
 */
module.exports = {
  distanceInWords: buildDistanceInWordsLocale(),
  format: buildFormatLocale()
}


/***/ }),
/* 827 */
/***/ (function(module, exports, __webpack_require__) {

var buildDistanceInWordsLocale = __webpack_require__(406)
var buildFormatLocale = __webpack_require__(407)

/**
 * @category Locales
 * @summary Macedonian locale.
 * @author Petar Vlahu [@vlahupetar]{@link https://github.com/vlahupetar}
 */
module.exports = {
  distanceInWords: buildDistanceInWordsLocale(),
  format: buildFormatLocale()
}


/***/ }),
/* 828 */
/***/ (function(module, exports, __webpack_require__) {

var buildDistanceInWordsLocale = __webpack_require__(408)
var buildFormatLocale = __webpack_require__(409)

/**
 * @category Locales
 * @summary Norwegian Bokmål locale.
 * @author Hans-Kristian Koren [@Hanse]{@link https://github.com/Hanse}
 */
module.exports = {
  distanceInWords: buildDistanceInWordsLocale(),
  format: buildFormatLocale()
}


/***/ }),
/* 829 */
/***/ (function(module, exports, __webpack_require__) {

var buildDistanceInWordsLocale = __webpack_require__(410)
var buildFormatLocale = __webpack_require__(411)

/**
 * @category Locales
 * @summary Dutch locale.
 * @author Jorik Tangelder [@jtangelder]{@link https://github.com/jtangelder}
 * @author Ruben Stolk [@rubenstolk]{@link https://github.com/rubenstolk}
 */
module.exports = {
  distanceInWords: buildDistanceInWordsLocale(),
  format: buildFormatLocale()
}


/***/ }),
/* 830 */
/***/ (function(module, exports, __webpack_require__) {

var buildDistanceInWordsLocale = __webpack_require__(412)
var buildFormatLocale = __webpack_require__(413)

/**
 * @category Locales
 * @summary Polish locale.
 * @author Mateusz Derks [@ertrzyiks]{@link https://github.com/ertrzyiks}
 * @author Just RAG [@justrag]{@link https://github.com/justrag}
 */
module.exports = {
  distanceInWords: buildDistanceInWordsLocale(),
  format: buildFormatLocale()
}


/***/ }),
/* 831 */
/***/ (function(module, exports, __webpack_require__) {

var buildDistanceInWordsLocale = __webpack_require__(414)
var buildFormatLocale = __webpack_require__(415)

/**
 * @category Locales
 * @summary Portuguese locale.
 * @author Dário Freire [@dfreire]{@link https://github.com/dfreire}
 */
module.exports = {
  distanceInWords: buildDistanceInWordsLocale(),
  format: buildFormatLocale()
}


/***/ }),
/* 832 */
/***/ (function(module, exports, __webpack_require__) {

var buildDistanceInWordsLocale = __webpack_require__(416)
var buildFormatLocale = __webpack_require__(417)

/**
 * @category Locales
 * @summary Romanian locale.
 * @author Sergiu Munteanu [@jsergiu]{@link https://github.com/jsergiu}
 */
module.exports = {
  distanceInWords: buildDistanceInWordsLocale(),
  format: buildFormatLocale()
}


/***/ }),
/* 833 */
/***/ (function(module, exports, __webpack_require__) {

var buildDistanceInWordsLocale = __webpack_require__(418)
var buildFormatLocale = __webpack_require__(419)

/**
 * @category Locales
 * @summary Russian locale.
 */
module.exports = {
  distanceInWords: buildDistanceInWordsLocale(),
  format: buildFormatLocale()
}


/***/ }),
/* 834 */
/***/ (function(module, exports, __webpack_require__) {

var buildDistanceInWordsLocale = __webpack_require__(420)
var buildFormatLocale = __webpack_require__(421)

/**
 * @category Locales
 * @summary Slovak locale.
 * @author Marek Suscak [@mareksuscak]{@link https://github.com/mareksuscak}
 */
module.exports = {
  distanceInWords: buildDistanceInWordsLocale(),
  format: buildFormatLocale()
}


/***/ }),
/* 835 */
/***/ (function(module, exports, __webpack_require__) {

var buildDistanceInWordsLocale = __webpack_require__(422)
var buildFormatLocale = __webpack_require__(423)

/**
 * @category Locales
 * @summary Slovenian locale.
 * @author Adam Stradovnik [@Neoglyph]{@link https://github.com/Neoglyph}
 */
module.exports = {
  distanceInWords: buildDistanceInWordsLocale(),
  format: buildFormatLocale()
}


/***/ }),
/* 836 */
/***/ (function(module, exports, __webpack_require__) {

var buildDistanceInWordsLocale = __webpack_require__(424)
var buildFormatLocale = __webpack_require__(425)

/**
 * @category Locales
 * @summary Serbian locale.
 * @author Martin Wind [@mawi]{@link https://github.com/mawi12345}
 */
module.exports = {
  distanceInWords: buildDistanceInWordsLocale(),
  format: buildFormatLocale()
}


/***/ }),
/* 837 */
/***/ (function(module, exports, __webpack_require__) {

var buildDistanceInWordsLocale = __webpack_require__(426)
var buildFormatLocale = __webpack_require__(427)

/**
 * @category Locales
 * @summary Swedish locale.
 * @author Johannes Ulén [@ejulen]{@link https://github.com/ejulen}
 */
module.exports = {
  distanceInWords: buildDistanceInWordsLocale(),
  format: buildFormatLocale()
}


/***/ }),
/* 838 */
/***/ (function(module, exports, __webpack_require__) {

var buildDistanceInWordsLocale = __webpack_require__(428)
var buildFormatLocale = __webpack_require__(429)

/**
 * @category Locales
 * @summary Thai locale.
 * @author Athiwat Hirunworawongkun [@athivvat]{@link https://github.com/athivvat}
 */
module.exports = {
  distanceInWords: buildDistanceInWordsLocale(),
  format: buildFormatLocale()
}


/***/ }),
/* 839 */
/***/ (function(module, exports, __webpack_require__) {

var buildDistanceInWordsLocale = __webpack_require__(430)
var buildFormatLocale = __webpack_require__(431)

/**
 * @category Locales
 * @summary Turkish locale.
 * @author Alpcan Aydın [@alpcanaydin]{@link https://github.com/alpcanaydin}
 */
module.exports = {
  distanceInWords: buildDistanceInWordsLocale(),
  format: buildFormatLocale()
}


/***/ }),
/* 840 */
/***/ (function(module, exports, __webpack_require__) {

var buildDistanceInWordsLocale = __webpack_require__(432)
var buildFormatLocale = __webpack_require__(433)

/**
 * @category Locales
 * @summary Chinese Simplified locale.
 * @author Changyu Geng [@KingMario]{@link https://github.com/KingMario}
 * @author Song Shuoyun [@fnlctrl]{@link https://github.com/fnlctrl}
 */
module.exports = {
  distanceInWords: buildDistanceInWordsLocale(),
  format: buildFormatLocale()
}


/***/ }),
/* 841 */
/***/ (function(module, exports, __webpack_require__) {

var buildDistanceInWordsLocale = __webpack_require__(434)
var buildFormatLocale = __webpack_require__(435)

/**
 * @category Locales
 * @summary Chinese Simplified locale.
 * @author tonypai [@tpai]{@link https://github.com/tpai}
 */
module.exports = {
  distanceInWords: buildDistanceInWordsLocale(),
  format: buildFormatLocale()
}


/***/ }),
/* 842 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = __webpack_require__(843);

function emptyFunction() {}
function emptyFunctionWithReset() {}
emptyFunctionWithReset.resetWarningCache = emptyFunction;

module.exports = function() {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      // It is still safe when called from React.
      return;
    }
    var err = new Error(
      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
      'Use PropTypes.checkPropTypes() to call them. ' +
      'Read more at http://fb.me/use-check-prop-types'
    );
    err.name = 'Invariant Violation';
    throw err;
  };
  shim.isRequired = shim;
  function getShim() {
    return shim;
  };
  // Important!
  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
  var ReactPropTypes = {
    array: shim,
    bigint: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    elementType: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim,

    checkPropTypes: emptyFunctionWithReset,
    resetWarningCache: emptyFunction
  };

  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};


/***/ }),
/* 843 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;


/***/ }),
/* 844 */,
/* 845 */,
/* 846 */,
/* 847 */,
/* 848 */,
/* 849 */,
/* 850 */,
/* 851 */,
/* 852 */,
/* 853 */,
/* 854 */,
/* 855 */,
/* 856 */,
/* 857 */,
/* 858 */,
/* 859 */,
/* 860 */,
/* 861 */,
/* 862 */,
/* 863 */,
/* 864 */,
/* 865 */,
/* 866 */,
/* 867 */,
/* 868 */,
/* 869 */,
/* 870 */,
/* 871 */,
/* 872 */,
/* 873 */,
/* 874 */,
/* 875 */,
/* 876 */,
/* 877 */,
/* 878 */,
/* 879 */,
/* 880 */,
/* 881 */,
/* 882 */,
/* 883 */,
/* 884 */,
/* 885 */,
/* 886 */,
/* 887 */,
/* 888 */,
/* 889 */,
/* 890 */,
/* 891 */,
/* 892 */,
/* 893 */,
/* 894 */,
/* 895 */,
/* 896 */,
/* 897 */,
/* 898 */,
/* 899 */,
/* 900 */,
/* 901 */,
/* 902 */,
/* 903 */,
/* 904 */,
/* 905 */,
/* 906 */,
/* 907 */,
/* 908 */,
/* 909 */,
/* 910 */,
/* 911 */,
/* 912 */,
/* 913 */,
/* 914 */,
/* 915 */,
/* 916 */,
/* 917 */,
/* 918 */,
/* 919 */,
/* 920 */,
/* 921 */,
/* 922 */,
/* 923 */,
/* 924 */,
/* 925 */,
/* 926 */,
/* 927 */,
/* 928 */,
/* 929 */,
/* 930 */,
/* 931 */,
/* 932 */,
/* 933 */,
/* 934 */,
/* 935 */,
/* 936 */,
/* 937 */,
/* 938 */,
/* 939 */,
/* 940 */,
/* 941 */,
/* 942 */,
/* 943 */,
/* 944 */,
/* 945 */,
/* 946 */,
/* 947 */,
/* 948 */,
/* 949 */,
/* 950 */,
/* 951 */,
/* 952 */,
/* 953 */,
/* 954 */,
/* 955 */,
/* 956 */,
/* 957 */,
/* 958 */,
/* 959 */,
/* 960 */,
/* 961 */,
/* 962 */,
/* 963 */,
/* 964 */,
/* 965 */,
/* 966 */,
/* 967 */,
/* 968 */,
/* 969 */,
/* 970 */,
/* 971 */,
/* 972 */,
/* 973 */,
/* 974 */,
/* 975 */,
/* 976 */,
/* 977 */,
/* 978 */,
/* 979 */,
/* 980 */,
/* 981 */,
/* 982 */,
/* 983 */,
/* 984 */,
/* 985 */,
/* 986 */,
/* 987 */,
/* 988 */,
/* 989 */,
/* 990 */,
/* 991 */,
/* 992 */,
/* 993 */,
/* 994 */,
/* 995 */,
/* 996 */,
/* 997 */,
/* 998 */,
/* 999 */,
/* 1000 */,
/* 1001 */,
/* 1002 */,
/* 1003 */,
/* 1004 */,
/* 1005 */,
/* 1006 */,
/* 1007 */,
/* 1008 */,
/* 1009 */,
/* 1010 */,
/* 1011 */,
/* 1012 */,
/* 1013 */,
/* 1014 */,
/* 1015 */,
/* 1016 */,
/* 1017 */,
/* 1018 */,
/* 1019 */,
/* 1020 */,
/* 1021 */,
/* 1022 */,
/* 1023 */,
/* 1024 */,
/* 1025 */,
/* 1026 */,
/* 1027 */,
/* 1028 */,
/* 1029 */,
/* 1030 */,
/* 1031 */,
/* 1032 */,
/* 1033 */,
/* 1034 */,
/* 1035 */,
/* 1036 */,
/* 1037 */,
/* 1038 */,
/* 1039 */,
/* 1040 */,
/* 1041 */,
/* 1042 */,
/* 1043 */,
/* 1044 */,
/* 1045 */,
/* 1046 */,
/* 1047 */,
/* 1048 */,
/* 1049 */,
/* 1050 */,
/* 1051 */,
/* 1052 */,
/* 1053 */,
/* 1054 */,
/* 1055 */,
/* 1056 */,
/* 1057 */,
/* 1058 */,
/* 1059 */,
/* 1060 */,
/* 1061 */,
/* 1062 */,
/* 1063 */,
/* 1064 */,
/* 1065 */,
/* 1066 */,
/* 1067 */,
/* 1068 */,
/* 1069 */,
/* 1070 */,
/* 1071 */,
/* 1072 */,
/* 1073 */,
/* 1074 */,
/* 1075 */,
/* 1076 */,
/* 1077 */,
/* 1078 */,
/* 1079 */,
/* 1080 */,
/* 1081 */,
/* 1082 */,
/* 1083 */,
/* 1084 */,
/* 1085 */,
/* 1086 */,
/* 1087 */,
/* 1088 */,
/* 1089 */,
/* 1090 */,
/* 1091 */,
/* 1092 */,
/* 1093 */,
/* 1094 */,
/* 1095 */,
/* 1096 */,
/* 1097 */,
/* 1098 */,
/* 1099 */,
/* 1100 */,
/* 1101 */,
/* 1102 */,
/* 1103 */,
/* 1104 */,
/* 1105 */,
/* 1106 */,
/* 1107 */,
/* 1108 */,
/* 1109 */,
/* 1110 */,
/* 1111 */,
/* 1112 */,
/* 1113 */,
/* 1114 */,
/* 1115 */,
/* 1116 */,
/* 1117 */,
/* 1118 */,
/* 1119 */,
/* 1120 */,
/* 1121 */,
/* 1122 */,
/* 1123 */,
/* 1124 */,
/* 1125 */,
/* 1126 */,
/* 1127 */,
/* 1128 */,
/* 1129 */,
/* 1130 */,
/* 1131 */,
/* 1132 */,
/* 1133 */,
/* 1134 */,
/* 1135 */,
/* 1136 */,
/* 1137 */,
/* 1138 */,
/* 1139 */,
/* 1140 */,
/* 1141 */,
/* 1142 */,
/* 1143 */,
/* 1144 */,
/* 1145 */,
/* 1146 */,
/* 1147 */,
/* 1148 */,
/* 1149 */,
/* 1150 */,
/* 1151 */,
/* 1152 */,
/* 1153 */,
/* 1154 */,
/* 1155 */,
/* 1156 */,
/* 1157 */,
/* 1158 */,
/* 1159 */,
/* 1160 */,
/* 1161 */,
/* 1162 */,
/* 1163 */,
/* 1164 */,
/* 1165 */,
/* 1166 */,
/* 1167 */,
/* 1168 */,
/* 1169 */,
/* 1170 */,
/* 1171 */,
/* 1172 */,
/* 1173 */,
/* 1174 */,
/* 1175 */,
/* 1176 */,
/* 1177 */,
/* 1178 */,
/* 1179 */,
/* 1180 */,
/* 1181 */,
/* 1182 */,
/* 1183 */,
/* 1184 */,
/* 1185 */,
/* 1186 */,
/* 1187 */,
/* 1188 */,
/* 1189 */,
/* 1190 */,
/* 1191 */,
/* 1192 */,
/* 1193 */,
/* 1194 */,
/* 1195 */,
/* 1196 */,
/* 1197 */,
/* 1198 */,
/* 1199 */,
/* 1200 */,
/* 1201 */,
/* 1202 */,
/* 1203 */,
/* 1204 */,
/* 1205 */,
/* 1206 */,
/* 1207 */,
/* 1208 */,
/* 1209 */,
/* 1210 */,
/* 1211 */,
/* 1212 */,
/* 1213 */,
/* 1214 */,
/* 1215 */,
/* 1216 */,
/* 1217 */,
/* 1218 */,
/* 1219 */,
/* 1220 */,
/* 1221 */,
/* 1222 */,
/* 1223 */,
/* 1224 */,
/* 1225 */,
/* 1226 */,
/* 1227 */,
/* 1228 */,
/* 1229 */,
/* 1230 */,
/* 1231 */,
/* 1232 */,
/* 1233 */,
/* 1234 */,
/* 1235 */,
/* 1236 */,
/* 1237 */,
/* 1238 */,
/* 1239 */,
/* 1240 */,
/* 1241 */,
/* 1242 */,
/* 1243 */,
/* 1244 */,
/* 1245 */,
/* 1246 */,
/* 1247 */,
/* 1248 */,
/* 1249 */,
/* 1250 */,
/* 1251 */,
/* 1252 */,
/* 1253 */,
/* 1254 */,
/* 1255 */,
/* 1256 */,
/* 1257 */,
/* 1258 */,
/* 1259 */,
/* 1260 */,
/* 1261 */,
/* 1262 */,
/* 1263 */,
/* 1264 */,
/* 1265 */,
/* 1266 */,
/* 1267 */,
/* 1268 */,
/* 1269 */,
/* 1270 */,
/* 1271 */,
/* 1272 */,
/* 1273 */,
/* 1274 */,
/* 1275 */,
/* 1276 */,
/* 1277 */,
/* 1278 */,
/* 1279 */,
/* 1280 */,
/* 1281 */,
/* 1282 */,
/* 1283 */,
/* 1284 */,
/* 1285 */,
/* 1286 */,
/* 1287 */,
/* 1288 */,
/* 1289 */,
/* 1290 */,
/* 1291 */,
/* 1292 */,
/* 1293 */,
/* 1294 */,
/* 1295 */,
/* 1296 */,
/* 1297 */,
/* 1298 */,
/* 1299 */,
/* 1300 */,
/* 1301 */,
/* 1302 */,
/* 1303 */,
/* 1304 */,
/* 1305 */,
/* 1306 */,
/* 1307 */,
/* 1308 */,
/* 1309 */,
/* 1310 */,
/* 1311 */,
/* 1312 */,
/* 1313 */,
/* 1314 */,
/* 1315 */,
/* 1316 */,
/* 1317 */,
/* 1318 */,
/* 1319 */,
/* 1320 */,
/* 1321 */,
/* 1322 */,
/* 1323 */,
/* 1324 */,
/* 1325 */,
/* 1326 */,
/* 1327 */,
/* 1328 */,
/* 1329 */,
/* 1330 */,
/* 1331 */,
/* 1332 */,
/* 1333 */,
/* 1334 */,
/* 1335 */,
/* 1336 */,
/* 1337 */,
/* 1338 */,
/* 1339 */,
/* 1340 */,
/* 1341 */,
/* 1342 */,
/* 1343 */,
/* 1344 */,
/* 1345 */,
/* 1346 */,
/* 1347 */,
/* 1348 */,
/* 1349 */,
/* 1350 */,
/* 1351 */,
/* 1352 */,
/* 1353 */,
/* 1354 */,
/* 1355 */,
/* 1356 */,
/* 1357 */,
/* 1358 */,
/* 1359 */,
/* 1360 */,
/* 1361 */,
/* 1362 */,
/* 1363 */,
/* 1364 */,
/* 1365 */,
/* 1366 */,
/* 1367 */,
/* 1368 */,
/* 1369 */,
/* 1370 */,
/* 1371 */,
/* 1372 */,
/* 1373 */,
/* 1374 */,
/* 1375 */,
/* 1376 */,
/* 1377 */,
/* 1378 */,
/* 1379 */,
/* 1380 */,
/* 1381 */,
/* 1382 */,
/* 1383 */,
/* 1384 */,
/* 1385 */,
/* 1386 */,
/* 1387 */,
/* 1388 */,
/* 1389 */,
/* 1390 */,
/* 1391 */,
/* 1392 */,
/* 1393 */,
/* 1394 */,
/* 1395 */,
/* 1396 */,
/* 1397 */,
/* 1398 */,
/* 1399 */,
/* 1400 */,
/* 1401 */,
/* 1402 */,
/* 1403 */,
/* 1404 */,
/* 1405 */,
/* 1406 */,
/* 1407 */,
/* 1408 */,
/* 1409 */,
/* 1410 */,
/* 1411 */,
/* 1412 */,
/* 1413 */,
/* 1414 */,
/* 1415 */,
/* 1416 */,
/* 1417 */,
/* 1418 */,
/* 1419 */,
/* 1420 */,
/* 1421 */,
/* 1422 */,
/* 1423 */,
/* 1424 */,
/* 1425 */,
/* 1426 */,
/* 1427 */,
/* 1428 */,
/* 1429 */,
/* 1430 */,
/* 1431 */,
/* 1432 */,
/* 1433 */,
/* 1434 */,
/* 1435 */,
/* 1436 */,
/* 1437 */,
/* 1438 */,
/* 1439 */,
/* 1440 */,
/* 1441 */,
/* 1442 */,
/* 1443 */,
/* 1444 */,
/* 1445 */,
/* 1446 */,
/* 1447 */,
/* 1448 */,
/* 1449 */,
/* 1450 */,
/* 1451 */,
/* 1452 */,
/* 1453 */,
/* 1454 */,
/* 1455 */,
/* 1456 */,
/* 1457 */,
/* 1458 */,
/* 1459 */,
/* 1460 */,
/* 1461 */,
/* 1462 */,
/* 1463 */,
/* 1464 */,
/* 1465 */,
/* 1466 */,
/* 1467 */,
/* 1468 */,
/* 1469 */,
/* 1470 */,
/* 1471 */,
/* 1472 */,
/* 1473 */,
/* 1474 */,
/* 1475 */,
/* 1476 */,
/* 1477 */,
/* 1478 */,
/* 1479 */,
/* 1480 */,
/* 1481 */,
/* 1482 */,
/* 1483 */,
/* 1484 */,
/* 1485 */,
/* 1486 */,
/* 1487 */,
/* 1488 */,
/* 1489 */,
/* 1490 */,
/* 1491 */,
/* 1492 */,
/* 1493 */,
/* 1494 */,
/* 1495 */,
/* 1496 */,
/* 1497 */,
/* 1498 */,
/* 1499 */,
/* 1500 */,
/* 1501 */,
/* 1502 */,
/* 1503 */,
/* 1504 */,
/* 1505 */,
/* 1506 */,
/* 1507 */,
/* 1508 */,
/* 1509 */,
/* 1510 */,
/* 1511 */,
/* 1512 */,
/* 1513 */,
/* 1514 */,
/* 1515 */,
/* 1516 */,
/* 1517 */,
/* 1518 */,
/* 1519 */,
/* 1520 */,
/* 1521 */,
/* 1522 */,
/* 1523 */,
/* 1524 */,
/* 1525 */,
/* 1526 */,
/* 1527 */,
/* 1528 */,
/* 1529 */,
/* 1530 */,
/* 1531 */,
/* 1532 */,
/* 1533 */,
/* 1534 */,
/* 1535 */,
/* 1536 */,
/* 1537 */,
/* 1538 */,
/* 1539 */,
/* 1540 */,
/* 1541 */,
/* 1542 */,
/* 1543 */,
/* 1544 */,
/* 1545 */,
/* 1546 */,
/* 1547 */,
/* 1548 */,
/* 1549 */,
/* 1550 */,
/* 1551 */,
/* 1552 */,
/* 1553 */,
/* 1554 */,
/* 1555 */,
/* 1556 */,
/* 1557 */,
/* 1558 */,
/* 1559 */,
/* 1560 */,
/* 1561 */,
/* 1562 */,
/* 1563 */,
/* 1564 */,
/* 1565 */,
/* 1566 */,
/* 1567 */,
/* 1568 */,
/* 1569 */,
/* 1570 */,
/* 1571 */,
/* 1572 */,
/* 1573 */,
/* 1574 */,
/* 1575 */,
/* 1576 */,
/* 1577 */,
/* 1578 */,
/* 1579 */,
/* 1580 */,
/* 1581 */,
/* 1582 */,
/* 1583 */,
/* 1584 */,
/* 1585 */,
/* 1586 */,
/* 1587 */,
/* 1588 */,
/* 1589 */,
/* 1590 */,
/* 1591 */,
/* 1592 */,
/* 1593 */,
/* 1594 */,
/* 1595 */,
/* 1596 */,
/* 1597 */,
/* 1598 */,
/* 1599 */,
/* 1600 */,
/* 1601 */,
/* 1602 */,
/* 1603 */,
/* 1604 */,
/* 1605 */,
/* 1606 */,
/* 1607 */,
/* 1608 */,
/* 1609 */,
/* 1610 */,
/* 1611 */,
/* 1612 */,
/* 1613 */,
/* 1614 */,
/* 1615 */,
/* 1616 */,
/* 1617 */,
/* 1618 */,
/* 1619 */,
/* 1620 */,
/* 1621 */,
/* 1622 */,
/* 1623 */,
/* 1624 */,
/* 1625 */,
/* 1626 */,
/* 1627 */,
/* 1628 */,
/* 1629 */,
/* 1630 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var node_fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(325);
/* harmony import */ var src_doctypes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);
/* harmony import */ var src_lib_services__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(220);
/* harmony import */ var src_lib_timeseries__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(55);
/* harmony import */ var src_lib_trips__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(69);
/* harmony import */ var src_queries_nodeQueries__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(142);
/* harmony import */ var src_queries_queries__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(79);
/* harmony import */ var cozy_client__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(4);
/* harmony import */ var cozy_client__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(cozy_client__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var cozy_logger__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(36);
/* harmony import */ var cozy_logger__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(cozy_logger__WEBPACK_IMPORTED_MODULE_8__);










const logService = cozy_logger__WEBPACK_IMPORTED_MODULE_8___default.a.namespace('services/timeseriesWithoutAggregateMigration');
global.fetch = node_fetch__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"];
const BATCH_DOCS_LIMIT = 1000; // to avoid processing too many files and get timeouts

const {
  t
} = Object(src_lib_services__WEBPACK_IMPORTED_MODULE_2__[/* initPolyglot */ "a"])();
const migrateTimeSeriesWithoutAggregation = async () => {
  logService('info', 'Start migrateTimeSeriesWithoutAggregation service');
  const client = cozy_client__WEBPACK_IMPORTED_MODULE_7___default.a.fromEnv(process.env, {
    schema: src_doctypes__WEBPACK_IMPORTED_MODULE_1__[/* default */ "j"]
  });
  const timeseriesWithoutAggregationQueryDef = Object(src_queries_nodeQueries__WEBPACK_IMPORTED_MODULE_5__[/* buildTimeseriesWithoutAggregation */ "i"])({
    limit: BATCH_DOCS_LIMIT
  }).definition;
  const settingsQuery = Object(src_queries_queries__WEBPACK_IMPORTED_MODULE_6__[/* buildSettingsQuery */ "e"])();
  const {
    data: settings
  } = await client.query(settingsQuery.definition, settingsQuery.options);
  const appSetting = (settings === null || settings === void 0 ? void 0 : settings[0]) || {};
  const resp = await client.queryAll(timeseriesWithoutAggregationQueryDef);
  const data = client.hydrateDocuments(src_doctypes__WEBPACK_IMPORTED_MODULE_1__[/* GEOJSON_DOCTYPE */ "g"], resp);
  if (!data || data.length < 1) {
    logService('info', 'Nothing to migrate');
    return;
  }
  logService('info', `Found ${data.length} timeseries to migrate...`);
  const makeSections = timeserie => {
    const serie = timeserie.series[0];
    return Object(src_lib_trips__WEBPACK_IMPORTED_MODULE_4__[/* getSectionsFromTrip */ "c"])(serie, appSetting);
  };

  // Compute aggregation for all retrieved timeseries
  const migratedTimeseries = Object(src_lib_timeseries__WEBPACK_IMPORTED_MODULE_3__[/* computeAggregatedTimeseries */ "a"])({
    timeseries: data,
    makeSections,
    t
  });

  // Save the migrated timeseries
  for (const timeserie of migratedTimeseries) {
    await client.save(timeserie);
  }

  // This service should eventually disappear, so let's add a warning when
  // it was actually useful
  logService('warn', `${migratedTimeseries.length} timeseries migrated with aggregation`);
};
migrateTimeSeriesWithoutAggregation().catch(e => {
  logService('error', e);
  process.exit(1);
});

/***/ })
/******/ ]);